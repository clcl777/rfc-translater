{
  "title": {
    "text": "RFC 3217 - Triple-DES and RC2 Key Wrapping",
    "ja": "RFC 3217 - トリプルデスとRC2キーラッピング"
  },
  "number": 3217,
  "created_at": "2023-12-04 07:17:27.339576+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                         R. Housley\nRequest for Comments: 3217                              RSA Laboratories\nCategory: Informational                                    December 2001",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Triple-DES and RC2 Key Wrapping",
      "ja": "トリプルデスとRC2キーラッピング"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2001). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2001）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies the algorithm for wrapping one Triple-DES key with another Triple-DES key and the algorithm for wrapping one RC2 key with another RC2 key. These key wrap algorithms were originally published in section 12.6 of RFC 2630. They are republished since these key wrap algorithms have been found to be useful in contexts beyond those supported by RFC 2630.",
      "ja": "このドキュメントは、1つのTriple-DESキーを別のTriple-DESキーでラッピングするアルゴリズムと、1つのRC2キーを別のRC2キーで包むアルゴリズムを指定します。これらの主要なラップアルゴリズムは、元々RFC 2630のセクション12.6で公開されていました。これらのキーラップアルゴリズムは、RFC 2630でサポートされているコンテキストを超えたコンテキストで有用であることがわかっているため、再発行されています。"
    },
    {
      "indent": 0,
      "text": "1 Introduction",
      "ja": "1はじめに"
    },
    {
      "indent": 3,
      "text": "Management of symmetric cryptographic keys often leads to situations where one symmetric key is used to encrypt (or wrap) another. Key wrap algorithms are commonly used in two situations. First, key agreement algorithms (such as Diffie-Hellman [DH-X9.42]) generate a pairwise key-encryption key, and a key wrap algorithm is used to encrypt the content-encryption key or a multicast key with the pairwise key-encryption key. Second, a key wrap algorithm is used to encrypt the content-encryption key, multicast key, or session key in a locally generated storage key-encryption key or a key-encryption key that was distributed out-of-band.",
      "ja": "対称的な暗号キーの管理は、1つの対称キーを使用して別のものを暗号化（またはラップ）する状況につながることがよくあります。キーラップアルゴリズムは、2つの状況で一般的に使用されます。まず、キー契約アルゴリズム（diffie-hellman [dh-x9.42]など）はペアワイズキー暗号化キーを生成し、キーラップアルゴリズムを使用して、コンテンツ暗号化キーまたはペアワイズキーを使用してマルチキャストキーを暗号化するために使用されます。暗号化キー。第二に、キーラップアルゴリズムを使用して、コンテンツエンクロリクトキー、マルチキャストキー、またはセッションキーをローカルに生成したストレージキー暗号化キーまたはバンド外に配布されたキー暗号化キーの暗号化を暗号化します。"
    },
    {
      "indent": 3,
      "text": "This document specifies the algorithm for wrapping one Triple-DES key with another Triple-DES key [3DES], and it specifies the algorithm for wrapping one RC2 key with another RC2 key [RC2]. Encryption of a Triple-DES key with another Triple-DES key uses the algorithm specified in section 3. Encryption of a RC2 key with another RC2 key uses the algorithm specified in section 4. Both of these algorithms rely on the key checksum algorithm specified in section 2. Triple-DES and RC2 content-encryption keys are encrypted in Cipher Block Chaining (CBC) mode [MODES].",
      "ja": "このドキュメントは、1つのTriple-DESキーを別のTriple-DESキー[3DES]で巻くためのアルゴリズムを指定し、1つのRC2キーを別のRC2キー[RC2]で包むアルゴリズムを指定します。別のトリプルデスキーを使用したトリプルデスキーの暗号化は、セクション3で指定されたアルゴリズムを使用します。RC2キーを別のRC2キーと暗号化して、セクション4で指定されたアルゴリズムを使用します。セクション2.トリプルDESおよびRC2コンテンツエンコプチキーは、暗号ブロックチェーン（CBC）モード[モード]で暗号化されています。"
    },
    {
      "indent": 3,
      "text": "In this document, the key words MUST, MUST NOT, REQUIRED, SHOULD, SHOULD NOT, RECOMMENDED, and MAY are to be interpreted as described by Scott Bradner in [STDWORDS].",
      "ja": "このドキュメントでは、キーワードは[stdwords]でスコットブラッドナーが説明したように解釈される可能性があります。"
    },
    {
      "indent": 0,
      "text": "2 Key Checksum",
      "ja": "2キーチェックサム"
    },
    {
      "indent": 3,
      "text": "The key checksum algorithm is used to provide a key integrity check value. The algorithm is:",
      "ja": "キーチェックサムアルゴリズムは、キーインテグリティチェック値を提供するために使用されます。アルゴリズムは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Compute a 20 octet SHA-1 [SHA1] message digest on the key that is to be wrapped. 2. Use the most significant (first) eight octets of the message digest value as the checksum value.",
      "ja": "1. ラップするキーで20個のOctet SHA-1 [SHA1]メッセージダイジェストを計算します。2.メッセージダイジェスト値の最も重要な（最初の）8オクテットをチェックサム値として使用します。"
    },
    {
      "indent": 0,
      "text": "3 Triple-DES Key Wrapping and Unwrapping",
      "ja": "3トリプルデスキーラッピングとアンラッピング"
    },
    {
      "indent": 3,
      "text": "This section specifies the algorithms for wrapping and unwrapping one Triple-DES key with another Triple-DES key [3DES].",
      "ja": "このセクションでは、1つのTriple-DESキーを別のTriple-DESキー[3DES]でラッピングおよびアンラップするアルゴリズムを指定します。"
    },
    {
      "indent": 3,
      "text": "The same key wrap algorithm is used for both Two-key Triple-DES and Three-key Triple-DES keys. When a Two-key Triple-DES key is to be wrapped, a third DES key with the same value as the first DES key is created. Thus, all wrapped Triple-DES keys include three DES keys. However, a Two-key Triple-DES key MUST NOT be used to wrap a Three-key Triple-DES key that is comprised of three unique DES keys.",
      "ja": "同じキーラップアルゴリズムが、2キートリプルデスと3キートリプルデスキーの両方に使用されます。2キートリプルデスキーをラップする場合、最初のDESキーと同じ値を持つ3番目のDESキーが作成されます。したがって、すべてのラップされたトリプルデスキーには3つのDESキーが含まれています。ただし、3つのユニークなDESキーで構成される3キートリプルデスキーをラップするために、2キーのトリプルデスキーを使用しないでください。"
    },
    {
      "indent": 0,
      "text": "3.1 Triple-DES Key Wrap",
      "section_title": true,
      "ja": "3.1 トリプルデスキーラップ"
    },
    {
      "indent": 3,
      "text": "The Triple-DES key wrap algorithm encrypts a Triple-DES key with a Triple-DES key-encryption key. The Triple-DES key wrap algorithm is:",
      "ja": "Triple-DESキーラップアルゴリズムは、Triple-DESキー暗号化キーを使用してTriple-DESキーを暗号化します。Triple-DESキーラップアルゴリズムは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Set odd parity for each of the DES key octets comprising the Three-Key Triple-DES key that is to be wrapped, call the result CEK. 2. Compute an 8 octet key checksum value on CEK as described above in Section 2, call the result ICV. 3. Let CEKICV = CEK || ICV. 4. Generate 8 octets at random, call the result IV. 5. Encrypt CEKICV in CBC mode using the key-encryption key. Use the random value generated in the previous step as the initialization vector (IV). Call the ciphertext TEMP1. 6. Let TEMP2 = IV || TEMP1. 7. Reverse the order of the octets in TEMP2. That is, the most significant (first) octet is swapped with the least significant (last) octet, and so on. Call the result TEMP3. 8. Encrypt TEMP3 in CBC mode using the key-encryption key. Use an initialization vector (IV) of 0x4adda22c79e82105. The ciphertext is 40 octets long.",
      "ja": "1. ラップされる3キートリプルデスキーを含むDESキーオクテットごとに奇数パリティを設定し、結果CEKを呼び出します。2.上記のセクション2で説明したように、CEKの8 Octetキーチェックサム値を計算し、結果ICVを呼び出します。3. cekicv = cek ||としますICV。4.ランダムに8個のオクテットを生成し、結果を呼び出しますiv。5.キー暗号化キーを使用して、CBCモードでCEKICVを暗号化します。前のステップで生成されたランダム値を初期化ベクトル（IV）として使用します。ciphertext temp1を呼び出します。6. temp2 = iv ||としますtemp1。7. TEMP2のオクテットの順序を逆にします。つまり、最も重要な（最初の）オクテットは、最も重要ではない（最後の）オクテットなどと交換されます。結果Temp3を呼び出します。8.キー暗号化キーを使用して、CBCモードでTEMP3を暗号化します。0x4ADDA22C79E82105の初期化ベクトル（IV）を使用します。暗号文の長さは40オクテットです。"
    },
    {
      "indent": 3,
      "text": "Note: When the same Three-Key Triple-DES key is wrapped in different key-encryption keys, a fresh initialization vector (IV) must be generated for each invocation of the key wrap algorithm.",
      "ja": "注：同じ3キートリプルデスキーが異なるキー暗号化キーに包まれている場合、キーラップアルゴリズムの各呼び出しに対して新鮮な初期化ベクトル（IV）を生成する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.2 Triple-DES Key Unwrap",
      "section_title": true,
      "ja": "3.2 トリプルデスキーアンラップ"
    },
    {
      "indent": 3,
      "text": "The Triple-DES key unwrap algorithm decrypts a Triple-DES key using a Triple-DES key-encryption key. The Triple-DES key unwrap algorithm is:",
      "ja": "Triple-DESキーアンラップアルゴリズムは、Triple-DESキー暗号化キーを使用してTriple-DESキーを復号化します。Triple-DESキーアンラップアルゴリズムは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. If the wrapped key is not 40 octets, then error. 2. Decrypt the wrapped key in CBC mode using the key-encryption key. Use an initialization vector (IV) of 0x4adda22c79e82105. Call the output TEMP3. 3. Reverse the order of the octets in TEMP3. That is, the most significant (first) octet is swapped with the least significant (last) octet, and so on. Call the result TEMP2. 4. Decompose TEMP2 into IV and TEMP1. IV is the most significant (first) 8 octets, and TEMP1 is the least significant (last) 32 octets. 5. Decrypt TEMP1 in CBC mode using the key-encryption key. Use the IV value from the previous step as the initialization vector. Call the ciphertext CEKICV. 6. Decompose CEKICV into CEK and ICV. CEK is the most significant (first) 24 octets, and ICV is the least significant (last) 8 octets. 7. Compute an 8 octet key checksum value on CEK as described above in Section 2. If the computed key checksum value does not match the decrypted key checksum value, ICV, then error. 8. Check for odd parity each of the DES key octets comprising CEK. If parity is incorrect, then error. 9. Use CEK as a Triple-DES key.",
      "ja": "1. ラップされたキーが40オクテットでない場合、エラー。2.キー暗号化キーを使用して、CBCモードでラップされたキーを復号化します。0x4ADDA22C79E82105の初期化ベクトル（IV）を使用します。出力TEMP3を呼び出します。3. TEMP3のオクテットの順序を逆にします。つまり、最も重要な（最初の）オクテットは、最も重要ではない（最後の）オクテットなどと交換されます。結果temp2を呼び出します。4. TEMP2をIVおよびTEMP1に分解します。IVは最も重要な（最初の）8オクテットであり、TEMP1は最も重要ではない（最後の）32オクテットです。5.キー暗号化キーを使用して、CBCモードでTEMP1を復号化します。初期化ベクトルとして前のステップのIV値を使用します。ciphertext cekicvを呼び出します。6. CEKICVをCEKとICVに分解します。CEKは最も重要な（最初の）24オクテットであり、ICVは最も重要ではない（最後の）8オクテットです。7.セクション2で上記のように、CEKの8 Octetキーチェックサム値を計算します。計算されたキーチェックサム値が復号化されたキーチェックサム値、ICV、次にエラーと一致しない場合。8. CEKで構成されるDESキーオクテットのそれぞれの奇妙なパリティを確認します。パリティが正しくない場合は、エラー。9. CEKをトリプルデスキーとして使用します。"
    },
    {
      "indent": 0,
      "text": "3.3 Triple-DES Key Wrap Algorithm Identifier",
      "section_title": true,
      "ja": "3.3 TRIPLE-DESキーラップアルゴリズム識別子"
    },
    {
      "indent": 3,
      "text": "Some security protocols employ ASN.1 [X.208-88, X.209-88], and these protocols employ algorithm identifiers to name cryptographic algorithms. To support these protocols, the Triple-DES key wrap algorithm has been assigned the following algorithm identifier:",
      "ja": "一部のセキュリティプロトコルはASN.1 [X.208-88、X.209-88]を採用しており、これらのプロトコルは暗号化アルゴリズムを名前を付けるためにアルゴリズム識別子を採用しています。これらのプロトコルをサポートするために、Triple-DESキーラップアルゴリズムには、次のアルゴリズム識別子が割り当てられています。"
    },
    {
      "indent": 6,
      "text": "id-alg-CMS3DESwrap OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The AlgorithmIdentifier parameter field MUST be NULL.",
      "ja": "AlgorithMidentifierパラメーターフィールドはnullでなければなりません。"
    },
    {
      "indent": 0,
      "text": "3.4 Triple-DES Key Wrap Example",
      "section_title": true,
      "ja": "3.4 トリプルデスキーラップ例"
    },
    {
      "indent": 3,
      "text": "This section contains a Triple-DES Key Wrap example. Intermediate values corresponding to the named items in section 3.1 are given in hexadecimal.",
      "ja": "このセクションには、トリプルデスキーラップ例が含まれています。セクション3.1の指名されたアイテムに対応する中間値は、16進数で示されています。"
    },
    {
      "indent": 3,
      "text": "CEK: 2923 bf85 e06d d6ae 5291 49f1 f1ba e9ea b3a7 da3d 860d 3e98 KEK: 255e 0d1c 07b6 46df b313 4cc8 43ba 8aa7 1f02 5b7c 0838 251f ICV: 181b 7e96 86e0 4a4e CEKICV: 2923 bf85 e06d d6ae 5291 49f1 f1ba e9ea b3a7 da3d 860d 3e98 181b 7e96 86e0 4a4e IV: 5dd4 cbfc 96f5 453b TEMP1: cfc1 a789 c675 dd2a b49a 3204 ef92 cc03 5c1f 973b 7a79 60f6 a44d cc5f 729d 8449 TEMP2: 5dd4 cbfc 96f5 453b cfc1 a789 c675 dd2a b49a 3204 ef92 cc03 5c1f 973b 7a79 60f6 a44d cc5f 729d 8449 TEMP3: 4984 9d72 5fcc 4da4 f660 797a 3b97 1f5c 03cc 92ef 0432 9ab4 2add 75c6 89a7 c1cf 3b45 f596 fccb d45d RESULT: 6901 0761 8ef0 92b3 b48c a179 6b23 4ae9 fa33 ebb4 1596 0403 7db5 d6a8 4eb3 aac2 768c 6327 75a4 67d4",
      "ja": "CEK：2923 BF85 E06D D6AE 5291 49F1 F1BA E9EA B3A7 DA3D 860D 3E98 KEK：255E 0D1C 07B6 46DF B313 4CC8 43BA 8AA7 1F02 5B7C 85 E06D D6AE 5291 49F1 F1BA E9EA B3A7 DA3D 860D 3E98 181B 7E9686E0 4A4E IV：5DD4 CBFC 96F5 453B TEMP1：CFC1 A789 C675 DD2A B49A 3204 EF92 CC03 5C1F 973B 7A79 60F6 A44D CC5F 729D 75 DD2A B49A 3204 EF92 CC03 5C1F 973B 7A79 60F6 A44D CC5F 729D 8449 TEMP3：4984 9D72 5FCC 4DA4 F660 797A 3B97 1F5C 03CC 92EF 0432 9AB4 2 2ADD 75C6 89A7 C1CF 3B45 F596 FCCB D45D結果：6901 0761 8EF0 5 D6A8 4EB3 AAC2 768C 6327 75A4 67D4"
    },
    {
      "indent": 0,
      "text": "4 RC2 Key Wrapping and Unwrapping",
      "ja": "4 RC2キーラッピングとアンラッピング"
    },
    {
      "indent": 3,
      "text": "This section specifies the algorithms for wrapping and unwrapping one RC2 key with another RC2 key [RC2].",
      "ja": "このセクションでは、1つのRC2キーを別のRC2キー[RC2]でラッピングおよびアンラッピングするためのアルゴリズムを指定します。"
    },
    {
      "indent": 3,
      "text": "RC2 supports variable length keys. RC2 128-bit keys MUST be used as key-encryption keys; however, the wrapped RC2 key MAY be of any size.",
      "ja": "RC2は可変長キーをサポートします。RC2 128ビットキーは、キー暗号化キーとして使用する必要があります。ただし、ラップされたRC2キーは任意のサイズの場合があります。"
    },
    {
      "indent": 0,
      "text": "4.1 RC2 Key Wrap",
      "section_title": true,
      "ja": "4.1 RC2キーラップ"
    },
    {
      "indent": 3,
      "text": "The RC2 key wrap algorithm encrypts a RC2 key with a RC2 key-encryption key. The RC2 key wrap algorithm is:",
      "ja": "RC2キーラップアルゴリズムは、RC2キー暗号化キーを使用してRC2キーを暗号化します。RC2キーラップアルゴリズムは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. Let the RC2 key be called CEK, and let the length of CEK in octets be called LENGTH. LENGTH is a single octet. 2. Let LCEK = LENGTH || CEK. 3. Let LCEKPAD = LCEK || PAD. If the length of LCEK is a multiple of 8, the PAD has a length of zero. If the length of LCEK is not a multiple of 8, then PAD contains the fewest number of random octets to make the length of LCEKPAD a multiple of 8. 4. Compute an 8 octet key checksum value on LCEKPAD as described above in Section 2, call the result ICV. 5. Let LCEKPADICV = LCEKPAD || ICV. 6. Generate 8 octets at random, call the result IV. 7. Encrypt LCEKPADICV in CBC mode using the key-encryption key. Use the random value generated in the previous step as the initialization vector (IV). Call the ciphertext TEMP1.",
      "ja": "1. RC2キーをCEKと呼び、オクテットのCEKの長さを長さと呼びます。長さは単一のオクテットです。2. lcek = length ||としますCEK。3. lcekpad = lcek ||としますパッド。LCEKの長さが8の倍数である場合、パッドの長さはゼロです。LCEKの長さが8の倍数でない場合、PADにはランダムオクテットの数が少ないため、LCEKPADの長さは8の倍数になります。結果icvを呼び出します。5. lcekpadicv = lcekpad ||としますICV。6.ランダムに8個のオクテットを生成し、結果を呼び出しますiv。7.キー暗号化キーを使用して、CBCモードでLCEKPADICVを暗号化します。前のステップで生成されたランダム値を初期化ベクトル（IV）として使用します。ciphertext temp1を呼び出します。"
    },
    {
      "indent": 3,
      "text": "8. Let TEMP2 = IV || TEMP1. 9. Reverse the order of the octets in TEMP2. That is, the most significant (first) octet is swapped with the least significant (last) octet, and so on. Call the result TEMP3. 10. Encrypt TEMP3 in CBC mode using the key-encryption key. Use an initialization vector (IV) of 0x4adda22c79e82105.",
      "ja": "8. temp2 = iv ||としますtemp1。9. TEMP2のオクテットの順序を逆にします。つまり、最も重要な（最初の）オクテットは、最も重要ではない（最後の）オクテットなどと交換されます。結果Temp3を呼び出します。10.キー暗号化キーを使用して、CBCモードでTEMP3を暗号化します。0x4ADDA22C79E82105の初期化ベクトル（IV）を使用します。"
    },
    {
      "indent": 3,
      "text": "Note: When the same RC2 key is wrapped in different key-encryption keys, a fresh initialization vector (IV) must be generated for each invocation of the key wrap algorithm.",
      "ja": "注：同じRC2キーが異なるキー暗号化キーに包まれている場合、キーラップアルゴリズムの各呼び出しに対して新鮮な初期化ベクトル（IV）を生成する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.2 RC2 Key Unwrap",
      "section_title": true,
      "ja": "4.2 RC2キーアンラップ"
    },
    {
      "indent": 3,
      "text": "The RC2 key unwrap algorithm decrypts a RC2 key using a RC2 key-encryption key. The RC2 key unwrap algorithm is:",
      "ja": "RC2キーアンラップアルゴリズムは、RC2キー暗号化キーを使用してRC2キーを復号化します。RC2キーアンラップアルゴリズムは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "1. If the wrapped key is not a multiple of 8 octets, then error. 2. Decrypt the wrapped key in CBC mode using the key-encryption key. Use an initialization vector (IV) of 0x4adda22c79e82105. Call the output TEMP3. 3. Reverse the order of the octets in TEMP3. That is, the most significant (first) octet is swapped with the least significant (last) octet, and so on. Call the result TEMP2. 4. Decompose the TEMP2 into IV and TEMP1. IV is the most significant (first) 8 octets, and TEMP1 is the remaining octets. 5. Decrypt TEMP1 in CBC mode using the key-encryption key. Use the IV value from the previous step as the initialization vector. Call the plaintext LCEKPADICV. 6. Decompose the LCEKPADICV into LCEKPAD, and ICV. ICV is the least significant (last) octet 8 octets. LCEKPAD is the remaining octets. 7. Compute an 8 octet key checksum value on LCEKPAD as described above in Section 2. If the computed key checksum value does not match the decrypted key checksum value, ICV, then error. 8. Decompose the LCEKPAD into LENGTH, CEK, and PAD. LENGTH is the most significant (first) octet. CEK is the following LENGTH octets. PAD is the remaining octets, if any. 9. If the length of PAD is more than 7 octets, then error. 10. Use CEK as an RC2 key.",
      "ja": "1. ラップされたキーが8オクテットの倍数でない場合、エラー。2.キー暗号化キーを使用して、CBCモードでラップされたキーを復号化します。0x4ADDA22C79E82105の初期化ベクトル（IV）を使用します。出力TEMP3を呼び出します。3. TEMP3のオクテットの順序を逆にします。つまり、最も重要な（最初の）オクテットは、最も重要ではない（最後の）オクテットなどと交換されます。結果temp2を呼び出します。4. TEMP2をIVとTEMP1に分解します。IVは最も重要な（最初の）8オクテットで、TEMP1は残りのオクテットです。5.キー暗号化キーを使用して、CBCモードでTEMP1を復号化します。初期化ベクトルとして前のステップのIV値を使用します。プレーンテキストlcekpadicvを呼び出します。6. lcekpadicvをlcekpad、およびICVに分解します。ICVは、最も重要ではない（最後の）オクテット8オクテットです。lcekpadは残りのオクテットです。7.上記のセクション2で説明したように、LCEKPADの8オクテットのキーチェックサム値を計算します。計算されたキーチェックサム値が、復号化されたキーチェックサム値、ICV、次にエラーと一致しない場合。8. LCEKPADを長さ、CEK、およびパッドに分解します。長さは最も重要な（最初の）オクテットです。CEKは次の長さのオクテットです。パッドは残りのオクテットです。9.パッドの長さが7オクテットを超える場合、エラー。10. CEKをRC2キーとして使用します。"
    },
    {
      "indent": 0,
      "text": "4.3 RC2 Key Wrap Algorithm Identifier",
      "section_title": true,
      "ja": "4.3 RC2キーラップアルゴリズム識別子"
    },
    {
      "indent": 3,
      "text": "Some security protocols employ ASN.1 [X.208-88, X.209-88], and these protocols employ algorithm identifiers to name cryptographic algorithms. To support these protocols, the RC2 key wrap algorithm has been assigned the following algorithm identifier:",
      "ja": "一部のセキュリティプロトコルはASN.1 [X.208-88、X.209-88]を採用しており、これらのプロトコルは暗号化アルゴリズムを名前を付けるためにアルゴリズム識別子を採用しています。これらのプロトコルをサポートするために、RC2キーラップアルゴリズムに次のアルゴリズム識別子が割り当てられています。"
    },
    {
      "indent": 6,
      "text": "id-alg-CMSRC2wrap OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The AlgorithmIdentifier parameter field MUST be RC2wrapParameter:",
      "ja": "Algorithmidentifierパラメーターフィールドは、rc2wrapparameterでなければなりません。"
    },
    {
      "indent": 6,
      "text": "RC2wrapParameter ::= RC2ParameterVersion",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "RC2ParameterVersion ::= INTEGER",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The RC2 effective-key-bits (key size) greater than 32 and less than 256 is encoded in the RC2ParameterVersion. For the effective-key-bits of 40, 64, and 128, the rc2ParameterVersion values are 160, 120, and 58 respectively. These values are not simply the RC2 key length. Note that the value 160 must be encoded as two octets (00 A0), because the one octet (A0) encoding represents a negative number.",
      "ja": "RC2ParameterVersionでは、32を超えて256未満のRC2効果キービット（キーサイズ）がエンコードされています。40、64、および128の効果的なキービットの場合、RC2ParameterVersion値はそれぞれ160、120、および58です。これらの値は、単にRC2キーの長さではありません。1オクテット（A0）エンコードが負の数を表すため、値160は2オクテット（00 A0）としてエンコードする必要があることに注意してください。"
    },
    {
      "indent": 0,
      "text": "4.4 RC2 Key Wrap Example",
      "section_title": true,
      "ja": "4.4 RC2キーラップの例"
    },
    {
      "indent": 3,
      "text": "This section contains a RC2 Key Wrap example. Intermediate values corresponding to the named items in section 4.1 are given in hexadecimal.",
      "ja": "このセクションには、RC2キーラップの例が含まれています。セクション4.1の指名されたアイテムに対応する中間値は、16進数で示されています。"
    },
    {
      "indent": 3,
      "text": "CEK: b70a 25fb c9d8 6a86 050c e0d7 11ea d4d9 KEK: fd04 fd08 0607 07fb 0003 feff fd02 fe05 LENGTH: 10 LCEK: 10b7 0a25 fbc9 d86a 8605 0ce0 d711 ead4 d9 PAD: 4845 cce7 fd12 50 LCEKPAD: 10b7 0a25 fbc9 d86a 8605 0ce0 d711 ead4 d948 45cc e7fd 1250 ICV: 0a6f f19f db40 4988 LCEKPADICV: 10b7 0a25 fbc9 d86a 8605 0ce0 d711 ead4 d948 45cc e7fd 1250 0a6f f19f db40 4988 IV: c7d9 0059 b29e 97f7 TEMP1: a01d a259 3793 1260 e48c 55f5 04ce 70b8 ac8c d79e ffe8 9932 9fa9 8a07 a31f f7a7 TEMP2: c7d9 0059 b29e 97f7 a01d a259 3793 1260 e48c 55f5 04ce 70b8 ac8c d79e ffe8 9932 9fa9 8a07 a31f f7a7 TEMP3: a7f7 1fa3 078a a99f 3299 8eff 9ed7 8cac b870 ce04 f555 8ce4 6012 9337 59a2 1da0 f797 9eb2 5900 d9c7 RESULT: 70e6 99fb 5701 f783 3330 fb71 e87c 85a4 20bd c99a f05d 22af 5a0e 48d3 5f31 3898 6cba afb4 b28d 4f35",
      "ja": "CEK：B70A 25FB C9D8 6A86 050C E0D7 11EA D4D9 KEK：FD04 FD08 0607 07FB 0003 FEFF FD02 FE05長さ：10 LCEK：10B7 0A25 FBC9 D86A 8605 A25 FBC9 D86A 8605 0CE0 D711 EAD4D948 45CC E7FD 1250 ICV：0A6F F19F DB40 4988 LCEKPADICV：10B7 0A25 FBC9 D86A 8605 0CE0 D711 EAD4 D948 45CC E7FD 1250 0A6F F19F DB440 4988 IB：C78IB：C788 IB：C788：C788 IB D A259 3793 1260 E48C 55F5 04CE 70B8 AC8C D79E FFE8 9932 9FA9 8A07A31F F7A7 TEMP2：C7D9 0059 B29E 97F7 A01D A259 3793 1260 E48C 55F5 04CE 70B8 AC8C D79E FFE8 9932 9FA9 8A07 A31F F7A7 CE04 F555 8CE4 6012 9337 59A2 1DA0 F797 9EB2 5900 D9C7結果：70E6 99FB5701 F783 3330 FB71 E87C 85A4 20BD C99A F05D 22AF 5A0E 48D3 5F31 3898 6CBA AFB4 B28D 4F35"
    },
    {
      "indent": 0,
      "text": "5 References",
      "ja": "5つの参照"
    },
    {
      "indent": 3,
      "text": "[3DES] American National Standards Institute. ANSI X9.52-1998, Triple Data Encryption Algorithm Modes of Operation. 1998.",
      "ja": "[3DES] American National Standards Institute。ANSI X9.52-1998、トリプルデータ暗号化アルゴリズムモードの動作モード。1998年。"
    },
    {
      "indent": 3,
      "text": "[CMS] Housley, R., \"Cryptographic Message Syntax\", RFC 2630, June 1999.",
      "ja": "[CMS] Housley、R。、「暗号化メッセージの構文」、RFC 2630、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[DES] American National Standards Institute. ANSI X3.106, \"American National Standard for Information Systems - Data Link Encryption\". 1983.",
      "ja": "[des]アメリカ国立標準研究所。ANSI X3.106、「情報システムのアメリカ国家標準 - データリンク暗号化」。1983年。"
    },
    {
      "indent": 3,
      "text": "[DH-X9.42] Rescorla, E., \"Diffie-Hellman Key Agreement Method\", RFC 2631, June 1999.",
      "ja": "[DH-X9.42] Rescorla、E。、「Diffie-Hellman Key Asmatement Method」、RFC 2631、1999年6月。"
    },
    {
      "indent": 3,
      "text": "[DSS] National Institute of Standards and Technology. FIPS Pub 186: Digital Signature Standard. 19 May 1994.",
      "ja": "[DSS]国立標準技術研究所。FIPS Pub 186：デジタル署名標準。1994年5月19日。"
    },
    {
      "indent": 3,
      "text": "[MODES] National Institute of Standards and Technology. FIPS Pub 81: DES Modes of Operation. 2 December 1980.",
      "ja": "[モード]国立標準技術研究所。FIPS Pub 81：DES Modes of Operation。1980年12月2日。"
    },
    {
      "indent": 3,
      "text": "[RANDOM] Eastlake, D., Crocker, S. and J. Schiller, \"Randomness Recommendations for Security\", RFC 1750, December 1994.",
      "ja": "[ランダム]イーストレイク、D。、クロッカー、S。、およびJ.シラー、「セキュリティのためのランダム性の推奨」、RFC 1750、1994年12月。"
    },
    {
      "indent": 3,
      "text": "[RC2] Rivest, R., \"A Description of the RC2 (r) Encryption Algorithm\", RFC 2268, March 1998.",
      "ja": "[RC2] Rivest、R。、「RC2（R）暗号化アルゴリズムの説明」、RFC 2268、1998年3月。"
    },
    {
      "indent": 3,
      "text": "[SHA1] National Institute of Standards and Technology. FIPS Pub 180-1: Secure Hash Standard. 17 April 1995.",
      "ja": "[SHA1]国立標準技術研究所。FIPS Pub 180-1：安全なハッシュ標準。1995年4月17日。"
    },
    {
      "indent": 3,
      "text": "[STDWORDS] Bradner, S., \"Key Words for Use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[stdwords] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[X.208-88] CCITT. Recommendation X.208: Specification of Abstract Syntax Notation One (ASN.1). 1988.",
      "ja": "[X.208-88] Ccitt。推奨X.208：抽象的構文表記1（asn.1）の仕様。1988年。"
    },
    {
      "indent": 3,
      "text": "[X.209-88] CCITT. Recommendation X.209: Specification of Basic Encoding Rules for Abstract Syntax Notation One (ASN.1). 1988.",
      "ja": "[X.209-88] Ccitt。推奨X.209：抽象的な構文表記1（asn.1）の基本エンコードルールの仕様。1988年。"
    },
    {
      "indent": 0,
      "text": "6 Security Considerations",
      "ja": "6つのセキュリティ上の考慮事項"
    },
    {
      "indent": 3,
      "text": "Implementations must protect the key-encryption key. Compromise of the key-encryption key may result in the disclosure of all keys that have been wrapped with the key-encryption key, which may lead to the disclosure of all traffic protected with those wrapped key.",
      "ja": "実装は、キー暗号化キーを保護する必要があります。キー暗号化キーの妥協は、キー暗号化キーに包まれたすべてのキーの開示をもたらす可能性があり、それがラップされたキーで保護されたすべてのトラフィックの開示につながる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Implementations must randomly generate initialization vectors (IVs) and padding. The generation of quality random numbers is difficult. RFC 1750 [RANDOM] offers important guidance in this area, and Appendix 3 of FIPS Pub 186 [DSS] provides one quality PRNG technique.",
      "ja": "実装は、初期化ベクトル（IV）とパディングをランダムに生成する必要があります。品質の乱数の生成は困難です。RFC 1750 [ランダム]はこの分野で重要なガイダンスを提供し、FIPS Pub 186の付録3 [DSS]は1つの品質のPRNG手法を提供します。"
    },
    {
      "indent": 3,
      "text": "If the key-encryption key and wrapped key are associated with different symmetric encryption algorithms, the effective security provided to data encrypted with the wrapped key is determined by the weaker of the two algorithms. If, for example, data is encrypted with 168-bit Triple-DES and that Triple-DES key is wrapped with a 40-bit RC2 key, then at most 40 bits of protection is provided. A trivial search to determine the value of the 40-bit RC2 key can recover Triple-DES key, and then the Triple-DES key can be used to decrypt the content. Therefore, implementers must ensure that key-encryption algorithms are as strong or stronger than content-encryption algorithms.",
      "ja": "キー暗号化キーとラップキーが異なる対称暗号化アルゴリズムに関連付けられている場合、ラップキーで暗号化されたデータに提供される効果的なセキュリティは、2つのアルゴリズムの弱い方によって決定されます。たとえば、データが168ビットトリプルデスで暗号化され、そのトリプルデスキーが40ビットのRC2キーでラップされている場合、最大40ビットの保護が提供されます。40ビットRC2キーの値を決定する些細な検索では、トリプルデスキーを回復でき、トリプルデスキーを使用してコンテンツを復号化できます。したがって、実装者は、Key-Incryption AlgorithmsがContent-Incryption Algorithmsと同じくらい強い、または強いことを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "These key wrap algorithms specified in this document have been reviewed for use with Triple-DES and RC2, and they have not been reviewed for use with other encryption algorithms. Similarly, the key wrap algorithms make use of CBC mode [MODES], and they have not been reviewed for use with other cryptographic modes.",
      "ja": "このドキュメントで指定されたこれらの重要なラップアルゴリズムは、Triple-DESおよびRC2で使用するためにレビューされており、他の暗号化アルゴリズムで使用するためにレビューされていません。同様に、キーラップアルゴリズムはCBCモード[モード]を使用しており、他の暗号化モードで使用するためにレビューされていません。"
    },
    {
      "indent": 0,
      "text": "7 Acknowledgments",
      "ja": "7謝辞"
    },
    {
      "indent": 3,
      "text": "This document is the result of contributions from many professionals. I appreciate the hard work of all members of the IETF S/MIME Working Group. I extend a special thanks to Carl Ellison, Peter Gutmann, Bob Jueneman, Don Johnson, Burt Kaliski, John Pawling, and Jim Schaad for their support in defining these algorithms and generating this specification.",
      "ja": "この文書は、多くの専門家からの貢献の結果です。IETF S/MIMEワーキンググループのすべてのメンバーの努力に感謝しています。カール・エリソン、ピーター・ガットマン、ボブ・ジュネマン、ドン・ジョンソン、バート・カリスキ、ジョン・ポーリング、およびジム・シャードがこれらのアルゴリズムを定義し、この仕様を生成してくれたことに感謝します。"
    },
    {
      "indent": 0,
      "text": "8 Author Address",
      "ja": "8著者アドレス"
    },
    {
      "indent": 3,
      "text": "Russell Housley RSA Laboratories 918 Spring Knoll Drive Herndon, VA 20170 USA",
      "ja": "Russell Housley RSA Laboratories 918 Spring Knoll Drive Herndon、VA 20170 USA"
    },
    {
      "indent": 3,
      "text": "EMail: rhousley@rsasecurity.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9 Full Copyright Statement",
      "ja": "9完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2001). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2001）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があります。また、それについてコメントまたは説明する派生作品、またはその実装を支援することは、いかなる種類の制限なしに、準備、コピー、公開、および部分的に配布される場合があります。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書と本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}