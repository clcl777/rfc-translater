{
  "title": {
    "text": "RFC 3042 - Enhancing TCP's Loss Recovery Using Limited Transmit",
    "ja": "RFC 3042 - 限られた送信を使用したTCPの損失回復を強化します"
  },
  "number": 3042,
  "created_at": "2023-12-27 13:17:56.633498+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          M. Allman\nRequest for Comments: 3042                                  NASA GRC/BBN\nCategory: Standards Track                                H. Balakrishnan\n                                                                     MIT\n                                                                S. Floyd\n                                                                   ACIRI\n                                                            January 2001",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Enhancing TCP's Loss Recovery Using Limited Transmit",
      "ja": "限られた送信を使用したTCPの損失回復を強化します"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の現在のエディションを参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2001). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2001）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document proposes a new Transmission Control Protocol (TCP) mechanism that can be used to more effectively recover lost segments when a connection's congestion window is small, or when a large number of segments are lost in a single transmission window. The \"Limited Transmit\" algorithm calls for sending a new data segment in response to each of the first two duplicate acknowledgments that arrive at the sender. Transmitting these segments increases the probability that TCP can recover from a single lost segment using the fast retransmit algorithm, rather than using a costly retransmission timeout. Limited Transmit can be used both in conjunction with, and in the absence of, the TCP selective acknowledgment (SACK) mechanism.",
      "ja": "このドキュメントでは、接続の輻輳ウィンドウが小さい場合、または単一の伝送ウィンドウで多数のセグメントが失われたときに、失われたセグメントをより効果的に回復するために使用できる新しい伝送制御プロトコル（TCP）メカニズムを提案します。「限定された送信」アルゴリズムは、送信者に到達した最初の2つの重複謝辞のそれぞれに応じて、新しいデータセグメントを送信する必要があります。これらのセグメントを送信すると、高速再送信アルゴリズムを使用して、TCPが単一の失われたセグメントから回復できる確率が増加します。限られた送信は、TCP選択的確認（SACK）メカニズムと組み合わせて、および存在しない場合に使用できます。"
    },
    {
      "indent": 0,
      "text": "1 Introduction",
      "ja": "1はじめに"
    },
    {
      "indent": 3,
      "text": "A number of researchers have observed that TCP's loss recovery strategies do not work well when the congestion window at a TCP sender is small. This can happen, for instance, because there is only a limited amount of data to send, or because of the limit imposed by the receiver-advertised window, or because of the constraints imposed by end-to-end congestion control over a connection with a small bandwidth-delay product [Riz96,Mor97,BPS+98,Bal98,LK98]. When a TCP detects a missing segment, it enters a loss recovery phase using one of two methods.",
      "ja": "多くの研究者は、TCP送信者の混雑ウィンドウが小さい場合、TCPの損失回復戦略はうまく機能しないことを観察しています。たとえば、これは、送信するデータが限られた量のデータしかないか、受信機が広告されたウィンドウによって課される制限のため、またはとの接続に対するエンドツーエンドの混雑制御によって課される制約のために発生する可能性があります。小さな帯域幅遅延製品[RIZ96、MOR97、BPS 98、BAL98、LK98]。TCPが欠落しているセグメントを検出すると、2つの方法のいずれかを使用して損失回復フェーズに入ります。"
    },
    {
      "indent": 3,
      "text": "First, if an acknowledgment (ACK) for a given segment is not received in a certain amount of time a retransmission timeout occurs and the segment is resent [RFC793,PA00]. Second, the \"Fast Retransmit\" algorithm resends a segment when three duplicate ACKs arrive at the sender [Jac88,RFC2581]. However, because duplicate ACKs from the receiver are also triggered by packet reordering in the Internet, the TCP sender waits for three duplicate ACKs in an attempt to disambiguate segment loss from packet reordering. Once in a loss recovery phase, a number of techniques can be used to retransmit lost segments, including slow start-based recovery or Fast Recovery [RFC2581], NewReno [RFC2582], and loss recovery based on selective acknowledgments (SACKs) [RFC2018,FF96].",
      "ja": "まず、特定のセグメントの謝辞（ACK）が一定の時間で受信されない場合、再送信タイムアウトが発生し、セグメントがresします[RFC793、PA00]。第二に、「高速再送信」アルゴリズムは、3つの重複したAcksが送信者に到着するとセグメントを再送信します[JAC88、RFC2581]。ただし、インターネットでのパケットの再注文によってトリガーされるため、TCP送信者は、パケットの再注文によるセグメントの損失を明らかにしようとするために、3つの重複アックを待っています。損失回復段階に入ると、スロースタートベースの回復または高速回復[RFC2581]、NewReno [RFC2582]、および選択的承認（SACKS）[RFC2018、喪失回復など、失われたセグメントを再送信するために多くの手法を使用できます。FF96]。"
    },
    {
      "indent": 3,
      "text": "TCP's retransmission timeout (RTO) is based on measured round-trip times (RTT) between the sender and receiver, as specified in [PA00]. To prevent spurious retransmissions of segments that are only delayed and not lost, the minimum RTO is conservatively chosen to be 1 second. Therefore, it behooves TCP senders to detect and recover from as many losses as possible without incurring a lengthy timeout when the connection remains idle. However, if not enough duplicate ACKs arrive from the receiver, the Fast Retransmit algorithm is never triggered---this situation occurs when the congestion window is small or if a large number of segments in a window are lost. For instance, consider a congestion window (cwnd) of three segments. If one segment is dropped by the network, then at most two duplicate ACKs will arrive at the sender. Since three duplicate ACKs are required to trigger Fast Retransmit, a timeout will be required to resend the dropped packet.",
      "ja": "TCPの再送信タイムアウト（RTO）は、[PA00]で指定されているように、送信者と受信機の間の測定された往復時間（RTT）に基づいています。遅延のみで失われていないセグメントの偽りの再送信を防ぐために、最小RTOは1秒であると控えめに選択されます。したがって、TCP送信者は、接続がアイドル状態のままであるときに長いタイムアウトを発生させることなく、できるだけ多くの損失から検出および回復することになります。ただし、レシーバーから十分な複製Acksが到着しない場合、高速再送信アルゴリズムがトリガーされることはありません。この状況は、輻輳ウィンドウが小さい場合、またはウィンドウ内の多数のセグメントが失われた場合に発生します。たとえば、3つのセグメントの輻輳ウィンドウ（CWND）を検討してください。ネットワークによって1つのセグメントがドロップされた場合、最大で2つの重複したAcksが送信者に到着します。高速再送信をトリガーするには3つの重複したACKが必要なため、ドロップされたパケットを再送信するためのタイムアウトが必要になります。"
    },
    {
      "indent": 3,
      "text": "[BPS+97] found that roughly 56% of retransmissions sent by a busy web server were sent after the RTO expires, while only 44% were handled by Fast Retransmit. In addition, only 4% of the RTO-based retransmissions could have been avoided with SACK, which of course has to continue to disambiguate reordering from genuine loss. In contrast, using the technique outlined in this document and in [Bal98], 25% of the RTO-based retransmissions in that dataset would have likely been avoided.",
      "ja": "[BPS 97]は、RTOの有効期限が切れた後、忙しいWebサーバーから送信された再送信の約56％が送信されたが、44％のみが高速な再送信で処理されたことを発見しました。さらに、RTOベースの再送信の4％のみがSackを使用して回避できた可能性があります。これは、もちろん、本物の損失からの並べ替えを明確にし続けなければなりません。対照的に、このドキュメントと[BAL98]で概説されている手法を使用して、そのデータセットのRTOベースの再送信の25％はおそらく回避されていたでしょう。"
    },
    {
      "indent": 3,
      "text": "The next section of this document outlines small changes to TCP senders that will decrease the reliance on the retransmission timer, and thereby improve TCP performance when Fast Retransmit is not triggered. These changes do not adversely affect the performance of TCP nor interact adversely with other connections, in other circumstances.",
      "ja": "このドキュメントの次のセクションでは、再送信タイマーへの依存を減らすTCP送信者への小さな変更の概要を示し、それにより、高速再送信がトリガーされない場合にTCPパフォーマンスを改善します。これらの変化は、TCPのパフォーマンスに悪影響を及ぼさず、他の状況では他の接続と相互作用することもありません。"
    },
    {
      "indent": 0,
      "text": "1.1 Terminology",
      "section_title": true,
      "ja": "1.1 用語"
    },
    {
      "indent": 3,
      "text": "In this document, he key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", AND \"OPTIONAL\" are to be interpreted as described in RFC 2119 [1] and indicate requirement levels for protocols.",
      "ja": "このドキュメントでは、彼のキーワード「必須」、「必須」、「必須」、「shall」、「shall \"、\" sulld \"、\" low \"of\"、 \"becommented\"、 \"\"、 \"、\"、 \"optional\"RFC 2119 [1]で説明されているように解釈され、プロトコルの要件レベルを示します。"
    },
    {
      "indent": 0,
      "text": "2 The Limited Transmit Algorithm",
      "ja": "2限られた送信アルゴリズム"
    },
    {
      "indent": 3,
      "text": "When a TCP sender has previously unsent data queued for transmission it SHOULD use the Limited Transmit algorithm, which calls for a TCP sender to transmit new data upon the arrival of the first two consecutive duplicate ACKs when the following conditions are satisfied:",
      "ja": "TCP送信者が以前に送信用にキューに留められていない場合、以下の条件が満たされたときに最初の2つの連続した重複ACKの到着時にTCP送信者に新しいデータを送信するためにTCP送信者を送信する必要があります。"
    },
    {
      "indent": 5,
      "text": "* The receiver's advertised window allows the transmission of the segment.",
      "ja": "* レシーバーの宣伝ウィンドウは、セグメントの送信を可能にします。"
    },
    {
      "indent": 5,
      "text": "* The amount of outstanding data would remain less than or equal to the congestion window plus 2 segments. In other words, the sender can only send two segments beyond the congestion window (cwnd).",
      "ja": "* 発行済みデータの量は、輻輳ウィンドウと2つのセグメント以下のままです。言い換えれば、送信者は輻輳ウィンドウ（CWND）を超えて2つのセグメントのみを送信できます。"
    },
    {
      "indent": 3,
      "text": "The congestion window (cwnd) MUST NOT be changed when these new segments are transmitted. Assuming that these new segments and the corresponding ACKs are not dropped, this procedure allows the sender to infer loss using the standard Fast Retransmit threshold of three duplicate ACKs [RFC2581]. This is more robust to reordered packets than if an old packet were retransmitted on the first or second duplicate ACK.",
      "ja": "これらの新しいセグメントが送信されたときに、混雑ウィンドウ（CWND）を変更しないでください。これらの新しいセグメントと対応するACKが削除されないと仮定すると、この手順により、送信者は、3つの重複ACKの標準的な高速再送信のしきい値を使用して損失を推測できます[RFC2581]。これは、古いパケットが最初または2番目の複製ACKで再送信された場合よりも、並べ替えパケットに対してより堅牢です。"
    },
    {
      "indent": 3,
      "text": "Note: If the connection is using selective acknowledgments [RFC2018], the data sender MUST NOT send new segments in response to duplicate ACKs that contain no new SACK information, as a misbehaving receiver can generate such ACKs to trigger inappropriate transmission of data segments. See [SCWA99] for a discussion of attacks by misbehaving receivers.",
      "ja": "注：接続が選択的謝辞[RFC2018]を使用している場合、データセンドは、データセクションの不適切な送信をトリガーするためにそのようなACKを生成できるため、新しいサック情報を含む重複ACKに応答して新しいセグメントを送信してはなりません。誤動作レシーバーによる攻撃の議論については、[SCWA99]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Limited Transmit follows the \"conservation of packets\" congestion control principle [Jac88]. Each of the first two duplicate ACKs indicate that a segment has left the network. Furthermore, the sender has not yet decided that a segment has been dropped and therefore has no reason to assume that the current congestion control state is inaccurate. Therefore, transmitting segments does not deviate from the spirit of TCP's congestion control principles.",
      "ja": "限られた送信は、「パケットの保存」輻輳制御原則[JAC88]に従います。最初の2つの複製ACKのそれぞれは、セグメントがネットワークを離れたことを示しています。さらに、送信者は、セグメントが削除されていることをまだ決定していないため、現在の輻輳制御状態が不正確であると仮定する理由はありません。したがって、送信セグメントは、TCPの輻輳制御原則の精神から逸脱しません。"
    },
    {
      "indent": 3,
      "text": "[BPS99] shows that packet reordering is not a rare network event. [RFC2581] does not provide for sending of data on the first two duplicate ACKs that arrive at the sender. This causes a burst of segments to be sent when an ACK for new data does arrive following packet reordering. Using Limited Transmit, data packets will be clocked out by incoming ACKs and therefore transmission will not be as bursty.",
      "ja": "[BPS99]は、パケットの並べ替えがまれなネットワークイベントではないことを示しています。[RFC2581]は、送信者に到着した最初の2つの重複ACKのデータの送信を提供していません。これにより、パケットの再注文後に新しいデータのACKが到着したときに、セグメントのバーストが送信されます。限られた送信を使用すると、データパケットは着信ACKによってクロックアウトされるため、送信はそれほど爆発的ではありません。"
    },
    {
      "indent": 3,
      "text": "Note: Limited Transmit is implemented in the ns simulator [NS]. Researchers wishing to investigate this mechanism further can do so by enabling \"singledup_\" for the given TCP connection.",
      "ja": "注：NSシミュレーター[NS]に限定送信が実装されています。このメカニズムをさらに調査したい研究者は、指定されたTCP接続の「SingleDup_」を有効にすることで、そうすることができます。"
    },
    {
      "indent": 0,
      "text": "3 Related Work",
      "ja": "3関連作業"
    },
    {
      "indent": 3,
      "text": "Deployment of Explicit Congestion Notification (ECN) [Flo94,RFC2481] may benefit connections with small congestion window sizes [SA00]. ECN provides a method for indicating congestion to the end-host without dropping segments. While some segment drops may still occur, ECN may allow TCP to perform better with small congestion window sizes because the sender can avoid many of the Fast Retransmits and Retransmit Timeouts that would otherwise have been needed to detect dropped segments [SA00].",
      "ja": "明示的な混雑通知（ECN）[FLO94、RFC2481]の展開は、小さな渋滞ウィンドウサイズ[SA00]との接続に利益をもたらす可能性があります。ECNは、セグメントを削除せずにエンドホストに輻輳を示す方法を提供します。一部のセグメントドロップは依然として発生する可能性がありますが、ECNは、送信者が速い再送信の多くを回避し、それ以外の場合はドロップされたセグメントを検出するために必要だったタイムアウトを再送信することができるため、TCPが小さな輻輳ウィンドウサイズでより良いパフォーマンスを可能にする可能性があります[SA00]。"
    },
    {
      "indent": 3,
      "text": "When ECN-enabled TCP traffic competes with non-ECN-enabled TCP traffic, ECN-enabled traffic can receive up to 30% higher goodput. For bulk transfers, the relative performance benefit of ECN is greatest when on average each flow has 3-4 outstanding packets during each round-trip time [ZQ00]. This should be a good estimate for the performance impact of a flow using Limited Transmit, since both ECN and Limited Transmit reduce the reliance on the retransmission timer for signaling congestion.",
      "ja": "ECN対応のTCPトラフィックが非ECN対応のTCPトラフィックと競合すると、ECN対応トラフィックは最大30％高いグッドプットを受信できます。バルク転送の場合、ECNの相対的なパフォーマンスの利点は、各フローが各ラウンドトリップ時間[ZQ00]で3〜4個の未解決のパケットを持っている場合に最大です。これは、ECNと限られた送信の両方が輻輳のシグナリングのための再送信タイマーへの依存を減らすため、限られた送信を使用したフローのパフォーマンスへの影響の良い推定値になるはずです。"
    },
    {
      "indent": 3,
      "text": "The Rate-Halving congestion control algorithm [MSML99] uses a form of limited transmit, as it calls for transmitting a data segment on every second duplicate ACK that arrives at the sender. The algorithm decouples the decision of what to send from the decision of when to send. However, similar to Limited Transmit the algorithm will always send a new data segment on the second duplicate ACK that arrives at the sender.",
      "ja": "レートハービング輻輳制御アルゴリズム[MSML99]は、送信者に到着する2秒の重複ACKのデータセグメントを送信する必要があるため、限られた送信の形式を使用します。アルゴリズムは、いつ送信するかの決定から何を送信するかという決定を切り離します。ただし、限られた送信と同様に、アルゴリズムは常に送信者に到着する2番目の複製ACKに新しいデータセグメントを送信します。"
    },
    {
      "indent": 0,
      "text": "4 Security Considerations",
      "ja": "4つのセキュリティ上の考慮事項"
    },
    {
      "indent": 3,
      "text": "The additional security implications of the changes proposed in this document, compared to TCP's current vulnerabilities, are minimal. The potential security issues come from the subversion of end-to-end congestion control from \"false\" duplicate ACKs, where a \"false\" duplicate ACK is a duplicate ACK that does not actually acknowledge new data received at the TCP receiver. False duplicate ACKs could result from duplicate ACKs that are themselves duplicated in the network, or from misbehaving TCP receivers that send false duplicate ACKs to subvert end-to-end congestion control [SCWA99,RFC2581].",
      "ja": "TCPの現在の脆弱性と比較して、このドキュメントで提案されている変更の追加のセキュリティへの影響は最小限です。潜在的なセキュリティの問題は、「誤った」重複ACKからのエンドツーエンドの混雑制御の転覆から生じます。「誤った」重複ACKは、TCPレシーバーで受け取った新しいデータを実際に認めない重複ACKです。誤った重複ACKは、それ自体がネットワークで複製されている重複ACK、または誤った複製Acksを送信してエンドツーエンドの混雑制御[SCWA99、RFC2581]を送信する誤動作のTCP受信機から生じる可能性があります。"
    },
    {
      "indent": 3,
      "text": "When the TCP data receiver has agreed to use the SACK option, the TCP data sender has fairly strong protection against false duplicate ACKs. In particular, with SACK, a duplicate ACK that acknowledges new data arriving at the receiver reports the sequence numbers of that new data. Thus, with SACK, the TCP sender can verify that an arriving duplicate ACK acknowledges data that the TCP sender has actually sent, and for which no previous acknowledgment has been received, before sending new data as a result of that acknowledgment. For further protection, the TCP sender could keep a record of packet boundaries for transmitted data packets, and recognize at most one valid acknowledgment for each packet (e.g., the first acknowledgment acknowledging the receipt of all of the sequence numbers in that packet).",
      "ja": "TCPデータレシーバーがSACKオプションを使用することに同意した場合、TCPデータ送信者は、誤った重複ACKに対してかなり強力な保護を持っています。特に、SACKを使用すると、受信機に到着する新しいデータを認める重複ACKで、その新しいデータのシーケンス番号を報告します。したがって、SACKを使用すると、TCP送信者は、到着した複製ACKがTCP送信者が実際に送信したデータを確認していることを確認できます。さらなる保護のために、TCP送信者は、送信されたデータパケットのパケット境界の記録を保持し、各パケットの最大1つの有効な承認を認識できます（たとえば、そのパケットのすべてのシーケンス番号の受領を認める最初の承認）。"
    },
    {
      "indent": 3,
      "text": "One could imagine some limited protection against false duplicate ACKs for a non-SACK TCP connection, where the TCP sender keeps a record of the number of packets transmitted, and recognizes at most one acknowledgment per packet to be used for triggering the sending of new data. However, this accounting of packets transmitted and acknowledged would require additional state and extra complexity at the TCP sender, and does not seem necessary.",
      "ja": "TCP送信者が送信されたパケットの数の記録を保持し、新しいデータの送信をトリガーするために使用されるパケットごとに最大1つの認識を認識している非サックTCP接続の誤った重複アクックに対するいくつかの限定的な保護を想像することができます。。ただし、送信および認められたパケットのこの会計には、TCP送信者に追加の状態と余分な複雑さが必要であり、必要ないと思われます。"
    },
    {
      "indent": 3,
      "text": "The most important protection against false duplicate ACKs comes from the limited potential of duplicate ACKs in subverting end-to-end congestion control. There are two separate cases to consider: when the TCP sender receives less than a threshold number of duplicate ACKs, and when the TCP sender receives at least a threshold number of duplicate ACKs. In the latter case a TCP with Limited Transmit will behave essentially the same as a TCP without Limited Transmit in that the congestion window will be halved and a loss recovery period will be initiated.",
      "ja": "誤った重複ACKに対する最も重要な保護は、エンドツーエンドの混雑制御を破壊する際の重複ACKの限られた可能性から生じます。考慮すべき2つの個別のケースがあります。TCP送信者が複製ACKのしきい値数未満を受け取る場合、およびTCP送信者が少なくとも複製ACKのしきい値を受け取る場合。後者の場合、送信が制限されているTCPは、輻輳ウィンドウが半分になり、損失回収期間が開始されるという点で、送信を限定せずにTCPと本質的に同じように動作します。"
    },
    {
      "indent": 3,
      "text": "When a TCP sender receives less than a threshold number of duplicate ACKs a misbehaving receiver could send two duplicate ACKs after each regular ACK. One might imagine that the TCP sender would send at three times its allowed sending rate. However, using Limited Transmit as outlined in section 2 the sender is only allowed to exceed the congestion window by less than the duplicate ACK threshold (of three segments), and thus would not send a new packet for each duplicate ACK received.",
      "ja": "TCP送信者が、誤動作レシーバーのしきい値の複製数を受信すると、通常のACKの各後に2つの重複ACKを送信できます。TCP送信者は、その許可された送信率の3倍で送信すると想像するかもしれません。ただし、セクション2で概説されているように限られた送信を使用して、送信者は、（3つのセグメントの）重複したACKしきい値よりも少ないことによってのみ輻輳ウィンドウを超えることができます。"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Bill Fenner, Jamshid Mahdavi and the Transport Area Working Group provided valuable feedback on an early version of this document.",
      "ja": "ビル・フェナー、ジャムシッド・マフダヴィ、および輸送エリアワーキンググループは、この文書の初期版について貴重なフィードバックを提供しました。"
    },
    {
      "indent": 0,
      "text": "References",
      "ja": "参考文献"
    },
    {
      "indent": 3,
      "text": "[Bal98] Hari Balakrishnan. Challenges to Reliable Data Transport over Heterogeneous Wireless Networks. Ph.D. Thesis, University of California at Berkeley, August 1998.",
      "ja": "[BAL98] Hari Balakrishnan。不均一なワイヤレスネットワークを介した信頼できるデータ輸送への課題。博士号論文、カリフォルニア大学バークレー校、1998年8月。"
    },
    {
      "indent": 3,
      "text": "[BPS+97] Hari Balakrishnan, Venkata Padmanabhan, Srinivasan Seshan, Mark Stemm, and Randy Katz. TCP Behavior of a Busy Web Server: Analysis and Improvements. Technical Report UCB/CSD-97-966, August 1997. Available from http://nms.lcs.mit.edu/~hari/papers/csd-97-966.ps. (Also in Proc. IEEE INFOCOM Conf., San Francisco, CA, March 1998.)",
      "ja": "[BPS 97] Hari Balakrishnan、Venkata Padmanabhan、Srinivasan Seshan、Mark Stemm、およびRandy Katz。忙しいWebサーバーのTCP動作：分析と改善。テクニカルレポートUCB/CSD-97-966、1997年8月。http：//nms.lcs.mit.edu/~hari/papers/csd-97-966.psから入手できます。（また、1998年3月、カリフォルニア州サンフランシスコのIEEE INFOCOM Conf。"
    },
    {
      "indent": 3,
      "text": "[BPS99] Jon Bennett, Craig Partridge, Nicholas Shectman. Packet Reordering is Not Pathological Network Behavior. IEEE/ACM Transactions on Networking, December 1999.",
      "ja": "[BPS99] Jon Bennett、Craig Partridge、Nicholas Shectman。パケットの並べ替えは、病理学的ネットワークの動作ではありません。1999年12月、ネットワーキングに関するIEEE/ACMトランザクション。"
    },
    {
      "indent": 3,
      "text": "[FF96] Kevin Fall, Sally Floyd. Simulation-based Comparisons of Tahoe, Reno, and SACK TCP. ACM Computer Communication Review, July 1996.",
      "ja": "[FF96]ケビンフォール、サリーフロイド。Tahoe、Reno、およびSack TCPのシミュレーションベースの比較。ACMコンピューター通信レビュー、1996年7月。"
    },
    {
      "indent": 3,
      "text": "[Flo94] Sally Floyd. TCP and Explicit Congestion Notification. ACM Computer Communication Review, October 1994.",
      "ja": "[flo94]サリー・フロイド。TCPおよび明示的な混雑通知。ACMコンピューター通信レビュー、1994年10月。"
    },
    {
      "indent": 3,
      "text": "[Jac88] Van Jacobson. Congestion Avoidance and Control. ACM SIGCOMM 1988.",
      "ja": "[Jac88]ヴァンジェイコブソン。混雑の回避と制御。ACM SIGCOMM 1988。"
    },
    {
      "indent": 3,
      "text": "[LK98] Dong Lin, H.T. Kung. TCP Fast Recovery Strategies: Analysis and Improvements. Proceedings of InfoCom, March 1998.",
      "ja": "[LK98]ドンリン、H.T。カン。TCP高速回復戦略：分析と改善。Infocomの議事録、1998年3月。"
    },
    {
      "indent": 3,
      "text": "[MSML99] Matt Mathis, Jeff Semke, Jamshid Mahdavi, Kevin Lahey. The Rate Halving Algorithm, 1999. URL: http://www.psc.edu/networking/rate_halving.html.",
      "ja": "[MSML99] Matt Mathis、Jeff Semke、Jamshid Mahdavi、Kevin Lahey。レートハービングアルゴリズム、1999。URL：http：//www.psc.edu/networking/rate_halving.html。"
    },
    {
      "indent": 3,
      "text": "[Mor97] Robert Morris. TCP Behavior with Many Flows. Proceedings of the Fifth IEEE International Conference on Network Protocols. October 1997.",
      "ja": "[MOR97]ロバート・モリス。多くのフローを伴うTCP動作。ネットワークプロトコルに関する第5回IEEE国際会議の議事録。1997年10月。"
    },
    {
      "indent": 3,
      "text": "[NS] Ns network simulator. URL: http://www.isi.edu/nsnam/.",
      "ja": "[NS] NSネットワークシミュレーター。URL：http：//www.isi.edu/nsnam/。"
    },
    {
      "indent": 3,
      "text": "[PA00] Paxson, V. and M. Allman, \"Computing TCP's Retransmission Timer\", RFC 2988, November 2000.",
      "ja": "[PA00] Paxson、V。およびM. Allman、「TCPの再送信タイマーのコンピューティング」、RFC 2988、2000年11月。"
    },
    {
      "indent": 3,
      "text": "[Riz96] Luigi Rizzo. Issues in the Implementation of Selective Acknowledgments for TCP. January, 1996. URL: http://www.iet.unipi.it/~luigi/selack.ps",
      "ja": "[Riz96] Luigi Rizzo。TCPの選択的謝辞の実装における問題。1996年1月。URL：http：//www.iet.unipi.it/~luigi/selack.ps"
    },
    {
      "indent": 3,
      "text": "[SA00] Hadi Salim, J. and U. Ahmed, \"Performance Evaluation of Explicit Congestion Notification (ECN) in IP Networks\", RFC 2884, July 2000.",
      "ja": "[SA00] Hadi Salim、J。およびU. Ahmed、「IPネットワークにおける明示的な混雑通知（ECN）のパフォーマンス評価」、RFC 2884、2000年7月。"
    },
    {
      "indent": 3,
      "text": "[SCWA99] Stefan Savage, Neal Cardwell, David Wetherall, Tom Anderson. TCP Congestion Control with a Misbehaving Receiver. ACM Computer Communications Review, October 1999.",
      "ja": "[SCWA99] Stefan Savage、Neal Cardwell、David Wetherall、Tom Anderson。誤動作レシーバーを使用したTCP混雑制御。ACM Computer Communications Review、1999年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC793] Postel, J., \"Transmission Control Protocol\", STD 7, RFC 793, September 1981.",
      "ja": "[RFC793] Postel、J。、「トランスミッションコントロールプロトコル」、STD 7、RFC 793、1981年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC2018] Mathis, M., Mahdavi, J., Floyd, S. and A. Romanow, \"TCP Selective Acknowledgement Options\", RFC 2018, October 1996.",
      "ja": "[RFC2018] Mathis、M.、Mahdavi、J.、Floyd、S。、およびA. Romanow、「TCP Selective Aumponredcement Options」、RFC 2018、1996年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2481] Ramakrishnan, K. and S. Floyd, \"A Proposal to Add Explicit Congestion Notification (ECN) to IP\", RFC 2481, January 1999.",
      "ja": "[RFC2481] Ramakrishnan、K。およびS. Floyd、「IPに明示的な混雑通知（ECN）を追加する提案」、RFC 2481、1999年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2581] Allman, M., Paxson, V. and W. Stevens, \"TCP Congestion Control\", RFC 2581, April 1999.",
      "ja": "[RFC2581] Allman、M.、Paxson、V。and W. Stevens、「TCP混雑制御」、RFC 2581、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2582] Floyd, S. and T. Henderson, \"The NewReno Modification to TCP's Fast Recovery Algorithm\", RFC 2582, April 1999.",
      "ja": "[RFC2582] Floyd、S。およびT. Henderson、「TCPの高速回復アルゴリズムへのNewreno修正」、RFC 2582、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[ZQ00] Yin Zhang and Lili Qiu, Understanding the End-to-End Performance Impact of RED in a Heterogeneous Environment, Cornell CS Technical Report 2000-1802, July 2000. URL http://www.cs.cornell.edu/yzhang/papers.htm.",
      "ja": "[ZQ00] Yin ZhangとLili Qiu、不均一環境での赤のエンドツーエンドのパフォーマンスへの影響を理解している、Cornell CSテクニカルレポート2000-1802、2000年7月。URLhttp://www.cs.c.cronell.edu/yzhang/papers.htm。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Mark Allman NASA Glenn Research Center/BBN Technologies Lewis Field 21000 Brookpark Rd. MS 54-5 Cleveland, OH 44135",
      "ja": "マークオールマンナサグレンリサーチセンター/BBNテクノロジーズルイスフィールド21000 Brookpark Rd。MS 54-5クリーブランド、OH 44135"
    },
    {
      "indent": 3,
      "text": "Phone: +1-216-433-6586\nFax:   +1-216-433-8705\nEMail: mallman@grc.nasa.gov\nhttp://roland.grc.nasa.gov/~mallman",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Hari Balakrishnan Laboratory for Computer Science 545 Technology Square Massachusetts Institute of Technology Cambridge, MA 02139",
      "ja": "ハリバラクリシュナン研究所コンピュータサイエンス545テクノロジースクエアマサチューセッツテクノロジーケンブリッジ、マサチューセッツ州02139"
    },
    {
      "indent": 3,
      "text": "EMail: hari@lcs.mit.edu\nhttp://nms.lcs.mit.edu/~hari/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Sally Floyd AT&T Center for Internet Research at ICSI (ACIRI) 1947 Center St, Suite 600 Berkeley, CA 94704",
      "ja": "ICSI（ACIRI）1947 Center St、Suite 600 Berkeley、CA 94704のSally Floyd AT＆Tセンター"
    },
    {
      "indent": 3,
      "text": "Phone: +1-510-666-2989\nEMail: floyd@aciri.org\nhttp://www.aciri.org/floyd/",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2001). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2001）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があり、それについてコメントまたは説明する派生作品、またはその実装を支援することができます。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書と本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}