{
  "title": {
    "text": "RFC 3303 - Middlebox communication architecture and framework",
    "ja": "RFC 3303 - ミドルボックス通信アーキテクチャとフレームワーク"
  },
  "number": 3303,
  "created_at": "2023-11-23 15:17:24.062781+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                       P. Srisuresh\nRequest for Comments: 3303                               Kuokoa Networks\nCategory: Informational                                        J. Kuthan\n                                              Fraunhofer Institute FOKUS\n                                                            J. Rosenberg\n                                                             dynamicsoft\n                                                              A. Molitor\n                                                     Aravox Technologies\n                                                               A. Rayhan\n                                                      Ryerson University\n                                                             August 2002",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Middlebox communication architecture and framework",
      "ja": "ミドルボックス通信アーキテクチャとフレームワーク"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2002). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2002）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "A principal objective of this document is to describe the underlying framework of middlebox communications (MIDCOM) to enable complex applications through the middleboxes, seamlessly using a trusted third party. This document and a companion document on MIDCOM requirements ([REQMTS]) have been created as a precursor to rechartering the MIDCOM working group.",
      "ja": "このドキュメントの主な目的は、ミドルボックス通信（MIDCOM）の根本的なフレームワークを説明して、信頼できるサードパーティをシームレスに使用して、ミドルボックスを介して複雑なアプリケーションを有効にすることです。このドキュメントとMIDCOM要件に関するコンパニオンドキュメント（[REQMTS]）は、MIDCOMワーキンググループを充電する前兆として作成されています。"
    },
    {
      "indent": 3,
      "text": "There are a variety of intermediate devices in the Internet today that require application intelligence for their operation. Datagrams pertaining to real-time streaming applications, such as SIP and H.323, and peer-to-peer applications, such as Napster and NetMeeting, cannot be identified by merely examining packet headers. Middleboxes implementing Firewall and Network Address Translator services typically embed application intelligence within the device for their operation. The document specifies an architecture and framework in which trusted third parties can be delegated to assist the middleboxes to perform their operation, without resorting to embedding application intelligence. Doing this will allow a middlebox to continue to provide the services, while keeping the middlebox application agnostic.",
      "ja": "今日、インターネットには、操作にアプリケーションインテリジェンスが必要なさまざまな中間デバイスがあります。SIPやH.323などのリアルタイムストリーミングアプリケーション、およびNapsterやNetMeetingなどのピアツーピアアプリケーションに関連するデータグラムは、単にパケットヘッダーを調べるだけでは識別できません。ファイアウォールとネットワークアドレス翻訳サービスを実装するミドルボックスは、通常、操作のためにデバイス内にアプリケーションインテリジェンスを埋め込みました。このドキュメントは、アプリケーションインテリジェンスの埋め込みに頼ることなく、信頼できるサードパーティを委任するためにミドルボックスが操作を実行するのを支援できるアーキテクチャとフレームワークを指定します。これを行うことで、ミドルボックスがサービスを提供し続けることができ、ミドルボックスアプリケーションが不可知論されます。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Intermediate devices requiring application intelligence are the subject of this document. These devices are referred to as middleboxes throughout the document. Many of these devices enforce application specific policy based functions such as packet filtering, VPN (Virtual Private Network) tunneling, Intrusion detection, security and so forth. Network Address Translator service, on the other hand, provides routing transparency across address realms (within IPv4 routing network or across V4 and V6 routing realms), independent of applications. Application Level Gateways (ALGs) are used in conjunction with NAT to examine and optionally modify application payload so the end-to-end application behavior remains unchanged for many of the applications traversing NAT middleboxes. There may be other types of services requiring embedding application intelligence in middleboxes for their operation. The discussion scope of this document is however limited to Firewall and NAT services. Nonetheless, the MIDCOM framework is designed to be extensible to support the deployment of new services.",
      "ja": "アプリケーションインテリジェンスを必要とする中間デバイスは、このドキュメントの主題です。これらのデバイスは、ドキュメント全体の中間ボックスと呼ばれます。これらのデバイスの多くは、パケットフィルタリング、VPN（仮想プライベートネットワーク）トンネル、侵入検知、セキュリティなどのアプリケーション固有のポリシーベースの機能を実施します。一方、ネットワークアドレス翻訳者サービスは、アプリケーションとは無関係に、アドレスの領域全体（IPv4ルーティングネットワーク内またはV4およびV6ルーティングの領域全体）にわたってルーティングの透明性を提供します。アプリケーションレベルゲートウェイ（ALG）は、NATと併用してアプリケーションのペイロードを調べて変更するために使用され、エンドツーエンドアプリケーションの動作がNATミドルボックスを通過する多くのアプリケーションで変更されません。操作のために中間ボックスにアプリケーションインテリジェンスを埋め込む必要がある他の種類のサービスがあるかもしれません。ただし、このドキュメントの議論の範囲は、ファイアウォールとNATサービスに限定されています。それにもかかわらず、MIDCOMフレームワークは、新しいサービスの展開をサポートするために拡張可能になるように設計されています。"
    },
    {
      "indent": 3,
      "text": "Tight coupling of application intelligence with middleboxes makes maintenance of middleboxes hard with the advent of new applications. Built-in application awareness typically requires updates of operating systems with new applications or newer versions of existing applications. Operators requiring support for newer applications will not be able to use third party software/hardware specific to the application and are at the mercy of their middlebox vendor to make the necessary upgrade. Further, embedding intelligence for a large number of application protocols within the same middlebox increases complexity of the middlebox and is likely to be error prone and degrade in performance.",
      "ja": "中間ボックスを使用したアプリケーションインテリジェンスの緊密な結合により、新しいアプリケーションの出現により、ミドルボックスのメンテナンスが激しくなります。組み込みアプリケーションの認識には、通常、新しいアプリケーションまたは既存のアプリケーションの新しいバージョンを備えたオペレーティングシステムの更新が必要です。新しいアプリケーションのサポートを必要とするオペレーターは、アプリケーションに固有のサードパーティのソフトウェア/ハードウェアを使用することができず、必要なアップグレードを行うためにミドルボックスベンダーに慈悲に貢献しています。さらに、同じミドルボックス内に多数のアプリケーションプロトコルにインテリジェンスを埋め込むと、ミドルボックスの複雑さが増加し、パフォーマンスが発生しやすくなり、劣化する可能性があります。"
    },
    {
      "indent": 3,
      "text": "This document describes a framework in which application intelligence can be moved from middleboxes into external MIDCOM agents. The premise of the framework is to devise a MIDCOM protocol that is application independent, so the middleboxes can stay focused on services such as firewall and NAT. The framework document includes some explicit and implied requirements for the MIDCOM protocol. However, it must be noted that these requirements are only a subset. A separate requirements document lists the requirements in detail.",
      "ja": "このドキュメントでは、アプリケーションインテリジェンスをミドルボックスから外部MIDCOMエージェントに移動できるフレームワークについて説明します。フレームワークの前提は、アプリケーションに依存しないMIDCOMプロトコルを考案することです。そのため、ミドルボックスはファイアウォールやNATなどのサービスに焦点を合わせ続けることができます。フレームワークドキュメントには、MIDCOMプロトコルの明示的および暗黙の要件が含まれています。ただし、これらの要件はサブセットのみであることに注意する必要があります。個別の要件ドキュメントには、要件が詳細にリストされています。"
    },
    {
      "indent": 3,
      "text": "MIDCOM agents with application intelligence can assist the middleboxes through the MIDCOM protocol in permitting applications such as FTP, SIP and H.323. The communication between a MIDCOM agent and a middlebox will not be noticeable to the end-hosts that take part in the application, unless one of the end-hosts assumes the role of a MIDCOM agent. Discovery of middleboxes or MIDCOM agents in the path of an application instance is outside the scope of this document. Further, any communication amongst middleboxes is also outside the scope of this document.",
      "ja": "アプリケーションインテリジェンスを備えたMIDCOMエージェントは、FTP、SIP、H.323などのアプリケーションを許可するMIDCOMプロトコルを通じて中間ボックスを支援できます。ミッドコムエージェントとミドルボックス間の通信は、エンドホストの1つがMIDCOMエージェントの役割を引き受けない限り、アプリケーションに参加するエンドホストに目立たないでしょう。アプリケーションインスタンスのパスでのミドルボックスまたはMidcomエージェントの発見は、このドキュメントの範囲外です。さらに、ミドルボックス間の通信は、このドキュメントの範囲外でもあります。"
    },
    {
      "indent": 3,
      "text": "This document describes the framework in which middlebox communication takes place and the various elements that constitute the framework. Section 2 describes the terms used in the document. Section 3 defines the architectural framework of a middlebox for communication with MIDCOM agents. The remaining sections cover the components of the framework, illustration using sample flows, and operational considerations with the MIDCOM architecture. Section 4 describes the nature of MIDCOM protocol. Section 5 identifies entities that could potentially host the MIDCOM agent function. Section 6 considers the role of Policy server and its function with regard to communicating MIDCOM agent authorization policies. Section 7 is an illustration of SIP flows using a MIDCOM framework in which the MIDCOM agent is co-resident on a SIP proxy server. Section 8 addresses operational considerations in deploying a protocol adhering to the framework described here. Section 9 is an applicability statement, scoping the location of middleboxes. Section 11 outlines security considerations for the middlebox in view of the MIDCOM framework.",
      "ja": "このドキュメントでは、ミドルボックス通信が行われるフレームワークと、フレームワークを構成するさまざまな要素について説明します。セクション2では、ドキュメントで使用される用語について説明します。セクション3では、Midcomエージェントとの通信のためのミドルボックスのアーキテクチャフレームワークを定義しています。残りのセクションは、フレームワークのコンポーネント、サンプルフローを使用した図、およびMidcomアーキテクチャでの運用上の考慮事項をカバーしています。セクション4では、Midcomプロトコルの性質について説明します。セクション5では、MIDCOMエージェント機能を潜在的にホストできるエンティティを特定します。セクション6では、MIDCOMエージェント認証ポリシーの伝達に関するポリシーサーバーの役割とその機能を検討します。セクション7は、MIDCOMエージェントがSIPプロキシサーバーの共同住宅であるMIDCOMフレームワークを使用したSIPフローの図です。セクション8では、ここで説明するフレームワークに準拠したプロトコルを展開する際の運用上の考慮事項について説明します。セクション9は、中間ボックスの位置をスコーピングする適用声明です。セクション11は、Midcomフレームワークを考慮して、ミドルボックスのセキュリティに関する考慮事項の概要を示しています。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "ja": "2. 用語"
    },
    {
      "indent": 3,
      "text": "Below are the definitions for the terms used throughout the document.",
      "ja": "以下は、ドキュメント全体で使用される用語の定義です。"
    },
    {
      "indent": 0,
      "text": "2.1. Middlebox function/service",
      "section_title": true,
      "ja": "2.1. ミドルボックス機能/サービス"
    },
    {
      "indent": 3,
      "text": "A middlebox function or a middlebox service is an operation or method performed by a network intermediary that may require application specific intelligence for its operation. Policy based packet filtering (a.k.a. firewall), Network address translation (NAT), Intrusion detection, Load balancing, Policy based tunneling and IPsec security are all examples of a middlebox function (or service).",
      "ja": "ミドルボックス機能またはミドルボックスサービスは、ネットワーク仲介者が実行する操作またはメソッドであり、その動作にアプリケーション固有のインテリジェンスを必要とする場合があります。ポリシーベースのパケットフィルタリング（別名ファイアウォール）、ネットワークアドレス変換（NAT）、侵入検知、負荷分散、ポリシーベースのトンネル、IPSECセキュリティはすべて、ミドルボックス関数（またはサービス）の例です。"
    },
    {
      "indent": 0,
      "text": "2.2. Middlebox",
      "section_title": true,
      "ja": "2.2. ミドルボックス"
    },
    {
      "indent": 3,
      "text": "A Middlebox is a network intermediate device that implements one or more of the middlebox services. A NAT middlebox is a middlebox implementing NAT service. A firewall middlebox is a middlebox implementing firewall service.",
      "ja": "ミドルボックスは、1つ以上のミドルボックスサービスを実装するネットワーク中間デバイスです。NATミドルボックスは、NATサービスを実装するミドルボックスです。ファイアウォールミドルボックスは、ファイアウォールサービスを実装するミドルボックスです。"
    },
    {
      "indent": 3,
      "text": "Traditional middleboxes embed application intelligence within the device to support specific application traversal. Middleboxes supporting the MIDCOM protocol will be able to externalize application intelligence into MIDCOM agents. In reality, some of the middleboxes may continue to embed application intelligence for certain applications and depend on MIDCOM protocol and MIDCOM agents for the support of remaining applications.",
      "ja": "従来のミドルボックスは、特定のアプリケーショントラバーサルをサポートするために、デバイス内にアプリケーションインテリジェンスを埋め込みました。MIDCOMプロトコルをサポートするミドルボックスは、アプリケーションインテリジェンスをMIDCOMエージェントに外部化することができます。実際には、一部のミドルボックスは、特定のアプリケーションのためにアプリケーションインテリジェンスを埋め込み続け、残りのアプリケーションのサポートのためにMidcomプロトコルとMidcomエージェントに依存する場合があります。"
    },
    {
      "indent": 0,
      "text": "2.3. Firewall",
      "section_title": true,
      "ja": "2.3. ファイアウォール"
    },
    {
      "indent": 3,
      "text": "Firewall is a policy based packet filtering middlebox function, typically used for restricting access to/from specific devices and applications. The policies are often termed Access Control Lists (ACLs).",
      "ja": "ファイアウォールは、ポリシーベースのパケットフィルタリングミドルボックス機能であり、通常、特定のデバイスおよびアプリケーションへのアクセスを制限するために使用されます。ポリシーは、多くの場合、アクセス制御リスト（ACL）と呼ばれます。"
    },
    {
      "indent": 0,
      "text": "2.4. NAT",
      "section_title": true,
      "ja": "2.4. ナット"
    },
    {
      "indent": 3,
      "text": "Network Address Translation is a method by which IP addresses are mapped from one address realm to another, providing transparent routing to end-hosts. Transparent routing here refers to modifying end-node addresses en-route and maintaining state for these updates so that when a datagram leaves one realm and enters another, datagrams pertaining to a session are forwarded to the right end-host in either realm. Refer to [NAT-TERM] for the definition of Transparent routing, various NAT types, and the associated terms in use. Two types of NAT are most common. Basic-NAT, where only an IP address (and the related IP, TCP/UDP checksums) of packets is altered and NAPT (Network Address Port Translation), where both an IP address and a transport layer identifier, such as a TCP/UDP port (and the related IP, TCP/UDP checksums), are altered.",
      "ja": "ネットワークアドレスの変換は、IPアドレスがあるアドレスの領域から別のアドレスにマッピングされる方法であり、エンドホストへの透明なルーティングを提供します。ここでの透明なルーティングとは、これらの更新のエンドノードアドレスの変更と状態を維持することを指します。これにより、データグラムが1つの領域を離れて別の領域を離れると、セッションに関連するデータグラムがいずれかの領域で右のエンドホストに転送されます。透明ルーティング、さまざまなNATタイプ、および使用されている関連用語の定義については、[NAT-Terme]を参照してください。2種類のNATが最も一般的です。パケットのIPアドレス（および関連するIP、TCP/UDPチェックサム）のみが変更され、NAPT（ネットワークアドレスポート変換）が変更されます。TCP/UDPなどのトランスポートレイヤー識別子の両方が変更されています。ポート（および関連するIP、TCP/UDPチェックサム）が変更されます。"
    },
    {
      "indent": 3,
      "text": "The term NAT in this document is very similar to the IPv4 NAT described in [NAT-TERM], but is extended beyond IPv4 networks to include the IPv4-v6 NAT-PT described in [NAT-PT]. While the IPv4 NAT [NAT-TERM] translates one IPv4 address into another IPv4 address to provide routing between private V4 and external V4 address realms, IPv4-v6 NAT-PT [NAT-PT] translates an IPv4 address into an IPv6 address, and vice versa, to provide routing between a V6 address realm and an external V4 address realm.",
      "ja": "このドキュメントのNATという用語は、[NAT-Term]で説明されているIPv4 NATと非常に似ていますが、[NAT-PT]に記載されているIPv4-V6 NAT-PTを含むIPv4ネットワークを超えて拡張されています。IPv4 NAT [NAT-Term]は、1つのIPv4アドレスを別のIPv4アドレスに変換して、プライベートV4と外部V4アドレスのレルム間のルーティングを提供しますが、IPv4-V6 NAT-PT [NAT-PT]はIPv4アドレスをIPv6アドレスに変換し、その逆も同様です。V6アドレス領域と外部V4アドレス領域の間でルーティングを提供します。"
    },
    {
      "indent": 3,
      "text": "Unless specified otherwise, NAT in this document is a middlebox function referring to both IPv4 NAT, as well as IPv4-v6 NAT-PT.",
      "ja": "特に指定されていない限り、このドキュメントのNATは、IPv4 NATとIPv4-V6 NAT-PTの両方を参照するミドルボックス関数です。"
    },
    {
      "indent": 0,
      "text": "2.5. Proxy",
      "section_title": true,
      "ja": "2.5. プロキシ"
    },
    {
      "indent": 3,
      "text": "A proxy is an intermediate relay agent between clients and servers of an application, relaying application messages between the two. Proxies use special protocol mechanisms to communicate with proxy clients and relay client data to servers and vice versa. A Proxy terminates sessions with both the client and the server, acting as server to the end-host client and as client to the end-host server.",
      "ja": "プロキシは、クライアントとアプリケーションのサーバー間の中間リレーエージェントであり、2つの間にアプリケーションメッセージを中継します。プロキシは、特別なプロトコルメカニズムを使用してプロキシクライアントと通信し、クライアントデータをサーバーに伝え、その逆も同様です。プロキシは、クライアントとサーバーの両方でセッションを終了し、エンドホストクライアントのサーバーとして、およびエンドホストサーバーのクライアントとして機能します。"
    },
    {
      "indent": 3,
      "text": "Applications such as FTP, SIP, and RTSP use a control session to establish data sessions. These control and data sessions can take divergent paths. While a proxy can intercept both the control and data sessions, it might intercept only the control session. This is often the case with real-time streaming applications such as SIP and RTSP.",
      "ja": "FTP、SIP、RTSPなどのアプリケーションは、コントロールセッションを使用してデータセッションを確立します。これらの制御セッションとデータセッションは、多様なパスをとることができます。プロキシはコントロールセッションとデータセッションの両方を傍受できますが、コントロールセッションのみを傍受する可能性があります。これは、SIPやRTSPなどのリアルタイムストリーミングアプリケーションの場合に多くの場合です。"
    },
    {
      "indent": 0,
      "text": "2.6. ALG",
      "section_title": true,
      "ja": "2.6. アルグ"
    },
    {
      "indent": 3,
      "text": "Application Level Gateways (ALGs) are entities that possess the application specific intelligence and knowledge of an associated middlebox function. An ALG examines application traffic in transit and assists the middlebox in carrying out its function.",
      "ja": "アプリケーションレベルゲートウェイ（ALG）は、アプリケーション固有のインテリジェンスと関連するミドルボックス関数の知識を持つエンティティです。ALGは、輸送中のアプリケーショントラフィックを調べ、ミドルボックスがその機能を実行するのを支援します。"
    },
    {
      "indent": 3,
      "text": "An ALG may be a co-resident with a middlebox or reside externally, communicating through a middlebox communication protocol. It interacts with a middlebox to set up state, access control filters, use middlebox state information, modify application specific payload, or perform whatever else is necessary to enable the application to run through the middlebox.",
      "ja": "アルグは、ミドルボックスの共同住宅であるか、外部から居住している場合があり、ミドルボックス通信プロトコルを介して通信します。ミドルボックスと対話して、状態をセットアップしたり、コントロールフィルターにアクセスしたり、ミドルボックスの状態情報を使用したり、アプリケーション固有のペイロードを変更したり、アプリケーションをミドルボックスを介して実行できるようにするために必要なものを実行します。"
    },
    {
      "indent": 3,
      "text": "ALGs are different from proxies. ALGs are not visible to end-hosts, unlike the proxies which are relay agents terminating sessions with both end-hosts. ALGs do not terminate sessions with either end-host. Instead, ALGs examine, and optionally modify, application payload content to facilitate the flow of application traffic through a middlebox. ALGs are middlebox centric, in that they assist the middleboxes in carrying out their function, whereas, the proxies act as a focal point for application servers, relaying traffic between application clients and servers.",
      "ja": "アルグはプロキシとは異なります。両方のエンドホストでセッションを終了するリレーエージェントであるプロキシとは異なり、アルグはエンドホストに表示されません。ALGは、どちらのエンドホストでもセッションを終了しません。代わりに、ALGSはアプリケーションのペイロードコンテンツを調べ、オプションで変更して、ミドルボックスを介したアプリケーショントラフィックの流れを容易にします。アルグはミドルボックス中心であり、ミドルボックスが機能を実行するのを支援しますが、プロキシはアプリケーションサーバーの焦点として機能し、アプリケーションクライアントとサーバー間のトラフィックを中継します。"
    },
    {
      "indent": 3,
      "text": "ALGs are similar to Proxies, in that, both ALGs and proxies facilitate Application specific communication between clients and servers.",
      "ja": "ALGはプロキシに似ています。これは、ALGとプロキシの両方が、クライアントとサーバー間のアプリケーション固有の通信を促進することです。"
    },
    {
      "indent": 0,
      "text": "2.7. End-Hosts",
      "section_title": true,
      "ja": "2.7. エンドホスト"
    },
    {
      "indent": 3,
      "text": "End-hosts are entities that are party to a networked application instance. End-hosts referred to in this document, are specifically those terminating Real-time streaming Voice-over-IP applications, such as SIP and H.323, and peer-to-peer applications such as Napster and NetMeeting.",
      "ja": "エンドホストは、ネットワーク化されたアプリケーションインスタンスの当事者であるエンティティです。このドキュメントで言及されているエンドホストは、特にSIPやH.323などのリアルタイムストリーミングボイスオーバーIPアプリケーションを終了するものと、NapsterやNetMeetingなどのピアツーピアアプリケーションです。"
    },
    {
      "indent": 0,
      "text": "2.8. MIDCOM Agents",
      "section_title": true,
      "ja": "2.8. Midcomエージェント"
    },
    {
      "indent": 3,
      "text": "MIDCOM agents are entities performing ALG functions, logically external to a middlebox. MIDCOM agents possess a combination of application awareness and knowledge of the middlebox function. This combination enables the agents to facilitate traversal of the middlebox by the application's packets. A MIDCOM agent may interact with one or more middleboxes.",
      "ja": "Midcomエージェントは、論理的にミドルボックスの外部にあるALG関数を実行するエンティティです。Midcomエージェントは、アプリケーションの認識とミドルボックス機能の知識の組み合わせを持っています。この組み合わせにより、エージェントはアプリケーションのパケットによるミドルボックスのトラバーサルを容易にすることができます。Midcomエージェントは、1つ以上のミドルボックスと対話する場合があります。"
    },
    {
      "indent": 3,
      "text": "Only \"In-Path MIDCOM agents\" are considered in this document. In-Path MIDCOM agents are agents which are within the path of those datagrams that the agent needs to examine and/or modify in fulfilling its role as a MIDCOM agent. \"Within the path\" here simply means that the packets in question flow through the node that hosts the agent. The packets may be addressed to the agent node at the IP layer. Alternatively they may not be addressed to the agent node, but may be constrained by other factors to flow through it. In fact, it is immaterial to the MIDCOM protocol which of these is the case. Some examples of In-Path MIDCOM agents are application proxies, gateways, or even end-hosts that are party to the application.",
      "ja": "このドキュメントでは、「In-Path Midcomエージェント」のみが考慮されています。In-Path Midcomエージェントは、エージェントがMIDCOMエージェントとしての役割を果たすために検査および/または修正する必要があるデータグラムのパス内にあるエージェントです。ここでの「パス内」とは、問題のパケットがエージェントをホストするノードを通過することを意味します。パケットは、IPレイヤーのエージェントノードにアドレス指定できます。あるいは、エージェントノードに宛てられていない場合がありますが、それを流れる他の要因によって制約される場合があります。実際、MIDCOMプロトコルには重要ではありません。In-Path Midcomエージェントのいくつかの例は、アプリケーションのプロキシ、ゲートウェイ、またはアプリケーションの当事者であるエンドホストです。"
    },
    {
      "indent": 3,
      "text": "Agents not resident on nodes that are within the path of their relevant application flows are referred to as \"Out-of-Path (OOP) MIDCOM agents\" and are out of the scope of this document.",
      "ja": "関連するアプリケーションフローのパス内にあるノードに居住していないエージェントは、「パス外（OOP）Midcomエージェント」と呼ばれ、このドキュメントの範囲外です。"
    },
    {
      "indent": 0,
      "text": "2.9. MIDCOM PDP",
      "section_title": true,
      "ja": "2.9. Midcom PDP"
    },
    {
      "indent": 3,
      "text": "MIDCOM Policy Decision Point (PDP) is primarily a Policy Decision Point(PDP), as defined in [POL-TERM]; and also acts as a policy repository, holding MIDCOM related policy profiles in order to make authorization decisions. [POL-TERM] defines a PDP as \"a logical entity that makes policy decisions for itself or for other network elements that request such decisions\"; and a policy repository as \"a specific data store that holds policy rules, their conditions and actions, and related policy data\".",
      "ja": "MIDCOMポリシー決定ポイント（PDP）は、[Pol-Terme]で定義されているように、主にポリシー決定ポイント（PDP）です。また、許可決定を下すためにMidcom関連のポリシープロファイルを保持しているポリシーリポジトリとしても機能します。[Pol-Terme]は、PDPを「それ自体またはそのような決定を要求する他のネットワーク要素に対して政策決定を下す論理的エンティティ」と定義しています。「ポリシールール、条件とアクション、および関連するポリシーデータを保持する特定のデータストア」としてのポリシーリポジトリ。"
    },
    {
      "indent": 3,
      "text": "A middlebox and a MIDCOM PDP may communicate further if the MIDCOM PDP's policy changes or if a middlebox needs further information. The MIDCOM PDP may, at anytime, notify the middlebox to terminate authorization for an agent.",
      "ja": "MIDCOM PDPのポリシーが変更された場合、またはミドルボックスにさらなる情報が必要な場合、ミドルボックスとMIDCOM PDPがさらに通信する場合があります。MIDCOM PDPは、いつでもミドルボックスにエージェントの承認を終了するように通知することができます。"
    },
    {
      "indent": 3,
      "text": "The protocol facilitating the communication between a middlebox and MIDCOM PDP need not be part of the MIDCOM protocol. Section 6 in the document addresses the MIDCOM PDP interface and protocol framework independent of the MIDCOM framework.",
      "ja": "ミドルボックスとMIDCOM PDP間の通信を促進するプロトコルは、MIDCOMプロトコルの一部である必要はありません。ドキュメントのセクション6では、MIDCOM Frameworkとは無関係にMIDCOM PDPインターフェイスとプロトコルフレームワークについて説明します。"
    },
    {
      "indent": 3,
      "text": "Application specific policy data and policy interface between an agent or application endpoint and a MIDCOM PDP is out of bounds for this document. The MIDCOM PDP issues addressed in the document are focused at an aggregate domain level as befitting the middlebox. For example, a SIP MIDCOM agent may choose to query a MIDCOM PDP for the administrative (or corporate) domain to find whether a certain user is allowed to make an outgoing call. This type of application specific policy data, as befitting an end user, is out of bounds for the MIDCOM PDP considered in this document. It is within bounds, however, for the MIDCOM PDP to specify the specific end-user applications (or tuples) for which an agent is permitted to be an ALG.",
      "ja": "アプリケーション固有のポリシーデータとエージェントまたはアプリケーションのエンドポイントとMIDCOM PDPの間のポリシーインターフェイスは、このドキュメントの範囲外です。ドキュメントで扱われているMIDCOM PDPの問題は、ミドルボックスにふさわしい集合ドメインレベルに焦点を当てています。たとえば、SIP MIDCOMエージェントは、管理（または企業）ドメインのMIDCOM PDPを照会して、特定のユーザーが発信コールを許可されているかどうかを検索することを選択できます。エンドユーザーにふさわしいこのタイプのアプリケーション固有のポリシーデータは、このドキュメントで考慮されるMIDCOM PDPの範囲外です。ただし、MIDCOM PDPがエージェントがALGであることが許可されている特定のエンドユーザーアプリケーション（またはタプル）を指定するのは範囲内です。"
    },
    {
      "indent": 0,
      "text": "2.10. Middlebox Communication (MIDCOM) protocol",
      "section_title": true,
      "ja": "2.10. ミドルボックス通信（MIDCOM）プロトコル"
    },
    {
      "indent": 3,
      "text": "The protocol between a MIDCOM agent and a middlebox allows the MIDCOM agent to invoke services of the middlebox and allow the middlebox to delegate application specific processing to the MIDCOM agent. The MIDCOM protocol allows the middlebox to perform its operation with the aid of MIDCOM agents, without resorting to embedding application intelligence. The principal motivation behind architecting this protocol is to enable complex applications through middleboxes, seamlessly using a trusted third party, i.e., a MIDCOM agent.",
      "ja": "MIDCOMエージェントとミドルボックスの間のプロトコルにより、MIDCOMエージェントはミドルボックスのサービスを呼び出し、ミドルボックスがアプリケーション固有の処理をMIDCOMエージェントに委任できるようにします。MIDCOMプロトコルにより、Midscomエージェントの助けを借りて、Midcomエージェントを使用して操作を実行できます。このプロトコルをアーキテクテクティブする背後にある主要な動機は、ミドルボックスを介して複雑なアプリケーションを有効にし、信頼できるサードパーティ、つまりMidcomエージェントをシームレスに使用することです。"
    },
    {
      "indent": 3,
      "text": "This is a protocol yet to be devised.",
      "ja": "これはまだ考案されていないプロトコルです。"
    },
    {
      "indent": 0,
      "text": "2.11. MIDCOM agent registration",
      "section_title": true,
      "ja": "2.11. Midcomエージェント登録"
    },
    {
      "indent": 3,
      "text": "A MIDCOM agent registration is defined as the process of provisioning agent profile information with the middlebox or a MIDCOM PDP. MIDCOM agent registration is often a manual operation performed by an operator rather than the agent itself.",
      "ja": "MIDCOMエージェント登録は、ミドルボックスまたはMIDCOM PDPを使用して、エージェントプロファイル情報のプロセスとして定義されます。Midcomエージェント登録は、多くの場合、エージェント自体ではなくオペレーターが実行する手動操作です。"
    },
    {
      "indent": 3,
      "text": "A MIDCOM agent profile may include agent authorization policy (i.e., session tuples for which the agent is authorized to act as ALG), agent-hosting-entity (e.g., Proxy, Gateway, or end-host which hosts the agent), agent accessibility profile (including any host level authentication information), and security profile (for the messages exchanged between the middlebox and the agent).",
      "ja": "MIDCOMエージェントプロファイルには、エージェント認証ポリシー（つまり、エージェントがALGとして機能することを許可されるセッションタプル）、エージェントホスティングエンティティ（エージェントをホストするプロキシ、ゲートウェイ、またはエンドホストなど）、エージェントアクセシビリティを含めることができます。プロファイル（ホストレベルの認証情報を含む）、およびセキュリティプロファイル（ミドルボックスとエージェントの間で交換されるメッセージ用）。"
    },
    {
      "indent": 0,
      "text": "2.12. MIDCOM session",
      "section_title": true,
      "ja": "2.12. ミッドコムセッション"
    },
    {
      "indent": 3,
      "text": "A MIDCOM session is defined to be a lasting association between a MIDCOM agent and a middlebox. The MIDCOM session is not assumed to imply any specific transport layer protocol. Specifically, this should not be construed as referring to a connection-oriented TCP protocol.",
      "ja": "MIDCOMセッションは、MIDCOMエージェントとミドルボックスの間の永続的な関連性であると定義されています。MIDCOMセッションは、特定の輸送層プロトコルを暗示するとは想定されていません。具体的には、これは接続指向のTCPプロトコルを参照するものと解釈されるべきではありません。"
    },
    {
      "indent": 0,
      "text": "2.13. Filter",
      "section_title": true,
      "ja": "2.13. フィルター"
    },
    {
      "indent": 3,
      "text": "A filter is packet matching information that identifies a set of packets to be treated a certain way by a middlebox. This definition is consistent with [POL-TERM], which defines a filter as \"A set of terms and/or criteria used for the purpose of separating or categorizing. This is accomplished via single- or multi-field matching of traffic header and/or payload data\".",
      "ja": "フィルターは、ミドルボックスによって特定の方法で処理されるパケットのセットを識別するパケットマッチング情報です。この定義は[Pol-Terme]と一致しており、フィルターは「分離または分類を目的として使用される一連の用語および/または基準」と定義しています。これは、トラフィックヘッダーおよび/の単一またはマルチフィールドマッチングを介して達成されます。またはペイロードデータ」。"
    },
    {
      "indent": 3,
      "text": "5-Tuple specification of packets in the case of a firewall and 5- tuple specification of a session in the case of a NAT middlebox function are examples of a filter.",
      "ja": "5タプルファイアウォールの場合のパケットの仕様とNATミドルボックス関数の場合のセッションの5タプル仕様は、フィルターの例です。"
    },
    {
      "indent": 0,
      "text": "2.14. Policy action (or) Action",
      "section_title": true,
      "ja": "2.14. ポリシーアクション（または）アクション"
    },
    {
      "indent": 3,
      "text": "Policy action (or Action) is a description of the middlebox treatment/service to be applied to a set of packets. This definition is consistent with [POL-TERM], which defines a policy action as \"Definition of what is to be done to enforce a policy rule, when the conditions of the rule are met. Policy actions may result in the execution of one or more operations to affect and/or configure network traffic and network resources\".",
      "ja": "ポリシーアクション（またはアクション）は、パケットのセットに適用されるミドルボックストリートメント/サービスの説明です。この定義は[Pol-Terme]と一致しています。これは、ポリシーアクションを「規則の条件が満たされた場合、ポリシールールを実施するために行うべきことの定義を定義します。ポリシーアクションは1つまたは1つまたはネットワークトラフィックおよびネットワークリソースに影響を与えたり構成するためのより多くの操作があります」。"
    },
    {
      "indent": 3,
      "text": "NAT Address-BIND (or Port-BIND in the case of NAPT) and firewall permit/deny action are examples of an Action.",
      "ja": "NATアドレスバインド（またはNAPTの場合のポートバインド）およびファイアウォール許可/拒否アクションは、アクションの例です。"
    },
    {
      "indent": 0,
      "text": "2.15. Policy rule(s)",
      "section_title": true,
      "ja": "2.15. ポリシールール"
    },
    {
      "indent": 3,
      "text": "The combination of one or more filters and one or more actions. Packets matching a filter are to be treated as specified by the associated action(s). The Policy rules may also contain auxiliary attributes such as individual rule type, timeout values, creating agent, etc.",
      "ja": "1つ以上のフィルターと1つ以上のアクションの組み合わせ。フィルターに一致するパケットは、関連するアクションによって指定されているように扱われます。ポリシールールには、個々のルールタイプ、タイムアウト値、作成エージェントなどの補助属性も含まれている場合があります。"
    },
    {
      "indent": 3,
      "text": "Policy rules are communicated through the MIDCOM protocol.",
      "ja": "ポリシールールは、MIDCOMプロトコルを通じて伝えられます。"
    },
    {
      "indent": 0,
      "text": "3.0 Architectural framework for middleboxes",
      "section_title": true,
      "ja": "3.0 ミドルボックス用のアーキテクチャフレームワーク"
    },
    {
      "indent": 3,
      "text": "A middlebox may implement one or more of the middlebox functions selectively on multiple interfaces of the device. There can be a variety of MIDCOM agents interfacing with the middlebox to communicate with one or more of the middlebox functions on an interface. As such, the middlebox communication protocol must allow for selective communication between a specific MIDCOM agent and one or more middlebox functions on the interface. The following diagram identifies a possible layering of the service supported by a middlebox and a list of MIDCOM agents that might interact with it.",
      "ja": "ミドルボックスは、デバイスの複数のインターフェイスに1つ以上のミドルボックス機能を選択的に実装できます。インターフェイス上の1つ以上のミドルボックス機能と通信するために、ミドルボックスとインターフェースするさまざまなMidcomエージェントがあります。そのため、Middlebox通信プロトコルは、特定のMIDCOMエージェントとインターフェイス上の1つ以上のミドルボックス関数との間の選択的通信を可能にする必要があります。次の図は、ミドルボックスによってサポートされているサービスのレイヤー化の可能性と、それと相互作用する可能性のあるMidcomエージェントのリストを特定しています。"
    },
    {
      "indent": 5,
      "text": "          +---------------+  +--------------+\n          | MIDCOM agent  |  | MIDCOM agent |\n          | co-resident on|  | co-resident  |\n          | Proxy Server  |  | on Appl. GW  |\n          +---------------+  +--------------+\n                     ^           ^\n                     |           |                     +--------+\n            MIDCOM   |           |                     | MIDCOM |\n            Protocol |           |                   +-|  PDP   |\n                     |           |                  /  +--------+\n+-------------+      |           |                 /\n| MIDCOM agent|      |           |                /\n| co-resident |      |           |               /\n| on End-hosts|<-+   |           |              /\n+-------------+  |   |           |              |\n                 v   v           v              v\n           +-------------------------------------------+\n           |  Middlebox Communication      |Policy     |\n           |  Protocol (MIDCOM) Interface  |Interface  |\n           +----------+--------+-----------+-----------+\nMiddlebox  |          |        |           |           |\nFunctions  | Firewall |  NAT   |   VPN     | Intrusion |\n           |          |        | tunneling | Detection |\n           +----------+--------+-----------+-----------+\nMiddlebox  | Middlebox function specific policy rule(s)|\nManaged    | and other attributes                      |\nResources  |                                           |\n           +-------------------------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 10,
      "text": "Figure 1: MIDCOM agents interfacing with a middlebox",
      "ja": "図1：Midcomエージェントはミドルボックスとインターフェースします"
    },
    {
      "indent": 3,
      "text": "Firewall ACLs, NAT-BINDs, NAT address-maps and Session-state are a few of the middlebox function specific policy rules. A session state may include middlebox function specific attributes, such as timeout values, NAT translation parameters (i.e., NAT-BINDS), and so forth. As Session-state may be shared across middlebox functions, a Session-state may be created by a function, and terminated by a different function. For example, a session-state may be created by the firewall function, but terminated by the NAT function, when a session timer expires.",
      "ja": "ファイアウォールACLS、NATバインド、NATアドレスマップ、セッション状態は、ミドルボックス関数固有のポリシールールのいくつかです。セッション状態には、タイムアウト値、NAT翻訳パラメーター（つまり、NATバインド）などのMiddleBox関数固有の属性が含まれる場合があります。セッションステートはミドルボックス関数間で共有される可能性があるため、セッションステートは関数によって作成され、異なる関数によって終了する場合があります。たとえば、セッションステートはファイアウォール関数によって作成される場合がありますが、セッションタイマーの有効期限が切れたときにNAT関数によって終了します。"
    },
    {
      "indent": 3,
      "text": "Application specific MIDCOM agents (co-resident on the middlebox or external to the middlebox) would examine the IP datagrams and help identify the application the datagram belongs to, and assist the middlebox in performing functions unique to the application and the middlebox service. For example, a MIDCOM agent, assisting a NAT middlebox, might perform payload translations, whereas a MIDCOM agent assisting a firewall middlebox might request the firewall to permit access to application specific, dynamically generated, session traffic.",
      "ja": "アプリケーション固有のMIDCOMエージェント（ミドルボックスまたはミドルボックスの外部の共同居住者）は、IPデータグラムを調べ、データグラムが属するアプリケーションを特定し、アプリケーションとミドルボックスサービスに固有の機能を実行するためにミドルボックスを支援します。たとえば、NATミドルボックスを支援するMIDCOMエージェントはペイロード翻訳を実行する可能性がありますが、ミッドコムエージェントがファイアウォールミドルボックスを支援すると、ファイアウォールがアプリケーション固有の動的に生成されたセッショントラフィックへのアクセスを許可するように要求する場合があります。"
    },
    {
      "indent": 0,
      "text": "4. MIDCOM Protocol",
      "section_title": true,
      "ja": "4. Midcomプロトコル"
    },
    {
      "indent": 3,
      "text": "The MIDCOM protocol between a MIDCOM agent and a middlebox allows the MIDCOM agent to invoke services of the middlebox and allow the middlebox to delegate application specific processing to the MIDCOM agent. The protocol will allow MIDCOM agents to signal the middleboxes, to let complex applications using dynamic port based sessions through them (i.e., middleboxes) seamlessly.",
      "ja": "MIDCOMエージェントとミドルボックス間のMIDCOMプロトコルにより、MIDCOMエージェントはミドルボックスのサービスを呼び出し、Midcomエージェントにアプリケーション固有の処理を委任できるようになります。このプロトコルにより、Midcomエージェントはミドルボックスに信号を送ることができ、動的なポートベースのセッション（つまり、ミドルボックス）を使用して複雑なアプリケーションをシームレスに可能にします。"
    },
    {
      "indent": 3,
      "text": "It is important to note that an agent and a middlebox can be on the same physical device. In such a case, they may communicate using a MIDCOM protocol message formats, but using a non-IP based transport, such as IPC messaging (or) they may communicate using well-defined API/DLL (or) the application intelligence is fully embedded into the middlebox service (as it is done today in many stateful inspection firewall devices and NAT devices).",
      "ja": "エージェントとミドルボックスが同じ物理デバイス上にあることに注意することが重要です。そのような場合、彼らはMIDCOMプロトコルメッセージ形式を使用して通信する場合がありますが、IPCメッセージング（または）などの非IPベースのトランスポートを使用して、明確に定義されたAPI/DLLを使用して通信する場合があります。Middleboxサービスに（今日では多くのステートフル検査ファイアウォールデバイスとNATデバイスで行われています）。"
    },
    {
      "indent": 3,
      "text": "The MIDCOM protocol will consist of a session setup phase, run-time session phase, and a session termination phase.",
      "ja": "MIDCOMプロトコルは、セッションセットアップフェーズ、ランタイムセッションフェーズ、およびセッション終了フェーズで構成されます。"
    },
    {
      "indent": 3,
      "text": "Session setup must be preceded by registration of the MIDCOM agent with either the middlebox or the MIDCOM PDP. The MIDCOM agent access and authorization profile may either be pre-configured on the middlebox (or) listed on a MIDCOM PDP; the middlebox is configured to consult. MIDCOM shall be a client-server protocol, initiated by the agent.",
      "ja": "セッションのセットアップの前に、MidcomエージェントのミドルボックスまたはMidcom PDPのいずれかを登録する必要があります。MIDCOMエージェントアクセスおよび認証プロファイルは、MIDCOM PDPにリストされているミドルボックス（または）に事前に構成されている場合があります。ミドルボックスは相談するように構成されています。Midcomは、エージェントによって開始されるクライアントサーバープロトコルとなるものとします。"
    },
    {
      "indent": 3,
      "text": "A MIDCOM session may be terminated by either of the parties. A MIDCOM session termination may also be triggered by (a) the middlebox or the agent going out of service and not being available for further MIDCOM operations, or (b) the MIDCOM PDP notifying the middlebox that a particular MIDCOM agent is no longer authorized.",
      "ja": "MIDCOMセッションは、いずれかの当事者によって終了する場合があります。MIDCOMセッション終了は、（a）ミドルボックスまたはエージェントがサービスを停止していないため、さらにMIDCOM操作に利用できないこと、または（b）MIDCOM PDPが特定のMIDCOMエージェントがもはや許可されていないことをミドルボックスに通知することによってトリガーされる場合があります。"
    },
    {
      "indent": 3,
      "text": "The MIDCOM protocol data exchanged during run-time is governed principally by the middlebox services the protocol supports. Firewall and NAT middlebox services are considered in this document. Nonetheless, the MIDCOM framework is designed to be extensible to support the deployment of other services as well.",
      "ja": "実行時に交換されるMIDCOMプロトコルデータは、主にプロトコルがサポートするミドルボックスサービスによって支配されています。このドキュメントでは、ファイアウォールとNATミドルボックスサービスが考慮されています。それにもかかわらず、MIDCOMフレームワークは、他のサービスの展開もサポートするために拡張可能になるように設計されています。"
    },
    {
      "indent": 0,
      "text": "5.0. MIDCOM Agents",
      "section_title": true,
      "ja": "5.0. Midcomエージェント"
    },
    {
      "indent": 3,
      "text": "MIDCOM agents are logical entities which may reside physically on nodes external to a middlebox, possessing a combination of application awareness and knowledge of middlebox function. A MIDCOM agent may communicate with one or more middleboxes. The issues of middleboxes discovering agents, or vice versa, are outside the scope of this document. The focus of the document is the framework in which a MIDCOM agent communicates with a middlebox using MIDCOM protocol, which is yet to be devised. Specifically, the focus is restricted to just the In-Path agents.",
      "ja": "MIDCOMエージェントは、ミドルボックスの外部のノードに物理的に存在する可能性のある論理エンティティであり、アプリケーションの認識とミドルボックス機能の知識の組み合わせを備えています。MIDCOMエージェントは、1つ以上のミドルボックスと通信する場合があります。エージェントを発見するミドルボックスの問題、またはその逆は、このドキュメントの範囲外です。ドキュメントの焦点は、MIDCOMエージェントがMIDCOMプロトコルを使用してミドルボックスと通信するフレームワークであり、まだ考案されていません。具体的には、焦点はパス中のエージェントだけに制限されています。"
    },
    {
      "indent": 3,
      "text": "In-Path MIDCOM agents are MIDCOM agents that are located naturally within the message path of the application(s) they are associated with. Bundled session applications, such as H.323, SIP, and RTSP which have separate control and data sessions, may have their sessions take divergent paths. In those scenarios, In-Path MIDCOM agents are those that find themselves in the control path. In a majority of cases, a middlebox will likely require the assistance of a single agent for an application in the control path alone. However, it is possible that a middlebox function, or a specific application traversing the middlebox might require the intervention of more than a single MIDCOM agent for the same application, one for each sub-session of the application.",
      "ja": "In-Path Midcomエージェントは、関連付けられているアプリケーションのメッセージパス内に自然に位置するMidcomエージェントです。H.323、SIP、RTSPなどのバンドルセッションアプリケーションは、セッションとデータセッションを個別に持つ可能性があります。これらのシナリオでは、パス中のMidcomエージェントは、制御パスにいることに気づくエージェントです。ほとんどの場合、ミドルボックスは、制御パスのみでのアプリケーションのために単一のエージェントの支援を必要とする可能性があります。ただし、ミドルボックス関数、またはミドルボックスを通過する特定のアプリケーションでは、同じアプリケーションに1つ以上のMIDCOMエージェントの介入が必要になる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Application Proxies and gateways are a good choice for In-Path MIDCOM agents, as these entities by definition, are in the path of an application between a client and server. In addition to hosting the MIDCOM agent function, these natively in-path application specific entities may also enforce application-specific choices locally, such as dropping messages infected with known viruses, or lacking user authentication. These entities can be interjecting both the control and data sessions. For example, FTP control and Data sessions are interjected by an FTP proxy server.",
      "ja": "これらのエンティティは定義上、クライアントとサーバーの間のアプリケーションのパスにあるため、アプリケーションのプロキシとゲートウェイはパス中のミッドコムエージェントに適しています。MIDCOMエージェント関数のホスティングに加えて、これらのネイティブにパス内のアプリケーション固有のエンティティは、既知のウイルスに感染したメッセージを削除したり、ユーザー認証の不足など、アプリケーション固有の選択をローカルに実施する場合があります。これらのエンティティは、制御セッションとデータセッションの両方を挿入できます。たとえば、FTPコントロールとデータセッションは、FTPプロキシサーバーによって挿入されます。"
    },
    {
      "indent": 3,
      "text": "However, proxies may also be interjecting just the control session and not the data sessions, as is the case with real-time streaming applications, such as SIP and RTSP. Note, applications may not always traverse a proxy and some applications may not have a proxy server available.",
      "ja": "ただし、SIPやRTSPなどのリアルタイムストリーミングアプリケーションの場合のように、プロキシはデータセッションではなく、コントロールセッションのみを挿入している場合があります。注意してください"
    },
    {
      "indent": 3,
      "text": "SIP proxies and H.323 gatekeepers may be used to host MIDCOM agent functions to control middleboxes implementing firewall and NAT functions. The advantage of using in-path entities, as opposed to creating an entirely new agent, is that the in-path entities already possess application intelligence. You will need to merely enable the use of the MIDCOM protocol to be an effective MIDCOM agent. Figure 2 below illustrates a scenario where the in-path MIDCOM agents interface with the middlebox. Let us say, the MIDCOM PDP has pre-configured the in-path proxies as trusted MIDCOM agents on the middlebox and the packet filter implements a 'default-deny' packet filtering policy. Proxies use their application-awareness knowledge to control the firewall function and selectively permit a certain number of voice stream sessions dynamically using MIDCOM protocol.",
      "ja": "SIPプロキシとH.323ゲートキーパーを使用して、Midcomエージェント関数をホストして、ファイアウォールとNAT機能を実装するミドルボックスを制御できます。まったく新しいエージェントを作成するのではなく、インパスエンティティを使用する利点は、パス内のエンティティがすでにアプリケーションインテリジェンスを持っていることです。MIDCOMプロトコルの使用が効果的なMIDCOMエージェントになることを可能にするだけでよいです。以下の図2は、インパスのMidcomエージェントがミドルボックスとインターフェイスするシナリオを示しています。MIDCOM PDPは、ミドルボックスの信頼できるMIDCOMエージェントとしてパス内プロキシを事前に構成し、パケットフィルターが「デフォルトの隣接」パケットフィルタリングポリシーを実装しています。プロキシは、アプリケーションの認識知識を使用してファイアウォール機能を制御し、Midcomプロトコルを使用して一定数の音声ストリームセッションを動的に選択的に許可します。"
    },
    {
      "indent": 3,
      "text": "In the illustration below, the proxies and the MIDCOM PDP are shown inside a private domain. The intent however, is not to imply that they be inside the private boundary alone. The proxies may also reside external to the domain. The only requirement is that there be a trust relationship with the middlebox.",
      "ja": "以下の図では、プロキシとMIDCOM PDPがプライベートドメイン内に示されています。しかし、意図は、それらが私的な境界の中だけにいることを意味することではありません。プロキシは、ドメインの外部にある場合もあります。唯一の要件は、ミドルボックスとの信頼関係があることです。"
    },
    {
      "indent": 5,
      "text": "                     +-----------+\n                     | MIDCOM    |\n                     |  PDP      |~~~~~~~~~~~~~|\n                     +-----------+              \\\n                                                 \\\n              +--------+                          \\\n              | SIP    |___                        \\\n      ________| Proxy  |   \\            Middlebox   \\\n     /        +--------+..  |        +--------------------+\n    |                    :  | MIDCOM |           |        |\n    |  RTSP +---------+  :..|........| MIDCOM    | POLICY |\nSIP |   ____|  RTSP   |.....|........| PROTOCOL  | INTER- |\n    |  /    |  Proxy  |___  |        | INTERFACE | FACE   |\n    | |     +---------+   \\  \\       |--------------------|\n    | |                    \\  \\______|                    |__SIP\n    | |                     \\________|                    |__RTSP\n    | |                           ---|     FIREWALL       |--->--\n   +-----------+                 /---|                    |---<--\n  +-----------+|  Data streams  //   +--------------------+\n +-----------+||---------->----//            |\n |end-hosts  ||-----------<-----             .\n +-----------+   (RTP, RTSP data, etc.)      |\n                                             .  Outside the\n        Within a private domain              |  private domain",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Legend: ---- Application data path datagrams\n        ____ Application control path datagrams\n        .... Middlebox Communication Protocol (MIDCOM)\n        ~~~~ MIDCOM PDP Interface\n          |\n          .  private domain Boundary\n          |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Figure 2: In-Path MIDCOM Agents for middlebox Communication",
      "ja": "図2：ミドルボックス通信のためのIn-Path Midcomエージェント"
    },
    {
      "indent": 0,
      "text": "5.1. End-hosts as In-Path MIDCOM agents",
      "section_title": true,
      "ja": "5.1. In-Path Midcomエージェントとしてのエンドホスト"
    },
    {
      "indent": 3,
      "text": "End-hosts are another variation of In-Path MIDCOM agents. Unlike Proxies, End-hosts are a direct party to the application and possess all the end-to-end application intelligence there is to it. End-hosts presumably terminate both the control and data paths of an application. Unlike other entities hosting MIDCOM agents, end-host is able to process secure datagrams. However, the problem would be one of manageability - upgrading all the end-hosts running a specific application.",
      "ja": "エンドホストは、In-Path Midcomエージェントのもう1つのバリエーションです。プロキシとは異なり、エンドホストはアプリケーションの直接のパーティであり、それにあるすべてのエンドツーエンドアプリケーションインテリジェンスを所有しています。エンドホストは、おそらくアプリケーションの制御パスとデータパスの両方を終了します。Midcomエージェントをホストする他のエンティティとは異なり、End-Hostは安全なデータグラムを処理できます。ただし、問題は管理可能性の1つです。特定のアプリケーションを実行するすべてのエンドホストをアップグレードします。"
    },
    {
      "indent": 0,
      "text": "6.0. MIDCOM PDP functions",
      "section_title": true,
      "ja": "6.0. Midcom PDP関数"
    },
    {
      "indent": 3,
      "text": "The functional decomposition of the MIDCOM architecture assumes the existence of a logical entity, known as MIDCOM PDP, responsible for performing authorization and related provisioning services for the middlebox as depicted in figure 1. The MIDCOM PDP is a logical entity which may reside physically on a middlebox or on a node external to the middlebox. The protocol employed for communication between the middlebox and the MIDCOM PDP is unrelated to the MIDCOM protocol.",
      "ja": "Midcomアーキテクチャの機能的分解は、図1に示すように、Midcom PDPとして知られるMidcom PDPとして知られる論理エンティティの存在を想定しています。ミドルボックスまたはミドルボックスの外部のノード上。ミドルボックスとMIDCOM PDP間の通信に採用されているプロトコルは、MIDCOMプロトコルとは無関係です。"
    },
    {
      "indent": 3,
      "text": "Agents are registered with a MIDCOM PDP for authorization to invoke services of the middlebox. The MIDCOM PDP maintains a list of agents that are authorized to connect to each of the middleboxes the MIDCOM PDP supports. In the context of the MIDCOM Framework, the MIDCOM PDP does not assist a middlebox in the implementation of the services it provides.",
      "ja": "エージェントは、ミドルボックスのサービスを呼び出す許可のために、MIDCOM PDPに登録されています。MIDCOM PDPは、MIDCOM PDPがサポートする各ミドルボックスに接続することが許可されているエージェントのリストを維持しています。MIDCOMフレームワークのコンテキストでは、MIDCOM PDPは、それが提供するサービスの実装においてミドルボックスを支援しません。"
    },
    {
      "indent": 3,
      "text": "The MIDCOM PDP acts in an advisory capacity to a middlebox, to authorize or terminate authorization for an agent attempting connectivity to the middlebox. The primary objective of a MIDCOM PDP is to communicate agent authorization information, so as to ensure that the security and integrity of a middlebox is not jeopardized. Specifically, the MIDCOM PDP should associate a trust level with each agent attempting to connect to a middlebox and provide a security profile. The MIDCOM PDP should be capable of addressing cases when end-hosts are agents to the middlebox.",
      "ja": "MIDCOM PDPは、ミドルボックスへの接続を試みるエージェントの承認を許可または終了するために、ミドルボックスに対するアドバイザリー容量で動作します。MIDCOM PDPの主な目的は、エージェント認証情報を伝え、ミドルボックスのセキュリティと整合性が危険にさらされないようにすることです。具体的には、MIDCOM PDPは、信頼レベルを各エージェントに関連付け、ミドルボックスに接続してセキュリティプロファイルを提供する必要があります。MIDCOM PDPは、エンドホストがミドルボックスのエージェントである場合、ケースに対処できる必要があります。"
    },
    {
      "indent": 0,
      "text": "6.1. Authentication, Integrity and Confidentiality",
      "section_title": true,
      "ja": "6.1. 認証、完全性、機密性"
    },
    {
      "indent": 3,
      "text": "Host authenticity and individual message security are two distinct types of security considerations. Host authentication refers to credentials required of a MIDCOM agent to authenticate itself to the middlebox and vice versa. When authentication fails, the middlebox must not process signaling requests received from the agent that failed authentication. Two-way authentication should be supported. In some cases, the 2-way authentication may be tightly linked to the establishment of keys to protect subsequent traffic. Two-way authentication is often required to prevent various active attacks on the MIDCOM protocol and secure establishment of keying material.",
      "ja": "ホストの信頼性と個々のメッセージセキュリティは、2つの異なるタイプのセキュリティに関する考慮事項です。ホスト認証とは、MIDCOMエージェントに必要な資格情報を指します。認証が失敗した場合、MiddleBoxは、認証に失敗したエージェントから受信したシグナリング要求を処理してはなりません。双方向認証をサポートする必要があります。場合によっては、2ウェイ認証は、後続のトラフィックを保護するためのキーの確立に密接にリンクされる場合があります。多くの場合、MIDCOMプロトコルに対するさまざまな積極的な攻撃を防ぎ、キーイング材料の確立を確保するために、双方向認証が必要です。"
    },
    {
      "indent": 3,
      "text": "Security services such as authentication, data integrity, confidentiality and replay protection may be adapted to secure MIDCOM messages in an untrusted domain. Message authentication is the same as data origin authentication and is an affirmation that the sender of the message is who it claims to be. Data integrity refers to the ability to ensure that a message has not been accidentally, maliciously or otherwise altered or destroyed. Confidentiality is the encryption of a message with a key, so that only those in possession of the key can decipher the message content. Lastly, replay protection is a form of sequence integrity, so when an intruder plays back a previously recorded sequence of messages, the receiver of the replay messages will simply drop the replay messages into bit-bucket. Certain applications of the MIDCOM protocol might require support for non-repudiation as an option of the data integrity service. Typically, support for non-repudiation is required for billing, service level agreements, payment orders, and receipts for delivery of service.",
      "ja": "認証、データの整合性、機密性、リプレイ保護などのセキュリティサービスは、信頼されていないドメインでMIDCOMメッセージを保護するために適応する場合があります。メッセージ認証は、Data Origin Authenticationと同じであり、メッセージの送信者が誰であるかを主張することを確認しています。データの整合性とは、メッセージが誤って、悪意を持って、またはその他の方法で変更または破壊されていないことを確認する能力を指します。機密性は、キーを使用したメッセージの暗号化であるため、キーを所有している人だけがメッセージコンテンツを解読できます。最後に、リプレイ保護はシーケンスの整合性の一形態であるため、侵入者が以前に記録された一連のメッセージを再生すると、リプレイメッセージの受信者がリプレイメッセージをビットバケットにドロップするだけです。MIDCOMプロトコルの特定のアプリケーションでは、データ整合性サービスのオプションとして非繰り返しのサポートが必要になる場合があります。通常、請求、サービスレベルの契約、支払い注文、およびサービスの提供のための領収書には、非控除のサポートが必要です。"
    },
    {
      "indent": 3,
      "text": "IPsec AH ([IPSEC-AH]) offers data-origin authentication, data integrity and protection from message replay. IPsec ESP ([IPSEC-ESP]) provides data-origin authentication to a lesser degree (same as IPsec AH if the MIDCOM transport protocol turns out to be TCP or UDP), message confidentiality, data integrity and protection from replay. Besides the IPsec based protocols, there are other security options as well. TLS based transport layer security is one option. There are also many application-layer security mechanisms available. Simple Source-address based security is a minimal form of security and should be relied on only in the most trusted environments, where those hosts will not be spoofed.",
      "ja": "IPSEC AH（[IPSEC-AH]）は、データオー定性認証、データの整合性、およびメッセージリプレイからの保護を提供します。IPSEC ESP（[IPSEC-ESP]）は、Data-Origin認証をより低い程度まで提供します（MIDCOMトランスポートプロトコルがTCPまたはUDPであることが判明した場合、IPSEC AHと同じ）、メッセージの機密性、データの整合性、リプレイからの保護を提供します。IPSECベースのプロトコルに加えて、他のセキュリティオプションもあります。TLSベースの輸送層セキュリティは1つのオプションです。また、多くのアプリケーション層セキュリティメカニズムが利用可能です。Simple Source-Addressベースのセキュリティは、最小限のセキュリティ形式であり、最も信頼できる環境でのみ依存する必要があります。"
    },
    {
      "indent": 3,
      "text": "The MIDCOM message security shall use existing standards, whenever the existing standards satisfy the requirements. Security shall be specified to minimize the impact on sessions that do not use the security option. Security should be designed to avoid introducing and to minimize the impact of denial of service attacks. Some security mechanisms and algorithms require substantial processing or storage, in which case the security protocols should protect themselves as well as against possible flooding attacks that overwhelm the endpoint (i.e., the middlebox or the agent) with such processing. For connection oriented protocols (such as TCP) using security services, the security protocol should detect premature closure or truncation attacks.",
      "ja": "MIDCOMメッセージセキュリティは、既存の標準が要件を満たすたびに、既存の標準を使用するものとします。セキュリティは、セキュリティオプションを使用しないセッションへの影響を最小限に抑えるために指定されなければなりません。セキュリティは、導入を避け、サービス拒否攻撃の影響を最小限に抑えるように設計する必要があります。一部のセキュリティメカニズムとアルゴリズムには、実質的な処理またはストレージが必要です。その場合、セキュリティプロトコルは、そのような処理でエンドポイント（つまり、ミドルボックスまたはエージェント）を圧倒する可能性のある洪水攻撃から自らを保護する必要があります。セキュリティサービスを使用した接続指向プロトコル（TCPなど）の場合、セキュリティプロトコルは早期閉鎖または切り捨て攻撃を検出する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.2. Registration and deregistration of MIDCOM agents",
      "section_title": true,
      "ja": "6.2. MIDCOMエージェントの登録と廃止"
    },
    {
      "indent": 3,
      "text": "Prior to allowing MIDCOM agents to invoke services of the middlebox, a registration process must take place. Registration is a different process than establishing a MIDCOM session. The former requires provisioning agent profile information with the middlebox or a MIDCOM PDP. Agent registration is often a manual operation performed by an operator rather than the agent itself. Setting up MIDCOM session refers to establishing a MIDCOM transport session and exchanging security credentials between an agent and a middlebox. The transport session uses the registered information for session establishment.",
      "ja": "Midcomエージェントがミドルボックスのサービスを呼び出すことを許可する前に、登録プロセスを実行する必要があります。登録は、MIDCOMセッションを確立するのとは異なるプロセスです。前者は、ミドルボックスまたはMIDCOM PDPを使用したプロビジョニングエージェントプロファイル情報を必要とします。エージェント登録は、多くの場合、エージェント自体ではなくオペレーターが実行する手動操作です。Midcomセッションのセットアップとは、Midcomトランスポートセッションを確立し、エージェントとミドルボックスの間のセキュリティ資格情報を交換することです。トランスポートセッションでは、セッション設立に登録された情報を使用しています。"
    },
    {
      "indent": 3,
      "text": "Profile of a MIDCOM agent includes agent authorization policy (i.e., session tuples for which the agent is authorized to act as ALG), agent-hosting-entity (e.g., Proxy, Gateway or end-host which hosts the agent), agent accessibility profile (including any host level authentication information) and security profile (i.e., security requirements for messages exchanged between the middlebox and the agent).",
      "ja": "MIDCOMエージェントのプロファイルには、エージェント認証ポリシー（つまり、エージェントがALGとして機能することを許可されているセッションタプル）、エージェントホスティングエンティティ（エージェントをホストするプロキシ、ゲートウェイ、エンドホストなど）、エージェントアクセシビリティプロファイル（ホストレベルの認証情報を含む）およびセキュリティプロファイル（つまり、ミドルボックスとエージェントの間で交換されるメッセージのセキュリティ要件）。"
    },
    {
      "indent": 3,
      "text": "MIDCOM agent profile may be pre-configured on a middlebox. Subsequent to that, the agent may choose to initiate a MIDCOM session prior to any data traffic. For example, MIDCOM agent authorization policy for a middlebox service may be preconfigured by specifying the agent in conjunction with a filter. In the case of a firewall, for example, the ACL tuple may be altered to reflect the optional Agent presence. The revised ACL may look something like the following.",
      "ja": "Midcomエージェントプロファイルは、ミドルボックスで事前に構成されている場合があります。それに続いて、エージェントは、データトラフィックの前にMIDCOMセッションを開始することを選択できます。たとえば、ミドルボックスサービスのMidcomエージェント認証ポリシーは、フィルターと組み合わせてエージェントを指定することにより事前に設定される場合があります。たとえば、ファイアウォールの場合、ACLタプルはオプションのエージェントの存在を反映するように変更される場合があります。改訂されたACLは、次のように見えるかもしれません。"
    },
    {
      "indent": 3,
      "text": "(<Session-Direction>, <Source-Address>, <Destination-Address>, <IP-\nProtocol>, <Source-Port>, <Destination-Port>, <Agent>)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The reader should note that this is an illustrative example and not necessarily the actual definition of an ACL tuple. The formal description of the ACL is yet to be devised. Agent accessibility information should also be provisioned. For a MIDCOM agent, accessibility information includes the IP address, trust level, host authentication parameters and message authentication parameters. Once a session is established between a middlebox and a MIDCOM agent, that session should be usable with multiple instances of the application(s), as appropriate. Note, all of this could be captured in an agent profile for ease of management.",
      "ja": "読者は、これが例示的な例であり、必ずしもACLタプルの実際の定義ではないことに注意する必要があります。ACLの正式な説明はまだ考案されていません。エージェントアクセシビリティ情報もプロビジョニングする必要があります。MIDCOMエージェントの場合、アクセシビリティ情報には、IPアドレス、信頼レベル、ホスト認証パラメーター、メッセージ認証パラメーターが含まれます。ミドルボックスとMIDCOMエージェントの間にセッションが確立されると、そのセッションは、必要に応じて、アプリケーションの複数のインスタンスで使用できるようにする必要があります。注意してください。これらはすべて、管理を容易にするためにエージェントプロファイルでキャプチャできます。"
    },
    {
      "indent": 3,
      "text": "The technique described above is necessary for the pre-registration of MIDCOM agents with the middlebox. The middlebox provisioning may remain unchanged, if the middlebox learns of the registered agents through a MIDCOM PDP. In either case, the MIDCOM agent should initiate the session prior to the start of the application. If the agent session is delayed until after the application has started, the agent might be unable to process the control stream to permit the data sessions. When a middlebox notices an incoming MIDCOM session, and the middlebox has no prior profile of the MIDCOM agent, the middlebox will consult its MIDCOM PDP for authenticity, authorization, and trust guidelines for the session.",
      "ja": "上記の手法は、Midcomエージェントのミドルボックスを事前に登録するために必要です。Midcom PDPを介して登録されたエージェントをミドルボックスが学習した場合、ミドルボックスプロビジョニングは変わらない場合があります。どちらの場合でも、MIDCOMエージェントは、アプリケーションの開始前にセッションを開始する必要があります。アプリケーションが開始されるまでエージェントセッションが遅延した場合、エージェントはデータセッションを許可するために制御ストリームを処理できない可能性があります。ミドルボックスが着信Midcomセッションに気付いた場合、Middcomエージェントのミドルボックスに事前のプロファイルがない場合、ミドルボックスはセッションの信頼性、承認、および信頼ガイドラインについてMIDCOM PDPを参照します。"
    },
    {
      "indent": 0,
      "text": "7.0. MIDCOM Framework Illustration using an In-Path agent",
      "section_title": true,
      "ja": "7.0. インパスエージェントを使用したMidcomフレームワークのイラスト"
    },
    {
      "indent": 3,
      "text": "In figure 3 below, we consider SIP applications (Refer [SIP]) to illustrate the operation of the MIDCOM protocol. Specifically, the application assumes that a caller, external to a private domain, initiates the call. The middlebox is assumed to be located at the edge of the private domain. A SIP phone (SIP User Agent Client/Server) inside the private domain is capable of receiving calls from external SIP phones. The caller uses a SIP Proxy, node located external to the private domain, as its outbound proxy. No interior proxy is assumed for the callee. Lastly, the external SIP proxy node is designated to host the MIDCOM agent function.",
      "ja": "以下の図3では、SIPアプリケーション（[SIP]を参照）を検討して、MIDCOMプロトコルの動作を説明します。具体的には、アプリケーションは、プライベートドメインの外部の発信者が呼び出しを開始することを前提としています。ミドルボックスは、プライベートドメインの端にあると想定されています。プライベートドメイン内のSIP電話（SIPユーザーエージェントクライアント/サーバー）は、外部SIP電話から電話を受信できます。発信者は、SIPプロキシを使用して、プライベートドメインの外部に位置するノードをそのアウトバウンドプロキシとして使用します。Calleeについては、インテリアプロキシは想定されていません。最後に、外部SIPプロキシノードは、MIDCOMエージェント関数をホストするように指定されています。"
    },
    {
      "indent": 3,
      "text": "Arrows 1 and 8 in the figure below refer to a SIP call setup exchange between the external SIP phone and the SIP proxy. Arrows 4 and 5 refer to a SIP call setup exchange between the SIP proxy and the interior SIP phone, and are assumed to be traversing the middlebox. Arrows 2, 3, 6 and 7 below, between the SIP proxy and the middlebox, refer to MIDCOM communication. Na and Nb represent RTP/RTCP media traffic (Refer [RTP]) path in the external network. Nc and Nd represent media traffic inside the private domain.",
      "ja": "下の図の矢印1と8は、外部SIP電話とSIPプロキシの間のSIPコールセットアップ交換を参照してください。矢印4と5は、SIPプロキシとインテリアSIP電話の間のSIPコールセットアップ交換を指し、ミドルボックスを横断していると想定されています。SIPプロキシとミドルボックスの間の矢印2、3、6、7は、Midcom通信を参照してください。NAおよびNBは、外部ネットワークのRTP/RTCPメディアトラフィック（[RTP]を参照）パスを表します。NCとNDは、プライベートドメイン内のメディアトラフィックを表します。"
    },
    {
      "indent": 8,
      "text": "                       _________\n                  --->|   SIP   |<-----\\\n                 /    |  Proxy  |       \\\n                |     |_________|       |\n               1|       |^    ^|       4|\n                |       ||    ||        |\n                |8     2||3  7||6       |5\n______________  |       ||    ||        |    _____________\n|            |<-/      _v|____|v___      \\->|            |\n| External   |    Na   |           |   Nc   | SIP Phone  |\n| SIP phone  |>------->| Middlebox |>------>| within     |\n|            |<-------<|___________|<------<| Pvt. domain|\n|____________|    Nb                   Nd   |____________|",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Figure 3: MIDCOM framework illustration with In-Path SIP Proxy",
      "ja": "図3：Path In-Path SIPプロキシを使用したMidcomフレームワークイラスト"
    },
    {
      "indent": 3,
      "text": "As for the SIP application, we make the assumption that the middlebox is pre-configured to accept SIP calls into the private SIP phone. Specifically, this would imply that the middlebox implementing firewall service is pre-configured to permit SIP calls (destination TCP or UDP port number set to 5060) into the private phone. Likewise, middlebox implementing NAPT service would have been pre-configured to provide a port binding, to permit incoming SIP calls to be redirected to the specific private SIP phone. I.e., the INVITE from the external caller is not made to the private IP address, but to the NAPT external address.",
      "ja": "SIPアプリケーションについては、MiddleBoxがプライベートSIP電話へのSIPコールを受け入れるように事前に構成されていると仮定します。具体的には、これは、ミドルボックスの実装ファイアウォールサービスが、SIPコール（宛先TCPまたはUDPポート番号が5060に設定されている）をプライベート電話に許可するために事前に構成されていることを意味します。同様に、Middlebox実装のNAPTサービスは、ポートバインディングを提供するために事前に構成されており、着信SIPコールを特定のプライベートSIP電話にリダイレクトすることを許可していました。つまり、外部発信者からの招待状は、プライベートIPアドレスではなく、NAPT外部アドレスに作成されます。"
    },
    {
      "indent": 3,
      "text": "The objective of the MIDCOM agent in the following illustration is to merely permit the RTP/RTCP media stream (Refer [RTP]) through the middlebox, when using the MIDCOM protocol architecture outlined in the document. A SIP session typically establishes two RTP/RTCP media streams - one from the callee to the caller and another from the caller to the callee. These media sessions are UDP based and will use dynamic ports. The dynamic ports used for the media stream are specified in the SDP section (Refer [SDP]) of the SIP payload message. The MIDCOM agent will parse the SDP section and use the MIDCOM protocol to (a) open pinholes (i.e., permit RTP/RTCP session tuples) in a middlebox implementing firewall service, or (b) create PORT bindings and appropriately modify the SDP content to permit the RTP/RTCP streams through a middlebox implementing NAT service. The MIDCOM protocol should be sufficiently rich and expressive to support the operations described under the timelines. The examples do not show the timers maintained by the agent to keep the middlebox policy rule(s) from timing out.",
      "ja": "次の図でのMIDCOMエージェントの目的は、ドキュメントで概説されているMIDCOMプロトコルアーキテクチャを使用する場合、MiddleBoxを介してRTP/RTCPメディアストリーム（[RTP]を参照）を単に許可することです。SIPセッションでは、通常、2つのRTP/RTCPメディアストリームが確立されます。1つはカリーから発信者、もう1つは発信者からカリーまでです。これらのメディアセッションはUDPベースであり、動的ポートを使用します。メディアストリームに使用される動的ポートは、SIPペイロードメッセージのSDPセクション（[SDP]を参照）（[SDP]を参照））に指定されています。MIDCOMエージェントはSDPセクションを解析し、Midcomプロトコルを使用して、（a）ファイアウォールサービスを実装する中間ボックスのオープンピンホール（つまり、RTP/RTCPセッションタプルを許可）、または（b）ポートバインディングを作成し、SDPコンテンツを適切に変更します。NATサービスを実装するMiddleboxを介してRTP/RTCPストリームを許可します。MIDCOMプロトコルは、タイムラインの下で説明されている操作をサポートするのに十分な豊富で表現力豊かでなければなりません。例では、エージェントが維持しているタイマーが、ミドルボックスのポリシールールがタイミングを出さないようにしていることを示していません。"
    },
    {
      "indent": 3,
      "text": "MIDCOM agent Registration and connectivity between the MIDCOM agent and the middlebox are not shown in the interest of restricting the focus of the MIDCOM transactions to enabling the middlebox to let the media stream through. MIDCOM PDP is also not shown in the diagram below or on the timelines for the same reason.",
      "ja": "MIDCOMエージェントの登録とMIDCOMエージェントとミドルボックス間の接続は、MIDCOMトランザクションの焦点を制限して、ミドルボックスがメディアをストリーミングできるようにするためには示されていません。Midcom PDPは、同じ理由で、下またはタイムラインの図にも示されていません。"
    },
    {
      "indent": 3,
      "text": "The following subsections illustrate a typical timeline sequence of operations that transpire with the various elements involved in a SIP telephony application path. Each subsection is devoted to a specific instantiation of a middlebox service - NAPT (refer [NAT-TERM], [NAT-TRAD]), firewall and a combination of both NAPT and firewall are considered.",
      "ja": "以下のサブセクションは、SIPテレフォニーアプリケーションパスに伴うさまざまな要素と発生する典型的なタイムラインの操作シーケンスを示しています。各サブセクションは、ミドルボックスサービスの特定のインスタンス化-NAPT（[NAT-Term]、[NAT-Trad]を参照）、Firewall、およびNaptとFirewallの両方の組み合わせに専念しています。"
    },
    {
      "indent": 0,
      "text": "7.1. Timeline flow - Middlebox implementing firewall service",
      "section_title": true,
      "ja": "7.1. タイムラインフロー - ミドルボックスのファイアウォールサービスの実装"
    },
    {
      "indent": 3,
      "text": "In the following example, we will assume a middlebox implementing a firewall service. We further assume that the middlebox is pre-configured to permit SIP calls (destination TCP or UDP port number set to 5060) into the private phone. The following timeline illustrates the operations performed by the MIDCOM agent, to permit RTP/RTCP media stream through the middlebox.",
      "ja": "次の例では、ミドルボックスがファイアウォールサービスを実装すると想定します。さらに、ミドルボックスは、SIPコール（宛先TCPまたはUDPポート番号が5060に設定されている）をプライベート電話に許可するために事前に構成されていると仮定します。次のタイムラインは、MIDCOMエージェントが実行した操作を示しており、Midsbol/RTCPメディアストリームをミドルボックスを介して許可します。"
    },
    {
      "indent": 3,
      "text": "The INVITE from the caller (external) is assumed to include the SDP payload. You will note that the MIDCOM agent requests the middlebox to permit the Private-to-external RTP/RTCP flows before the INVITE is relayed to the callee. This is because, in SIP, the calling party must be ready to receive the media when it sends the INVITE with a session description. If the called party (private phone) assumes this and sends \"early media\" before sending the 200 OK response, the firewall will have blocked these packets without this initial MIDCOM signaling from the agent.",
      "ja": "発信者（外部）からの招待には、SDPペイロードが含まれると想定されています。Midcomエージェントは、招待がCalleeに中継される前に、プライベートから外部のRTP/RTCPフローを許可するようにミドルボックスに要求することに注意してください。これは、SIPでは、セッションの説明で招待を送信するときに、メディアを受信する準備ができている必要があるためです。呼び出されたパーティー（プライベート電話）がこれを想定し、200 OK応答を送信する前に「初期メディア」を送信する場合、ファイアウォールはエージェントからのこの最初のMidcomシグナリングなしでこれらのパケットをブロックします。"
    },
    {
      "indent": 6,
      "text": "SIP Phone      SIP Proxy              Middlebox      SIP Phone\n(External)     (MIDCOM agent)         (FIREWALL      (private)\n|                 |                   Service)          |\n|                 |                      |              |\n|----INVITE------>|                      |              |\n|                 |                      |              |\n|<---100Trying----|                      |              |\n|                 |                      |              |\n|              Identify end-2-end        |              |\n|              parameters (from Caller's |              |\n|              SDP) for the pri-to-Ext   |              |\n|              RTP & RTCP sessions.      |              |\n|              (RTP1, RTCP1)             |              |\n|                 |                      |              |\n|                 |+Permit RTP1, RTCP1 +>|              |\n|                 |<+RTP1, RTCP1 OKed++++|              |\n|                 |                      |              |\n|                 |--------INVITE---------------------->|\n|                 |                      |              |\n|                 |<-----180 Ringing--------------------|\n|<--180Ringing----|                      |              |\n|                 |<-------200 OK-----------------------|\n|                 |                      |              |\n|              Identify end-2-end        |              |\n|              parameters (from callee's |              |\n|              SDP) for the Ext-to-Pri   |              |\n|              RTP and RTCP sessions.    |              |\n|              (RTP2, RTCP2)             |              |\n|                 |                      |              |\n|                 |+Permit RTP2, RTCP2 +>|              |\n|                 |<+RTP2, RTCP2 OKed++++|              |\n|                 |                      |              |\n|<---200 OK ------|                      |              |\n|-------ACK------>|                      |              |\n|                 |-----------ACK---------------------->|\n|                 |                      |              |\n|<===================RTP/RTCP==========================>|",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "|                 |                      |              |\n|-------BYE------>|                      |              |\n|                 |--------------------------BYE------->|\n|                 |                      |              |\n|                 |<----------200 OK--------------------|\n|                 |                      |              |\n|                 |++Cancel permits to   |              |\n|                 |  RTP1, RTCP1, RTP2,  |              |\n|                 |  and RTCP2 +++++++++>|              |\n|                 |<+RTP1, RTP2, RTCP1 & |              |\n|                 |  RTCP2 cancelled ++++|              |\n|                 |                      |              |\n|<---200 OK-------|                      |              |\n|                 |                      |              |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Legend:      ++++    MIDCOM control traffic\n             ----    SIP control traffic\n             ====    RTP/RTCP media traffic",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.2. Timeline flow - Middlebox implementing NAPT service",
      "section_title": true,
      "ja": "7.2. タイムラインフロー-NAPTサービスの実装ミドルボックス"
    },
    {
      "indent": 3,
      "text": "In the following example, we will assume a middlebox implementing NAPT service. We make the assumption that the middlebox is pre-configured to redirect SIP calls to the specific private SIP phone application. I.e., the INVITE from the external caller is not made to the private IP address, but to the NAPT external address. Let us say, the external phone's IP address is Ea, NAPT middlebox external Address is Ma, and the internal SIP phone's private address is Pa. SIP calls to the private SIP phone will arrive as TCP/UDP sessions, with the destination address and port set to Ma and 5060 respectively. The middlebox will redirect these datagrams to the internal SIP phone. The following timeline will illustrate the operations necessary to be performed by the MIDCOM agent to permit the RTP/RTCP media stream through the middlebox.",
      "ja": "次の例では、NAPTサービスを実装するMiddleBoxが想定します。Middleboxは、特定のプライベートSIP電話アプリケーションにSIPコールをリダイレクトするために事前に構成されていると仮定します。つまり、外部発信者からの招待状は、プライベートIPアドレスではなく、NAPT外部アドレスに作成されます。たとえば、外部電話のIPアドレスはEA、NAPTミドルボックスの外部アドレスはMA、内部SIP電話のプライベートアドレスはPAです。プライベートSIP電話へのSIPコールはTCP/UDPセッションとして届きます。それぞれMAと5060に設定します。ミドルボックスは、これらのデータグラムを内部SIP電話にリダイレクトします。次のタイムラインでは、MIDCOMエージェントが実行するために必要な操作を示して、Midscom/RTCPメディアストリームをミドルボックスを介して許可します。"
    },
    {
      "indent": 3,
      "text": "As with the previous example (section 7.1), the INVITE from the caller (external) is assumed to include the SDP payload. You will note that the MIDCOM agent requests the middlebox to create NAT session descriptors for the private-to-external RTP/RTCP flows before the INVITE is relayed to the private SIP phone (for the same reasons as described in section 7.1). If the called party (private phone) sends \"early media\" before sending the 200 OK response, the NAPT middlebox will have blocked these packets without the initial MIDCOM signaling from the agent. Also, note that after the 200 OK is received by the proxy from the private phone, the agent requests the middlebox to allocate NAT session descriptors for the external-to-private RTP2 and RTCP2 flows, such that the ports assigned on the Ma for RTP2 and RTCP2 are contiguous. The RTCP stream does not happen with a non-contiguous port. Lastly, you will note that even though each media stream (RTP1, RTCP1, RTP2 and RTCP2) is independent, they are all tied to the single SIP control session, while their NAT session descriptors were being created. Finally, when the agent issues a terminate session bundle command for the SIP session, the middlebox is assumed to delete all associated media stream sessions automagically.",
      "ja": "前の例（セクション7.1）と同様に、発信者（外部）からの招待状には、SDPペイロードが含まれると想定されています。MIDCOMエージェントは、招待がプライベートSIP電話に中継される前に（セクション7.1で説明されている理由と同じ理由で）、MidcomエージェントがマイルドボックスにNATセッション記述子を作成するように要求していることに注意してください。呼び出されたパーティー（プライベート電話）が200 OK応答を送信する前に「初期メディア」を送信する場合、NAPTミドルボックスは、エージェントからの最初のMIDCOMシグナリングなしでこれらのパケットをブロックします。また、200 OKがプライベート電話からプロキシによって受信された後、エージェントはミドルボックスに外部からプライベートのRTP2およびRTCP2フローのNATセッション記述子を割り当てるように要求し、RTP2にMAに割り当てられたポートがRTCP2は隣接しています。RTCPストリームは、依存しないポートでは発生しません。最後に、各メディアストリーム（RTP1、RTCP1、RTP2、およびRTCP2）は独立しているにもかかわらず、すべてがシングルSIPコントロールセッションに結び付けられていますが、NATセッションの記述子が作成されていることに注意してください。最後に、エージェントがSIPセッションの終了セッションバンドルコマンドを発行すると、MiddleBoxは、関連するすべてのメディアストリームセッションを自動的に削除すると想定されます。"
    },
    {
      "indent": 6,
      "text": "SIP Phone      SIP Proxy              Middlebox     SIP Phone\n(External)     (MIDCOM agent)         (NAPT         (Private)\nIP Addr:Ea        |                   Service)      IP addr:Pa\n|                 |                   IP addr:Ma        |\n|                 |                      |              |\n|----INVITE------>|                      |              |\n|                 |                      |              |\n|<---100Trying----|                      |              |\n|                 |                      |              |\n|                 |++ Query Port-BIND    |              |\n|                 |   for (Ma, 5060) +++>|              |\n|                 |<+ Port-BIND reply    |              |\n|                 |   for (Ma, 5060) ++++|              |\n|                 |                      |              |\n|                 |++ Query NAT Session  |              |\n|                 |   Descriptor for     |              |\n|                 |   Ea-to-Pa SIP flow+>|              |\n|                 |<+ Ea-to-Pa SIP flow  |              |\n|                 |   Session Descriptor+|              |\n|                 |                      |              |\n|              Determine the Internal    |              |\n|              IP address (Pa)           |              |\n|              of the callee.            |              |\n|                 |                      |              |\n|              Identify UDP port numbers |              |\n|              on Ea (Eport1, Eport1+1)  |              |\n|              for pri-to-ext RTP & RTCP |              |\n|              sessions (RTP1, RTCP1)    |              |\n|                 |                      |              |\n|                 |++Create NAT Session  |              |\n|                 |  descriptors for     |              |\n|                 |  RTP1, RTCP1; Set    |              |\n|                 |  parent session to   |              |\n|                 |  SIP-ctrl session ++>|              |\n|                 |<+RTP1, RTCP1 session |              |\n|                 |  descriptors created+|              |\n|                 |                      |              |\n|                 |                      |..redirected..|\n|                 |--------INVITE--------|------------->|\n|                 |                      |              |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "|                 |<-----180Ringing---------------------|\n|                 |                      |              |\n|<--180Ringing----|                      |              |\n|                 |<-------200 OK-----------------------|\n|                 |                      |              |\n|              Identify UDP port numbers |              |\n|              on Pa (Pport2, Pport2+1)  |              |\n|              for ext-to-pri RTP & RTCP |              |\n|              sessions (RTP2, RTCP2)    |              |\n|                 |                      |              |\n|                 |++Create consecutive  |              |\n|                 |  port BINDs on Ma    |              |\n|                 |  for (Pa, Pport2),   |              |\n|                 |  (Pa, Pport2+1) ++++>|              |\n|                 |<+Port BINDs created++|              |\n|                 |                      |              |\n|                 |++Create NAT Session  |              |\n|                 |  descriptors for     |              |\n|                 |  RTP2, RTCP2; Set    |              |\n|                 |  parent session to   |              |\n|                 |  SIP-ctrl session ++>|              |\n|                 |<+RTP2, RTCP2 session |              |\n|                 |  descriptors created+|              |\n|                 |                      |              |\n|              Modify the SDP            |              |\n|              parameters in \"200 OK\"    |              |\n|              with NAPT PORT-BIND       |              |\n|              for the RTP2 port on Ma.  |              |\n|                 |                      |              |\n|<---200 OK ------|                      |              |\n|                 |                      |              |\n|-------ACK------>|                      |              |\n|                 |                      |              |\n|              Modify IP addresses       |              |\n|              appropriately in the SIP  |              |\n|              header (e.g., To, from,   |              |\n|              Via, contact fields)      |              |\n|                 |                      |..redirected..|\n|                 |-----------ACK--------|------------->|\n|                 |                      |              |\n|                 |                      |              |\n|<===================RTP/RTCP============|=============>|\n|                 |                      |              |\n|-------BYE------>|                      |              |\n|                 |                      |              |\n|                 |----------------------|-----BYE----->|\n|                 |                      |              |\n|                 |<----------200 OK--------------------|",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "|                 |                      |              |\n|                 |+++Terminate the SIP  |              |\n|                 |   Session bundle +++>|              |\n|                 |<++SIP Session bundle |              |\n|                 |   terminated ++++++++|              |\n|                 |                      |              |\n|<---200 OK-------|                      |              |\n|                 |                      |              |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Legend:      ++++    MIDCOM control traffic\n             ----    SIP control traffic\n             ====    RTP/RTCP media traffic",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.3. Timeline flow - Middlebox implementing NAPT and firewall",
      "section_title": true,
      "ja": "7.3. タイムラインフロー-NAPTおよびファイアウォールの実装ミドルボックス"
    },
    {
      "indent": 3,
      "text": "In the following example, we will assume a middlebox implementing a combination of a firewall and a stateful NAPT service. We make the assumption that the NAPT function is configured to translate the IP and TCP headers of the initial SIP session into the private SIP phone, and the firewall function is configured to permit the initial SIP session.",
      "ja": "次の例では、ミドルボックスがファイアウォールとステートフルなNAPTサービスの組み合わせを実装すると仮定します。NAPT関数は、初期SIPセッションのIPおよびTCPヘッダーをプライベートSIP電話に変換するように構成されており、ファイアウォール機能が最初のSIPセッションを許可するように構成されていると仮定します。"
    },
    {
      "indent": 3,
      "text": "In the following time line, it may be noted that the firewall description is based on packet fields on the wire (ex: as seen on the external interface of the middlebox). In order to ensure correct behavior of the individual services, you will notice that NAT specific MIDCOM operations precede firewall specific operations on the MIDCOM agent. This is noticeable in the time line below when the MIDCOM agent processes the \"200 OK\" from the private SIP phone. The MIDCOM agent initially requests the NAT service on the middlebox to set up port-BIND and session-descriptors for the media stream in both directions. Subsequent to that, the MIDCOM agent determines the session parameters (i.e., the dynamic UDP ports) for the media stream, as viewed by the external interface and requests the firewall service on the middlebox to permit those sessions through.",
      "ja": "次のタイムラインでは、ファイアウォールの説明はワイヤ上のパケットフィールドに基づいていることに注意することができます（例：ミドルボックスの外部インターフェイスに見られるように）。個々のサービスの正しい動作を確保するために、NAT固有のMIDCOM操作は、MIDCOMエージェントのファイアウォール固有の操作に先行することに気付くでしょう。これは、MIDCOMエージェントがプライベートSIP電話から「200 OK」を処理する場合の以下のタイムラインで顕著です。MIDCOMエージェントは、最初にミドルボックス上のNATサービスを要求して、メディアストリームのポートバインドとセッションデスプトールを両方向に設定します。それに続いて、MIDCOMエージェントは、外部インターフェイスによって表示されるように、メディアストリームのセッションパラメーター（つまり、動的UDPポート）を決定し、ミドルボックスのファイアウォールサービスを要求してそれらのセッションを許可します。"
    },
    {
      "indent": 6,
      "text": "SIP Phone      SIP Proxy              Middlebox     SIP Phone\n(External)     (MIDCOM agent)         (NAPT &       (Private)\nIP Addr:Ea        |                   firewall      IP addr:Pa\n|                 |                   Services)         |\n|                 |                   IP addr:Ma        |\n|                 |                      |              |\n|----INVITE------>|                      |              |\n|                 |                      |              |\n|<---100Trying----|                      |              |\n|                 |                      |              |\n|                 |++ Query Port-BIND    |              |\n|                 |   for (Ma, 5060) +++>|              |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "|                 |<+ Port-BIND reply    |              |\n|                 |   for (Ma, 5060) ++++|              |\n|                 |                      |              |\n|                 |++ Query NAT Session  |              |\n|                 |   Descriptor for     |              |\n|                 |   Ea-to-Pa SIP flow+>|              |\n|                 |<+ Ea-to-Pa SIP flow  |              |\n|                 |   Session Descriptor+|              |\n|                 |                      |              |\n|              Determine the Internal    |              |\n|              IP address (Pa)           |              |\n|              of the callee.            |              |\n|                 |                      |              |\n|              Identify UDP port numbers |              |\n|              on Ea (Eport1, Eport1+1)  |              |\n|              for pri-to-ext RTP & RTCP |              |\n|              sessions (RTP1, RTCP1)    |              |\n|                 |                      |              |\n|                 |++Create NAT Session  |              |\n|                 |  descriptors for     |              |\n|                 |  RTP1, RTCP1; Set the|              |\n|                 |  parent session to   |              |\n|                 |  point to SIP flow++>|              |\n|                 |<+RTP1, RTCP1 session |              |\n|                 |  descriptors created+|              |\n|                 |                      |              |\n|                 |++Permit RTP1 & RTCP1 |              |\n|                 |  sessions External to|              |\n|                 |  middlebox, namely   |              |\n|                 |  Ma to Ea:Eport1,    |              |\n|                 |  Ma to Ea:Eport1+1   |              |\n|                 |  sessions ++++++++++>|              |\n|                 |<+Ma to Ea:Eport1,    |              |\n|                 |  Ma to Ea:Eport1+1   |              |\n|                 |  sessions OKed ++++++|              |\n|                 |                      |              |\n|                 |                      |..redirected..|\n|                 |--------INVITE--------|------------->|\n|                 |                      |              |\n|                 |<-----180Ringing---------------------|\n|                 |                      |              |\n|<--180Ringing----|                      |              |\n|                 |<-------200 OK-----------------------|\n|                 |                      |              |\n|              Identify UDP port numbers |              |\n|              on Pa (Pport2, Pport2+1)  |              |\n|              for ext-to-pri RTP & RTCP |              |\n|              sessions (RTP2, RTCP2)    |              |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "|                 |                      |              |\n|                 |++Create consecutive  |              |\n|                 |  port BINDs on Ma    |              |\n|                 |  for (Pa, Pport2),   |              |\n|                 |  (Pa, Pport2+1) ++++>|              |\n|                 |<+Port BINDs created  |              |\n|                 |  on Ma as (Mport2,   |              |\n|                 |  Mport2+1) ++++++++++|              |\n|                 |                      |              |\n|                 |++Create NAT Session  |              |\n|                 |  descriptors for     |              |\n|                 |  RTP2, RTCP2; Set the|              |\n|                 |  parent session to   |              |\n|                 |  point to SIP flow++>|              |\n|                 |<+RTP2, RTCP2 session |              |\n|                 |  descriptors created+|              |\n|                 |                      |              |\n|              Modify the SDP            |              |\n|              parameters in \"200 OK\"    |              |\n|              with NAPT PORT-BIND       |              |\n|              for RTP2 port on Ma.      |              |\n|                 |                      |              |\n|                 |++Permit RTP2 & RTCP2 |              |\n|                 |  sessions External   |              |\n|                 |  middlebox, namely   |              |\n|                 |  Ea to Ma:Mport2,    |              |\n|                 |  Ea to Ma:Mport2+1   |              |\n|                 |  sessions ++++++++++>|              |\n|                 |<+Ea to Ma:Mport2,    |              |\n|                 |  Ea to Ma:Mport2     |              |\n|                 |  sessions OKed ++++++|              |\n|                 |                      |              |\n|<---200 OK ------|                      |              |\n|                 |                      |              |\n|-------ACK------>|                      |              |\n|                 |                      |..redirected..|\n|                 |-----------ACK--------|------------->|\n|                 |                      |              |\n|                 |                      |              |\n|<===================RTP/RTCP============|=============>|\n|                 |                      |              |\n|-------BYE------>|                      |              |\n|                 |                      |              |\n|                 |----------------------|-----BYE----->|\n|                 |                      |              |\n|                 |<----------200 OK--------------------|\n|                 |                      |              |\n|                 |+++Terminate the SIP  |              |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "|                 |   Session bundle +++>|              |\n|                 |<++SIP Session bundle |              |\n|                 |   terminated ++++++++|              |\n|                 |                      |              |\n|                 |++Cancel permits to   |              |\n|                 |  sessions External   |              |\n|                 |  middlebox, namely   |              |\n|                 |  Ma to Ea:Eport1,    |              |\n|                 |  Ma to Ea:Eport1+1   |              |\n|                 |  Ea to Ma:Mport2,    |              |\n|                 |  Ea to Ma:Mport2+1   |              |\n|                 |  sessions ++++++++++>|              |\n|                 |<+Removed permits to  |              |\n|                 |  sessions listed ++++|              |\n|                 |                      |              |\n|<---200 OK-------|                      |              |\n|                 |                      |              |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Legend:      ++++    MIDCOM control traffic\n             ----    SIP control traffic\n             ====    RTP/RTCP media traffic",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "8.0. Operational considerations",
      "section_title": true,
      "ja": "8.0. 運用上の考慮事項"
    },
    {
      "indent": 0,
      "text": "8.1. Multiple MIDCOM sessions between agents and middlebox",
      "section_title": true,
      "ja": "8.1. エージェントとミドルボックス間の複数のMidcomセッション"
    },
    {
      "indent": 3,
      "text": "A middlebox cannot be assumed to be a simple device implementing just one middlebox function and no more than a couple of interfaces. Middleboxes often combine multiple intermediate functions into the same device and have the ability to provision individual interfaces of the same device with different sets of functions and varied provisioning for the same function across the interfaces.",
      "ja": "ミドルボックスは、1つのミドルボックス機能といくつかのインターフェイスを実装する単純なデバイスであると想定することはできません。ミドルボックスは、多くの場合、複数の中間関数を同じデバイスに組み合わせて、同じデバイスの個々のインターフェイスを異なる機能セットとインターフェイス全体の同じ関数のさまざまなプロビジョニングをプロビジョニングする機能を備えています。"
    },
    {
      "indent": 3,
      "text": "As such, a MIDCOM agent ought to be able to have a single MIDCOM session with a middlebox and use the MIDCOM interface on the middlebox to interface with different services on the same middlebox.",
      "ja": "そのため、MIDCOMエージェントは、ミドルボックスを使用してMIDCOMセッションを1つ持ち、MIDCOMインターフェイスをミドルボックスのMIDCOMインターフェースを使用して、同じミドルボックスで異なるサービスとインターフェイスできる必要があります。"
    },
    {
      "indent": 0,
      "text": "8.2. Asynchronous notification to MIDCOM agents",
      "section_title": true,
      "ja": "8.2. Midcomエージェントへの非同期通知"
    },
    {
      "indent": 3,
      "text": "Asynchronous notification by the middlebox to a MIDCOM agent can be useful for events such as Session creation, Session termination, MIDCOM protocol failure, middlebox function failure or any other significant event. Independently, ICMP error codes can also be useful to notify transport layer failures to the agents.",
      "ja": "Midcomエージェントへのミドルボックスによる非同期通知は、セッションの作成、セッション終了、MIDCOMプロトコル障害、ミドルボックス機能障害、またはその他の重要なイベントなどのイベントに役立ちます。独立して、ICMPエラーコードは、エージェントに輸送層の障害を通知するのにも役立ちます。"
    },
    {
      "indent": 3,
      "text": "In addition, periodic notification of various forms of data, such as statistics update, would also be a useful function that would be beneficial to certain types of agents.",
      "ja": "さらに、統計更新など、さまざまな形式のデータの定期的な通知も、特定のタイプのエージェントにとって有益な有用な機能です。"
    },
    {
      "indent": 0,
      "text": "8.3. Timers on middlebox considered useful",
      "section_title": true,
      "ja": "8.3. Middleboxのタイマーは有用であると考えられています"
    },
    {
      "indent": 3,
      "text": "When supporting the MIDCOM protocol, the middlebox is required to allocate dynamic resources, as specified in policy rule(s), upon request from agents. Explicit release of dynamically allocated resources happens when the application session is ended or when a MIDCOM agent requests the middlebox to release the resource.",
      "ja": "MIDCOMプロトコルをサポートする場合、エージェントからの要求に応じて、ポリシールールで指定されているように、動的リソースを割り当てるためにミドルボックスが必要です。動的に割り当てられたリソースの明示的なリリースは、アプリケーションセッションが終了したとき、またはMIDCOMエージェントがミドルボックスにリソースをリリースするよう要求したときに発生します。"
    },
    {
      "indent": 3,
      "text": "However, the middlebox should be able to recover the dynamically allocated resources, even as the agent that was responsible for the allocation is not alive. Associating a lifetime for these dynamic resources and using a timer to track the lifetime can be a good way to accomplish this.",
      "ja": "ただし、ミドルボックスは、割り当ての原因となったエージェントが生きていない場合でも、動的に割り当てられたリソースを回復できるはずです。これらの動的リソースに一生を関連付け、タイマーを使用して寿命を追跡することは、これを達成するための良い方法です。"
    },
    {
      "indent": 0,
      "text": "8.4. Middleboxes supporting multiple services",
      "section_title": true,
      "ja": "8.4. 複数のサービスをサポートするミドルボックス"
    },
    {
      "indent": 3,
      "text": "A middlebox could be implementing a variety of services (e.g. NAT and firewall) in the same box. Some of these services might have inter-dependency on shared resources and sequence of operation. Others may be independent of each other. Generally speaking, the sequence in which these function operations may be performed on datagrams is not within the scope of this document.",
      "ja": "ミドルボックスは、同じボックスにさまざまなサービス（NATやファイアウォールなど）を実装できます。これらのサービスの一部は、共有リソースと操作シーケンスに依存している可能性があります。他の人は互いに独立しているかもしれません。一般的に、これらの関数操作をデータグラムで実行できるシーケンスは、このドキュメントの範囲内ではありません。"
    },
    {
      "indent": 3,
      "text": "In the case of a middlebox implementing NAT and firewall services, it is safe to state that the NAT operation on an interface will precede a firewall on the egress and will follow a firewall on the ingress. Further, firewall access control lists, used by a firewall, are assumed to be based on session parameters, as seen on the interface supporting firewall service.",
      "ja": "NATおよびファイアウォールサービスを実装するミドルボックスの場合、インターフェイス上のNAT操作が出口のファイアウォールの前に、イングレスのファイアウォールに従うことを述べても安全です。さらに、ファイアウォールで使用されるファイアウォールアクセス制御リストは、ファイアウォールサービスをサポートするインターフェイスに見られるように、セッションパラメーターに基づいていると想定されています。"
    },
    {
      "indent": 0,
      "text": "8.5. Signaling and Data traffic",
      "section_title": true,
      "ja": "8.5. シグナリングとデータトラフィック"
    },
    {
      "indent": 3,
      "text": "The class of applications the MIDCOM architecture addresses focus around applications that have a combination of, one or more, signaling and data traffic sessions. The signaling may be done out-of-band, using a dedicated stand-alone session or may be done in-band, within a data session. Alternately, signaling may also be done as a combination of both stand-alone and in-band sessions.",
      "ja": "アプリケーションのクラスMIDCOMアーキテクチャは、1つ以上のシグナルとデータトラフィックセッションの組み合わせを持つアプリケーションに焦点を当てています。シグナリングは、専用のスタンドアロンセッションを使用して帯域外で行われるか、データセッション内で帯域内で行われる場合があります。あるいは、シグナリングは、スタンドアロンとバンドの両方のセッションの両方の組み合わせとしても行うことができます。"
    },
    {
      "indent": 3,
      "text": "SIP is an example of an application based on distinct signaling and data sessions. A SIP signaling session is used for call setup between a caller and a callee. A MIDCOM agent may be required to examine/modify SIP payload content to administer the middlebox so as to let the media streams (RTP/RTCP based) through. A MIDCOM agent is not required to intervene in the data traffic.",
      "ja": "SIPは、異なるシグナル伝達とデータセッションに基づいたアプリケーションの例です。SIPシグナリングセッションは、発信者とCalleeの間のコールセットアップに使用されます。MIDCOMエージェントは、SIPペイロードコンテンツを調べて、ミドルボックスを管理するために、メディアストリーム（RTP/RTCPベース）を許可するために必要になる場合があります。MIDCOMエージェントは、データトラフィックに介入する必要はありません。"
    },
    {
      "indent": 3,
      "text": "Signaling and context specific Header information is sent in-band, within the same data stream for applications such as HTTP embedded applications, sun-RPC (embedding a variety of NFS apps), Oracle transactions (embedding oracle SQL+, MS ODBC, Peoplesoft) etc.",
      "ja": "シグナリングとコンテキスト固有のヘッダー情報は、HTTPエンメッドアプリケーション、SUN-RPC（さまざまなNFSアプリの埋め込み）、Oracle Transactions（Oracle SQL、MS ODBC、PeopleSoftなどの埋め込み）などのアプリケーションの同じデータストリーム内で帯域内で送信されます。。"
    },
    {
      "indent": 3,
      "text": "H.323 is an example of an application that sends signaling in both dedicated stand-alone sessions, as well as in conjunction with data. H.225.0 call signaling traffic traverses middleboxes by virtue of static policy, no MIDCOM control needed. H.225.0 call signaling also negotiates ports for an H.245 TCP stream. A MIDCOM agent is required to examine/modify the contents of the H.245 so that H.245 can traverse it.",
      "ja": "H.323は、専用のスタンドアロンセッションの両方で、およびデータと組み合わせてシグナリングを送信するアプリケーションの例です。H.225.0コールシグナリングトラフィックは、静的ポリシーによりミドルボックスを通過し、MIDCOMコントロールは必要ありません。H.225.0コールシグナリングは、H.245 TCPストリームのポートを交渉します。H.245がトラバースできるように、H.245の内容を調べ/変更するには、MIDCOMエージェントが必要です。"
    },
    {
      "indent": 3,
      "text": "H.245 traverses the middlebox and also carries Open Logical Channel information for media data. So, the MIDCOM agent is once again required to examine/modify the payload content needs to let the media traffic flow.",
      "ja": "H.245はミドルボックスを横断し、メディアデータの論理チャネル情報を開いています。したがって、Midcomエージェントは、メディアのトラフィックが流れるためにペイロードコンテンツのニーズを調べ/変更するために再び必要です。"
    },
    {
      "indent": 3,
      "text": "The MIDCOM architecture takes into consideration, supporting applications with independent signaling and data sessions as well as applications that have signaling and data communicated over the same session.",
      "ja": "Midcomアーキテクチャは考慮に入れて、独立したシグナル伝達とデータセッションを備えたアプリケーション、および同じセッションで信号とデータが伝えられているアプリケーションをサポートします。"
    },
    {
      "indent": 3,
      "text": "In the cases where signaling is done on a single stand-alone session, it is desirable to have a MIDCOM agent interpret the signaling stream and program the middlebox (that transits the data stream) so as to let the data traffic through uninterrupted.",
      "ja": "単一のスタンドアロンセッションでシグナリングが行われる場合、MIDCOMエージェントにシグナリングストリームを解釈し、データトラフィックを中断してデータトラフィックを可能にするために、ミドルボックス（データストリームを通過する）をプログラムすることが望ましいです。"
    },
    {
      "indent": 0,
      "text": "9. Applicability Statement",
      "section_title": true,
      "ja": "9. アプリケーションステートメント"
    },
    {
      "indent": 3,
      "text": "Middleboxes may be stationed in a number of topologies. However, the signaling framework outlined in this document may be limited to only those middleboxes that are located in a DMZ (De-Militarized Zone) at the edge of a private domain, connecting to the Internet. Specifically, the assumption is that you have a single middlebox (running NAT or firewall) along the application route. Discovery of a middlebox along an application route is outside the scope of this document. It is conceivable to have middleboxes located between departments within the same domain or inside the service provider's domain and so forth. However, care must be taken to review each individual scenario and determine the applicability on a case-by-case basis.",
      "ja": "ミドルボックスは、多くのトポロジーに配置される場合があります。ただし、このドキュメントで概説されているシグナリングフレームワークは、プライベートドメインの端にあるDMZ（除数ゾーン）にあるミドルボックスのみに限定され、インターネットに接続されます。具体的には、アプリケーションルートに沿って単一のミドルボックス（NATまたはファイアウォールを実行する）があるという仮定があります。アプリケーションルートに沿ったミドルボックスの発見は、このドキュメントの範囲外です。同じドメイン内またはサービスプロバイダーのドメインなどの内側にある部門の間に中間ボックスを配置することが考えられます。ただし、個々のシナリオを確認し、ケースバイケースで適用性を決定するために注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "The applicability may also be illustrated as follows. Real-time and streaming applications, such as Voice-Over-IP, and peer-to-peer applications, such as Napster and Netmeeting, require administering firewalls and NAT middleboxes to let their media streams reach hosts inside a private domain. The requirements are in the form of establishing a \"pin-hole\" to permit a TCP/UDP session (the port parameters of which are dynamically determined) through a firewall or retain an address/port bind in the NAT device to permit sessions to a port. These requirements are met by current generation middleboxes using adhoc methods, such as embedding application intelligence within a middlebox to identify the dynamic session parameters and administering the middlebox internally as appropriate. The objective of the MIDCOM architecture is to create a unified, standard way to exercise this functionality, currently existing in an ad-hoc fashion, in some of the middleboxes.",
      "ja": "適用性も次のように説明できます。ナップスターやネットミートなどのボイスオーバーIPやピアツーピアアプリケーションなどのリアルタイムおよびストリーミングアプリケーションでは、メディアストリームがプライベートドメイン内のホストに到達できるように、ファイアウォールとNATミドルボックスを管理する必要があります。要件は、ファイアウォールを介してTCP/UDPセッション（そのポートパラメーターが動的に決定される）を許可するか、NATデバイスに住所/ポートバインドを保持するための「ピンホール」を確立するという形式です。ポート。これらの要件は、中間ボックスにアプリケーションインテリジェンスを埋め込み、動的セッションパラメーターを識別し、必要に応じて内部的に管理するなど、Adhocメソッドを使用して現在の世代のミドルボックスによって満たされます。Midcomアーキテクチャの目的は、いくつかのミドルボックスに、現在アドホックな方法で存在するこの機能を行使するための統一された標準的な方法を作成することです。"
    },
    {
      "indent": 3,
      "text": "By adopting MIDCOM architecture, middleboxes will be able to support newer applications they have not been able to support thus far. MIDCOM architecture does not, and must not in anyway, change the fundamental characteristic of the services supported on the middlebox.",
      "ja": "Midcomアーキテクチャを採用することにより、ミドルボックスはこれまでサポートできていなかった新しいアプリケーションをサポートできます。Midcomアーキテクチャは、ミドルボックスでサポートされているサービスの基本的な特性を変更することはありません。"
    },
    {
      "indent": 3,
      "text": "Typically, organizations shield a majority of their corporate resources (such as end-hosts) from visibility to the external network by the use of a De-Militarized Zone (DMZ) at the domain edge. Only a portion of these hosts are allowed to be accessed by the external world. The remaining hosts and their names are unique to the private domain. Hosts visible to the external world and the authoritative name server that maps their names to network addresses are often configured within a DMZ (De-Militarized Zone) in front of a firewall. Hosts and middleboxes within DMZ are referred to as DMZ nodes.",
      "ja": "通常、組織は、ドメインエッジで脱南軍ゾーン（DMZ）を使用することにより、外部ネットワークへの可視性から企業リソース（エンドホストなど）の大部分を保護します。これらのホストの一部のみが、外部からアクセスすることが許可されています。残りのホストとその名前は、プライベートドメインに固有のものです。外部の世界に見えるホストと、ネットワークアドレスに名前をマップする権威ある名前サーバーは、多くの場合、ファイアウォールの前にあるDMZ（除光様ゾーン）内で構成されます。DMZ内のホストとミドルボックスは、DMZノードと呼ばれます。"
    },
    {
      "indent": 3,
      "text": "Figure 4 below illustrates the configuration of a private domain with a DMZ at its edge. Actual configurations may vary. Internal hosts are accessed only by users inside the domain. Middleboxes, located in the DMZ may be accessed by agents inside or outside the domain.",
      "ja": "以下の図4は、DMZがその端にあるプライベートドメインの構成を示しています。実際の構成は異なる場合があります。内部ホストには、ドメイン内のユーザーのみがアクセスできます。DMZにあるミドルボックスには、ドメイン内または外側のエージェントがアクセスできます。"
    },
    {
      "indent": 6,
      "text": "                                \\ | /\n                        +-----------------------+\n                        |Service Provider Router|\n                        +-----------------------+\n                         WAN  |\n            Stub A .........|\\|....\n                            |\n                  +---------------+\n                  | NAT middlebox |\n                  +---------------+\n                      |\n                      |   DMZ - Network\n------------------------------------------------------------\n   |         |              |            |             |\n  +--+      +--+           +--+         +--+      +-----------+\n  |__|      |__|           |__|         |__|      | Firewall  |\n /____\\    /____\\         /____\\       /____\\     | middlebox |\nDMZ-Host1  DMZ-Host2 ...  DMZ-Name     DMZ-Web    +-----------+\n                          Server       Server etc.   |\n                                                     |\n  Internal Hosts (inside the private domain)         |\n------------------------------------------------------------\n    |             |                 |           |\n   +--+         +--+               +--+       +--+\n   |__|         |__|               |__|       |__|\n  /____\\       /____\\             /____\\     /____\\\n Int-Host1    Int-Host2  .....   Int-Hostn   Int-Name Server",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 7,
      "text": "Figure 4: DMZ network configuration of a private domain.",
      "ja": "図4：プライベートドメインのDMZネットワーク構成。"
    },
    {
      "indent": 0,
      "text": "10. Acknowledgements",
      "section_title": true,
      "ja": "10. 謝辞"
    },
    {
      "indent": 3,
      "text": "The authors wish to thank Christian Huitema, Joon Maeng, Jon Peterson, Mike Fisk, Matt Holdrege, Melinda Shore, Paul Sijben, Philip Mart, Scott Brim and Richard Swale for their valuable critique, advice and input on an earlier rough version of this document. The authors owe special thanks to Eliot Lear for kick-starting the e-mail discussion on use-case scenarios with a SIP application flow diagram through a middlebox. Much thanks to Bob Penfield, Cedric Aoun, Christopher Martin, Eric Fleischman, George Michaelson, Wanqun Bao, and others in the MIDCOM work group for their very detailed feedback on a variety of topics and adding clarity to the discussion. Last, but not the least, the authors owe much thanks to Mark Duffy, Scott Brim, Melinda Shore and others for their help with terminology definition and discussing the embedded requirements within the framework document.",
      "ja": "著者は、クリスチャン・フイテマ、ジュン・メン、ジョン・ピーターソン、マイク・フィスク、マット・ホールデジ、メリンダ・ショア、ポール・シージベン、フィリップ・マート、スコット・ブリム、リチャード・スウォレに感謝します。。著者は、ミドルボックスを介したSIPアプリケーションフロー図を使用して、ユースケースシナリオに関する電子メールディスカッションをキックスタートしてくれたEliot Learに感謝しています。ボブ・ペンフィールド、セドリック・オウン、クリストファー・マーティン、エリック・フライシュマン、ジョージ・マイケルソン、ワンクン・バオなど、さまざまなトピックに関する非常に詳細なフィードバックとディスカッションの明確さを追加してくれたことに感謝します。最後になりましたが、著者は、用語の定義とフレームワークドキュメント内の組み込み要件について議論してくれたMark Duffy、Scott Brim、Melinda Shoreなどに感謝します。"
    },
    {
      "indent": 0,
      "text": "11. Security Considerations",
      "section_title": true,
      "ja": "11. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Discussed below are security considerations in accessing a middlebox. Without MIDCOM protocol support, the premise of a middlebox operation fundamentally requires the data to be in the clear, as the middlebox needs the ability to inspect and/or modify packet headers and payload. This compromises the confidentiality requirement in some environments. Further, updating transport headers and rewriting application payload data, in some cases, by NAT prevents the use of integrity protection on some data streams traversing NAT middleboxes. Clearly, this can pose a significant security threat to the application in an untrusted transport domain.",
      "ja": "以下で説明します。ミドルボックスにアクセスする際のセキュリティ上の考慮事項です。Midcomプロトコルのサポートがなければ、ミドルボックス操作の前提では、マイルドボックスがパケットヘッダーとペイロードを検査および/または変更する機能を必要とするため、データを明確にする必要があります。これにより、一部の環境での機密性の要件が損なわれます。さらに、NATによるトランスポートヘッダーの更新とアプリケーションのペイロードデータの書き換えにより、NATミドルボックスを通過する一部のデータストリームでの整合性保護の使用が防止されます。明らかに、これは信頼されていない輸送ドメインでのアプリケーションに大きなセキュリティの脅威をもたらす可能性があります。"
    },
    {
      "indent": 3,
      "text": "The MIDCOM protocol framework removes the need for a middlebox to inspect or manipulate transport payload. This allows applications to better protect themselves end-to-end with the aid of a trusted MIDCOM agent. This is especially the case when the agent is a resident on the end-host. When an agent has the same end-to-end ability as the end-host to interpret encrypted and integrity protected data, transiting a middlebox can be encrypted and integrity protected. The MIDCOM agent will still be able to interpret the data and simply notify the middlebox of open holes, install NAT table entries, etc. Note, however, the MIDCOM framework does not help with the problem of NAT breaking IPsec since in this case the middlebox still modifies IP and transport headers.",
      "ja": "MIDCOMプロトコルフレームワークは、トランスポートペイロードを検査または操作するためのミドルボックスの必要性を削除します。これにより、アプリケーションは、信頼できるMIDCOMエージェントを使用して、エンドツーエンドをよりよく保護できます。これは、エージェントがエンドホストの居住者である場合に特に当てはまります。エージェントが暗号化されたデータと整合性保護データを解釈するエンドホストと同じエンドツーエンドの能力を持っている場合、ミドルボックスを通過すると暗号化され、整合性が保護されます。MIDCOMエージェントは、データを解釈し、オープンホールのミドルボックスに単純に通知することができ、NATテーブルエントリなどをインストールすることができます。ただし、MIDCOMフレームワークは、NATがIPSECを破る問題に役立ちません。この場合、ミドルボックスはそれでもIPおよびトランスポートヘッダーを変更します。"
    },
    {
      "indent": 3,
      "text": "Security between a MIDCOM agent and a middlebox has a number of components. Authorization, authentication, integrity and confidentiality. Authorization refers to whether a particular agent is authorized to signal a middlebox with requests for one or more applications, adhering to a certain policy profile. Failing the authorization process might indicate a resource theft attempt or failure due to administrative and/or credential deficiencies. In either case, the middlebox should take the proper measures to audit/log such attempts and consult its designated MIDCOM PDP for the required action if the middlebox is configured with one. Alternatively, the middlebox may resort to a default service deny policy when a MIDCOM agent fails to prompt the required credentials. Section 6 discusses the middlebox to MIDCOM PDP interactions in view of policy decisions.",
      "ja": "Midcomエージェントとミドルボックスの間のセキュリティには、多くのコンポーネントがあります。承認、認証、整合性、機密性。承認とは、特定のエージェントが特定のポリシープロファイルを順守し、1つ以上のアプリケーションを要求してミドルボックスに信号を送信することを許可されているかどうかを指します。許可プロセスに失敗すると、管理および/または資格の欠陥によるリソースの盗難の試みまたは失敗が示される可能性があります。どちらの場合でも、ミドルボックスは、そのような試みを監査/ログに記録するための適切な措置を講じ、その指定されたMIDCOM PDPを参照して、ミドルボックスが1つで構成されている場合は、必要なアクションについて参照する必要があります。あるいは、MIDCOMエージェントが必要な資格情報をプロンプトに失敗した場合、ミドルボックスはデフォルトのサービス拒否ポリシーに頼ることがあります。セクション6では、ポリシーの決定を考慮して、ミドルボックスからミッドコムのPDP相互作用について説明します。"
    },
    {
      "indent": 3,
      "text": "Authentication refers to confirming the identity of an originator for all datagrams received from the originator. Lack of strong credentials for authentication of MIDCOM messages between an agent and a middlebox can seriously jeopardize the fundamental service rendered by the middlebox. A consequence of not authenticating an agent would be that an attacker could spoof the identity of a \"legitimate\" agent and open holes in the firewall. Another would be that it could otherwise manipulate the state on a middlebox, creating a denial-of-service attack by closing needed pinholes or filling up a NAT table. A consequence of not authenticating the middlebox to an agent is that an attacker could pose as a middlebox and respond to NAT requests in a manner that would divert data to the attacker. Failing to submit the required/valid credentials, once challenged, may indicate a replay attack, in which case a proper action is required by the middlebox such as auditing, logging, or consulting its designated MIDCOM PDP to reflect such failure. A consequence of not protecting the middlebox against replay attacks would be that a specific pinhole may be reopened or closed by an attacker at will, thereby bombarding end hosts with unwarranted data or causing denial of service.",
      "ja": "認証とは、オリジネーターから受信したすべてのデータグラムのオリジネーターの身元を確認することを指します。エージェントとミドルボックス間のMidcomメッセージの認証のための強力な資格情報の欠如は、ミドルボックスによって提供される基本的なサービスを真剣に危険にさらす可能性があります。エージェントを認証しないことの結果、攻撃者が「正当な」エージェントのアイデンティティを吹き飛ばし、ファイアウォールに穴を開けることができるということです。もう1つは、そうでなければ、ミドルボックスで状態を操作し、必要なピンホールを閉じるか、NATテーブルを埋めることにより、サービス拒否攻撃を作成できることです。ミドルボックスをエージェントに認証しなかった結果、攻撃者は攻撃者が攻撃者にデータをそらす方法でNAT要求に応答できることです。必要な/有効な資格情報の送信に失敗すると、挑戦されると、リプレイ攻撃が示される可能性があります。その場合、そのような障害を反映するために指定されたMIDCOM PDPの監査、ログ、またはコンサルティングなど、ミドルボックスによって適切なアクションが必要です。ミドルボックスをリプレイ攻撃から保護しない結果、特定のピンホールが自由に攻撃者によって再開または閉じられる可能性があり、それにより、不当なデータでエンドホストを攻撃したり、サービス拒否を引き起こしたりする可能性があります。"
    },
    {
      "indent": 3,
      "text": "Integrity is required to ensure that a MIDCOM message has not been accidentally or maliciously altered or destroyed. The result of a lack of data integrity enforcement in an untrusted environment could be that an imposter will alter the messages sent by an agent and bring the middlebox to a halt or cause a denial of service for the application the agent is attempting to enable.",
      "ja": "MIDCOMメッセージが誤ってまたは悪意を持って変更または破壊されていないことを確認するためには、整合性が必要です。信頼されていない環境でのデータ整合性の施行が不足している結果、詐欺師がエージェントから送信されたメッセージを変更し、ミドルボックスを停止するか、エージェントが有効にしようとしているアプリケーションのサービスの拒否を引き起こす可能性があります。"
    },
    {
      "indent": 3,
      "text": "Confidentiality of MIDCOM messages ensure that the signaling data is accessible only to the authorized entities. When a middlebox agent is deployed in an untrusted environment, lack of confidentiality will allow an intruder to perform traffic flow analysis and snoop the middlebox. The intruder could cannibalize a lesser secure MIDCOM session and destroy or compromise the middlebox resources he uncovered on other sessions. Needless to say, the least secure MIDCOM session will become the achilles heel and make the middlebox vulnerable to security attacks.",
      "ja": "MIDCOMメッセージの機密性は、信号データに認可されたエンティティのみにアクセスできるようにします。ミドルボックスエージェントが信頼されていない環境に展開されると、機密性が不足すると、侵入者がトラフィックフロー分析を実行し、ミドルボックスをスヌープすることができます。侵入者は、より少ない安全なMidcomセッションを共食いし、他のセッションで明らかにしたミドルボックスリソースを破壊または妥協することができます。言うまでもなく、最も安全でないMidcomセッションは、アキレスヒールになり、ミドルボックスをセキュリティ攻撃に対して脆弱にします。"
    },
    {
      "indent": 3,
      "text": "Lastly, there can be security vulnerability to the applications traversing a middlebox when a resource on a middlebox is controlled by multiple external agents. A middlebox service may be disrupted due to conflicting directives from multiple agents associated with different middlebox functions but applied to the same application session. Care must be taken in the protocol design to ensure that agents for one function do not abruptly step over resources impacting a different function. Alternately, the severity of such manifestations could be lessened when a single MIDCOM agent is responsible for supporting all the middlebox services for an application, due to the reduced complexity and synchronization effort in managing the middlebox resources.",
      "ja": "最後に、ミドルボックスのリソースが複数の外部エージェントによって制御される場合、ミドルボックスを通過するアプリケーションに対してセキュリティの脆弱性があります。異なるミドルボックス関数に関連付けられているが同じアプリケーションセッションに適用される複数のエージェントからの矛盾するディレクティブのために、ミドルボックスサービスが中断される場合があります。プロトコル設計には、1つの機能のエージェントが異なる機能に影響を与えるリソースを突然踏み越えないようにするために注意する必要があります。あるいは、ミドルボックスリソースの管理における複雑さと同期の取り組みが減少しているため、単一のMIDCOMエージェントがアプリケーションのすべてのミドルボックスサービスをサポートする責任がある場合、そのような症状の重大度を軽減できます。"
    },
    {
      "indent": 0,
      "text": "References",
      "ja": "参考文献"
    },
    {
      "indent": 3,
      "text": "[SIP] Rosenberg, J., Shulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks, R., Handley, M., Schooler, E., \"SIP: Session Initiation Protocol\", RFC 3261, June 2002.",
      "ja": "[SIP] Rosenberg、J.、Shulzrinne、H.、Camarillo、G.、Johnston、A.、Peterson、J.、Sparks、R.、Handley、M.、Schooler、E。、 \"Sip：Session initiation Protocol\"、RFC 3261、2002年6月。"
    },
    {
      "indent": 3,
      "text": "[SDP] Handley, M. and V. Jacobson, \"SDP: Session Description Protocol\", RFC 2327, April 1998.",
      "ja": "[SDP] Handley、M。and V. Jacobson、「SDP：セッション説明プロトコル」、RFC 2327、1998年4月。"
    },
    {
      "indent": 3,
      "text": "[H.323] ITU-T Recommendation H.323. \"Packet-based Multimedia Communications Systems,\" 1998.",
      "ja": "[H.323] ITU-T推奨H.323。「パケットベースのマルチメディア通信システム」、1998年。"
    },
    {
      "indent": 3,
      "text": "[RTP] Schulzrinne, H., Casner, S., Frederick, R. and V. Jacobson, \"RTP: A Transport Protocol for Real-Time Applications\", RFC 1889, January 1996.",
      "ja": "[RTP] Schulzrinne、H.、Casner、S.、Frederick、R。、およびV. Jacobson、「RTP：リアルタイムアプリケーション用の輸送プロトコル」、RFC 1889、1996年1月。"
    },
    {
      "indent": 3,
      "text": "[RTSP] Schulzrinne, H., Rao, A. and R. Lanphier: \"Real Time Streaming Protocol (RTSP)\", RFC 2326, April 1998.",
      "ja": "[RTSP] Schulzrinne、H.、Rao、A。、およびR. Lanphier：「リアルタイムストリーミングプロトコル（RTSP）」、RFC 2326、1998年4月。"
    },
    {
      "indent": 3,
      "text": "[FTP] Postel, J. and J. Reynolds, \"File Transfer Protocol\", STD 9, RFC 959, October 1985.",
      "ja": "[FTP] Postel、J。およびJ. Reynolds、「ファイル転送プロトコル」、STD 9、RFC 959、1985年10月。"
    },
    {
      "indent": 3,
      "text": "[NAT-TERM] Srisuresh, P. and M. Holdrege, \"IP Network Address Translator (NAT) Terminology and Considerations\", RFC 2663, August 1999.",
      "ja": "[NAT-Term] Srisuresh、P。およびM. Holdrege、「IPネットワークアドレス翻訳者（NAT）用語と考慮事項」、RFC 2663、1999年8月。"
    },
    {
      "indent": 3,
      "text": "[NAT-TRAD] Srisuresh, P. and K. Egevang, \"Traditional IP Network Address Translator (Traditional NAT)\", RFC 3022, January 2001.",
      "ja": "[Nat-Trad] Srisuresh、P。およびK. Egevang、「従来のIPネットワークアドレス翻訳者（従来のNAT）」、RFC 3022、2001年1月。"
    },
    {
      "indent": 3,
      "text": "[NAT-PT] Tsirtsis, G. and P. Srisuresh, \"Network Address Translation - Protocol Translation (NAT-PT)\", RFC 2766, February 2000.",
      "ja": "[Nat-Pt] Tsirtsis、G。およびP. Srisuresh、「ネットワークアドレス変換 - プロトコル翻訳（NAT-PT）」、RFC 2766、2000年2月。"
    },
    {
      "indent": 3,
      "text": "[IPsec-AH] Kent, S. and R. Atkinson, \"IP Authentication Header\", RFC 2402, November 1998.",
      "ja": "[IPSEC-AH] Kent、S。およびR. Atkinson、「IP Authentication Header」、RFC 2402、1998年11月。"
    },
    {
      "indent": 3,
      "text": "[IPsec-ESP] Kent, S. and R. Atkinson, \"IP Encapsulating Security Payload (ESP)\", RFC 2406, November 1998.",
      "ja": "[Ipsec-esp] Kent、S。and R. Atkinson、「IPカプセル化セキュリティペイロード（ESP）」、RFC 2406、1998年11月。"
    },
    {
      "indent": 3,
      "text": "[TLS] Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\", RFC 2246, January 1999.",
      "ja": "[TLS] Dierks、T。およびC. Allen、「TLSプロトコルバージョン1.0」、RFC 2246、1999年1月。"
    },
    {
      "indent": 3,
      "text": "[POL-TERM] Westerinen, A., Schnizlein, J., Strassner, J., Scherling, M., Quinn, B., Herzog, S., Huynh, A., Carlson, M., Perry, J. and S. Waldbusser, \"Terminology for Policy-Based Management\", RFC 3198, November 2001.",
      "ja": "[Pol-Terme] Westerinen、A.、Schnizlein、J.、Strassner、J.、Scherling、M.、Quinn、B.、Herzog、S.、Huynh、A.、Carlson、M.、Perry、J。S. Waldbusser、「政策ベースの管理のための用語」、RFC 3198、2001年11月。"
    },
    {
      "indent": 3,
      "text": "[REQMTS] Swale, R. P., Mart, P. A., Sijben, P., Brim, S. and M. Shore, \"Middlebox Communications (midcom) Protocol Requirements\", RFC 3304, August 2002.",
      "ja": "[Reqmts] Swale、R。P.、Mart、P。A.、Sijben、P.、Brim、S。、およびM. Shore、「Middlebox Communications（Midcom）プロトコル要件」、RFC 3304、2002年8月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Pyda Srisuresh Kuokoa Networks, Inc. 475 Potrero Ave. Sunnyvale, CA 94085 EMail: srisuresh@yahoo.com",
      "ja": "Pyda Srisuresh Kuokoa Networks、Inc。475 Potrero Ave. Sunnyvale、CA 94085メール：srisuresh@yahoo.com"
    },
    {
      "indent": 3,
      "text": "Jiri Kuthan Fraunhofer Institute FOKUS Kaiserin-Augusta-Allee 31 D-10589 Berlin, Germany EMail: kuthan@fokus.fhg.de",
      "ja": "Jiri Kuthan Fraunhofer Institute Fokus Kaiserin-Augusta-Allee 31 D-10589ベルリン、ドイツメール：kuthan@fokus.fhg.de"
    },
    {
      "indent": 3,
      "text": "Jonathan Rosenberg dynamicsoft 72 Eagle Rock Avenue First Floor East Hanover, NJ 07936 U.S.A. EMail: jdrosen@dynamicsoft.com",
      "ja": "Jonathan Rosenberg Dynamicsoft 72 Eagle Rock Avenue 1階イーストハノーバー、ニュージャージー07936 U.S.A.メール：jdrosen@dynamicsoft.com"
    },
    {
      "indent": 3,
      "text": "Andrew Molitor Aravox technologies 4201 Lexington Avenue North, Suite 1105 Arden Hills, MN 55126 U.S.A. voice: (651) 256-2700 EMail: amolitor@visi.com",
      "ja": "Andrew Molitor Aravox Technologies 4201 Lexington Avenue North、Suite 1105 Arden Hills、Mn 55126 U.S.A. Voice：（651）256-2700メール：amolitor@visi.com"
    },
    {
      "indent": 3,
      "text": "Abdallah Rayhan WINCORE Lab Electrical and Computer Engineering Ryerson University 350 Victoria Street Toronto, ON M5B 2K3 EMail: rayhan@ee.ryerson.ca, ar_rayhan@yahoo.ca",
      "ja": "Abdallah Rayhan Wincore Lab Electrical and Computer Engineering Ryerson University 350 Victoria Street Toronto、M5B 2K3 Email：Rayhan@ee.ryerson.ca、ar_rayhan@yahoo.ca"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2002). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2002）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があり、それについてコメントまたは説明する派生作品、またはその実装を支援することができます。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントと本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}