{
  "title": {
    "text": "RFC 3153 - PPP Multiplexing",
    "ja": "RFC 3153 - PPP多重化"
  },
  "number": 3153,
  "created_at": "2023-12-12 11:18:15.246506+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                      R. Pazhyannur\nRequest for Comments: 3153                                        I. Ali\nCategory: Standards Track                                       Motorola\n                                                                  C. Fox\n                                                           Cisco Systems\n                                                             August 2001",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 27,
      "text": "PPP Multiplexing",
      "ja": "PPP多重化"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の現在のエディションを参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2001). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2001）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes a method to reduce the PPP (Point-to-Point Protocol) framing overhead used to transport small packets over slow links.",
      "ja": "このドキュメントでは、PPP（ポイントツーポイントプロトコル）フレーミングオーバーヘッドを削減する方法を削減する方法について説明します。"
    },
    {
      "indent": 0,
      "text": "1. Description",
      "section_title": true,
      "ja": "1. 説明"
    },
    {
      "indent": 3,
      "text": "The method, PPP Multiplexing, sends multiple PPP encapsulated packets in a single PPP frame. As a result, the PPP overhead per packet is reduced. PPP encapsulation (for example with PPP in HDLC framing) adds several bytes of overhead: a HDLC flag (at least one to separate adjacent packets), the Address (0xFF) and Control (0x03) field bytes, a two byte PPP Protocol ID, and the two byte CRC field. Even with the Address and Control Fields negotiated off and the PPP Protocol ID compressed, each PPP encapsulated frame will include four bytes of overhead. When PPP frames are tunneled, as in L2TP [1], the L2TP overhead per PPP frame is significant.",
      "ja": "この方法であるPPP多重化は、単一のPPPフレームに複数のPPPカプセル化されたパケットを送信します。その結果、パケットごとのPPPオーバーヘッドが削減されます。PPPカプセル化（たとえば、HDLCフレーミングのPPPを使用）は、オーバーヘッドのいくつかのバイトを追加します：HDLCフラグ（少なくとも1つは隣接するパケットを分離する）、アドレス（0xff）およびコントロール（0x03）フィールドバイト、2バイトPPPプロトコルID、および2つのバイトCRCフィールド。アドレスと制御フィールドが交渉し、PPPプロトコルIDが圧縮されたとしても、各PPPカプセル化されたフレームには4バイトのオーバーヘッドが含まれます。L2TP [1]のように、PPPフレームがトンネル化されると、PPPフレームごとのL2TPオーバーヘッドが重要です。"
    },
    {
      "indent": 3,
      "text": "The key idea is to concatenate multiple PPP encapsulated frames into a single PPP multiplexed frame by inserting a delimiter before the beginning of each frame. The description of the delimiters is provided in Subsection 1.1. The delimiters are used by the demultiplexor to separate the PPP frames within the multiplexed frame. Each PPP encapsulated frame within the multiplexed frame is called a PPP subframe.",
      "ja": "重要なアイデアは、各フレームの開始前に区切り文字を挿入することにより、複数のPPPカプセル化フレームを単一のPPP多重化フレームに連結することです。デリミターの説明は、サブセクション1.1で提供されています。デリミターは、マルチプレックスフレーム内のPPPフレームを分離するために、Demultiplexorによって使用されます。多重化されたフレーム内の各PPPカプセル化フレームは、PPPサブフレームと呼ばれます。"
    },
    {
      "indent": 3,
      "text": "During the NCP negotiation phase of PPP, a receiver can offer to receive multiplexed frames using the PPP Mux Control Protocol (PPPMuxCP), as described in Section 2. Once PPPMuxCP has been negotiated, the transmitter may choose which PPP frames to multiplex. Frames should not be re-ordered by either the transmitter or receiver regardless of whether they arrive as part of the PPP multiplexed frame or by themselves.",
      "ja": "PPPのNCP交渉段階では、セクション2で説明されているように、受信者はPPP MUXコントロールプロトコル（PPPMUXCP）を使用して多重化フレームを受信することを提案できます。PPPMUXCPがネゴシエートされると、送信機はPPPフレームをマルチプレックスに選択する場合があります。フレームは、PPP多重化されたフレームの一部として到着するか、それ自体で到着するかに関係なく、送信機または受信機のいずれかによって再注文しないでください。"
    },
    {
      "indent": 3,
      "text": "The scheme proposed is similar to the concatenated framing option [2]. The key differences are that PPP multiplexing is more efficient and that it allows concatenation of variable sized frames. This is unlike concatenated framing which restricts all frames to be of fixed length.",
      "ja": "提案されたスキームは、連結フレーミングオプションに似ています[2]。主な違いは、PPP多重化がより効率的であり、可変サイズのフレームの連結を可能にすることです。これは、すべてのフレームを固定長に制限する連結フレーミングとは異なります。"
    },
    {
      "indent": 3,
      "text": "As with any concatenation scheme, the implementer has to consider the tradeoff between increased delay for multiplexing/demultiplexing and reduced packet overhead as the length of the multiplexed frame increases.",
      "ja": "任意の連結スキームと同様に、実装者は、多重化/脱力度の増加のトレードオフと、多重化されたフレームの長さが増加するにつれてパケットオーバーヘッドの削減とのトレードオフを考慮する必要があります。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [7].",
      "ja": "「必須」、「そうしない」、「必須」、「shall」、「shall \"、\" ingle \"、\" should \"、\" not \"、\" becommended \"、\" bay \"、および「optional」は、RFC 2119 [7]に記載されているように解釈される。"
    },
    {
      "indent": 0,
      "text": "1.1. Payload Format",
      "section_title": true,
      "ja": "1.1. ペイロード形式"
    },
    {
      "indent": 3,
      "text": "The format of the complete PPP frame along with multiple subframes for PPP in HDLC-like framing [3] is shown in Figure 1. Note that regardless of the order in which individual bits are transmitted, i.e., LSB first or MSB first, the PFF bit will be seen to be the MSB of a byte that contains both the PFF and the subframe length field.",
      "ja": "完全なPPPフレームの形式とHDLCのようなフレーミング[3]のPPPの複数のサブフレームを図1に示します。BITは、PFFとサブフレーム長の両方のフィールドを含むバイトのMSBであると見られます。"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|       +P|L|     +       +     +   +P|L|     +       +     +     |\n|  PPP/ +F|X|Len1 +  PPP  +     +   +F|X|LenN +  PPP  +     +     |\n|  HDLC +F|T|     + Prot. +Info1+ ~ +F|T|     + Prot. +InfoN+ CRC |\n| Header+ | |     + Field1+     +   + | |     +FieldN +     +     |\n| (2-5) +  (1-2 ) + (0-2) +     +   +  (1-2)  + (0-2) +     + (2) |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Figure 1. Multiplexing subframes in a PPP frame.",
      "ja": "図1. PPPフレームのマルチプレックスサブフレーム。"
    },
    {
      "indent": 3,
      "text": "PPP Header: The PPP header contains the PPP Protocol Field for a PPP Multiplexed Frame (0x0059). The PPP header compression options (ACFC and PFC) may be negotiated during LCP and could thus affect the format of this header.",
      "ja": "PPPヘッダー：PPPヘッダーには、PPP多重化フレーム（0x0059）のPPPプロトコルフィールドが含まれています。PPPヘッダー圧縮オプション（ACFCおよびPFC）はLCP中にネゴシエートされる可能性があるため、このヘッダーの形式に影響を与える可能性があります。"
    },
    {
      "indent": 3,
      "text": "Length Field:",
      "ja": "長さフィールド："
    },
    {
      "indent": 5,
      "text": "The length field consists of three subfields:",
      "ja": "長さフィールドは、3つのサブフィールドで構成されています。"
    },
    {
      "indent": 6,
      "text": "1. Protocol Field Flag (PFF):",
      "ja": "1. プロトコルフィールドフラグ（PFF）："
    },
    {
      "indent": 9,
      "text": "The PFF refers to the most significant bit of the first byte of each subframe. This one bit field indicates whether the PPP Protocol ID of the subframe follows the subframe length field. For the first subframe, the PFF bit could be set to zero if the PPP protocol ID of the first subframe is equal to the default PID value negotiated in PPPMuxCP. PFF = 1 indicates that the protocol field is present (and follows the length field) for this subframe. PFF = 0 indicates that the protocol field is absent for this subframe. If PFF = 0 then the PPP Protocol ID is the same as that of the preceding subframe with PFF = 1, or it is equal to default PID value of the PPPMuxCP Option for the first subframe. The transmitter is not obligated to remove the PPP Protocol ID for any subframe.",
      "ja": "PFFは、各サブフレームの最初のバイトの最も重要なビットを指します。このビットフィールドは、サブフレームのPPPプロトコルIDがサブフレーム長さフィールドに従うかどうかを示します。最初のサブフレームの場合、最初のサブフレームのPPPプロトコルIDがPPPMUXCPでネゴシエートされたデフォルトのPID値に等しい場合、PFFビットをゼロに設定できます。PFF = 1は、このサブフレームのプロトコルフィールドが存在する（および長さフィールドに従う）ことを示します。PFF = 0は、このサブフレームにプロトコルフィールドがないことを示します。PFF = 0の場合、PPPプロトコルIDは、PFF = 1の前のサブフレームと同じであるか、最初のサブフレームのPPPMUXCPオプションのデフォルトPID値と等しくなります。送信機は、サブフレームのPPPプロトコルIDを削除する義務はありません。"
    },
    {
      "indent": 6,
      "text": "2. Length Extension (LXT)",
      "ja": "2. 長さ拡張（LXT）"
    },
    {
      "indent": 9,
      "text": "This one bit field indicates whether the length field is one byte or two bytes long. If the LXT bit is set, then the length field is two bytes long (a PFF bit, a length extension bit, and 14 bits of sub-frame length). If the LXT bit is cleared, then the length field is one byte long (a PFF bit, a length extension bit, and 6 bits of sub-frame length).",
      "ja": "このビットフィールドは、長さフィールドが1バイトまたは2バイトの長さであるかどうかを示します。LXTビットが設定されている場合、長さのフィールドは2バイトの長さ（PFFビット、長さの延長ビット、サブフレーム長の14ビット）です。LXTビットがクリアされている場合、長さのフィールドは1バイトの長さ（PFFビット、長さの延長ビット、およびサブフレーム長の6ビット）です。"
    },
    {
      "indent": 6,
      "text": "3. Sub-frame Length (LEN):",
      "ja": "3. サブフレーム長（LEN）："
    },
    {
      "indent": 9,
      "text": "This is the length of the subframe in bytes not including the length field. However, it does include the PPP Protocol ID if present (i.e., if PFF = 1). If the length of the subframe is less than 64 bytes (less than or equal to 63 bytes), LXT is set to zero and the last six bits of the length field is the subframe length. If the length of the subframe is greater than 63 bytes, LXT is set to one and the last 14 bits of the length field is the length of the subframe. The maximum length of a subframe is 16,383 bytes. PPP packets larger than 16,383 bytes will need to be sent in their own PPP frame. A transmitter is not required to multiplex all frames smaller than 16,383 bytes. It may chose to only multiplex frames smaller than a configurable size into a PPP multiplexed frame.",
      "ja": "これは、長さフィールドを含まないバイトのサブフレームの長さです。ただし、PPPプロトコルIDが存在する場合（つまり、PFF = 1の場合）が含まれます。サブフレームの長さが64バイト（63バイト以下）未満の場合、LXTはゼロに設定され、長さフィールドの最後の6ビットはサブフレームの長さです。サブフレームの長さが63バイトを超える場合、LXTは1つに設定され、長さフィールドの最後の14ビットはサブフレームの長さです。サブフレームの最大長は16,383バイトです。16,383バイトを超えるPPPパケットは、独自のPPPフレームで送信する必要があります。すべてのフレームが16,383バイトを超えるマルチプレックスには、送信機が必要ありません。構成可能なサイズよりも小さいマルチプレックスフレームのみをPPP多重化フレームに選択することができます。"
    },
    {
      "indent": 3,
      "text": "Protocol Field:",
      "ja": "プロトコルフィールド："
    },
    {
      "indent": 6,
      "text": "This field contains the Protocol Field value for the subframe. This field is optional. If PFF = 1 for a subframe, the protocol field is present in the subframe, otherwise it is inferred at the receiver.",
      "ja": "このフィールドには、サブフレームのプロトコルフィールド値が含まれています。このフィールドはオプションです。サブフレームの場合、PFF = 1の場合、プロトコルフィールドはサブフレームに存在します。それ以外の場合は、受信機で推測されます。"
    },
    {
      "indent": 6,
      "text": "The receiver MUST support Protocol-Field-Compression (PFC) one or two bytes long. The transmitter SHOULD compress PPP Protocol IDs in this field that have an upper byte of zero (i.e., Protocol IDs from 0x21 thru 0xFD). This Protocol Field Compression in each PPP subframe is not related to the negotiation of PFC during LCP negotiation which affects the length of PPP Multiplexed Frame Protocol ID.",
      "ja": "受信機は、プロトコルフィールド圧縮（PFC）を1つまたは2バイトの長さをサポートする必要があります。トランスミッターは、このフィールドでゼロの上部バイト（つまり、0x21から0xfdから0x21からのプロトコルID）を持つPPPプロトコルIDを圧縮する必要があります。各PPPサブフレームにおけるこのプロトコルフィールド圧縮は、LCP交渉中のPFCの交渉とは関係ありません。これは、PPP多重化フレームプロトコルIDの長さに影響します。"
    },
    {
      "indent": 3,
      "text": "Information Field:",
      "ja": "情報フィールド："
    },
    {
      "indent": 6,
      "text": "This field contains the actual packet being encapsulated. Any frame may be included here with the exception of LCP Configure Request, ACK, NAK and Reject frames and PPP Multiplexed frames. If LCP is renegotiated then PPP Multiplexing MUST be disabled until the PPP Mux Control Protocol is negotiated.",
      "ja": "このフィールドには、カプセル化されている実際のパケットが含まれています。LCP構成要求、ACK、NAK、および拒否フレームとPPP多重化フレームを除き、任意のフレームをここに含めることができます。LCPが再交渉された場合、PPP Mux制御プロトコルがネゴシエートされるまで、PPP多重化を無効にする必要があります。"
    },
    {
      "indent": 0,
      "text": "1.2 Transmitter procedure",
      "section_title": true,
      "ja": "1.2 トランスミッター手順"
    },
    {
      "indent": 3,
      "text": "A simple implementation of the transmitter is provided. During the transmission of a multiplexed PPP frame, the transmitter has a state variable, Last_PID, which is used to hold the most recent value of protocol field in a subframe with PFF=1. At the start of the multiplexing process, Last_PID is set equal to the default PID value negotiated in PPPMuxCP. Also, a user configurable parameter, maximum subframe length (MAX_SF_LEN), is used to determine the maximum size of a PPP frame which can be multiplexed. The value of MAX_SF_LEN should be less or equal to the minimum of MRU-2(maximum size of length field) and 16,383 (14 bits).",
      "ja": "送信機の簡単な実装が提供されます。多重化されたPPPフレームの送信中、送信機には状態変数LAST_PIDがあり、PFF = 1のサブフレームにプロトコルフィールドの最新の値を保持するために使用されます。多重化プロセスの開始時に、last_PIDはPPPMUXCPでネゴシエートされたデフォルトのPID値に等しく設定されます。また、ユーザー構成可能なパラメーターである最大サブフレーム長（MAX_SF_LEN）を使用して、多重化できるPPPフレームの最大サイズを決定します。MAX_SF_LENの値は、MRU-2（長さフィールドの最大サイズ）と16,383（14ビット）の最小または等しくなる必要があります。"
    },
    {
      "indent": 3,
      "text": "After transmitting a PPP frame (multiplexed or not) on the channel, the PPP multiplexing logic looks at the buffers that hold the PPP frames to be transmitted. In case there are multiple frames, the PPP multiplexing logic checks if the length of the first frame in the buffer is less than or equal to MAX_SF_LEN bytes. If so, the transmitter starts compiling a multiplexed PPP frame with the protocol field value corresponding to PPP Multiplexed Frame (0x59). For each subframe, the test for deciding to prepend the protocol field to a subframe is to compare the protocol field value of the subframe to Last_PID. If they are equal, PFF is set to 0 and the protocol field is deleted. If not, PFF is set to 1, the protocol field is included, after PFC, in the subframe and Last_PID is set to the protocol field value of the current subframe. The stopping criteria in the concatenation process are (i) when the length of the next subframe is greater than MAX_SF_LEN bytes or (ii) the length of the entire PPP frame by including the new subframe exceeds the maximum receive unit (MRU) parameter negotiated during LCP [4], or (iii) there are no more subframes to concatenate.",
      "ja": "チャネルにPPPフレーム（多重化など）を送信した後、PPP多重化ロジックは、送信されるPPPフレームを保持するバッファーを調べます。複数のフレームがある場合、PPP多重化ロジックは、バッファ内の最初のフレームの長さがMAX_SF_LENバイト以下であるかどうかを確認します。その場合、送信機は、PPP多重化フレーム（0x59）に対応するプロトコルフィールド値を使用して、多重化されたPPPフレームのコンパイルを開始します。各サブフレームについて、プロトコルフィールドをサブフレームに準備することを決定するテストは、サブフレームのプロトコルフィールド値をlast_pidと比較することです。それらが等しい場合、PFFは0に設定され、プロトコルフィールドが削除されます。そうでない場合、PFFが1に設定されている場合、PFCの後にサブフレームにプロトコルフィールドが含まれ、last_PIDは現在のサブフレームのプロトコルフィールド値に設定されます。連結プロセスの停止基準は、（i）次のサブフレームの長さがMAX_SF_LENバイトよりも大きい場合、または（ii）新しいサブフレームを含めることにより、PPPフレーム全体の長さが最大受信ユニット（MRU）パラメーターを超えて交渉された場合です。LCP [4]、または（iii）連結するサブフレームはもうありません。"
    },
    {
      "indent": 3,
      "text": "Implementers may choose additionally to implement using timers. In such a case a timeout in addition to the conditions stated above is used as a stopping criteria of the multiplexing process. Moreover, it may be desirable to limit the maximum size of a multiplexed packet to be considerably smaller than MRU for reasons of multiplexing latency and packet error considerations.",
      "ja": "実装者は、タイマーを使用して実装するために追加を選択できます。そのような場合、上記の条件に加えて、マルチプレックスプロセスの停止基準として使用されます。さらに、多重化されたレイテンシとパケットエラーの考慮事項の理由により、多重化パケットの最大サイズをMRUよりもかなり小さくすることが望ましい場合があります。"
    },
    {
      "indent": 0,
      "text": "1.3 Receiver procedure",
      "section_title": true,
      "ja": "1.3 受信手順"
    },
    {
      "indent": 3,
      "text": "If a multiplexed frame, i.e., a frame with Protocol field value equal to PPP Multiplexed Frame (0x0059), is received, the frame is demultiplexed in order using the following input demultiplexing logic. Similar to a transmitter, the receiver has a state variable called Last_rcvd_PID, which is the value of the protocol field in the most recently demultiplexed subframe with PFF=1. Last_rcvd_PID is initialized to default PID value negotiated by PPPMuxCP. If PFF=0 for a subframe, Last_rcvd_PID is appended to the beginning of the subframe before handing the subframe, as determined by the length field, to the PPP logic. If PFF=1 for a subframe, Last_rcvd_PID is set to this value and the subframe, as determined by the length field, is passed to PPP logic. The remainder of the frame is returned to the demultiplexor. Each succeeding subframe is processed similarly. This processing is complete when the remainder of the frame is empty, or when the size field of a subframe exceeds the amount of data remaining in a packet. In the latter case, there is an error either in the length field of the last subframe or in the length field of one of the previous subframes. In either case the last subframe must be dropped by the demultiplexing logic.",
      "ja": "多重化されたフレーム、つまり、PPP多重化フレーム（0x0059）に等しいプロトコルフィールド値を持つフレームを受信すると、フレームは次の入力反射ロジックを使用して順番に反射されます。送信機と同様に、受信機にはlast_rcvd_pidと呼ばれる状態変数があります。これは、PFF = 1を使用して、最近脱線したサブフレームのプロトコルフィールドの値です。last_rcvd_pidは、pppmuxcpによってネゴシエートされたデフォルトのpid値に初期化されます。サブフレームの場合、PFF = 0の場合、last_rcvd_pidは、長さフィールドで決定されたサブフレームをPPPロジックに渡す前に、サブフレームの先頭に追加されます。サブフレームの場合はpff = 1の場合、last_rcvd_pidがこの値に設定され、長さフィールドで決定されるサブフレームがPPPロジックに渡されます。フレームの残りの部分はDemultiplexorに返されます。後続の各サブフレームは同様に処理されます。この処理は、フレームの残りの部分が空の場合、またはサブフレームのサイズフィールドがパケットに残っているデータの量を超えるときに完了します。後者の場合、最後のサブフレームの長さフィールドまたは以前のサブフレームの1つの長さフィールドのいずれかにエラーがあります。いずれの場合も、最後のサブフレームは、非複数のロジックによって削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "It is illegal to put a multiplexed frame within a multiplexed frame.",
      "ja": "多重化されたフレームを多重化されたフレームに配置することは違法です。"
    },
    {
      "indent": 0,
      "text": "2. PPP Network Control Protocol for PPP Multiplexing (PPPMuxCP)",
      "section_title": true,
      "ja": "2. PPPマルチプレックスのPPPネットワーク制御プロトコル（PPPMUXCP）"
    },
    {
      "indent": 3,
      "text": "A receiver will offer its ability to received multiplexed frames by negotiating NCP for PPP multiplexing, PPPMuxCP. The protocol field value for a PPPMuxCP frames is 0x8059. PPPMuxCP is similar to other NCPs such as IPCP [6]. A transmitter may not send a multiplexed frame unless the peer has offered to receive multiplexed frames. Support of multiplexed frame reception is negotiated in each direction independently. Successful negotiation of PPPMuxCP does not obligate a peer to transmit multiplexed frames.",
      "ja": "受信機は、PPP多重化PPPMUXCPのNCPを交渉することにより、多重化されたフレームを受け取る機能を提供します。PPPMUXCPフレームのプロトコルフィールド値は0x8059です。PPPMUXCPは、IPCP [6]などの他のNCPに似ています。トランスミッターは、ピアが多重化されたフレームを受け取ることを申し出ていない限り、多重化されたフレームを送信することはできません。多重化されたフレーム受信のサポートは、独立して各方向に交渉されます。PPPMUXCPの交渉の成功は、仲間に多重化されたフレームを送信することを義務付けません。"
    },
    {
      "indent": 3,
      "text": "As part of the PPPMuxCP negotiation, a 'default PID' option is always negotiated. This enables the transmitter to transmit the first subframe of a PPP multiplexed frame without a PID (PFF=0), thus resulting in a saving of one or two bytes. Note that the negotiation of default PID does not require the transmitter to send the first subframe with PFF=0 even if doing so would optimize the transmission. And, as always, the option (and thus the default PID) is negotiated by the receiver, i.e., the receiver will interpret a received PPPmux packet using the default PID it offered.",
      "ja": "PPPMUXCP交渉の一部として、「デフォルトのPID」オプションは常にネゴシエートされます。これにより、送信機はPID（PFF = 0）なしでPPP多重化されたフレームの最初のサブフレームを送信できるため、1つまたは2つのバイトが保存されます。デフォルトのPIDのネゴシエーションでは、送信機にPFF = 0で最初のサブフレームを送信する必要がないことに注意してください。また、いつものように、オプション（したがってデフォルトのPID）はレシーバーによってネゴシエートされます。つまり、レシーバーは、提供されたデフォルトのPIDを使用して受信したPPPMUXパケットを解釈します。"
    },
    {
      "indent": 3,
      "text": "LCP frames MUST NOT be sent in Multiplexed frames. The only option in PPPMuxCP is the negotiation of Default PID and is shown below",
      "ja": "LCPフレームは、多重化されたフレームで送信してはなりません。PPPMUXCPの唯一のオプションは、デフォルトのPIDの交渉であり、以下に示されています"
    },
    {
      "indent": 3,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Type = 1    |   Length = 4  |        Default PID            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 16,
      "text": "Figure 2. Default PID option for PPPMuxCP",
      "ja": "図2. PPPMUXCPのデフォルトPIDオプション"
    },
    {
      "indent": 0,
      "text": "3. Interaction with PPP Multilink (MP) Protocol",
      "section_title": true,
      "ja": "3. PPPマルチリンク（MP）プロトコルとの相互作用"
    },
    {
      "indent": 3,
      "text": "PPP multiplexed frame option is negotiated by an NCP. LCP is negotiated over each member link of a multilink bundle and not on the bundle itself [5]. Thus in case of MP, PPPmux cannot be negotiated for individual links, but only for the bundle.",
      "ja": "PPP多重化フレームオプションは、NCPによってネゴシエートされます。LCPは、バンドル自体ではなく、マルチリンクバンドルの各メンバーリンクを介して交渉されます[5]。したがって、MPの場合、PPPMUXは個々のリンクについて交渉することはできませんが、バンドルのみです。"
    },
    {
      "indent": 3,
      "text": "Hence, on the transmitter side PPP multiplexing always occurs before multilink PPP encapsulation. On a link, an MP header (if present) MUST be outside of a PPPmux header (if present). Multilink frames must not be sent in Multiplexed frames.",
      "ja": "したがって、トランスミッター側では、Multilink PPPカプセル化の前に常にMultiplexingが発生します。リンクでは、MPヘッダー（存在する場合）は、PPPMuxヘッダー（存在する場合）の外側にある必要があります。マルチリンクフレームを多重化フレームで送信しないでください。"
    },
    {
      "indent": 0,
      "text": "4. Interaction with CCP and ECP",
      "section_title": true,
      "ja": "4. CCPおよびECPとの相互作用"
    },
    {
      "indent": 3,
      "text": "PPP multiplexing must be performed below (after) any bundle-level CCP and/or ECP, and above (before) MP and any per-link CCP and/or ECP. Thus, to negotiate the hypothetical transmit path sequence CCP -> PPPMux -> ECP, the bundle-level version of CCP (80fd) and the per-link version of ECP (8055) are negotiated along with the PPPMux Option.",
      "ja": "PPPマルチプレックスは、バンドルレベルのCCPおよび/またはECP、および上（前）MPおよびリンクごとのCCPおよび/またはECPの下で（後）（後）実行する必要があります。したがって、仮想送信パスシーケンスCCP-> PPPMUX-> ECPをネゴシエートするには、CCP（80FD）のバンドルレベルバージョンとECPのリンクごとのバージョン（8055）がPPPMUXオプションとともにネゴシエートされます。"
    },
    {
      "indent": 3,
      "text": "An implementation that cannot perform PPPMux above CCP or ECP MUST issue Protocol-Reject for the per-link forms of CCP and ECP if PPPMux has been negotiated.",
      "ja": "CCPまたはECPを超えるPPPMUXを実行できない実装は、PPPMUXが交渉された場合、CCPおよびECPのリンクごとのフォームにプロトコルリジェクトを発行する必要があります。"
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This document does not impose additional security considerations beyond those that apply to PPP and header-compression schemes over PPP.",
      "ja": "このドキュメントでは、PPPよりもPPPおよびヘッダー圧縮スキームに適用されるものを超えて、追加のセキュリティ上の考慮事項を課しません。"
    },
    {
      "indent": 0,
      "text": "6. Acknowledgements",
      "section_title": true,
      "ja": "6. 謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank contributors on the PPPext mailing list, especially James Carlson, for valuable inputs to this document.",
      "ja": "著者は、この文書への貴重な入力について、PPPEXTメーリングリスト、特にJames Carlsonの貢献者に感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 3,
      "text": "[1] Townsley, W., Valencia, A., Rubens, A., Pall, G., Zorn, G. and B. Palter, \"Layer Two Tunneling Protocol \"L2TP\"\", RFC 2661, August 1999.",
      "ja": "[1] Townsley、W.、Valencia、A.、Rubens、A.、Pall、G.、Zorn、G.およびB. Palter、「レイヤー2トンネルプロトコル \"L2TP\" \"、RFC 2661、1999年8月。"
    },
    {
      "indent": 3,
      "text": "[2] Simpson, W., Ed., \"PPP LCP extensions\", RFC 1570, January, 1994.",
      "ja": "[2] Simpson、W.、ed。、「PPP LCP Extensions」、RFC 1570、1994年1月。"
    },
    {
      "indent": 3,
      "text": "[3] Simpson, W., Ed., \"PPP in HDLC-like Framing\", STD 51, RFC 1662, July 1994.",
      "ja": "[3] Simpson、W.、ed。、「HDLCのようなフレーミングのPPP」、STD 51、RFC 1662、1994年7月。"
    },
    {
      "indent": 3,
      "text": "[4] Simpson, W., Ed., \"The Point-To-Point Protocol (PPP)\", STD 51, RFC 1661, July 1994.",
      "ja": "[4] Simpson、W.、ed。、「ポイントツーポイントプロトコル（PPP）」、STD 51、RFC 1661、1994年7月。"
    },
    {
      "indent": 3,
      "text": "[5] Sklower, K., Lloyd, B., McGregor, G., Carr, D., and T. Coradetti, \"The PPP Multilink Protocol (MP)\", RFC 1990, August 1996.",
      "ja": "[5] Sklower、K.、Lloyd、B.、McGregor、G.、Carr、D。、およびT. Coradetti、「The PPP Multilink Protocol（MP）」、RFC 1990、1996年8月。"
    },
    {
      "indent": 3,
      "text": "[6] McGregor, G., \"The PPP Internet Protocol Control Protocol (IPCP)\", RFC 1332, May 1992.",
      "ja": "[6] McGregor、G。、「PPPインターネットプロトコル制御プロトコル（IPCP）」、RFC 1332、1992年5月。"
    },
    {
      "indent": 3,
      "text": "[7] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[7] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 0,
      "text": "8. Author's Addresses",
      "section_title": true,
      "ja": "8. 著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Rajesh Pazhyannur Motorola, Network Solutions Sector 1501, W. Shure Drive Arlington Heights, IL 60004",
      "ja": "Rajesh Pazhyannur Motorola、Network Solutions Sector 1501、W。ShureDrive Arlington Heights、IL 60004"
    },
    {
      "indent": 3,
      "text": "Phone: (847) 632-4524 EMail: pazhynnr@cig.mot.com",
      "ja": "電話：（847）632-4524メール：pazhynnr@cig.mot.com"
    },
    {
      "indent": 3,
      "text": "Irfan Ali Motorola, Network Solutions Sector 1501, W. Shure Drive Arlington Heights, IL 60004",
      "ja": "Irfan Ali Motorola、Network Solutions Sector 1501、W。ShureDrive Arlington Heights、IL 60004"
    },
    {
      "indent": 3,
      "text": "Phone: (847) 632-3281 EMail: fia225@email.mot.com",
      "ja": "電話：（847）632-3281メール：fia225@email.mot.com"
    },
    {
      "indent": 3,
      "text": "Craig Fox Cisco Systems 170 W. Tasman Street San Jose, CA 95134",
      "ja": "Craig Fox Cisco Systems 170 W. Tasman Street San Jose、CA 95134"
    },
    {
      "indent": 3,
      "text": "Phone: (408) 526-6296 EMail: fox@cisco.com",
      "ja": "電話：（408）526-6296メール：fox@cisco.com"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "ja": "完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2001). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2001）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があり、それについてコメントまたは説明する派生作品、またはその実装を支援することができます。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "このドキュメントと本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}