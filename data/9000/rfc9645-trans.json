{
  "title": {
    "text": "RFC 9645 - YANG Groupings for TLS Clients and TLS Servers",
    "ja": "RFC 9645 - TLSクライアントおよびTLSサーバー向けのYangグループ"
  },
  "number": 9645,
  "created_at": "2024-10-21 23:24:37.037359+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         K. Watsen\nRequest for Comments: 9645                               Watsen Networks\nCategory: Standards Track                                   October 2024\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "YANG Groupings for TLS Clients and TLS Servers",
      "section_title": true,
      "ja": "TLSクライアントおよびTLSサーバー向けのYangグループ"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "section_title": true,
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document presents four YANG 1.1 modules -- three IETF modules and one supporting IANA module.",
      "ja": "このドキュメントでは、4つのYang 1.1モジュールの3つのIETFモジュールと1つのIANAモジュールをサポートしています。"
    },
    {
      "indent": 3,
      "text": "The three IETF modules are \"ietf-tls-common\", \"ietf-tls-client\", and \"ietf-tls-server\". The \"ietf-tls-client\" and \"ietf-tls-server\" modules are the primary productions of this work, supporting the configuration and monitoring of TLS clients and servers.",
      "ja": "3つのIETFモジュールは、「IETF-TLS-COMMON」、「IETF-TLS-Client」、および「IETF-TLS-SERVER」です。「IETF-TLS-Client」および「IETF-TLS-SERVER」モジュールは、この作業の主要な作品であり、TLSクライアントとサーバーの構成と監視をサポートしています。"
    },
    {
      "indent": 3,
      "text": "The IANA module is \"iana-tls-cipher-suite-algs\". This module defines YANG enumerations that provide support for an IANA-maintained algorithm registry.",
      "ja": "IANAモジュールは「IANA-TLS-Cipher-Suite-Algs」です。このモジュールは、IANAが維持したアルゴリズムレジストリのサポートを提供するYang列挙を定義します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "section_title": true,
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準トラックドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表しています。公開レビューを受けており、インターネットエンジニアリングステアリンググループ（IESG）からの出版が承認されています。インターネット標準の詳細については、RFC 7841のセクション2で入手できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9645.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https://www.rfc-editor.org/info/rfc9645で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "section_title": true,
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2024 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2024 IETF Trustおよび文書著者として特定された人。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Revised BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Revised BSD License.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、セクション4.Eで説明されている法的規定のセクション4.Eで説明されており、改訂されたBSDライセンスで説明されている保証なしで提供されるように、改訂されたBSDライセンステキストを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "section_title": true,
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n  1.1.  Regarding the Three IETF Modules\n  1.2.  Relation to Other RFCs\n  1.3.  Specification Language\n  1.4.  Adherence to the NMDA\n  1.5.  Conventions\n2.  The \"ietf-tls-common\" Module\n  2.1.  Data Model Overview\n  2.2.  Example Usage\n  2.3.  YANG Module\n3.  The \"ietf-tls-client\" Module\n  3.1.  Data Model Overview\n  3.2.  Example Usage\n  3.3.  YANG Module\n4.  The \"ietf-tls-server\" Module\n  4.1.  Data Model Overview\n  4.2.  Example Usage\n  4.3.  YANG Module\n5.  Security Considerations\n  5.1.  Considerations for the \"iana-tls-cipher-suite-algs\" YANG\n        Module\n  5.2.  Considerations for the \"ietf-tls-common\" YANG Module\n  5.3.  Considerations for the \"ietf-tls-client\" YANG Module\n  5.4.  Considerations for the \"ietf-tls-server\" YANG Module\n6.  IANA Considerations\n  6.1.  The IETF XML Registry\n  6.2.  The YANG Module Names Registry\n  6.3.  Considerations for the \"iana-tls-cipher-suite-algs\" YANG\n        Module\n7.  References\n  7.1.  Normative References\n  7.2.  Informative References\nAppendix A.  Script to Generate IANA-Maintained YANG Modules\nAcknowledgements\nContributors\nAuthor's Address",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document presents four YANG 1.1 [RFC7950] modules -- three IETF modules and one IANA module.",
      "ja": "このドキュメントでは、4つのYang 1.1 [RFC7950]モジュール（3つのIETFモジュールと1つのIANAモジュール）を示しています。"
    },
    {
      "indent": 3,
      "text": "The three IETF modules are \"ietf-tls-common\" (Section 2), \"ietf-tls-client\" (Section 3), and \"ietf-tls-server\" (Section 4). The \"ietf-tls-client\" and \"ietf-tls-server\" modules are the primary productions of this work, supporting the configuration and monitoring of TLS clients and servers.",
      "ja": "3つのIETFモジュールは、「IETF-TLS-Common」（セクション2）、「IETF-TLS-Client」（セクション3）、および「IETF-TLS-SERVER」（セクション4）です。「IETF-TLS-Client」および「IETF-TLS-SERVER」モジュールは、この作業の主要な作品であり、TLSクライアントとサーバーの構成と監視をサポートしています。"
    },
    {
      "indent": 3,
      "text": "The groupings defined in this document are expected to be used in conjunction with the groupings defined in an underlying transport-level module, such as the groupings defined in [RFC9643]. The transport-level data model enables the configuration of transport-level values such as a remote address, a remote port, a local address, and a local port.",
      "ja": "このドキュメントで定義されているグループは、[RFC9643]で定義されたグループ化など、基礎となる輸送レベルモジュールで定義されたグループ化と組み合わせて使用されることが期待されています。トランスポートレベルのデータモデルにより、リモートアドレス、リモートポート、ローカルアドレス、ローカルポートなどのトランスポートレベルの値の構成が可能になります。"
    },
    {
      "indent": 3,
      "text": "The IANA module is \"iana-tls-cipher-suite-algs\". This module defines YANG enumerations that provide support for an IANA-maintained algorithm registry.",
      "ja": "IANAモジュールは「IANA-TLS-Cipher-Suite-Algs」です。このモジュールは、IANAが維持したアルゴリズムレジストリのサポートを提供するYang列挙を定義します。"
    },
    {
      "indent": 3,
      "text": "IANA used the script in Appendix A to generate the \"iana-tls-cipher-suite-algs\" YANG module. This document does not publish the initial version of the module; it is published and maintained by IANA.",
      "ja": "IANAは付録Aのスクリプトを使用して、「IANA-TLS-Cipher-Suite-Algs」Yangモジュールを生成しました。このドキュメントは、モジュールの初期バージョンを公開していません。IANAによって公開され、維持されています。"
    },
    {
      "indent": 0,
      "text": "1.1. Regarding the Three IETF Modules",
      "section_title": true,
      "ja": "1.1. 3つのIETFモジュールについて"
    },
    {
      "indent": 3,
      "text": "The three IETF modules define features and groupings to model \"generic\" TLS clients and TLS servers, where \"generic\" should be interpreted as \"least common denominator\" rather than \"complete.\" Basic TLS protocol support is afforded by these modules, leaving configuration of advance features to augmentations made by consuming modules.",
      "ja": "3つのIETFモジュールは、「一般的な」TLSクライアントとTLSサーバーをモデル化する機能とグループ化を定義します。「汎用」は「完全」ではなく「最も一般的な分母」と解釈する必要があります。これらのモジュールによって基本的なTLSプロトコルサポートが提供され、モジュールを消費することで行われた増強に事前機能の構成を残します。"
    },
    {
      "indent": 3,
      "text": "It is intended that the YANG groupings will be used by applications needing to configure TLS client and server protocol stacks. For instance, these groupings are used to help define the data model for HTTPS [RFC9110] and clients and servers based on the Network Configuration Protocol (NETCONF) over TLS [RFC7589] in [HTTP-CLIENT-SERVER] and [NETCONF-CLIENT-SERVER], respectively.",
      "ja": "Yangグループは、TLSクライアントとサーバーのプロトコルスタックを構成する必要があるアプリケーションで使用されることを意図しています。たとえば、これらのグループ化は、[http-client-server]および[netconf-client-のTLS [RFC7589]を介したネットワーク構成プロトコル（NetConf）に基づいて、HTTPS [RFC9110]およびクライアントとサーバーのデータモデルを定義するのに役立つために使用されます。サーバー]、それぞれ。"
    },
    {
      "indent": 3,
      "text": "The \"ietf-tls-client\" and \"ietf-tls-server\" YANG modules each define one grouping, which is focused on just TLS-specific configuration, and specifically avoid any transport-level configuration, such as what ports to listen on or connect to. This affords applications the opportunity to define their own strategy for how the underlying TCP connection is established. For instance, applications supporting NETCONF Call Home [RFC8071] could use the \"tls-server-grouping\" grouping for the TLS parts it provides, while adding data nodes for the TCP-level call-home configuration.",
      "ja": "「IETF-TLS-Client」および「IETF-TLS-SERVER」Yangモジュールはそれぞれ1つのグループを定義します。これは、TLS固有の構成のみに焦点を当てており、輸送レベルの構成を特に回避します。に接続します。これにより、アプリケーションは、基礎となるTCP接続がどのように確立されるかについての独自の戦略を定義する機会を提供します。たとえば、NetConf Call Home [RFC8071]をサポートするアプリケーションは、TCPレベルのコールホーム構成のデータノードを追加しながら、提供するTLSパーツの「TLS-Server-Grouping」グループを使用できます。"
    },
    {
      "indent": 3,
      "text": "Both TLS 1.2 and TLS 1.3 may be configured. TLS 1.2 [RFC5246] is obsoleted by TLS 1.3 [RFC8446] but is still in common use, and hence its \"feature\" statement is marked \"status deprecated\".",
      "ja": "TLS 1.2とTLS 1.3の両方が設定される場合があります。TLS 1.2 [RFC5246]はTLS 1.3 [RFC8446]によって廃止されていますが、まだ一般的に使用されているため、その「機能」ステートメントは「ステータスが非推奨」とマークされています。"
    },
    {
      "indent": 0,
      "text": "1.2. Relation to Other RFCs",
      "section_title": true,
      "ja": "1.2. 他のRFCとの関係"
    },
    {
      "indent": 3,
      "text": "This document presents four YANG modules [RFC7950] that are part of a collection of RFCs that work together to ultimately support the configuration of both the clients and servers of the NETCONF [RFC6241] and RESTCONF [RFC8040] protocols.",
      "ja": "このドキュメントでは、4つのYangモジュール[RFC7950]を提示します。これは、NetConf [RFC6241]とRestConf [RFC8040]プロトコルのクライアントとサーバーの両方の構成を最終的にサポートするRFCのコレクションの一部です。"
    },
    {
      "indent": 3,
      "text": "The dependency relationship between the primary YANG groupings defined in the various RFCs is presented in the diagram below. In some cases, a document may define secondary groupings that introduce dependencies not illustrated in the diagram. The labels in the diagram are shorthand names for the defining RFCs. The citation references for the shorthand names are provided below the diagram.",
      "ja": "さまざまなRFCで定義されている主要なヤングループ間の依存関係については、以下の図に示されています。場合によっては、ドキュメントは、図に示されていない依存関係を導入する二次グループを定義する場合があります。図のラベルは、定義するRFCの略語名です。速記の名前の引用参照は、図の下に記載されています。"
    },
    {
      "indent": 3,
      "text": "Please note that the arrows in the diagram point from referencer to referenced. For example, the \"crypto-types\" RFC does not have any dependencies, whilst the \"keystore\" RFC depends on the \"crypto-types\" RFC.",
      "ja": "参照者から参照されるまでの図の矢印に注意してください。たとえば、「暗号タイプ」RFCには依存関係がありませんが、「キーストア」RFCは「暗号タイプ」RFCに依存します。"
    },
    {
      "indent": 3,
      "text": "                               crypto-types\n                                 ^      ^\n                                /        \\\n                               /          \\\n                      truststore         keystore\n                       ^     ^             ^  ^\n                       |     +---------+   |  |\n                       |               |   |  |\n                       |      +------------+  |\ntcp-client-server      |     /         |      |\n   ^    ^        ssh-client-server     |      |\n   |    |           ^            tls-client-server\n   |    |           |              ^     ^        http-client-server\n   |    |           |              |     |                 ^\n   |    |           |        +-----+     +---------+       |\n   |    |           |        |                     |       |\n   |    +-----------|--------|--------------+      |       |\n   |                |        |              |      |       |\n   +-----------+    |        |              |      |       |\n               |    |        |              |      |       |\n               |    |        |              |      |       |\n            netconf-client-server       restconf-client-server",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "+========================+==========================+\n| Label in Diagram       | Originating RFC          |\n+========================+==========================+\n| crypto-types           | [RFC9640]                |\n+------------------------+--------------------------+\n| truststore             | [RFC9641]                |\n+------------------------+--------------------------+\n| keystore               | [RFC9642]                |\n+------------------------+--------------------------+\n| tcp-client-server      | [RFC9643]                |\n+------------------------+--------------------------+\n| ssh-client-server      | [RFC9644]                |\n+------------------------+--------------------------+\n| tls-client-server      | RFC 9645                 |\n+------------------------+--------------------------+\n| http-client-server     | [HTTP-CLIENT-SERVER]     |\n+------------------------+--------------------------+\n| netconf-client-server  | [NETCONF-CLIENT-SERVER]  |\n+------------------------+--------------------------+\n| restconf-client-server | [RESTCONF-CLIENT-SERVER] |\n+------------------------+--------------------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Table 1: Labels in Diagram to RFC Mapping",
      "ja": "表1：RFCマッピングへの図のラベル"
    },
    {
      "indent": 0,
      "text": "1.3. Specification Language",
      "section_title": true,
      "ja": "1.3. 仕様言語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "キーワード「必須」、「必要」、「必須」、「shall」、「shall」、「shill \"of\"、 \"nove\"、 \"becommended\"、 \"becommented\"、 \"may\"、 \"optional「このドキュメントでは、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.4. Adherence to the NMDA",
      "section_title": true,
      "ja": "1.4. NMDAへの順守"
    },
    {
      "indent": 3,
      "text": "This document is compliant with the Network Management Datastore Architecture (NMDA) [RFC8342]. For instance, as described in [RFC9641] and [RFC9642], trust anchors and keys installed during manufacturing are expected to appear in <operational> (Section 5.3 of [RFC8342]) and <system> [SYSTEM-CONFIG] if implemented.",
      "ja": "このドキュメントは、ネットワーク管理データストアアーキテクチャ（NMDA）[RFC8342]に準拠しています。たとえば、[RFC9641]および[RFC9642]で説明されているように、製造中に設置された信頼のアンカーとキーは、実装されている場合は<操作>（[RFC8342]のセクション5.3）および<System> [System-Config]に表示されると予想されます。"
    },
    {
      "indent": 0,
      "text": "1.5. Conventions",
      "section_title": true,
      "ja": "1.5. 規約"
    },
    {
      "indent": 3,
      "text": "Various examples in this document use \"BASE64VALUE=\" as a placeholder value for binary data that has been base64 encoded (per Section 9.8 of [RFC7950]). This placeholder value is used because real base64-encoded structures are often many lines long and hence distracting to the example being presented.",
      "ja": "このドキュメントのさまざまな例では、base64エンコードされたバイナリデータのプレースホルダー値として「base64Value =」を使用します（[RFC7950]のセクション9.8ごと）。実際のBase64エンコードされた構造は、多くの場合、多くの行が長く、したがって提示されている例に気を取るため、このプレースホルダーの価値が使用されます。"
    },
    {
      "indent": 3,
      "text": "Various examples in this document use the XML [W3C.REC-xml-20081126] encoding. Other encodings, such as JSON [RFC8259], could alternatively be used.",
      "ja": "このドキュメントのさまざまな例は、XML [W3C.REC-XML-20081126]エンコードを使用しています。JSON [RFC8259]などのその他のエンコーディングを代わりに使用できます。"
    },
    {
      "indent": 3,
      "text": "Various examples in this document contain long lines that may be folded, as described in [RFC8792].",
      "ja": "このドキュメントのさまざまな例には、[RFC8792]で説明されているように、折り畳まれる可能性のある長い行が含まれています。"
    },
    {
      "indent": 0,
      "text": "2. The \"ietf-tls-common\" Module",
      "section_title": true,
      "ja": "2. 「IETF-TLS-Common」モジュール"
    },
    {
      "indent": 3,
      "text": "The TLS common model presented in this section contains features and groupings common to both TLS clients and TLS servers. The \"hello-params-grouping\" grouping can be used to configure the list of TLS algorithms permitted by the TLS client or TLS server. The lists of algorithms are ordered such that, if multiple algorithms are permitted by the client, the algorithm that appears first in its list and that is also permitted by the server is used for the TLS transport layer connection. The ability to restrict the algorithms allowed is provided in this grouping for TLS clients and TLS servers that are capable of doing so and that may serve to make TLS clients and TLS servers compliant with local security policies. This model supports both TLS 1.2 [RFC5246] and TLS 1.3 [RFC8446].",
      "ja": "このセクションで紹介するTLS共通モデルには、TLSクライアントとTLSサーバーの両方に共通の機能とグループが含まれています。「Hello-Params-Grouping」グループ化を使用して、TLSクライアントまたはTLSサーバーによって許可されているTLSアルゴリズムのリストを構成できます。アルゴリズムのリストは、クライアントによって複数のアルゴリズムが許可されている場合、そのリストに最初に表示され、サーバーによって許可されるアルゴリズムがTLS輸送層接続にも使用されるように順序付けられます。許可されているアルゴリズムを制限する機能は、TLSクライアントとTLSサーバーのこのグループで提供され、TLSクライアントとTLSサーバーをローカルセキュリティポリシーに準拠させるのに役立つ可能性があります。このモデルは、TLS 1.2 [RFC5246]とTLS 1.3 [RFC8446]の両方をサポートしています。"
    },
    {
      "indent": 3,
      "text": "Thus, in order to support both TLS 1.2 and TLS 1.3, the cipher suites part of the \"hello-params-grouping\" grouping should include the following three parameters for configuring its permitted TLS algorithms: TLS Cipher Suites, TLS SignatureScheme, and TLS Supported Groups.",
      "ja": "したがって、TLS 1.2とTLS 1.3の両方をサポートするために、「Hello-Params-Grouping」グループの暗号スイートの一部には、許可されたTLSアルゴリズムを構成するための次の3つのパラメーターを含める必要があります。グループ。"
    },
    {
      "indent": 0,
      "text": "2.1. Data Model Overview",
      "section_title": true,
      "ja": "2.1. データモデルの概要"
    },
    {
      "indent": 3,
      "text": "This section provides an overview of the \"ietf-tls-common\" module in terms of its features, identities, and groupings.",
      "ja": "このセクションでは、機能、アイデンティティ、およびグループ化の観点から、「IETF-TLS-Common」モジュールの概要を説明します。"
    },
    {
      "indent": 0,
      "text": "2.1.1. Features",
      "section_title": true,
      "ja": "2.1.1. 特徴"
    },
    {
      "indent": 3,
      "text": "The following diagram lists all the \"feature\" statements defined in the \"ietf-tls-common\" module:",
      "ja": "次の図には、「IETF-TLS-Common」モジュールで定義されているすべての「機能」ステートメントを示します。"
    },
    {
      "indent": 3,
      "text": "Features:\n  +-- tls12\n  +-- tls13\n  +-- hello-params\n  +-- asymmetric-key-pair-generation\n  +-- supported-algorithms",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The diagram above uses syntax that is similar to but not defined in [RFC8340].",
      "ja": "上記の図は、[RFC8340]で定義されていないものに似ていない構文を使用します。"
    },
    {
      "indent": 3,
      "text": "Please refer to the YANG module for a description of each feature.",
      "ja": "各機能の説明については、Yangモジュールを参照してください。"
    },
    {
      "indent": 0,
      "text": "2.1.2. Identities",
      "section_title": true,
      "ja": "2.1.2. アイデンティティ"
    },
    {
      "indent": 3,
      "text": "The following diagram illustrates the relationship amongst the \"identity\" statements defined in the \"ietf-tls-common\" module:",
      "ja": "次の図は、「IETF-TLS-Common」モジュールで定義されている「ID」ステートメント間の関係を示しています。"
    },
    {
      "indent": 3,
      "text": "Identities:\n  +-- tls-version-base\n     +-- tls12\n     +-- tls13",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The diagram above uses syntax that is similar to but not defined in [RFC8340].",
      "ja": "上記の図は、[RFC8340]で定義されていないものに似ていない構文を使用します。"
    },
    {
      "indent": 3,
      "text": "Comments:",
      "ja": "コメント："
    },
    {
      "indent": 6,
      "text": "* The diagram shows that there are two base identities.",
      "ja": "* この図は、2つのベースアイデンティティがあることを示しています。"
    },
    {
      "indent": 6,
      "text": "* One base identity is used to specify TLS versions. This base identity is \"abstract\" in the object-oriented programming sense because it defines a \"class\" of things rather than a specific thing.",
      "ja": "* 1つのベースアイデンティティを使用して、TLSバージョンを指定します。このベースアイデンティティは、特定のものではなく、物事の「クラス」を定義するため、オブジェクト指向のプログラミングセンスでは「抽象」です。"
    },
    {
      "indent": 6,
      "text": "* These base identities are \"abstract\" in the object-oriented programming sense because they only define a \"class\" of things rather than a specific thing.",
      "ja": "* これらのベースアイデンティティは、特定のものではなく、物事の「クラス」のみを定義するため、オブジェクト指向のプログラミングセンスでは「抽象」です。"
    },
    {
      "indent": 0,
      "text": "2.1.3. Groupings",
      "section_title": true,
      "ja": "2.1.3. グループ化"
    },
    {
      "indent": 3,
      "text": "The \"ietf-tls-common\" module defines the following \"grouping\" statement:",
      "ja": "「IETF-TLS-Common」モジュールは、次の「グループ化」ステートメントを定義します。"
    },
    {
      "indent": 6,
      "text": "* hello-params-grouping",
      "ja": "* hello-params-grouping"
    },
    {
      "indent": 3,
      "text": "This grouping is presented in the following subsection.",
      "ja": "このグループ化は、次のサブセクションに表示されます。"
    },
    {
      "indent": 0,
      "text": "2.1.3.1. The \"hello-params-grouping\" Grouping",
      "section_title": true,
      "ja": "2.1.3.1. 「Hello-Params-Grouping」グループ化"
    },
    {
      "indent": 3,
      "text": "The following tree diagram [RFC8340] illustrates the \"hello-params-grouping\" grouping:",
      "ja": "次のツリー図[RFC8340]は、「Hello-Params-Grouping」グループ化を示しています。"
    },
    {
      "indent": 5,
      "text": "grouping hello-params-grouping:\n  +-- tls-versions\n  |  +-- min?   identityref\n  |  +-- max?   identityref\n  +-- cipher-suites\n     +-- cipher-suite*   tlscsa:tls-cipher-suite-algorithm",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Comments:",
      "ja": "コメント："
    },
    {
      "indent": 6,
      "text": "* This grouping is used by both the \"tls-client-grouping\" and the \"tls-server-grouping\" groupings defined in Sections 3.1.2.1 and 4.1.2.1, respectively.",
      "ja": "* このグループ化は、セクション3.1.2.1および4.1.2.1でそれぞれ定義されている「TLS-Client-Grouping」と「TLS-Server-Grouping」グループの両方で使用されます。"
    },
    {
      "indent": 6,
      "text": "* This grouping enables client and server configurations to specify the TLS versions and cipher suites that are to be used when establishing TLS sessions.",
      "ja": "* このグループ化により、クライアントとサーバーの構成は、TLSセッションを確立するときに使用するTLSバージョンと暗号スイートを指定できます。"
    },
    {
      "indent": 6,
      "text": "* The \"cipher-suites\" list is \"ordered-by user\".",
      "ja": "* 「cipher-sites」リストは「ユーザーごとに注文」です。"
    },
    {
      "indent": 0,
      "text": "2.1.4. Protocol-Accessible Nodes",
      "section_title": true,
      "ja": "2.1.4. プロトコルアクセス可能なノード"
    },
    {
      "indent": 3,
      "text": "The following tree diagram [RFC8340] lists all the protocol-accessible nodes defined in the \"ietf-tls-common\" module, without expanding the \"grouping\" statements:",
      "ja": "次のツリー図[RFC8340]に、「グループ化」ステートメントを拡張せずに、「IETF-TLS-Common」モジュールで定義されたすべてのプロトコルアクセス可能なノードを示します。"
    },
    {
      "indent": 3,
      "text": "module: ietf-tls-common\n  +--ro supported-algorithms {algorithm-discovery}?\n     +--ro supported-algorithm*   tlscsa:tls-cipher-suite-algorithm\n\n  rpcs:\n    +---x generate-asymmetric-key-pair\n            {asymmetric-key-pair-generation}?\n       +---w input\n       |  +---w algorithm\n       |  |       tlscsa:tls-cipher-suite-algorithm\n       |  +---w num-bits?               uint16\n       |  +---w private-key-encoding\n       |     +---w (private-key-encoding)\n       |        +--:(cleartext) {ct:cleartext-private-keys}?\n       |        |  +---w cleartext?   empty\n       |        +--:(encrypted) {ct:encrypted-private-keys}?\n       |        |  +---w encrypted\n       |        |     +---w ks:encrypted-by-grouping\n       |        +--:(hidden) {ct:hidden-private-keys}?\n       |           +---w hidden?      empty\n       +--ro output\n          +--ro (key-or-hidden)?\n             +--:(key)\n             |  +---u ct:asymmetric-key-pair-grouping\n             +--:(hidden)\n                +--ro location?\n                        instance-identifier",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Comments:",
      "ja": "コメント："
    },
    {
      "indent": 6,
      "text": "* Protocol-accessible nodes are nodes that are accessible when the module is \"implemented\", as described in Section 5.6.5 of [RFC7950].",
      "ja": "* プロトコルアクセス可能なノードは、[RFC7950]のセクション5.6.5で説明されているように、モジュールが「実装」されるときにアクセス可能なノードです。"
    },
    {
      "indent": 6,
      "text": "* The protocol-accessible nodes for the \"ietf-tls-common\" module are limited to the \"supported-algorithms\" container, which is constrained by the \"algorithm-discovery\" feature, and the \"generate-asymmetric-key-pair\" RPC, which is constrained by the \"asymmetric-key-pair-generation\" feature.",
      "ja": "* 「IETF-TLS-COMMON」モジュールのプロトコルアクセス可能なノードは、「アルゴリズム配分」機能によって制約される「サポートされたアルゴリズム」コンテナに限定されています。、「非対称キーペアジェネレーション」機能によって制約されています。"
    },
    {
      "indent": 6,
      "text": "* The \"encrypted-by-grouping\" grouping is discussed in Section 2.1.3.1 of [RFC9642].",
      "ja": "* [暗号化]グループ化については、[RFC9642]のセクション2.1.3.1で説明しています。"
    },
    {
      "indent": 6,
      "text": "* The \"asymmetric-key-pair-grouping\" grouping is discussed in Section 2.1.4.6 of [RFC9640].",
      "ja": "* 「非対称キーペアグループ」グループ化については、[RFC9640]のセクション2.1.4.6で説明します。"
    },
    {
      "indent": 0,
      "text": "2.2. Example Usage",
      "section_title": true,
      "ja": "2.2. 使用の例"
    },
    {
      "indent": 3,
      "text": "The following example illustrates the \"hello-params-grouping\" grouping when populated with some data.",
      "ja": "次の例は、いくつかのデータが入力されたときの「Hello-Params-Grouping」グループ化を示しています。"
    },
    {
      "indent": 3,
      "text": "<!-- The outermost element below doesn't exist in the data model. -->\n<!--  It simulates if the \"grouping\" were a \"container\" instead.  -->\n\n<hello-params\n   xmlns=\"urn:ietf:params:xml:ns:yang:ietf-tls-common\"\n   xmlns:tlscmn=\"urn:ietf:params:xml:ns:yang:ietf-tls-common\">\n  <tls-versions>\n    <min>tlscmn:tls12</min>\n    <max>tlscmn:tls13</max>\n  </tls-versions>\n  <cipher-suites>\n    <cipher-suite>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</cipher-suite>\n    <cipher-suite>TLS_DHE_RSA_WITH_AES_128_CBC_SHA256</cipher-suite>\n    <cipher-suite>TLS_RSA_WITH_3DES_EDE_CBC_SHA</cipher-suite>\n  </cipher-suites>\n</hello-params>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following example illustrates operational state data indicating the TLS algorithms supported by the server.",
      "ja": "次の例は、サーバーがサポートするTLSアルゴリズムを示す運用状態データを示しています。"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\' line wrapping per RFC 8792 ================\n\n<supported-algorithms\n  xmlns=\"urn:ietf:params:xml:ns:yang:ietf-tls-common\">\n  <supported-algorithm>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</support\\\ned-algorithm>\n  <supported-algorithm>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</supp\\\norted-algorithm>\n  <supported-algorithm>TLS_DHE_RSA_WITH_AES_128_CBC_SHA256</supporte\\\nd-algorithm>\n  <supported-algorithm>TLS_RSA_WITH_3DES_EDE_CBC_SHA</supported-algo\\\nrithm>\n  <supported-algorithm>TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384</suppor\\\nted-algorithm>\n  <supported-algorithm>TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256</su\\\npported-algorithm>\n  <supported-algorithm>TLS_ECCPWD_WITH_AES_256_GCM_SHA384</supported\\\n-algorithm>\n  <supported-algorithm>TLS_PSK_WITH_AES_256_CCM</supported-algorithm>\n  <supported-algorithm>TLS_PSK_WITH_AES_256_CCM_8</supported-algorit\\\nhm>\n  <supported-algorithm>TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384</sup\\\nported-algorithm>\n  <supported-algorithm>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384</support\\\ned-algorithm>\n  <supported-algorithm>TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA</supported\\\n-algorithm>\n  <supported-algorithm>TLS_DH_DSS_WITH_AES_128_GCM_SHA256</supported\\\n-algorithm>\n</supported-algorithms>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following example illustrates the \"generate-asymmetric-key-pair\" RPC.",
      "ja": "次の例は、「生成 - アジサイルキーペア」RPCを示しています。"
    },
    {
      "indent": 3,
      "text": "REQUEST",
      "ja": "リクエスト"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\' line wrapping per RFC 8792 ================\n\n<rpc message-id=\"101\"\n  xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <generate-asymmetric-key-pair\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-tls-common\">\n    <algorithm>TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256</algorithm>\n    <num-bits>521</num-bits>\n    <private-key-encoding>\n      <encrypted>\n        <asymmetric-key-ref>hidden-asymmetric-key</asymmetric-key-re\\\nf>\n      </encrypted>\n    </private-key-encoding>\n  </generate-asymmetric-key-pair>\n</rpc>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "RESPONSE",
      "ja": "応答"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\' line wrapping per RFC 8792 ================\n\n<rpc-reply message-id=\"101\"\n  xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\n  xmlns:ct=\"urn:ietf:params:xml:ns:yang:ietf-crypto-types\"\n  xmlns:tlscmn=\"urn:ietf:params:xml:ns:yang:ietf-tls-common\">\n  <tlscmn:public-key-format>ct:subject-public-key-info-format</tlscm\\\nn:public-key-format>\n  <tlscmn:public-key>BASE64VALUE=</tlscmn:public-key>\n  <tlscmn:private-key-format>ct:ec-private-key-format</tlscmn:privat\\\ne-key-format>\n  <tlscmn:cleartext-private-key>BASE64VALUE=</tlscmn:cleartext-priva\\\nte-key>\n</rpc-reply>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "2.3. YANG Module",
      "section_title": true,
      "ja": "2.3. ヤンモジュール"
    },
    {
      "indent": 3,
      "text": "This YANG module has normative references to [RFC5288], [RFC5289], [RFC8422], [RFC9640], [RFC9642], [FIPS180-4], and [FIPS186-5].",
      "ja": "このYangモジュールには、[RFC5288]、[RFC5289]、[RFC8422]、[RFC9640]、[RFC9642]、[FIPS180-4]、[FIPS186-5]への規範的な参照があります。"
    },
    {
      "indent": 3,
      "text": "This YANG module has informative references to [RFC5246] and [RFC8446].",
      "ja": "このYangモジュールには、[RFC5246]および[RFC8446]への有益な参照があります。"
    },
    {
      "indent": 3,
      "text": "module ietf-tls-common {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-tls-common\";\n  prefix tlscmn;\n\n  import iana-tls-cipher-suite-algs {\n    prefix tlscsa;\n    reference\n      \"RFC 9645: YANG Groupings for TLS Clients and TLS Servers\";\n  }\n\n  import ietf-crypto-types {\n    prefix ct;\n    reference\n      \"RFC 9640: YANG Data Types and Groupings for Cryptography\";\n  }\n\n  import ietf-keystore {\n    prefix ks;\n    reference\n      \"RFC 9642: A YANG Data Model for a Keystore\";\n  }\n\n  organization\n    \"IETF NETCONF (Network Configuration) Working Group\";\n\n  contact\n    \"WG List:  NETCONF WG list <mailto:netconf@ietf.org>\n     WG Web:   https://datatracker.ietf.org/wg/netconf\n     Author:   Kent Watsen <mailto:kent+ietf@watsen.net>\n     Author:   Jeff Hartley <mailto:intensifysecurity@gmail.com>\n     Author:   Gary Wu <mailto:garywu@cisco.com>\";\n\n   description\n    \"This module defines common features and groupings for\n     Transport Layer Security (TLS).\n\n     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',\n     'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',\n     'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document\n     are to be interpreted as described in BCP 14 (RFC 2119)\n     (RFC 8174) when, and only when, they appear in all\n     capitals, as shown here.\n\n     Copyright (c) 2024 IETF Trust and the persons identified\n     as authors of the code. All rights reserved.\n\n     Redistribution and use in source and binary forms, with\n     or without modification, is permitted pursuant to, and\n     subject to the license terms contained in, the Revised\n     BSD License set forth in Section 4.c of the IETF Trust's\n     Legal Provisions Relating to IETF Documents\n     (https://trustee.ietf.org/license-info).\n\n     This version of this YANG module is part of RFC 9645\n     (https://www.rfc-editor.org/info/rfc9645); see the RFC\n     itself for full legal notices.\";\n\n  revision 2024-10-10 {\n    description\n      \"Initial version.\";\n    reference\n      \"RFC 9645: YANG Groupings for TLS Clients and TLS Servers\";\n  }\n\n  // Features\n\n  feature tls12 {\n    description\n      \"TLS Protocol Version 1.2 is supported. TLS 1.2 is obsolete,\n       and thus it is NOT RECOMMENDED to enable this feature.\";\n    reference\n      \"RFC 5246: The Transport Layer Security (TLS) Protocol\n                 Version 1.2\";\n  }\n\n  feature tls13 {\n    description\n      \"TLS Protocol Version 1.3 is supported.\";\n    reference\n      \"RFC 8446: The Transport Layer Security (TLS)\n                 Protocol Version 1.3\";\n  }\n\n  feature hello-params {\n    description\n      \"TLS hello message parameters are configurable.\";\n  }\n\n  feature algorithm-discovery {\n    description\n      \"Indicates that the server implements the\n       'supported-algorithms' container.\";\n  }\n\n  feature asymmetric-key-pair-generation {\n    description\n      \"Indicates that the server implements the\n       'generate-asymmetric-key-pair' RPC.\";\n  }\n\n  // Identities\n\n  identity tls-version-base {\n    description\n      \"Base identity used to identify TLS protocol versions.\";\n  }\n\n  identity tls12 {\n    if-feature \"tls12\";\n    base tls-version-base;\n    description\n      \"TLS Protocol Version 1.2.\";\n    reference\n      \"RFC 5246: The Transport Layer Security (TLS) Protocol\n                 Version 1.2\";\n  }\n\n  identity tls13 {\n    if-feature \"tls13\";\n    base tls-version-base;\n    description\n      \"TLS Protocol Version 1.3.\";\n    reference\n      \"RFC 8446: The Transport Layer Security (TLS)\n                 Protocol Version 1.3\";\n  }\n\n  // Typedefs\n\n  typedef epsk-supported-hash {\n    type enumeration {\n      enum sha-256 {\n        description\n          \"The SHA-256 hash.\";\n      }\n      enum sha-384 {\n        description\n          \"The SHA-384 hash.\";\n      }\n    }\n    description\n      \"As per Section 4.2.11 of RFC 8446, the hash algorithm\n       supported by an instance of an External Pre-Shared\n       Key (EPSK).\";\n    reference\n      \"RFC 8446: The Transport Layer Security (TLS)\n                 Protocol Version 1.3\";\n  }\n\n\n  // Groupings\n\n  grouping hello-params-grouping {\n    description\n      \"A reusable grouping for TLS hello message parameters.\";\n    reference\n      \"RFC 5246: The Transport Layer Security (TLS) Protocol\n                 Version 1.2\n       RFC 8446: The Transport Layer Security (TLS) Protocol\n                 Version 1.3\";\n    container tls-versions {\n      description\n        \"Parameters limiting which TLS versions, amongst\n         those enabled by 'features', are presented during\n         the TLS handshake.\";\n      leaf min {\n        type identityref {\n          base tls-version-base;\n        }\n        description\n          \"If not specified, then there is no configured\n           minimum version.\";\n      }\n      leaf max {\n        type identityref {\n          base tls-version-base;\n        }\n        description\n          \"If not specified, then there is no configured\n           maximum version.\";\n      }\n    }\n    container cipher-suites {\n      description\n        \"Parameters regarding cipher suites.\";\n      leaf-list cipher-suite {\n        type tlscsa:tls-cipher-suite-algorithm;\n        ordered-by user;\n        description\n          \"Acceptable cipher suites in order of descending\n           preference.  The configured host key algorithms should\n           be compatible with the algorithm used by the configured\n           private key.  Please see Section 5 of RFC 9645 for\n           valid combinations.\n\n           If this leaf-list is not configured (has zero elements),\n           the acceptable cipher suites are implementation-\n           defined.\";\n        reference\n          \"RFC 9645: YANG Groupings for TLS Clients and TLS Servers\";\n      }\n    }\n  } // hello-params-grouping\n\n\n  // Protocol-accessible Nodes\n\n  container supported-algorithms {\n    if-feature \"algorithm-discovery\";\n    config false;\n    description\n      \"A container for a list of cipher suite algorithms supported\n       by the server.\";\n    leaf-list supported-algorithm {\n      type tlscsa:tls-cipher-suite-algorithm;\n      description\n        \"A cipher suite algorithm supported by the server.\";\n    }\n  }\n\n  rpc generate-asymmetric-key-pair {\n    if-feature \"asymmetric-key-pair-generation\";\n    description\n      \"Requests the device to generate an 'asymmetric-key-pair'\n       key using the specified key algorithm.\";\n    input {\n      leaf algorithm {\n        type tlscsa:tls-cipher-suite-algorithm;\n        mandatory true;\n        description\n          \"The cipher suite algorithm that the generated key\n           works with.  Implementations derive the public key\n           algorithm from the cipher suite algorithm.  For\n           example, cipher suite\n           'tls-rsa-with-aes-256-cbc-sha256' maps to the RSA\n           public key.\";\n      }\n      leaf num-bits {\n        type uint16;\n        description\n          \"Specifies the number of bits to create in the key.\n           For RSA keys, the minimum size is 1024 bits, and\n           the default is 3072 bits.  Generally, 3072 bits is\n           considered sufficient.  DSA keys must be exactly\n           1024 bits as specified by FIPS 186-2.  For\n           elliptical keys, the 'num-bits' value determines\n           the key length of the curve (e.g., 256, 384, or 521),\n           where valid values supported by the server are\n           conveyed via an unspecified mechanism.  For some\n           public algorithms, the keys have a fixed length, and\n           thus the 'num-bits' value is not specified.\";\n      }\n      container private-key-encoding {\n        description\n          \"Indicates how the private key is to be encoded.\";\n        choice private-key-encoding {\n          mandatory true;\n          description\n            \"A choice amongst optional private key handling.\";\n          case cleartext {\n            if-feature \"ct:cleartext-private-keys\";\n            leaf cleartext {\n              type empty;\n              description\n                \"Indicates that the private key is to be returned\n                 as a cleartext value.\";\n            }\n          }\n          case encrypted {\n            if-feature \"ct:encrypted-private-keys\";\n            container encrypted {\n              description\n                \"Indicates that the key is to be encrypted using\n                 the specified symmetric or asymmetric key.\";\n              uses ks:encrypted-by-grouping;\n            }\n          }\n          case hidden {\n            if-feature \"ct:hidden-private-keys\";\n            leaf hidden {\n              type empty;\n              description\n                \"Indicates that the private key is to be hidden.\n\n                 Unlike the 'cleartext' and 'encrypt' options, the\n                 key returned is a placeholder for an internally\n                 stored key.  See Section 3 of RFC 9642 ('Support\n                 for Built-In Keys') for information about hidden\n                 keys.\";\n            }\n          }\n        }\n      }\n    }\n    output {\n      choice key-or-hidden {\n        case key {\n          uses ct:asymmetric-key-pair-grouping;\n        }\n        case hidden {\n          leaf location {\n            type instance-identifier;\n            description\n              \"The location to where a hidden key was created.\";\n          }\n        }\n        description\n          \"The output can be either a key (for cleartext and\n           encrypted keys) or the location to where the key\n           was created (for hidden keys).\";\n      }\n    }\n  } // end generate-asymmetric-key-pair\n\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3. The \"ietf-tls-client\" Module",
      "section_title": true,
      "ja": "3. 「IETF-TLS-Client」モジュール"
    },
    {
      "indent": 3,
      "text": "This section defines a YANG 1.1 [RFC7950] module called \"ietf-tls-client\". A high-level overview of the module is provided in Section 3.1. Examples illustrating the module's use are provided in Section 3.2 (\"Example Usage\"). The YANG module itself is defined in Section 3.3.",
      "ja": "このセクションでは、「IETF-TLS-Client」と呼ばれるYang 1.1 [RFC7950]モジュールを定義します。モジュールの高レベルの概要は、セクション3.1に記載されています。モジュールの使用を示す例は、セクション3.2（「使用の例」）に記載されています。Yangモジュール自体は、セクション3.3で定義されています。"
    },
    {
      "indent": 0,
      "text": "3.1. Data Model Overview",
      "section_title": true,
      "ja": "3.1. データモデルの概要"
    },
    {
      "indent": 3,
      "text": "This section provides an overview of the \"ietf-tls-client\" module in terms of its features and groupings.",
      "ja": "このセクションでは、機能とグループ化の観点から「IETF-TLS-Client」モジュールの概要を説明します。"
    },
    {
      "indent": 0,
      "text": "3.1.1. Features",
      "section_title": true,
      "ja": "3.1.1. 特徴"
    },
    {
      "indent": 3,
      "text": "The following diagram lists all the \"feature\" statements defined in the \"ietf-tls-client\" module:",
      "ja": "次の図には、「IETF-TLS-Client」モジュールで定義されているすべての「機能」ステートメントを示します。"
    },
    {
      "indent": 3,
      "text": "Features:\n  +-- tls-client-keepalives\n  +-- client-ident-x509-cert\n  +-- client-ident-raw-public-key\n  +-- client-ident-psk\n  +-- server-auth-x509-cert\n  +-- server-auth-raw-public-key\n  +-- server-auth-psk",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The diagram above uses syntax that is similar to but not defined in [RFC8340].",
      "ja": "上記の図は、[RFC8340]で定義されていないものに似ていない構文を使用します。"
    },
    {
      "indent": 3,
      "text": "Please refer to the YANG module for a description of each feature.",
      "ja": "各機能の説明については、Yangモジュールを参照してください。"
    },
    {
      "indent": 0,
      "text": "3.1.2. Groupings",
      "section_title": true,
      "ja": "3.1.2. グループ化"
    },
    {
      "indent": 3,
      "text": "The \"ietf-tls-client\" module defines the following \"grouping\" statement:",
      "ja": "「IETF-TLS-Client」モジュールは、次の「グループ化」ステートメントを定義します。"
    },
    {
      "indent": 6,
      "text": "* tls-client-grouping",
      "ja": "* TLS-Client-Grouping"
    },
    {
      "indent": 3,
      "text": "This grouping is presented in the following subsection.",
      "ja": "このグループ化は、次のサブセクションに表示されます。"
    },
    {
      "indent": 0,
      "text": "3.1.2.1. The \"tls-client-grouping\" Grouping",
      "section_title": true,
      "ja": "3.1.2.1. 「TLS-Client-Grouping」グループ化"
    },
    {
      "indent": 3,
      "text": "The following tree diagram [RFC8340] illustrates the \"tls-client-grouping\" grouping:",
      "ja": "次のツリー図[RFC8340]は、「TLS-Client-Grouping」グループ化を示しています。"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\' line wrapping per RFC 8792 ================\n\n  grouping tls-client-grouping:\n    +-- client-identity!\n    |  +-- (auth-type)\n    |     +--:(certificate) {client-ident-x509-cert}?\n    |     |  +-- certificate\n    |     |     +---u ks:inline-or-keystore-end-entity-cert-with-key\\\n-grouping\n    |     +--:(raw-public-key) {client-ident-raw-public-key}?\n    |     |  +-- raw-private-key\n    |     |     +---u ks:inline-or-keystore-asymmetric-key-grouping\n    |     +--:(tls12-psk) {client-ident-tls12-psk}?\n    |     |  +-- tls12-psk\n    |     |     +---u ks:inline-or-keystore-symmetric-key-grouping\n    |     |     +-- id?\n    |     |             string\n    |     +--:(tls13-epsk) {client-ident-tls13-epsk}?\n    |        +-- tls13-epsk\n    |           +---u ks:inline-or-keystore-symmetric-key-grouping\n    |           +-- external-identity\n    |           |       string\n    |           +-- hash?\n    |           |       tlscmn:epsk-supported-hash\n    |           +-- context?\n    |           |       string\n    |           +-- target-protocol?\n    |           |       uint16\n    |           +-- target-kdf?\n    |                   uint16\n    +-- server-authentication\n    |  +-- ca-certs! {server-auth-x509-cert}?\n    |  |  +---u ts:inline-or-truststore-certs-grouping\n    |  +-- ee-certs! {server-auth-x509-cert}?\n    |  |  +---u ts:inline-or-truststore-certs-grouping\n    |  +-- raw-public-keys! {server-auth-raw-public-key}?\n    |  |  +---u ts:inline-or-truststore-public-keys-grouping\n    |  +-- tls12-psks?        empty {server-auth-tls12-psk}?\n    |  +-- tls13-epsks?       empty {server-auth-tls13-epsk}?\n    +-- hello-params {tlscmn:hello-params}?\n    |  +---u tlscmn:hello-params-grouping\n    +-- keepalives {tls-client-keepalives}?\n       +-- peer-allowed-to-send?   empty\n       +-- test-peer-aliveness!\n          +-- max-wait?       uint16\n          +-- max-attempts?   uint8",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Comments:",
      "ja": "コメント："
    },
    {
      "indent": 6,
      "text": "* The \"client-identity\" node, which is optionally configured (as client authentication MAY occur at a higher protocol layer), configures identity credentials, each enabled by a \"feature\" statement defined in Section 3.1.1.",
      "ja": "* オプションで構成されている「クライアントアイデンティティ」ノード（クライアント認証は、より高いプロトコル層で発生する可能性があるため）は、セクション3.1.1で定義された「機能」ステートメントによって有効にされているID資格情報を構成します。"
    },
    {
      "indent": 6,
      "text": "* The \"server-authentication\" node configures trust anchors for authenticating the TLS server, with each option enabled by a \"feature\" statement.",
      "ja": "* 「Server-Authentication」ノードは、各オプションを「機能」ステートメントで有効にして、TLSサーバーを認証するためのトラストアンカーを構成します。"
    },
    {
      "indent": 6,
      "text": "* The \"hello-params\" node, which must be enabled by a feature, configures parameters for the TLS sessions established by this configuration.",
      "ja": "* 機能によって有効にする必要がある「Hello-Params」ノードは、この構成によって確立されたTLSセッションのパラメーターを構成します。"
    },
    {
      "indent": 6,
      "text": "* The \"keepalives\" node, which must be enabled by a feature, configures a \"presence\" container to test the aliveness of the TLS server. The aliveness-test occurs at the TLS protocol layer.",
      "ja": "* 機能によって有効にする必要がある「KeepAlives」ノードは、TLSサーバーのAlivensionをテストするために「存在感」コンテナを構成します。Alivension-Testは、TLSプロトコル層で発生します。"
    },
    {
      "indent": 6,
      "text": "* For the referenced grouping statement(s):",
      "ja": "* 参照されているグループのステートメントの場合："
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-keystore-end-entity-cert-with-key-grouping\" grouping is discussed in Section 2.1.3.6 of [RFC9642].",
      "ja": "- [rfc9642]のセクション2.1.3.6で「インラインオアキーストアエンティティ - エンティティ - キーグループ」グループのグループ化について説明します。"
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-keystore-asymmetric-key-grouping\" grouping is discussed in Section 2.1.3.4 of [RFC9642].",
      "ja": "- [rfc9642]のセクション2.1.3.4では、「インラインオアキーストア - アジメトリックキーグループ」グループについて説明します。"
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-keystore-symmetric-key-grouping\" grouping is discussed in Section 2.1.3.3 of [RFC9642].",
      "ja": "- 「Inline-or-Keystore-Symmetric-Key-Grouping」グループ化については、[RFC9642]のセクション2.1.3.3で説明しています。"
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-truststore-certs-grouping\" grouping is discussed in Section 2.1.3.3 of [RFC9641].",
      "ja": "- [rfc9641]のセクション2.1.3.3では、「インラインオアトラストストア - コルトグループ」グループについて説明します。"
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-truststore-public-keys-grouping\" grouping is discussed in Section 2.1.3.4 of [RFC9641].",
      "ja": "- [RFC9641]のセクション2.1.3.4では、「インラインオアトラストストア - パブリック - キーグループ」グループについて説明します。"
    },
    {
      "indent": 12,
      "text": "- The \"hello-params-grouping\" grouping is discussed in Section 2.1.3.1 in this document.",
      "ja": "- 「Hello-Params-Grouping」グループ化については、このドキュメントのセクション2.1.3.1で説明します。"
    },
    {
      "indent": 0,
      "text": "3.1.3. Protocol-Accessible Nodes",
      "section_title": true,
      "ja": "3.1.3. プロトコルアクセス可能なノード"
    },
    {
      "indent": 3,
      "text": "The \"ietf-tls-client\" module defines only \"grouping\" statements that are used by other modules to instantiate protocol-accessible nodes. Thus, this module does not itself define any protocol-accessible nodes when implemented.",
      "ja": "「IETF-TLS-Client」モジュールは、他のモジュールが使用してプロトコルアクセス可能なノードをインスタンス化する「グループ化」ステートメントのみを定義します。したがって、このモジュール自体は、実装時にプロトコルアクセス可能なノードを定義するものではありません。"
    },
    {
      "indent": 0,
      "text": "3.2. Example Usage",
      "section_title": true,
      "ja": "3.2. 使用の例"
    },
    {
      "indent": 3,
      "text": "This section presents two examples showing the \"tls-client-grouping\" grouping populated with some data. These examples are effectively the same except the first configures the client identity using a local key while the second uses a key configured in a keystore. Both examples are consistent with the examples presented in Section 2.2.1 of [RFC9641] and Section 2.2.1 of [RFC9642].",
      "ja": "このセクションでは、いくつかのデータが入力された「TLS-Client-Grouping」のグループ化を示す2つの例を示します。これらの例は、ローカルキーを使用してクライアントIDを最初に構成し、2番目のキーがキーストアで構成されたキーを使用していることを除いて、効果的に同じです。両方の例は、[RFC9641]のセクション2.2.1および[RFC9642]のセクション2.2.1に示されている例と一致しています。"
    },
    {
      "indent": 3,
      "text": "The following configuration example uses inline-definitions for the client identity and server authentication:",
      "ja": "次の構成例では、クライアントのIDとサーバー認証にインライン解像度を使用します。"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\' line wrapping per RFC 8792 ================\n\n<!-- The outermost element below doesn't exist in the data model. -->\n<!--  It simulates if the \"grouping\" were a \"container\" instead.  -->\n\n<tls-client\n  xmlns=\"urn:ietf:params:xml:ns:yang:ietf-tls-client\"\n  xmlns:ct=\"urn:ietf:params:xml:ns:yang:ietf-crypto-types\">\n\n    <!-- how this client will authenticate itself to the server  -->\n    <client-identity>\n        <certificate>\n            <inline-definition>\n                <private-key-format>ct:rsa-private-key-format</priva\\\nte-key-format>\n                <cleartext-private-key>BASE64VALUE=</cleartext-priva\\\nte-key>\n                <cert-data>BASE64VALUE=</cert-data>\n            </inline-definition>\n        </certificate>\n    </client-identity>\n\n    <!-- which certificates will this client trust -->\n    <server-authentication>\n        <ca-certs>\n            <inline-definition>\n                <certificate>\n                    <name>Server Cert Issuer #1</name>\n                    <cert-data>BASE64VALUE=</cert-data>\n                </certificate>\n                <certificate>\n                    <name>Server Cert Issuer #2</name>\n                    <cert-data>BASE64VALUE=</cert-data>\n                </certificate>\n            </inline-definition>\n        </ca-certs>\n        <ee-certs>\n            <inline-definition>\n                <certificate>\n                    <name>My Application #1</name>\n                    <cert-data>BASE64VALUE=</cert-data>\n                </certificate>\n                <certificate>\n                    <name>My Application #2</name>\n                    <cert-data>BASE64VALUE=</cert-data>\n                </certificate>\n            </inline-definition>\n        </ee-certs>\n        <raw-public-keys>\n            <inline-definition>\n                <public-key>\n                    <name>corp-fw1</name>\n                    <public-key-format>ct:subject-public-key-info-fo\\\nrmat</public-key-format>\n                    <public-key>BASE64VALUE=</public-key>\n                </public-key>\n                <public-key>\n                    <name>corp-fw2</name>\n                    <public-key-format>ct:subject-public-key-info-fo\\\nrmat</public-key-format>\n                    <public-key>BASE64VALUE=</public-key>\n                </public-key>\n            </inline-definition>\n        </raw-public-keys>\n        <tls12-psks/>\n        <tls13-epsks/>\n    </server-authentication>\n\n    <keepalives>\n        <test-peer-aliveness>\n            <max-wait>30</max-wait>\n            <max-attempts>3</max-attempts>\n        </test-peer-aliveness>\n    </keepalives>\n\n</tls-client>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following configuration example uses central-keystore-references for the client identity and central-truststore-references for server authentication from the keystore:",
      "ja": "次の構成例では、キーストアからのサーバー認証にクライアントのアイデンティティとセントラルトラストストアの参照にセントラルキーストアリファレンスを使用します。"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\' line wrapping per RFC 8792 ================\n\n<!-- The outermost element below doesn't exist in the data model. -->\n<!--  It simulates if the \"grouping\" were a \"container\" instead.  -->\n\n<tls-client xmlns=\"urn:ietf:params:xml:ns:yang:ietf-tls-client\">\n\n    <!-- how this client will authenticate itself to the server -->\n    <client-identity>\n        <certificate>\n            <central-keystore-reference>\n                <asymmetric-key>rsa-asymmetric-key</asymmetric-key>\n                <certificate>ex-rsa-cert</certificate>\n            </central-keystore-reference>\n        </certificate>\n    </client-identity>\n\n    <!-- which certificates will this client trust -->\n    <server-authentication>\n        <ca-certs>\n            <central-truststore-reference>trusted-server-ca-certs</c\\\nentral-truststore-reference>\n        </ca-certs>\n        <ee-certs>\n            <central-truststore-reference>trusted-server-ee-certs</c\\\nentral-truststore-reference>\n        </ee-certs>\n        <raw-public-keys>\n            <central-truststore-reference>Raw Public Keys for TLS Se\\\nrvers</central-truststore-reference>\n        </raw-public-keys>\n        <tls12-psks/>\n        <tls13-epsks/>\n    </server-authentication>\n\n    <keepalives>\n        <test-peer-aliveness>\n            <max-wait>30</max-wait>\n            <max-attempts>3</max-attempts>\n        </test-peer-aliveness>\n    </keepalives>\n\n</tls-client>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "3.3. YANG Module",
      "section_title": true,
      "ja": "3.3. ヤンモジュール"
    },
    {
      "indent": 3,
      "text": "This YANG module has normative references to [RFC4279], [RFC5280], [RFC6520], [RFC7250], [RFC9640], [RFC9641], and [RFC9642] and informative references to [RFC5056], [RFC5246], [RFC8446], [RFC9258], and [RFC9257].",
      "ja": "このYangモジュールには、[RFC4279]、[RFC5280]、[RFC6520]、[RFC7250]、[RFC9640]、[RFC9641]、[RFC9641]、[RFC9642]、[RFC5246]、[RFC5246]、[RFC5246]、、[RFC9258]、および[RFC9257]。"
    },
    {
      "indent": 3,
      "text": "module ietf-tls-client {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-tls-client\";\n  prefix tlsc;\n\n  import ietf-netconf-acm {\n    prefix nacm;\n    reference\n      \"RFC 8341: Network Configuration Access Control Model\";\n  }\n  import ietf-crypto-types {\n    prefix ct;\n    reference\n      \"RFC 9640: YANG Data Types and Groupings for Cryptography\";\n  }\n  import ietf-truststore {\n    prefix ts;\n    reference\n      \"RFC 9641: A YANG Data Model for a Truststore\";\n  }\n  import ietf-keystore {\n    prefix ks;\n    reference\n      \"RFC 9642: A YANG Data Model for a Keystore\";\n  }\n  import ietf-tls-common {\n    prefix tlscmn;\n    reference\n      \"RFC 9645: YANG Groupings for TLS Clients and TLS Servers\";\n  }\n\n  organization\n    \"IETF NETCONF (Network Configuration) Working Group\";\n  contact\n    \"WG List:  NETCONF WG list <mailto:netconf@ietf.org>\n     WG Web:   https://datatracker.ietf.org/wg/netconf\n     Author:   Kent Watsen <mailto:kent+ietf@watsen.net>\n     Author:   Jeff Hartley <mailto:intensifysecurity@gmail.com>\";\n  description\n    \"This module defines reusable groupings for TLS clients that\n     can be used as a basis for specific TLS client instances.\n\n     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',\n     'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',\n     'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document\n     are to be interpreted as described in BCP 14 (RFC 2119)\n     (RFC 8174) when, and only when, they appear in all\n     capitals, as shown here.\n\n     Copyright (c) 2024 IETF Trust and the persons identified\n     as authors of the code. All rights reserved.\n\n     Redistribution and use in source and binary forms, with\n     or without modification, is permitted pursuant to, and\n     subject to the license terms contained in, the Revised\n     BSD License set forth in Section 4.c of the IETF Trust's\n     Legal Provisions Relating to IETF Documents\n     (https://trustee.ietf.org/license-info).\n\n     This version of this YANG module is part of RFC 9645\n     (https://www.rfc-editor.org/info/rfc9645); see the RFC\n     itself for full legal notices.\";\n\n  revision 2024-10-10 {\n    description\n      \"Initial version\";\n    reference\n      \"RFC 9645: YANG Groupings for TLS Clients and TLS Servers\";\n  }\n\n  // Features\n\n  feature tls-client-keepalives {\n    description\n      \"Per-socket TLS keepalive parameters are configurable for\n       TLS clients on the server implementing this feature.\";\n  }\n\n  feature client-ident-x509-cert {\n    description\n      \"Indicates that the client supports identifying itself\n       using X.509 certificates.\";\n    reference\n      \"RFC 5280:\n         Internet X.509 Public Key Infrastructure Certificate\n         and Certificate Revocation List (CRL) Profile\";\n  }\n\n  feature client-ident-raw-public-key {\n    description\n      \"Indicates that the client supports identifying itself\n       using raw public keys.\";\n    reference\n      \"RFC 7250:\n         Using Raw Public Keys in Transport Layer Security (TLS)\n         and Datagram Transport Layer Security (DTLS)\";\n  }\n\n  feature client-ident-tls12-psk {\n    if-feature \"tlscmn:tls12\";\n    description\n      \"Indicates that the client supports identifying itself\n       using TLS 1.2 PSKs (pre-shared or pairwise symmetric keys).\";\n    reference\n      \"RFC 4279:\n         Pre-Shared Key Ciphersuites for Transport Layer Security\n         (TLS)\";\n  }\n\n  feature client-ident-tls13-epsk {\n    if-feature \"tlscmn:tls13\";\n    description\n      \"Indicates that the client supports identifying itself\n       using TLS 1.3 External PSKs (pre-shared keys).\";\n    reference\n      \"RFC 8446:\n         The Transport Layer Security (TLS) Protocol Version 1.3\";\n  }\n\n  feature server-auth-x509-cert {\n    description\n      \"Indicates that the client supports authenticating servers\n       using X.509 certificates.\";\n    reference\n      \"RFC 5280:\n         Internet X.509 Public Key Infrastructure Certificate\n         and Certificate Revocation List (CRL) Profile\";\n  }\n\n  feature server-auth-raw-public-key {\n    description\n      \"Indicates that the client supports authenticating servers\n       using raw public keys.\";\n    reference\n      \"RFC 7250:\n         Using Raw Public Keys in Transport Layer Security (TLS)\n         and Datagram Transport Layer Security (DTLS)\";\n  }\n\n  feature server-auth-tls12-psk {\n    description\n      \"Indicates that the client supports authenticating servers\n       using PSKs (pre-shared or pairwise symmetric keys).\";\n    reference\n      \"RFC 4279:\n         Pre-Shared Key Ciphersuites for Transport Layer Security\n         (TLS)\";\n  }\n\n  feature server-auth-tls13-epsk {\n    description\n      \"Indicates that the client supports authenticating servers\n       using TLS 1.3 External PSKs (pre-shared keys).\";\n    reference\n      \"RFC 8446:\n         The Transport Layer Security (TLS) Protocol Version 1.3\";\n  }\n\n  // Groupings\n\n  grouping tls-client-grouping {\n    description\n      \"A reusable grouping for configuring a TLS client without\n       any consideration for how an underlying TCP session is\n       established.\n\n       Note that this grouping uses fairly typical descendant\n       node names such that a stack of 'uses' statements will\n       have name conflicts.  It is intended that the consuming\n       data model will resolve the issue (e.g., by wrapping\n       the 'uses' statement in a container called\n       'tls-client-parameters').  This model purposely does\n       not do this itself so as to provide maximum flexibility\n       to consuming models.\";\n    container client-identity {\n      nacm:default-deny-write;\n      presence \"Indicates that a TLS-level client identity has been\n                configured.  This statement is present so the\n                mandatory descendant nodes do not imply that this\n                node must be configured.\";\n      description\n        \"Identity credentials the TLS client MAY present when\n         establishing a connection to a TLS server.  If not\n         configured, then client authentication is presumed to\n         occur in a protocol layer above TLS.  When configured,\n         and requested by the TLS server when establishing a\n         TLS session, these credentials are passed in the\n         Certificate message defined in Section 7.4.2 of\n         RFC 5246 and Section 4.4.2 of RFC 8446.\";\n      reference\n        \"RFC 5246: The Transport Layer Security (TLS)\n                   Protocol Version 1.2\n         RFC 8446: The Transport Layer Security (TLS)\n                   Protocol Version 1.3\n         RFC 9642: A YANG Data Model for a Keystore\";\n      choice auth-type {\n        mandatory true;\n        description\n          \"A choice amongst authentication types, of which one must\n           be enabled (via its associated 'feature') and selected.\";\n        case certificate {\n          if-feature \"client-ident-x509-cert\";\n          container certificate {\n            description\n              \"Specifies the client identity using a certificate.\";\n            uses \"ks:inline-or-keystore-end-entity-cert-with-key-\"\n               + \"grouping\" {\n              refine \"inline-or-keystore/inline/inline-definition\" {\n                must 'not(public-key-format) or derived-from-or-self'\n                   + '(public-key-format, \"ct:subject-public-key-'\n                   + 'info-format\")';\n              }\n              refine \"inline-or-keystore/central-keystore/\"\n                   + \"central-keystore-reference/asymmetric-key\" {\n                must 'not(deref(.)/../ks:public-key-format) or '\n                   + 'derived-from-or-self(deref(.)/../ks:public-'\n                   + 'key-format, \"ct:subject-public-key-info-'\n                   + 'format\")';\n              }\n            }\n          }\n        }\n        case raw-public-key {\n          if-feature \"client-ident-raw-public-key\";\n          container raw-private-key {\n            description\n              \"Specifies the client identity using a raw\n               private key.\";\n            uses ks:inline-or-keystore-asymmetric-key-grouping {\n              refine \"inline-or-keystore/inline/inline-definition\" {\n                must 'not(public-key-format) or derived-from-or-self'\n                   + '(public-key-format, \"ct:subject-public-key-'\n                   + 'info-format\")';\n              }\n              refine \"inline-or-keystore/central-keystore/\"\n                   + \"central-keystore-reference\" {\n                must 'not(deref(.)/../ks:public-key-format) or '\n                   + 'derived-from-or-self(deref(.)/../ks:public-'\n                   + 'key-format, \"ct:subject-public-key-info-'\n                   + 'format\")';\n              }\n            }\n          }\n        }\n        case tls12-psk {\n          if-feature \"client-ident-tls12-psk\";\n          container tls12-psk {\n            description\n              \"Specifies the client identity using a PSK (pre-shared\n               or pairwise symmetric key).\";\n            uses ks:inline-or-keystore-symmetric-key-grouping;\n            leaf id {\n              type string;\n              description\n                \"The key 'psk_identity' value used in the TLS\n                 'ClientKeyExchange' message.\";\n              reference\n                \"RFC 4279: Pre-Shared Key Ciphersuites for\n                           Transport Layer Security (TLS)\";\n            }\n          }\n        }\n        case tls13-epsk {\n          if-feature \"client-ident-tls13-epsk\";\n          container tls13-epsk {\n            description\n              \"An External Pre-Shared Key (EPSK) is established\n               or provisioned out of band, i.e., not from a TLS\n               connection.  An EPSK is a tuple of (Base Key,\n               External Identity, Hash).  EPSKs MUST NOT be\n               imported for (D)TLS 1.2 or prior versions.  When\n               PSKs are provisioned out of band, the PSK identity\n               and the Key Derivation Function (KDF) hash algorithm\n               to be used with the PSK MUST also be provisioned.\n\n               The structure of this container is designed to satisfy\n               the requirements in Section 4.2.11 of RFC 8446, the\n               recommendations from Section 6 of RFC 9257, and the\n               EPSK input fields detailed in Section 5.1 of RFC 9258.\n               The base-key is based upon\n               'ks:inline-or-keystore-symmetric-key-grouping' in\n               order to provide users with flexible and secure\n               storage options.\";\n            reference\n              \"RFC 8446: The Transport Layer Security (TLS)\n                         Protocol Version 1.3\n               RFC 9257: Guidance for External Pre-Shared Key\n                         (PSK) Usage in TLS\n               RFC 9258: Importing External Pre-Shared Keys\n                         (PSKs) for TLS 1.3\";\n            uses ks:inline-or-keystore-symmetric-key-grouping;\n            leaf external-identity {\n              type string;\n              mandatory true;\n              description\n                \"As per Section 4.2.11 of RFC 8446 and Section 4.1\n                 of RFC 9257, a sequence of bytes used to identify\n                 an EPSK.  A label for a pre-shared key established\n                 externally.\";\n              reference\n                \"RFC 8446: The Transport Layer Security (TLS)\n                           Protocol Version 1.3\n                 RFC 9257: Guidance for External Pre-Shared Key\n                           (PSK) Usage in TLS\";\n            }\n            leaf hash {\n              type tlscmn:epsk-supported-hash;\n              default \"sha-256\";\n              description\n                \"As per Section 4.2.11 of RFC 8446, for EPSKs,\n                 the hash algorithm MUST be set when the PSK is\n                 established; otherwise, default to SHA-256 if\n                 no such algorithm is defined.  The server MUST\n                 ensure that it selects a compatible PSK (if any)\n                 and cipher suite.  Each PSK MUST only be used\n                 with a single hash function.\";\n              reference\n                \"RFC 8446: The Transport Layer Security (TLS)\n                           Protocol Version 1.3\";\n            }\n            leaf context {\n              type string;\n              description\n                \"As per Section 5.1 of RFC 9258, context MUST\n                 include the context used to determine the EPSK,\n                 if any exists.  For example, context may include\n                 information about peer roles or identities\n                 to mitigate Selfie-style reflection attacks.\n                 Since the EPSK is a key derived from an external\n                 protocol or a sequence of protocols, context MUST\n                 include a channel binding for the deriving\n                 protocols (see RFC 5056).  The details of this\n                 binding are protocol specific and out of scope\n                 for this document.\";\n              reference\n                \"RFC 9258: Importing External Pre-Shared Keys\n                           (PSKs) for TLS 1.3\";\n            }\n            leaf target-protocol {\n              type uint16;\n              description\n                \"As per Section 3 of RFC 9258, the protocol\n                 for which a PSK is imported for use.\";\n              reference\n                \"RFC 9258: Importing External Pre-Shared Keys\n                           (PSKs) for TLS 1.3\";\n            }\n            leaf target-kdf {\n              type uint16;\n              description\n                \"As per Section 3 of RFC 9258, the Key Derivation\n                 Function (KDF) for which a PSK is imported for\n                 use.\";\n              reference\n                \"RFC 9258: Importing External Pre-Shared Keys\n                           (PSKs) for TLS 1.3\";\n            }\n          }\n        }\n      }\n    } // container client-identity\n    container server-authentication {\n      nacm:default-deny-write;\n      must \"ca-certs or ee-certs or raw-public-keys or tls12-psks\n                    or tls13-epsks\";\n      description\n        \"Specifies how the TLS client can authenticate TLS servers.\n         Any combination of credentials is additive and unordered.\n\n         Note that no configuration is required for authentication\n         based on PSK (pre-shared or pairwise symmetric key) as\n         the key is necessarily the same as configured in the\n         '../client-identity' node.\";\n      container ca-certs {\n        if-feature \"server-auth-x509-cert\";\n        presence \"Indicates that Certification Authority (CA)\n                  certificates have been configured.  This\n                  statement is present so the mandatory\n                  descendant nodes do not imply that this\n                  node must be configured.\";\n        description\n          \"A set of CA certificates used by the TLS client to\n           authenticate TLS server certificates.  A server\n           certificate is authenticated if it has a valid chain of\n           trust to a configured CA certificate.\";\n        reference\n          \"RFC 9641: A YANG Data Model for a Truststore\";\n        uses ts:inline-or-truststore-certs-grouping;\n      }\n      container ee-certs {\n        if-feature \"server-auth-x509-cert\";\n        presence \"Indicates that End-Entity (EE) certificates have\n                  been configured.  This statement is present so\n                  the mandatory descendant nodes do not imply\n                  that this node must be configured.\";\n        description\n          \"A set of server certificates (i.e., EE certificates) used\n           by the TLS client to authenticate certificates presented\n           by TLS servers.  A server certificate is authenticated if\n           it is an exact match to a configured server certificate.\";\n        reference\n          \"RFC 9641: A YANG Data Model for a Truststore\";\n        uses ts:inline-or-truststore-certs-grouping;\n      }\n      container raw-public-keys {\n        if-feature \"server-auth-raw-public-key\";\n        presence \"Indicates that raw public keys have been\n                  configured.  This statement is present so\n                  the mandatory descendant nodes do not imply\n                  that this node must be configured.\";\n        description\n          \"A set of raw public keys used by the TLS client to\n           authenticate raw public keys presented by the TLS\n           server.  A raw public key is authenticated if it\n           is an exact match to a configured raw public key.\";\n        reference\n          \"RFC 9641: A YANG Data Model for a Truststore\";\n        uses ts:inline-or-truststore-public-keys-grouping {\n          refine \"inline-or-truststore/inline/inline-definition/\"\n               + \"public-key\" {\n            must 'derived-from-or-self(public-key-format,'\n               + ' \"ct:subject-public-key-info-format\")';\n          }\n          refine \"inline-or-truststore/central-truststore/\"\n               + \"central-truststore-reference\" {\n            must 'not(deref(.)/../ts:public-key/ts:public-key-'\n               + 'format[not(derived-from-or-self(., \"ct:subject-'\n               + 'public-key-info-format\"))])';\n          }\n        }\n      }\n      leaf tls12-psks {\n        if-feature \"server-auth-tls12-psk\";\n        type empty;\n        description\n          \"Indicates that the TLS client can authenticate TLS servers\n           using configured PSKs (pre-shared or pairwise symmetric\n           keys).\n\n           No configuration is required since the PSK value is the\n           same as the PSK value configured in the 'client-identity'\n           node.\";\n      }\n      leaf tls13-epsks {\n        if-feature \"server-auth-tls13-epsk\";\n        type empty;\n        description\n          \"Indicates that the TLS client can authenticate TLS servers\n           using configured External PSKs (pre-shared keys).\n\n           No configuration is required since the PSK value is the\n           same as the PSK value configured in the 'client-identity'\n           node.\";\n      }\n    } // container server-authentication\n    container hello-params {\n      nacm:default-deny-write;\n      if-feature \"tlscmn:hello-params\";\n      uses tlscmn:hello-params-grouping;\n      description\n        \"Configurable parameters for the TLS hello message.\";\n    } // container hello-params\n    container keepalives {\n      nacm:default-deny-write;\n      if-feature \"tls-client-keepalives\";\n      description\n        \"Configures the keepalive policy for the TLS client.\";\n      leaf peer-allowed-to-send {\n        type empty;\n        description\n          \"Indicates that the remote TLS server is allowed to send\n           HeartbeatRequest messages, as defined by RFC 6520,\n           to this TLS client.\";\n        reference\n          \"RFC 6520: Transport Layer Security (TLS) and Datagram\n           Transport Layer Security (DTLS) Heartbeat Extension\";\n      }\n      container test-peer-aliveness {\n        presence \"Indicates that the TLS client proactively tests the\n                  aliveness of the remote TLS server.\";\n        description\n          \"Configures the keepalive policy to proactively test\n           the aliveness of the TLS server.  An unresponsive\n           TLS server is dropped after approximately max-wait\n           * max-attempts seconds.  The TLS client MUST send\n           HeartbeatRequest messages, as defined in RFC 6520.\";\n        reference\n          \"RFC 6520: Transport Layer Security (TLS) and Datagram\n           Transport Layer Security (DTLS) Heartbeat Extension\";\n        leaf max-wait {\n          type uint16 {\n            range \"1..max\";\n          }\n          units \"seconds\";\n          default \"30\";\n          description\n            \"Sets the amount of time in seconds, after which a\n             TLS-level message will be sent to test the\n             aliveness of the TLS server if no data has been\n             received from the TLS server.\";\n        }\n        leaf max-attempts {\n          type uint8;\n          default \"3\";\n          description\n            \"Sets the maximum number of sequential keepalive\n             messages that can fail to obtain a response from\n             the TLS server before assuming the TLS server is\n             no longer alive.\";\n        }\n      }\n    }\n  } // grouping tls-client-grouping\n\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4. The \"ietf-tls-server\" Module",
      "section_title": true,
      "ja": "4. 「IETF-TLS-SERVER」モジュール"
    },
    {
      "indent": 3,
      "text": "This section defines a YANG 1.1 module called \"ietf-tls-server\". A high-level overview of the module is provided in Section 4.1. Examples illustrating the module's use are provided in Section 4.2 (\"Example Usage\"). The YANG module itself is defined in Section 4.3.",
      "ja": "このセクションでは、「IETF-TLS-SERVER」と呼ばれるYang 1.1モジュールを定義します。モジュールの高レベルの概要は、セクション4.1に記載されています。モジュールの使用を示す例は、セクション4.2（「使用の例」）に記載されています。Yangモジュール自体は、セクション4.3で定義されています。"
    },
    {
      "indent": 0,
      "text": "4.1. Data Model Overview",
      "section_title": true,
      "ja": "4.1. データモデルの概要"
    },
    {
      "indent": 3,
      "text": "This section provides an overview of the \"ietf-tls-server\" module in terms of its features and groupings.",
      "ja": "このセクションでは、機能とグループ化の観点から「IETF-TLS-SERVER」モジュールの概要を説明します。"
    },
    {
      "indent": 0,
      "text": "4.1.1. Features",
      "section_title": true,
      "ja": "4.1.1. 特徴"
    },
    {
      "indent": 3,
      "text": "The following diagram lists all the \"feature\" statements defined in the \"ietf-tls-server\" module:",
      "ja": "次の図には、「IETF-TLS-SERVER」モジュールで定義されているすべての「機能」ステートメントを示します。"
    },
    {
      "indent": 3,
      "text": "Features:\n  +-- tls-server-keepalives\n  +-- server-ident-x509-cert\n  +-- server-ident-raw-public-key\n  +-- server-ident-psk\n  +-- client-auth-supported\n  +-- client-auth-x509-cert\n  +-- client-auth-raw-public-key\n  +-- client-auth-psk",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The diagram above uses syntax that is similar to but not defined in [RFC8340].",
      "ja": "上記の図は、[RFC8340]で定義されていないものに似ていない構文を使用します。"
    },
    {
      "indent": 3,
      "text": "Please refer to the YANG module for a description of each feature.",
      "ja": "各機能の説明については、Yangモジュールを参照してください。"
    },
    {
      "indent": 0,
      "text": "4.1.2. Groupings",
      "section_title": true,
      "ja": "4.1.2. グループ化"
    },
    {
      "indent": 3,
      "text": "The \"ietf-tls-server\" module defines the following \"grouping\" statement:",
      "ja": "「IETF-TLS-SERVER」モジュールは、次の「グループ化」ステートメントを定義します。"
    },
    {
      "indent": 6,
      "text": "* tls-server-grouping",
      "ja": "* TLS-Server-Grouping"
    },
    {
      "indent": 3,
      "text": "This grouping is presented in the following subsection.",
      "ja": "このグループ化は、次のサブセクションに表示されます。"
    },
    {
      "indent": 0,
      "text": "4.1.2.1. The \"tls-server-grouping\" Grouping",
      "section_title": true,
      "ja": "4.1.2.1. 「TLS-Server-Grouping」グループ化"
    },
    {
      "indent": 3,
      "text": "The following tree diagram [RFC8340] illustrates the \"tls-server-grouping\" grouping:",
      "ja": "次のツリー図[RFC8340]は、「TLS-Server-Grouping」グループ化を示しています。"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\' line wrapping per RFC 8792 ================\n\n  grouping tls-server-grouping:\n    +-- server-identity\n    |  +-- (auth-type)\n    |     +--:(certificate) {server-ident-x509-cert}?\n    |     |  +-- certificate\n    |     |     +---u ks:inline-or-keystore-end-entity-cert-with-key\\\n-grouping\n    |     +--:(raw-private-key) {server-ident-raw-public-key}?\n    |     |  +-- raw-private-key\n    |     |     +---u ks:inline-or-keystore-asymmetric-key-grouping\n    |     +--:(tls12-psk) {server-ident-tls12-psk}?\n    |     |  +-- tls12-psk\n    |     |     +---u ks:inline-or-keystore-symmetric-key-grouping\n    |     |     +-- id-hint?\n    |     |             string\n    |     +--:(tls13-epsk) {server-ident-tls13-epsk}?\n    |        +-- tls13-epsk\n    |           +---u ks:inline-or-keystore-symmetric-key-grouping\n    |           +-- external-identity\n    |           |       string\n    |           +-- hash?\n    |           |       tlscmn:epsk-supported-hash\n    |           +-- context?\n    |           |       string\n    |           +-- target-protocol?\n    |           |       uint16\n    |           +-- target-kdf?\n    |                   uint16\n    +-- client-authentication! {client-auth-supported}?\n    |  +-- ca-certs! {client-auth-x509-cert}?\n    |  |  +---u ts:inline-or-truststore-certs-grouping\n    |  +-- ee-certs! {client-auth-x509-cert}?\n    |  |  +---u ts:inline-or-truststore-certs-grouping\n    |  +-- raw-public-keys! {client-auth-raw-public-key}?\n    |  |  +---u ts:inline-or-truststore-public-keys-grouping\n    |  +-- tls12-psks?        empty {client-auth-tls12-psk}?\n    |  +-- tls13-epsks?       empty {client-auth-tls13-epsk}?\n    +-- hello-params {tlscmn:hello-params}?\n    |  +---u tlscmn:hello-params-grouping\n    +-- keepalives {tls-server-keepalives}?\n       +-- peer-allowed-to-send?   empty\n       +-- test-peer-aliveness!\n          +-- max-wait?       uint16\n          +-- max-attempts?   uint8",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Comments:",
      "ja": "コメント："
    },
    {
      "indent": 6,
      "text": "* The \"server-identity\" node configures identity credentials, each of which is enabled by a \"feature\".",
      "ja": "* 「サーバーアイデンティティ」ノードは、アイデンティティの資格情報を構成し、それぞれが「機能」によって有効になっています。"
    },
    {
      "indent": 6,
      "text": "* The \"client-authentication\" node, which is optionally configured (as client authentication MAY occur at a higher protocol layer), configures trust anchors for authenticating the TLS client, with each option enabled by a \"feature\" statement.",
      "ja": "* オプションで構成されている「クライアント認証」ノード（クライアント認証がより高いプロトコル層で発生する可能性があるため）は、各オプションを「機能」ステートメントで有効にして、TLSクライアントを認証するための信頼アンカーを構成します。"
    },
    {
      "indent": 6,
      "text": "* The \"hello-params\" node, which must be enabled by a feature, configures parameters for the TLS sessions established by this configuration.",
      "ja": "* 機能によって有効にする必要がある「Hello-Params」ノードは、この構成によって確立されたTLSセッションのパラメーターを構成します。"
    },
    {
      "indent": 6,
      "text": "* The \"keepalives\" node, which must be enabled by a feature, configures a flag enabling the TLS client to test the aliveness of the TLS server as well as a \"presence\" container to test the aliveness of the TLS client. The aliveness-tests occur at the TLS protocol layer.",
      "ja": "* 機能によって有効にする必要がある「KeepAlives」ノードは、TLSサーバーのAlivensionをテストできるTLSクライアントと、TLSクライアントのAlivensionをテストする「存在」コンテナをテストできるフラグを構成します。Alivension-Testsは、TLSプロトコル層で発生します。"
    },
    {
      "indent": 6,
      "text": "* For the referenced grouping statement(s):",
      "ja": "* 参照されているグループのステートメントの場合："
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-keystore-end-entity-cert-with-key-grouping\" grouping is discussed in Section 2.1.3.6 of [RFC9642].",
      "ja": "- [rfc9642]のセクション2.1.3.6で「インラインオアキーストアエンティティ - エンティティ - キーグループ」グループのグループ化について説明します。"
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-keystore-asymmetric-key-grouping\" grouping is discussed in Section 2.1.3.4 of [RFC9642].",
      "ja": "- [rfc9642]のセクション2.1.3.4では、「インラインオアキーストア - アジメトリックキーグループ」グループについて説明します。"
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-keystore-symmetric-key-grouping\" grouping is discussed in Section 2.1.3.3 of [RFC9642].",
      "ja": "- 「Inline-or-Keystore-Symmetric-Key-Grouping」グループ化については、[RFC9642]のセクション2.1.3.3で説明しています。"
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-truststore-public-keys-grouping\" grouping is discussed in Section 2.1.3.4 of [RFC9641].",
      "ja": "- [RFC9641]のセクション2.1.3.4では、「インラインオアトラストストア - パブリック - キーグループ」グループについて説明します。"
    },
    {
      "indent": 12,
      "text": "- The \"inline-or-truststore-certs-grouping\" grouping is discussed in Section 2.1.3.3 of [RFC9641].",
      "ja": "- [rfc9641]のセクション2.1.3.3では、「インラインオアトラストストア - コルトグループ」グループについて説明します。"
    },
    {
      "indent": 12,
      "text": "- The \"hello-params-grouping\" grouping is discussed in Section 2.1.3.1 in this document.",
      "ja": "- 「Hello-Params-Grouping」グループ化については、このドキュメントのセクション2.1.3.1で説明します。"
    },
    {
      "indent": 0,
      "text": "4.1.3. Protocol-Accessible Nodes",
      "section_title": true,
      "ja": "4.1.3. プロトコルアクセス可能なノード"
    },
    {
      "indent": 3,
      "text": "The \"ietf-tls-server\" module defines only \"grouping\" statements that are used by other modules to instantiate protocol-accessible nodes. Thus, this module does not itself define any protocol-accessible nodes when implemented.",
      "ja": "「IETF-TLS-SERVER」モジュールは、プロトコルアクセス可能なノードをインスタンス化するために他のモジュールによって使用される「グループ化」ステートメントのみを定義します。したがって、このモジュール自体は、実装時にプロトコルアクセス可能なノードを定義するものではありません。"
    },
    {
      "indent": 0,
      "text": "4.2. Example Usage",
      "section_title": true,
      "ja": "4.2. 使用の例"
    },
    {
      "indent": 3,
      "text": "This section presents two examples showing the \"tls-server-grouping\" grouping populated with some data. These examples are effectively the same except the first configures the server identity using a local key while the second uses a key configured in a keystore. Both examples are consistent with the examples presented in Section 2.2.1 of [RFC9641] and Section 2.2.1 of [RFC9642].",
      "ja": "このセクションでは、いくつかのデータが入力された「TLS-Server-Grouping」のグループ化を示す2つの例を示します。これらの例は、ローカルキーを使用してサーバーのアイデンティティを最初に構成し、2番目のキーをキーストアで構成したキーを使用することを除いて、効果的に同じです。両方の例は、[RFC9641]のセクション2.2.1および[RFC9642]のセクション2.2.1に示されている例と一致しています。"
    },
    {
      "indent": 3,
      "text": "The following configuration example uses inline-definitions for the server identity and client authentication:",
      "ja": "次の構成例では、サーバーのIDとクライアント認証にインライン解像度を使用します。"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\' line wrapping per RFC 8792 ================\n\n<!-- The outermost element below doesn't exist in the data model. -->\n<!--  It simulates if the \"grouping\" were a \"container\" instead.  -->\n\n<tls-server\n  xmlns=\"urn:ietf:params:xml:ns:yang:ietf-tls-server\"\n  xmlns:ct=\"urn:ietf:params:xml:ns:yang:ietf-crypto-types\">\n\n    <!-- how this server will authenticate itself to the client -->\n    <server-identity>\n        <certificate>\n          <inline-definition>\n              <private-key-format>ct:rsa-private-key-format</private\\\n-key-format>\n              <cleartext-private-key>BASE64VALUE=</cleartext-private\\\n-key>\n              <cert-data>BASE64VALUE=</cert-data>\n            </inline-definition>\n        </certificate>\n    </server-identity>\n\n    <!-- which certificates will this server trust -->\n    <client-authentication>\n        <ca-certs>\n            <inline-definition>\n                <certificate>\n                    <name>Identity Cert Issuer #1</name>\n                    <cert-data>BASE64VALUE=</cert-data>\n                </certificate>\n                <certificate>\n                    <name>Identity Cert Issuer #2</name>\n                    <cert-data>BASE64VALUE=</cert-data>\n                </certificate>\n            </inline-definition>\n        </ca-certs>\n        <ee-certs>\n            <inline-definition>\n                <certificate>\n                    <name>Application #1</name>\n                    <cert-data>BASE64VALUE=</cert-data>\n                </certificate>\n                <certificate>\n                    <name>Application #2</name>\n                    <cert-data>BASE64VALUE=</cert-data>\n                </certificate>\n            </inline-definition>\n        </ee-certs>\n        <raw-public-keys>\n            <inline-definition>\n                <public-key>\n                    <name>User A</name>\n                    <public-key-format>ct:subject-public-key-info-fo\\\nrmat</public-key-format>\n                    <public-key>BASE64VALUE=</public-key>\n                </public-key>\n                <public-key>\n                    <name>User B</name>\n                    <public-key-format>ct:subject-public-key-info-fo\\\nrmat</public-key-format>\n                    <public-key>BASE64VALUE=</public-key>\n                </public-key>\n            </inline-definition>\n        </raw-public-keys>\n        <tls12-psks/>\n        <tls13-epsks/>\n    </client-authentication>\n\n    <keepalives>\n        <peer-allowed-to-send/>\n    </keepalives>\n\n</tls-server>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following configuration example uses central-keystore-references for the server identity and central-truststore-references for client authentication from the keystore:",
      "ja": "次の構成例では、キーストアからのクライアント認証には、サーバーのアイデンティティと中央トラストストアの参照に中央キーストア参照を使用します。"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\' line wrapping per RFC 8792 ================\n\n<!-- The outermost element below doesn't exist in the data model. -->\n<!--  It simulates if the \"grouping\" were a \"container\" instead.  -->\n\n<tls-server xmlns=\"urn:ietf:params:xml:ns:yang:ietf-tls-server\">\n\n    <!-- how this server will authenticate itself to the client -->\n    <server-identity>\n        <certificate>\n            <central-keystore-reference>\n                <asymmetric-key>rsa-asymmetric-key</asymmetric-key>\n                <certificate>ex-rsa-cert</certificate>\n            </central-keystore-reference>\n        </certificate>\n    </server-identity>\n\n    <!-- which certificates will this server trust -->\n    <client-authentication>\n        <ca-certs>\n            <central-truststore-reference>trusted-client-ca-certs</c\\\nentral-truststore-reference>\n        </ca-certs>\n        <ee-certs>\n            <central-truststore-reference>trusted-client-ee-certs</c\\\nentral-truststore-reference>\n        </ee-certs>\n        <raw-public-keys>\n            <central-truststore-reference>Raw Public Keys for TLS Cl\\\nients</central-truststore-reference>\n        </raw-public-keys>\n        <tls12-psks/>\n        <tls13-epsks/>\n    </client-authentication>\n\n    <keepalives>\n        <peer-allowed-to-send/>\n    </keepalives>\n\n</tls-server>",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.3. YANG Module",
      "section_title": true,
      "ja": "4.3. ヤンモジュール"
    },
    {
      "indent": 3,
      "text": "This YANG module has normative references to [RFC4279], [RFC5280], [RFC6520], [RFC7250], [RFC9640], [RFC9641], and [RFC9642] and informative references to [RFC5056], [RFC5246], [RFC8446], [RFC9258], and [RFC9257].",
      "ja": "このYangモジュールには、[RFC4279]、[RFC5280]、[RFC6520]、[RFC7250]、[RFC9640]、[RFC9641]、[RFC9641]、[RFC9642]、[RFC5246]、[RFC5246]、[RFC5246]、、[RFC9258]、および[RFC9257]。"
    },
    {
      "indent": 3,
      "text": "module ietf-tls-server {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-tls-server\";\n  prefix tlss;\n\n  import ietf-netconf-acm {\n    prefix nacm;\n    reference\n      \"RFC 8341: Network Configuration Access Control Model\";\n  }\n  import ietf-crypto-types {\n    prefix ct;\n    reference\n      \"RFC 9640: YANG Data Types and Groupings for Cryptography\";\n  }\n  import ietf-truststore {\n    prefix ts;\n    reference\n      \"RFC 9641: A YANG Data Model for a Truststore\";\n  }\n  import ietf-keystore {\n    prefix ks;\n    reference\n      \"RFC 9642: A YANG Data Model for a Keystore\";\n  }\n  import ietf-tls-common {\n    prefix tlscmn;\n    reference\n      \"RFC 9645: YANG Groupings for TLS Clients and TLS Servers\";\n  }\n\n  organization\n    \"IETF NETCONF (Network Configuration) Working Group\";\n  contact\n    \"WG List:  NETCONF WG list <mailto:netconf@ietf.org>\n     WG Web:   https://datatracker.ietf.org/wg/netconf\n     Author:   Kent Watsen <mailto:kent+ietf@watsen.net>\n     Author:   Jeff Hartley <mailto:intensifysecurity@gmail.com>\";\n  description\n    \"This module defines reusable groupings for TLS servers that\n     can be used as a basis for specific TLS server instances.\n\n     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',\n     'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',\n     'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document\n     are to be interpreted as described in BCP 14 (RFC 2119)\n     (RFC 8174) when, and only when, they appear in all\n     capitals, as shown here.\n\n     Copyright (c) 2024 IETF Trust and the persons identified\n     as authors of the code. All rights reserved.\n\n     Redistribution and use in source and binary forms, with\n     or without modification, is permitted pursuant to, and\n     subject to the license terms contained in, the Revised\n     BSD License set forth in Section 4.c of the IETF Trust's\n     Legal Provisions Relating to IETF Documents\n     (https://trustee.ietf.org/license-info).\n\n     This version of this YANG module is part of RFC 9645\n     (https://www.rfc-editor.org/info/rfc9645); see the RFC\n     itself for full legal notices.\";\n\n  revision 2024-10-10 {\n    description\n      \"Initial version.\";\n    reference\n      \"RFC 9645: YANG Groupings for TLS Clients and TLS Servers\";\n  }\n\n  // Features\n\n  feature tls-server-keepalives {\n    description\n      \"Per-socket TLS keepalive parameters are configurable for\n       TLS servers on the server implementing this feature.\";\n  }\n\n  feature server-ident-x509-cert {\n    description\n      \"Indicates that the server supports identifying itself\n       using X.509 certificates.\";\n    reference\n      \"RFC 5280:\n         Internet X.509 Public Key Infrastructure Certificate\n         and Certificate Revocation List (CRL) Profile\";\n  }\n\n  feature server-ident-raw-public-key {\n    description\n      \"Indicates that the server supports identifying itself\n       using raw public keys.\";\n    reference\n      \"RFC 7250:\n         Using Raw Public Keys in Transport Layer Security (TLS)\n         and Datagram Transport Layer Security (DTLS)\";\n  }\n\n  feature server-ident-tls12-psk {\n    if-feature \"tlscmn:tls12\";\n    description\n      \"Indicates that the server supports identifying itself\n       using TLS 1.2 PSKs (pre-shared or pairwise symmetric keys).\";\n    reference\n      \"RFC 4279:\n         Pre-Shared Key Ciphersuites for Transport Layer Security\n         (TLS)\";\n  }\n\n  feature server-ident-tls13-epsk {\n    if-feature \"tlscmn:tls13\";\n    description\n      \"Indicates that the server supports identifying itself\n       using TLS 1.3 External PSKs (pre-shared keys).\";\n    reference\n      \"RFC 8446:\n         The Transport Layer Security (TLS) Protocol Version 1.3\";\n  }\n\n  feature client-auth-supported {\n    description\n      \"Indicates that the configuration for how to authenticate\n       clients can be configured herein.  TLS-level client\n       authentication may not be needed when client authentication\n       is expected to occur only at another protocol layer.\";\n  }\n\n  feature client-auth-x509-cert {\n    description\n      \"Indicates that the server supports authenticating clients\n       using X.509 certificates.\";\n    reference\n      \"RFC 5280:\n         Internet X.509 Public Key Infrastructure Certificate\n         and Certificate Revocation List (CRL) Profile\";\n  }\n\n  feature client-auth-raw-public-key {\n    description\n      \"Indicates that the server supports authenticating clients\n       using raw public keys.\";\n    reference\n      \"RFC 7250:\n         Using Raw Public Keys in Transport Layer Security (TLS)\n         and Datagram Transport Layer Security (DTLS)\";\n  }\n\n  feature client-auth-tls12-psk {\n    description\n      \"Indicates that the server supports authenticating clients\n       using PSKs (pre-shared or pairwise symmetric keys).\";\n    reference\n      \"RFC 4279:\n         Pre-Shared Key Ciphersuites for Transport Layer Security\n         (TLS)\";\n  }\n\n  feature client-auth-tls13-epsk {\n    description\n      \"Indicates that the server supports authenticating clients\n       using TLS 1.3 External PSKs (pre-shared keys).\";\n    reference\n      \"RFC 8446:\n         The Transport Layer Security (TLS) Protocol Version 1.3\";\n  }\n\n  // Groupings\n\n  grouping tls-server-grouping {\n    description\n      \"A reusable grouping for configuring a TLS server without\n       any consideration for how underlying TCP sessions are\n       established.\n\n       Note that this grouping uses fairly typical descendant\n       node names such that a stack of 'uses' statements will\n       have name conflicts.  It is intended that the consuming\n       data model will resolve the issue (e.g., by wrapping\n       the 'uses' statement in a container called\n       'tls-server-parameters').  This model purposely does\n       not do this itself so as to provide maximum flexibility\n       to consuming models.\";\n    container server-identity {\n      nacm:default-deny-write;\n      description\n        \"A locally defined or referenced End-Entity (EE) certificate,\n         including any configured intermediate certificates, that\n         the TLS server will present when establishing a TLS\n         connection in its Certificate message, as defined in\n         Section 7.4.2 of RFC 5246 and Section 4.4.2 of RFC 8446.\";\n      reference\n        \"RFC 5246: The Transport Layer Security (TLS) Protocol\n                   Version 1.2\n         RFC 8446: The Transport Layer Security (TLS) Protocol\n                   Version 1.3\n         RFC 9642: A YANG Data Model for a Keystore\";\n      choice auth-type {\n        mandatory true;\n        description\n          \"A choice amongst authentication types, of which one must\n           be enabled (via its associated 'feature') and selected.\";\n        case certificate {\n          if-feature \"server-ident-x509-cert\";\n          container certificate {\n            description\n              \"Specifies the server identity using a certificate.\";\n            uses \"ks:inline-or-keystore-end-entity-cert-with-key-\"\n               + \"grouping\" {\n              refine \"inline-or-keystore/inline/inline-definition\" {\n                must 'not(public-key-format) or derived-from-or-self'\n                   + '(public-key-format,'\n                   + ' \"ct:subject-public-'\n                   + 'key-info-format\")';\n              }\n              refine \"inline-or-keystore/central-keystore/\"\n                   + \"central-keystore-reference/asymmetric-key\" {\n                must 'not(deref(.)/../ks:public-key-format) or '\n                   + 'derived-from-or-self(deref(.)/../ks:public-key'\n                   + '-format, \"ct:subject-public-key-info-format\")';\n              }\n            }\n          }\n        }\n        case raw-private-key {\n          if-feature \"server-ident-raw-public-key\";\n          container raw-private-key {\n            description\n              \"Specifies the server identity using a raw\n               private key.\";\n            uses ks:inline-or-keystore-asymmetric-key-grouping {\n              refine \"inline-or-keystore/inline/inline-definition\" {\n                must 'not(public-key-format) or derived-from-or-self'\n                   + '(public-key-format,'\n                   + ' \"ct:subject-public-'\n                   + 'key-info-format\")';\n              }\n              refine \"inline-or-keystore/central-keystore/\"\n                   + \"central-keystore-reference\" {\n                must 'not(deref(.)/../ks:public-key-format) or '\n                   + 'derived-from-or-self(deref(.)/../ks:public-key'\n                   + '-format, \"ct:subject-public-key-info-format\")';\n              }\n            }\n          }\n        }\n        case tls12-psk {\n          if-feature \"server-ident-tls12-psk\";\n          container tls12-psk {\n            description\n              \"Specifies the server identity using a PSK (pre-shared\n               or pairwise symmetric key).\";\n            uses ks:inline-or-keystore-symmetric-key-grouping;\n            leaf id-hint {\n              type string;\n              description\n                \"The key 'psk_identity_hint' value used in the TLS\n                 'ServerKeyExchange' message.\";\n              reference\n                \"RFC 4279: Pre-Shared Key Ciphersuites for\n                           Transport Layer Security (TLS)\";\n            }\n          }\n        }\n        case tls13-epsk {\n          if-feature \"server-ident-tls13-epsk\";\n          container tls13-epsk {\n            description\n              \"An External Pre-Shared Key (EPSK) is established\n               or provisioned out of band, i.e., not from a TLS\n               connection.  An EPSK is a tuple of (Base Key,\n               External Identity, Hash).  EPSKs MUST NOT be\n               imported for (D)TLS 1.2 or prior versions.\n               When PSKs are provisioned out of band, the PSK\n               identity and the KDF hash algorithm to be used\n               with the PSK MUST also be provisioned.\n\n               The structure of this container is designed to\n               satisfy the requirements in Section 4.2.11 of\n               RFC 8446, the recommendations from Section 6 of\n               RFC 9257, and the EPSK input fields detailed in\n               Section 5.1 of RFC 9258.  The base-key is based\n               upon 'ks:inline-or-keystore-symmetric-key-grouping'\n               in order to provide users with flexible and\n               secure storage options.\";\n            reference\n              \"RFC 8446: The Transport Layer Security (TLS)\n                         Protocol Version 1.3\n               RFC 9257: Guidance for External Pre-Shared Key\n                         (PSK) Usage in TLS\n               RFC 9258: Importing External Pre-Shared Keys\n                         (PSKs) for TLS 1.3\";\n            uses ks:inline-or-keystore-symmetric-key-grouping;\n            leaf external-identity {\n              type string;\n              mandatory true;\n              description\n                \"As per Section 4.2.11 of RFC 8446 and Section 4.1\n                 of RFC 9257, a sequence of bytes used to identify\n                 an EPSK.  A label for a pre-shared key established\n                 externally.\";\n              reference\n                \"RFC 8446: The Transport Layer Security (TLS)\n                           Protocol Version 1.3\n                 RFC 9257: Guidance for External Pre-Shared Key\n                           (PSK) Usage in TLS\";\n            }\n            leaf hash {\n              type tlscmn:epsk-supported-hash;\n              default \"sha-256\";\n              description\n                \"As per Section 4.2.11 of RFC 8446, for EPSKs,\n                 the hash algorithm MUST be set when the PSK is\n                 established; otherwise, default to SHA-256 if\n                 no such algorithm is defined.  The server MUST\n                 ensure that it selects a compatible PSK (if any)\n                 and cipher suite.  Each PSK MUST only be used\n                 with a single hash function.\";\n              reference\n                \"RFC 8446: The Transport Layer Security (TLS)\n                           Protocol Version 1.3\";\n            }\n            leaf context {\n              type string;\n              description\n                \"As per Section 5.1 of RFC 9258, context MUST\n                 include the context used to determine the EPSK,\n                 if any exists.  For example, context may include\n                 information about peer roles or identities\n                 to mitigate Selfie-style reflection attacks.\n                 Since the EPSK is a key derived from an external\n                 protocol or sequence of protocols, context MUST\n                 include a channel binding for the deriving\n                 protocols (see RFC 5056).  The details of this\n                 binding are protocol specific and out of scope\n                 for this document.\";\n              reference\n                \"RFC 9258: Importing External Pre-Shared Keys\n                           (PSKs) for TLS 1.3\";\n            }\n            leaf target-protocol {\n              type uint16;\n              description\n                \"As per Section 3.1 of RFC 9258, the protocol\n                 for which a PSK is imported for use.\";\n              reference\n                \"RFC 9258: Importing External Pre-Shared Keys\n                           (PSKs) for TLS 1.3\";\n            }\n            leaf target-kdf {\n              type uint16;\n              description\n                \"As per Section 3 of RFC 9258, the KDF for\n                 which a PSK is imported for use.\";\n              reference\n                \"RFC 9258: Importing External Pre-Shared Keys\n                           (PSKs) for TLS 1.3\";\n            }\n          }\n        }\n      }\n    } // container server-identity\n    container client-authentication {\n      if-feature \"client-auth-supported\";\n      nacm:default-deny-write;\n      must \"ca-certs or ee-certs or raw-public-keys or tls12-psks\n                    or tls13-epsks\";\n      presence \"Indicates that client authentication is supported\n                (i.e., that the server will request clients send\n                certificates).  If not configured, the TLS server\n                SHOULD NOT request that TLS clients provide\n                authentication credentials.\";\n      description\n        \"Specifies how the TLS server can authenticate TLS clients.\n         Any combination of credentials is additive and unordered.\n\n         Note that no configuration is required for authentication\n         based on PSK (pre-shared or pairwise symmetric key) as the\n         the key is necessarily the same as configured in the\n         '../server-identity' node.\";\n      container ca-certs {\n        if-feature \"client-auth-x509-cert\";\n        presence \"Indicates that Certification Authority (CA)\n                  certificates have been configured.  This\n                  statement is present so the mandatory\n                  descendant nodes do not imply that this node\n                  must be configured.\";\n        description\n          \"A set of CA certificates used by the TLS server to\n           authenticate TLS client certificates.  A client\n           certificate is authenticated if it has a valid chain\n           of trust to a configured CA certificate.\";\n        reference\n          \"RFC 9641: A YANG Data Model for a Truststore\";\n        uses ts:inline-or-truststore-certs-grouping;\n      }\n      container ee-certs {\n        if-feature \"client-auth-x509-cert\";\n        presence \"Indicates that EE certificates have been\n                  configured.  This statement is present so the\n                  mandatory descendant nodes do not imply that\n                  this node must be configured.\";\n        description\n          \"A set of client certificates (i.e., EE certificates)\n           used by the TLS server to authenticate\n           certificates presented by TLS clients.  A client\n           certificate is authenticated if it is an exact\n           match to a configured client certificate.\";\n        reference\n          \"RFC 9641: A YANG Data Model for a Truststore\";\n        uses ts:inline-or-truststore-certs-grouping;\n      }\n      container raw-public-keys {\n        if-feature \"client-auth-raw-public-key\";\n        presence \"Indicates that raw public keys have been\n                  configured.  This statement is present so\n                  the mandatory descendant nodes do not imply\n                  that this node must be configured.\";\n        description\n          \"A set of raw public keys used by the TLS server to\n           authenticate raw public keys presented by the TLS\n           client.  A raw public key is authenticated if it\n           is an exact match to a configured raw public key.\";\n        reference\n          \"RFC 9641: A YANG Data Model for a Truststore\";\n        uses ts:inline-or-truststore-public-keys-grouping {\n          refine \"inline-or-truststore/inline/inline-definition/\"\n               + \"public-key\" {\n            must 'derived-from-or-self(public-key-format,'\n               + ' \"ct:subject-public-key-info-format\")';\n          }\n          refine \"inline-or-truststore/central-truststore/\"\n               + \"central-truststore-reference\" {\n            must 'not(deref(.)/../ts:public-key/ts:public-key-'\n               + 'format[not(derived-from-or-self(., \"ct:subject-'\n               + 'public-key-info-format\"))])';\n          }\n        }\n      }\n      leaf tls12-psks {\n        if-feature \"client-auth-tls12-psk\";\n        type empty;\n        description\n          \"Indicates that the TLS server can authenticate TLS clients\n           using configured PSKs (pre-shared or pairwise symmetric\n           keys).\n\n           No configuration is required since the PSK value is the\n           same as PSK value configured in the 'server-identity'\n           node.\";\n      }\n      leaf tls13-epsks {\n        if-feature \"client-auth-tls13-epsk\";\n        type empty;\n        description\n          \"Indicates that the TLS 1.3 server can authenticate TLS\n           clients using configured External PSKs (pre-shared keys).\n\n           No configuration is required since the PSK value is the\n           same as PSK value configured in the 'server-identity'\n           node.\";\n      }\n    } // container client-authentication\n    container hello-params {\n      nacm:default-deny-write;\n      if-feature \"tlscmn:hello-params\";\n      uses tlscmn:hello-params-grouping;\n      description\n        \"Configurable parameters for the TLS hello message.\";\n    } // container hello-params\n    container keepalives {\n      nacm:default-deny-write;\n      if-feature \"tls-server-keepalives\";\n      description\n        \"Configures the keepalive policy for the TLS server.\";\n      leaf peer-allowed-to-send {\n        type empty;\n        description\n          \"Indicates that the remote TLS client is allowed to send\n           HeartbeatRequest messages, as defined by RFC 6520,\n           to this TLS server.\";\n        reference\n          \"RFC 6520: Transport Layer Security (TLS) and Datagram\n           Transport Layer Security (DTLS) Heartbeat Extension\";\n      }\n      container test-peer-aliveness {\n        presence \"Indicates that the TLS server proactively tests the\n                  aliveness of the remote TLS client.\";\n        description\n          \"Configures the keepalive policy to proactively test\n           the aliveness of the TLS client.  An unresponsive\n           TLS client is dropped after approximately max-wait\n           * max-attempts seconds.\";\n        leaf max-wait {\n          type uint16 {\n            range \"1..max\";\n          }\n          units \"seconds\";\n          default \"30\";\n          description\n            \"Sets the amount of time in seconds, after which a\n             TLS-level message will be sent to test the\n             aliveness of the TLS client if no data has been\n             received from the TLS client.\";\n        }\n        leaf max-attempts {\n          type uint8;\n          default \"3\";\n          description\n            \"Sets the maximum number of sequential keepalive\n             messages that can fail to obtain a response from\n             the TLS client before assuming the TLS client is\n             no longer alive.\";\n        }\n      }\n    } // container keepalives\n  } // grouping tls-server-grouping\n\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The three IETF YANG modules in this document define groupings and will not be deployed as standalone modules. Their security implications may be context dependent based on their use in other modules. The designers of modules that import these grouping must conduct their own analysis of the security considerations.",
      "ja": "このドキュメントの3つのIETF Yangモジュールは、グループ化を定義し、スタンドアロンモジュールとして展開されません。それらのセキュリティへの影響は、他のモジュールでの使用に基づいてコンテキストに依存する場合があります。これらのグループをインポートするモジュールの設計者は、セキュリティに関する考慮事項の独自の分析を実施する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.1. Considerations for the \"iana-tls-cipher-suite-algs\" YANG Module",
      "section_title": true,
      "ja": "5.1. 「IANA-TLS-Cipher-Suite-Algs」Yangモジュールの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section is modeled after the template defined in Section 3.7.1 of [RFC8407].",
      "ja": "このセクションは、[RFC8407]のセクション3.7.1で定義されているテンプレートをモデルにしています。"
    },
    {
      "indent": 3,
      "text": "The \"iana-tls-cipher-suite-algs\" YANG module defines a data model that is designed to be accessed via YANG-based management protocols, such as NETCONF [RFC6241] and RESTCONF [RFC8040]. These protocols have mandatory-to-implement secure transport layers (e.g., Secure Shell (SSH) [RFC4252], TLS [RFC8446], and QUIC [RFC9000]) and mandatory-to-implement mutual authentication.",
      "ja": "「IANA-TLS-Cipher-Suite-Algs」Yangモジュールは、NetConf [RFC6241]やRestConf [RFC8040]などのYangベースの管理プロトコルを介してアクセスするように設計されたデータモデルを定義します。これらのプロトコルには、必須の安全性の安全な輸送層（例：セキュアシェル（SSH）[RFC4252]、TLS [RFC8446]、およびQUIC [RFC9000]）および義務的な相互認証があります。"
    },
    {
      "indent": 3,
      "text": "The Network Configuration Access Control Model (NACM) [RFC8341] provides the means to restrict access for particular users to a preconfigured subset of all available protocol operations and content.",
      "ja": "ネットワーク構成アクセス制御モデル（NACM）[RFC8341]は、利用可能なすべてのプロトコル操作とコンテンツの事前に構成されたサブセットへの特定のユーザーのアクセスを制限する手段を提供します。"
    },
    {
      "indent": 3,
      "text": "This YANG module defines YANG enumerations, for a public IANA-maintained registry.",
      "ja": "このYangモジュールは、一般のIANAが維持したレジストリに対して、Yang列挙を定義します。"
    },
    {
      "indent": 3,
      "text": "YANG enumerations are not security-sensitive, as they are statically defined in the publicly accessible YANG module. IANA MAY deprecate and/or obsolete enumerations over time as needed to address security issues found in the algorithms.",
      "ja": "Yang列挙は、公開されているYangモジュールで静的に定義されているため、セキュリティに敏感ではありません。IANAは、アルゴリズムで見つかったセキュリティの問題に対処するために、必要に応じて時間の経過とともに廃止および/または時代遅れの列挙を非難する場合があります。"
    },
    {
      "indent": 3,
      "text": "This module does not define any writable nodes, RPCs, actions, or notifications, and thus the security considerations for such are not provided here.",
      "ja": "このモジュールは、書き込み可能なノード、RPC、アクション、または通知を定義していないため、このようなセキュリティ上の考慮事項はここでは提供されません。"
    },
    {
      "indent": 0,
      "text": "5.2. Considerations for the \"ietf-tls-common\" YANG Module",
      "section_title": true,
      "ja": "5.2. 「IETF-TLS-Common」Yangモジュールの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section is modeled after the template defined in Section 3.7.1 of [RFC8407].",
      "ja": "このセクションは、[RFC8407]のセクション3.7.1で定義されているテンプレートをモデルにしています。"
    },
    {
      "indent": 3,
      "text": "The \"ietf-tls-common\" YANG module defines a data model that is designed to be accessed via YANG-based management protocols, such as NETCONF [RFC6241] and RESTCONF [RFC8040]. These protocols have mandatory-to-implement secure transport layers (e.g., Secure Shell (SSH) [RFC4252], TLS [RFC8446], and QUIC [RFC9000]) and mandatory-to-implement mutual authentication.",
      "ja": "「IETF-TLS-Common」Yangモジュールは、NetConf [RFC6241]やRestConf [RFC8040]などのYangベースの管理プロトコルを介してアクセスできるように設計されたデータモデルを定義します。これらのプロトコルには、必須の安全性の安全な輸送層（例：セキュアシェル（SSH）[RFC4252]、TLS [RFC8446]、およびQUIC [RFC9000]）および義務的な相互認証があります。"
    },
    {
      "indent": 3,
      "text": "The Network Configuration Access Control Model (NACM) [RFC8341] provides the means to restrict access for particular users to a preconfigured subset of all available protocol operations and content.",
      "ja": "ネットワーク構成アクセス制御モデル（NACM）[RFC8341]は、利用可能なすべてのプロトコル操作とコンテンツの事前に構成されたサブセットへの特定のユーザーのアクセスを制限する手段を提供します。"
    },
    {
      "indent": 3,
      "text": "Please be aware that this YANG module uses groupings from other YANG modules that define nodes that may be considered sensitive or vulnerable in network environments. Please review the Security Considerations for dependent YANG modules for information as to which nodes may be considered sensitive or vulnerable in network environments.",
      "ja": "このYangモジュールは、ネットワーク環境で敏感または脆弱と見なされる可能性のあるノードを定義する他のYangモジュールのグループを使用していることに注意してください。ネットワーク環境で敏感または脆弱性と見なされるノードに関する情報については、依存するYangモジュールのセキュリティに関する考慮事項を確認してください。"
    },
    {
      "indent": 3,
      "text": "None of the readable data nodes defined in this YANG module are considered sensitive or vulnerable in network environments. The NACM \"default-deny-all\" extension has not been set for any data nodes defined in this module.",
      "ja": "このYangモジュールで定義されている読み取り可能なデータノードはいずれも、ネットワーク環境で敏感または脆弱と見なされません。このモジュールで定義されているデータノードに対して、NACMの「デフォルトデニーオール」拡張機能は設定されていません。"
    },
    {
      "indent": 3,
      "text": "None of the writable data nodes defined in this YANG module are considered sensitive or vulnerable in network environments. The NACM \"default-deny-write\" extension has not been set for any data nodes defined in this module.",
      "ja": "このYangモジュールで定義されている書き込み可能なデータノードはいずれも、ネットワーク環境で敏感または脆弱であると見なされません。このモジュールで定義されているデータノードに対して、NACMの「デフォルトデニーワイト」拡張機能は設定されていません。"
    },
    {
      "indent": 3,
      "text": "This module defines the \"generate-asymmetric-key-pair\" RPC that may, if the \"ct:cleartext-private-keys\" feature is enabled and the client requests it, return the private clear in cleartext form. It is NOT RECOMMENDED for private keys to pass the server's security perimeter.",
      "ja": "このモジュールは、「CT：ClearText-Private-Keys」機能が有効になり、クライアントがそれを要求する場合、「CT：ClearText-Private-Keys」機能を要求する場合、「CT：ClearText-Private-Keys」機能がcleartextフォームで返される場合がある「生成アジメトリックキーペア」RPCを定義します。プライベートキーがサーバーのセキュリティ境界線を渡すことはお勧めしません。"
    },
    {
      "indent": 3,
      "text": "This module does not define any actions or notifications, and thus the security considerations for such are not provided here.",
      "ja": "このモジュールは、アクションや通知を定義していないため、このようなセキュリティ上の考慮事項はここでは提供されません。"
    },
    {
      "indent": 0,
      "text": "5.3. Considerations for the \"ietf-tls-client\" YANG Module",
      "section_title": true,
      "ja": "5.3. 「IETF-TLS-Client」Yangモジュールの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section is modeled after the template defined in Section 3.7.1 of [RFC8407].",
      "ja": "このセクションは、[RFC8407]のセクション3.7.1で定義されているテンプレートをモデルにしています。"
    },
    {
      "indent": 3,
      "text": "The \"ietf-tls-client\" YANG module defines a data model that is designed to be accessed via YANG-based management protocols, such as NETCONF [RFC6241] and RESTCONF [RFC8040]. These protocols have mandatory-to-implement secure transport layers (e.g., Secure Shell (SSH) [RFC4252], TLS [RFC8446], and QUIC [RFC9000]) and mandatory-to-implement mutual authentication.",
      "ja": "「IETF-TLS-Client」Yangモジュールは、NetConf [RFC6241]やRestConf [RFC8040]などのYangベースの管理プロトコルを介してアクセスできるように設計されたデータモデルを定義します。これらのプロトコルには、必須の安全性の安全な輸送層（例：セキュアシェル（SSH）[RFC4252]、TLS [RFC8446]、およびQUIC [RFC9000]）および義務的な相互認証があります。"
    },
    {
      "indent": 3,
      "text": "The Network Configuration Access Control Model (NACM) [RFC8341] provides the means to restrict access for particular users to a preconfigured subset of all available protocol operations and content.",
      "ja": "ネットワーク構成アクセス制御モデル（NACM）[RFC8341]は、利用可能なすべてのプロトコル操作とコンテンツの事前に構成されたサブセットへの特定のユーザーのアクセスを制限する手段を提供します。"
    },
    {
      "indent": 3,
      "text": "Please be aware that this YANG module uses groupings from other YANG modules that define nodes that may be considered sensitive or vulnerable in network environments. Please review the Security Considerations for dependent YANG modules for information as to which nodes may be considered sensitive or vulnerable in network environments.",
      "ja": "このYangモジュールは、ネットワーク環境で敏感または脆弱と見なされる可能性のあるノードを定義する他のYangモジュールのグループを使用していることに注意してください。ネットワーク環境で敏感または脆弱性と見なされるノードに関する情報については、依存するYangモジュールのセキュリティに関する考慮事項を確認してください。"
    },
    {
      "indent": 3,
      "text": "None of the readable data nodes defined in this YANG module are considered sensitive or vulnerable in network environments. The NACM \"default-deny-all\" extension has not been set for any data nodes defined in this module.",
      "ja": "このYangモジュールで定義されている読み取り可能なデータノードはいずれも、ネットワーク環境で敏感または脆弱と見なされません。このモジュールで定義されているデータノードに対して、NACMの「デフォルトデニーオール」拡張機能は設定されていません。"
    },
    {
      "indent": 3,
      "text": "All the writable data nodes defined by this module may be considered sensitive or vulnerable in some network environments. For instance, any modification to a key or reference to a key may dramatically alter the implemented security policy. For this reason, the NACM extension \"default-deny-write\" has been set for all data nodes defined in this module.",
      "ja": "このモジュールで定義されたすべての書き込み可能なデータノードは、一部のネットワーク環境で敏感または脆弱と見なされる場合があります。たとえば、キーの変更またはキーへの参照は、実装されたセキュリティポリシーを劇的に変更する場合があります。このため、このモジュールで定義されているすべてのデータノードに対して、NACM拡張「デフォルトデニーワイト」が設定されています。"
    },
    {
      "indent": 3,
      "text": "This module does not define any RPCs, actions, or notifications, and thus the security considerations for such are not provided here.",
      "ja": "このモジュールは、RPC、アクション、または通知を定義していないため、このようなセキュリティ上の考慮事項はここでは提供されません。"
    },
    {
      "indent": 0,
      "text": "5.4. Considerations for the \"ietf-tls-server\" YANG Module",
      "section_title": true,
      "ja": "5.4. 「IETF-TLS-SERVER」Yangモジュールの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section is modeled after the template defined in Section 3.7.1 of [RFC8407].",
      "ja": "このセクションは、[RFC8407]のセクション3.7.1で定義されているテンプレートをモデルにしています。"
    },
    {
      "indent": 3,
      "text": "The \"ietf-tls-server\" YANG module defines a data model that is designed to be accessed via YANG-based management protocols, such as NETCONF [RFC6241] and RESTCONF [RFC8040]. These protocols have mandatory-to-implement secure transport layers (e.g., Secure Shell (SSH) [RFC4252], TLS [RFC8446], and QUIC [RFC9000]) and mandatory-to-implement mutual authentication.",
      "ja": "「IETF-TLS-SERVER」Yangモジュールは、NetConf [RFC6241]やRestConf [RFC8040]などのYangベースの管理プロトコルを介してアクセスできるように設計されたデータモデルを定義します。これらのプロトコルには、必須の安全性の安全な輸送層（例：セキュアシェル（SSH）[RFC4252]、TLS [RFC8446]、およびQUIC [RFC9000]）および義務的な相互認証があります。"
    },
    {
      "indent": 3,
      "text": "The Network Configuration Access Control Model (NACM) [RFC8341] provides the means to restrict access for particular users to a preconfigured subset of all available protocol operations and content.",
      "ja": "ネットワーク構成アクセス制御モデル（NACM）[RFC8341]は、利用可能なすべてのプロトコル操作とコンテンツの事前に構成されたサブセットへの特定のユーザーのアクセスを制限する手段を提供します。"
    },
    {
      "indent": 3,
      "text": "Please be aware that this YANG module uses groupings from other YANG modules that define nodes that may be considered sensitive or vulnerable in network environments. Please review the Security Considerations for dependent YANG modules for information as to which nodes may be considered sensitive or vulnerable in network environments.",
      "ja": "このYangモジュールは、ネットワーク環境で敏感または脆弱と見なされる可能性のあるノードを定義する他のYangモジュールのグループを使用していることに注意してください。ネットワーク環境で敏感または脆弱性と見なされるノードに関する情報については、依存するYangモジュールのセキュリティに関する考慮事項を確認してください。"
    },
    {
      "indent": 3,
      "text": "None of the readable data nodes defined in this YANG module are considered sensitive or vulnerable in network environments. The NACM \"default-deny-all\" extension has not been set for any data nodes defined in this module.",
      "ja": "このYangモジュールで定義されている読み取り可能なデータノードはいずれも、ネットワーク環境で敏感または脆弱と見なされません。このモジュールで定義されているデータノードに対して、NACMの「デフォルトデニーオール」拡張機能は設定されていません。"
    },
    {
      "indent": 3,
      "text": "Please be aware that this module uses the \"key\" and \"private-key\" nodes from the \"ietf-crypto-types\" module [RFC9640], where said nodes have the NACM extension \"default-deny-all\" set, thus preventing unrestricted read access to the cleartext key values.",
      "ja": "このモジュールは、「IETF-CRYPTO-TYPES」モジュール[RFC9640]からの「キー」および「プライベートキー」ノードを使用していることに注意してください。ClearTextキー値への無制限の読み取りアクセス。"
    },
    {
      "indent": 3,
      "text": "All the writable data nodes defined by this module may be considered sensitive or vulnerable in some network environments. For instance, any modification to a key or reference to a key may dramatically alter the implemented security policy. For this reason, the NACM extension \"default-deny-write\" has been set for all data nodes defined in this module.",
      "ja": "このモジュールで定義されたすべての書き込み可能なデータノードは、一部のネットワーク環境で敏感または脆弱と見なされる場合があります。たとえば、キーの変更またはキーへの参照は、実装されたセキュリティポリシーを劇的に変更する場合があります。このため、このモジュールで定義されているすべてのデータノードに対して、NACM拡張「デフォルトデニーワイト」が設定されています。"
    },
    {
      "indent": 3,
      "text": "This module does not define any RPCs, actions, or notifications, and thus the security considerations for such are not provided here.",
      "ja": "このモジュールは、RPC、アクション、または通知を定義していないため、このようなセキュリティ上の考慮事項はここでは提供されません。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "6.1. The IETF XML Registry",
      "section_title": true,
      "ja": "6.1. IETF XMLレジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has registered the following four URIs in the \"ns\" registry of the \"IETF XML Registry\" [RFC3688].",
      "ja": "IANAは、「IETF XMLレジストリ」[RFC3688]の「NS」レジストリに次の4つのURIを登録しています。"
    },
    {
      "indent": 3,
      "text": "URI:",
      "ja": "URI:"
    },
    {
      "indent": 12,
      "text": "urn:ietf:params:xml:ns:yang:iana-tls-cipher-suite-algs",
      "ja": "urn：ietf：params：xml：ns：yang：iana-tls-cipher-suite-algs"
    },
    {
      "indent": 3,
      "text": "Registrant Contact:",
      "ja": "登録者の連絡先："
    },
    {
      "indent": 12,
      "text": "The IESG",
      "ja": "IESG"
    },
    {
      "indent": 3,
      "text": "XML:",
      "ja": "XML:"
    },
    {
      "indent": 12,
      "text": "N/A; the requested URI is an XML namespace.",
      "ja": "n/a;要求されたURIはXMLネームスペースです。"
    },
    {
      "indent": 3,
      "text": "URI:",
      "ja": "URI:"
    },
    {
      "indent": 12,
      "text": "urn:ietf:params:xml:ns:yang:ietf-tls-common",
      "ja": "urn：ietf：params：xml：ns：yang：ietf-tls-common"
    },
    {
      "indent": 3,
      "text": "Registrant Contact:",
      "ja": "登録者の連絡先："
    },
    {
      "indent": 12,
      "text": "The IESG",
      "ja": "IESG"
    },
    {
      "indent": 3,
      "text": "XML:",
      "ja": "XML:"
    },
    {
      "indent": 12,
      "text": "N/A; the requested URI is an XML namespace.",
      "ja": "n/a;要求されたURIはXMLネームスペースです。"
    },
    {
      "indent": 3,
      "text": "URI:",
      "ja": "URI:"
    },
    {
      "indent": 12,
      "text": "urn:ietf:params:xml:ns:yang:ietf-tls-client",
      "ja": "urn：ietf：params：xml：ns：yang：ietf-tls-client"
    },
    {
      "indent": 3,
      "text": "Registrant Contact:",
      "ja": "登録者の連絡先："
    },
    {
      "indent": 12,
      "text": "The IESG",
      "ja": "IESG"
    },
    {
      "indent": 3,
      "text": "XML:",
      "ja": "XML:"
    },
    {
      "indent": 12,
      "text": "N/A; the requested URI is an XML namespace.",
      "ja": "n/a;要求されたURIはXMLネームスペースです。"
    },
    {
      "indent": 3,
      "text": "URI:",
      "ja": "URI:"
    },
    {
      "indent": 12,
      "text": "urn:ietf:params:xml:ns:yang:ietf-tls-server",
      "ja": "urn：ietf：params：xml：ns：yang：ietf-tls-server"
    },
    {
      "indent": 3,
      "text": "Registrant Contact:",
      "ja": "登録者の連絡先："
    },
    {
      "indent": 12,
      "text": "The IESG",
      "ja": "IESG"
    },
    {
      "indent": 3,
      "text": "XML:",
      "ja": "XML:"
    },
    {
      "indent": 12,
      "text": "N/A; the requested URI is an XML namespace.",
      "ja": "n/a;要求されたURIはXMLネームスペースです。"
    },
    {
      "indent": 0,
      "text": "6.2. The YANG Module Names Registry",
      "section_title": true,
      "ja": "6.2. Yangモジュール名レジストリ"
    },
    {
      "indent": 3,
      "text": "IANA has registered the following four YANG modules in the \"YANG Module Names\" registry [RFC6020].",
      "ja": "IANAは、「Yangモジュール名」レジストリ[RFC6020]に次の4つのYangモジュールを登録しました。"
    },
    {
      "indent": 3,
      "text": "name:",
      "ja": "名前："
    },
    {
      "indent": 12,
      "text": "iana-tls-cipher-suite-algs",
      "ja": "iana-tls-cipher-suite-algs"
    },
    {
      "indent": 3,
      "text": "Maintained by IANA:",
      "ja": "IANAによって維持されています："
    },
    {
      "indent": 12,
      "text": "Y",
      "ja": "y"
    },
    {
      "indent": 3,
      "text": "namespace:",
      "ja": "名前空間："
    },
    {
      "indent": 12,
      "text": "urn:ietf:params:xml:ns:yang:iana-tls-cipher-suite-algs",
      "ja": "urn：ietf：params：xml：ns：yang：iana-tls-cipher-suite-algs"
    },
    {
      "indent": 3,
      "text": "prefix:",
      "ja": "プレフィックス："
    },
    {
      "indent": 12,
      "text": "tlscsa",
      "ja": "TLSCSA"
    },
    {
      "indent": 3,
      "text": "reference:",
      "ja": "参照："
    },
    {
      "indent": 12,
      "text": "RFC 9645",
      "ja": "RFC 9645"
    },
    {
      "indent": 3,
      "text": "name:",
      "ja": "名前："
    },
    {
      "indent": 12,
      "text": "ietf-tls-common",
      "ja": "ietf-tls-common"
    },
    {
      "indent": 3,
      "text": "Maintained by IANA:",
      "ja": "IANAによって維持されています："
    },
    {
      "indent": 12,
      "text": "N",
      "ja": "n"
    },
    {
      "indent": 3,
      "text": "namespace:",
      "ja": "名前空間："
    },
    {
      "indent": 12,
      "text": "urn:ietf:params:xml:ns:yang:ietf-tls-common",
      "ja": "urn：ietf：params：xml：ns：yang：ietf-tls-common"
    },
    {
      "indent": 3,
      "text": "prefix:",
      "ja": "プレフィックス："
    },
    {
      "indent": 12,
      "text": "tlscmn",
      "ja": "tlscmn"
    },
    {
      "indent": 3,
      "text": "reference:",
      "ja": "参照："
    },
    {
      "indent": 12,
      "text": "RFC 9645",
      "ja": "RFC 9645"
    },
    {
      "indent": 3,
      "text": "name:",
      "ja": "名前："
    },
    {
      "indent": 12,
      "text": "ietf-tls-client",
      "ja": "ietf-tls-client"
    },
    {
      "indent": 3,
      "text": "Maintained by IANA:",
      "ja": "IANAによって維持されています："
    },
    {
      "indent": 12,
      "text": "N",
      "ja": "n"
    },
    {
      "indent": 3,
      "text": "namespace:",
      "ja": "名前空間："
    },
    {
      "indent": 12,
      "text": "urn:ietf:params:xml:ns:yang:ietf-tls-client",
      "ja": "urn：ietf：params：xml：ns：yang：ietf-tls-client"
    },
    {
      "indent": 3,
      "text": "prefix:",
      "ja": "プレフィックス："
    },
    {
      "indent": 12,
      "text": "tlsc",
      "ja": "TLSC"
    },
    {
      "indent": 3,
      "text": "reference:",
      "ja": "参照："
    },
    {
      "indent": 12,
      "text": "RFC 9645",
      "ja": "RFC 9645"
    },
    {
      "indent": 3,
      "text": "name:",
      "ja": "名前："
    },
    {
      "indent": 12,
      "text": "ietf-tls-server",
      "ja": "ietf-tls-server"
    },
    {
      "indent": 3,
      "text": "Maintained by IANA:",
      "ja": "IANAによって維持されています："
    },
    {
      "indent": 12,
      "text": "N",
      "ja": "n"
    },
    {
      "indent": 3,
      "text": "namespace:",
      "ja": "名前空間："
    },
    {
      "indent": 12,
      "text": "urn:ietf:params:xml:ns:yang:ietf-tls-server",
      "ja": "urn：ietf：params：xml：ns：yang：ietf-tls-server"
    },
    {
      "indent": 3,
      "text": "prefix:",
      "ja": "プレフィックス："
    },
    {
      "indent": 12,
      "text": "tlss",
      "ja": "TLSS"
    },
    {
      "indent": 3,
      "text": "reference:",
      "ja": "参照："
    },
    {
      "indent": 12,
      "text": "RFC 9645",
      "ja": "RFC 9645"
    },
    {
      "indent": 0,
      "text": "6.3. Considerations for the \"iana-tls-cipher-suite-algs\" YANG Module",
      "section_title": true,
      "ja": "6.3. 「IANA-TLS-Cipher-Suite-Algs」Yangモジュールの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section follows the template defined in Section 4.30.3.1 of [RFC8407BIS].",
      "ja": "このセクションは、[RFC8407BIS]のセクション4.30.3.1で定義されているテンプレートに従います。"
    },
    {
      "indent": 3,
      "text": "IANA used the script in Appendix A to generate the IANA-maintained \"iana-tls-cipher-suite-algs\" YANG module. The YANG module is available from the \"YANG Parameters\" registry [IANA-YANG-PARAMETERS].",
      "ja": "IANAは、付録Aのスクリプトを使用して、IANAが維持した「IANA-TLS-Cipher-Suite-Algs」Yangモジュールを生成しました。Yangモジュールは、「Yangパラメーター」レジストリ[Iana-Yang-Parameters]から入手できます。"
    },
    {
      "indent": 3,
      "text": "IANA has added the following note to the registry:",
      "ja": "IANAは次のメモをレジストリに追加しました。"
    },
    {
      "indent": 0,
      "text": "New values must not be directly added to the \"iana-tls-cipher-suite-algs\" YANG module. They must instead be added to the \"TLS Cipher Suites\" registry in the \"Transport Layer Security (TLS) Parameters\" registry group [IANA-CIPHER-ALGS].",
      "ja": "新しい値を「iana-tls-cipher-suite-algs」yangモジュールに直接追加する必要はありません。代わりに、「トランスポートレイヤーセキュリティ（TLS）パラメーター」レジストリグループ[IANA-Cipher-Algs]の「TLS Cipher Suites」レジストリに追加する必要があります。"
    },
    {
      "indent": 3,
      "text": "When a value is added to the \"TLS Cipher Suites\" registry, a new \"enum\" statement must be added to the \"iana-tls-cipher-suite-algs\" YANG module. The \"enum\" statement, and substatements thereof, should be defined as follows:",
      "ja": "「TLS Cipher Suites」レジストリに値が追加された場合、「IANA-TLS-Cipher-Suite-Algs」Yangモジュールに新しい「列挙」ステートメントを追加する必要があります。「列挙」ステートメントとその置換は、次のように定義する必要があります。"
    },
    {
      "indent": 3,
      "text": "enum",
      "ja": "列挙"
    },
    {
      "indent": 12,
      "text": "Replicates a name from the registry.",
      "ja": "レジストリから名前を複製します。"
    },
    {
      "indent": 3,
      "text": "value",
      "ja": "価値値バリュー価価格値打ち金高珍重尊ぶ貴ぶ直評価する愛玩する"
    },
    {
      "indent": 12,
      "text": "Contains the decimal value of the IANA-assigned value.",
      "ja": "IANAが割り当てられた値の小数値が含まれています。"
    },
    {
      "indent": 3,
      "text": "status",
      "ja": "状態地位格品格品位位分"
    },
    {
      "indent": 12,
      "text": "Include only if a registration has been deprecated or obsoleted. An IANA \"Recommended\" value \"N\" maps to YANG status \"deprecated\". Since the registry is unable to express a logical \"MUST NOT\" recommendation, there is no mapping to YANG status \"obsolete\", which is unfortunate given the moving of single-DES and International Data Encryption Algorithm (IDEA) TLS cipher suites to Historic [RFC8996].",
      "ja": "登録が非推奨または廃止された場合のみを含めます。IANAは、Yangステータス「非推奨」に「推奨」値n \"マップをマップします。レジストリは論理的な「必須ではない」推奨事項を表すことができないため、Yangステータス「時代遅れ」へのマッピングはありません。RFC8996]。"
    },
    {
      "indent": 3,
      "text": "description",
      "ja": "説明描写叙述形容描出名状叙叙事叙景写生品種銘柄デスクリプション叙事文"
    },
    {
      "indent": 12,
      "text": "Contains \"Enumeration for the 'TLS_FOO' algorithm\", where \"TLS_FOO\" is a placeholder for the algorithm's name (e.g., \"TLS_PSK_WITH_AES_256_CBC_SHA\").",
      "ja": "「TLS_FOO 'アルゴリズムの列挙」が含まれています。ここで、「TLS_FOO」はアルゴリズムの名前のプレースホルダーです（たとえば、「TLS_PSK_WITH_AES_256_CBC_SHA \"）。"
    },
    {
      "indent": 3,
      "text": "reference",
      "ja": "参照参考レファレンス言及照会援用参酌引き合い引照援引引合い引合"
    },
    {
      "indent": 12,
      "text": "Replicates the reference(s) from the registry with the title of the document(s) added.",
      "ja": "レジストリからの参照を再現して、ドキュメントのタイトルを追加します。"
    },
    {
      "indent": 3,
      "text": "Unassigned or reserved values are not present in the module.",
      "ja": "モジュールには、割り当てされていない値または予約値は存在しません。"
    },
    {
      "indent": 3,
      "text": "When the \"iana-tls-cipher-suite-algs\" YANG module is updated, a new \"revision\" statement with a unique revision date must be added in front of the existing revision statements. The \"revision\" must have a \"description\" statement explaining why the the update occurred and must have a \"reference\" substatement that points to the document defining the registry update that resulted in this change. For instance:",
      "ja": "「IANA-TLS-Cipher-Suite-Algs」Yangモジュールが更新される場合、既存の改訂ステートメントの前に一意の改訂日を備えた新しい「改訂」ステートメントを追加する必要があります。「リビジョン」には、更新が発生した理由を説明する「説明」ステートメントが必要であり、この変更をもたらすレジストリアップデートを定義するドキュメントを指す「参照」サクセクトメントが必要です。例えば："
    },
    {
      "indent": 3,
      "text": "revision 2024-10-10 {\n    description\n        \"This update reflects the update made to the underlying\n         'Foo Bar' registry per RFC XXXX.\";\n    reference\n        \"RFC XXXX: Extend the Foo Bar Registry\n                   to Support Something Important\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "IANA has added the following note to the \"TLS Cipher Suites\" registry under the \"Transport Layer Security (TLS) Parameters\" registry group [IANA-CIPHER-ALGS].",
      "ja": "IANAは、「TLS Cipher Suites」レジストリに「TLS Cipher Sutes」レジストリに「TLASTREMING LAYERセキュリティ（TLS）パラメーター」レジストリグループ[IANA-Cipher-Algs]に追加しました。"
    },
    {
      "indent": 0,
      "text": "When this registry is modified, the YANG module \"iana-tls-cipher-suite-algs\" [IANA-YANG-PARAMETERS] must be updated as defined in RFC 9645.",
      "ja": "このレジストリを変更すると、Yangモジュール「Iana-TLS-Cipher-Suite-Algs」[Iana-Yang-Parameters]は、RFC 9645で定義されているように更新する必要があります。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[FIPS180-4]\n           National Institute of Standards and Technology (NIST),\n           \"Secure Hash Standard (SHS)\", FIPS PUB 180-4,\n           DOI 10.6028/NIST.FIPS.180-4, August 2015,\n           <https://nvlpubs.nist.gov/nistpubs/FIPS/\n           NIST.FIPS.180-4.pdf>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[FIPS186-5]\n           National Institute of Standards and Technology (NIST),\n           \"Digital Signature Standard (DSS)\", FIPS 186-5,\n           DOI 10.6028/NIST.FIPS.186-5, February 2023,\n           <https://nvlpubs.nist.gov/nistpubs/FIPS/\n           NIST.FIPS.186-5.pdf>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n           Requirement Levels\", BCP 14, RFC 2119,\n           DOI 10.17487/RFC2119, March 1997,\n           <https://www.rfc-editor.org/info/rfc2119>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC4252]  Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH)\n           Authentication Protocol\", RFC 4252, DOI 10.17487/RFC4252,\n           January 2006, <https://www.rfc-editor.org/info/rfc4252>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC4279]  Eronen, P., Ed. and H. Tschofenig, Ed., \"Pre-Shared Key\n           Ciphersuites for Transport Layer Security (TLS)\",\n           RFC 4279, DOI 10.17487/RFC4279, December 2005,\n           <https://www.rfc-editor.org/info/rfc4279>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n           Housley, R., and W. Polk, \"Internet X.509 Public Key\n           Infrastructure Certificate and Certificate Revocation List\n           (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008,\n           <https://www.rfc-editor.org/info/rfc5280>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5288]  Salowey, J., Choudhury, A., and D. McGrew, \"AES Galois\n           Counter Mode (GCM) Cipher Suites for TLS\", RFC 5288,\n           DOI 10.17487/RFC5288, August 2008,\n           <https://www.rfc-editor.org/info/rfc5288>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5289]  Rescorla, E., \"TLS Elliptic Curve Cipher Suites with SHA-\n           256/384 and AES Galois Counter Mode (GCM)\", RFC 5289,\n           DOI 10.17487/RFC5289, August 2008,\n           <https://www.rfc-editor.org/info/rfc5289>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n           the Network Configuration Protocol (NETCONF)\", RFC 6020,\n           DOI 10.17487/RFC6020, October 2010,\n           <https://www.rfc-editor.org/info/rfc6020>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n           and A. Bierman, Ed., \"Network Configuration Protocol\n           (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n           <https://www.rfc-editor.org/info/rfc6241>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC6520]  Seggelmann, R., Tuexen, M., and M. Williams, \"Transport\n           Layer Security (TLS) and Datagram Transport Layer Security\n           (DTLS) Heartbeat Extension\", RFC 6520,\n           DOI 10.17487/RFC6520, February 2012,\n           <https://www.rfc-editor.org/info/rfc6520>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC7250]  Wouters, P., Ed., Tschofenig, H., Ed., Gilmore, J.,\n           Weiler, S., and T. Kivinen, \"Using Raw Public Keys in\n           Transport Layer Security (TLS) and Datagram Transport\n           Layer Security (DTLS)\", RFC 7250, DOI 10.17487/RFC7250,\n           June 2014, <https://www.rfc-editor.org/info/rfc7250>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC7589]  Badra, M., Luchuk, A., and J. Schoenwaelder, \"Using the\n           NETCONF Protocol over Transport Layer Security (TLS) with\n           Mutual X.509 Authentication\", RFC 7589,\n           DOI 10.17487/RFC7589, June 2015,\n           <https://www.rfc-editor.org/info/rfc7589>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC7950]  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n           RFC 7950, DOI 10.17487/RFC7950, August 2016,\n           <https://www.rfc-editor.org/info/rfc7950>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n           Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017,\n           <https://www.rfc-editor.org/info/rfc8040>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n           2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n           May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8341]  Bierman, A. and M. Bjorklund, \"Network Configuration\n           Access Control Model\", STD 91, RFC 8341,\n           DOI 10.17487/RFC8341, March 2018,\n           <https://www.rfc-editor.org/info/rfc8341>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8422]  Nir, Y., Josefsson, S., and M. Pegourie-Gonnard, \"Elliptic\n           Curve Cryptography (ECC) Cipher Suites for Transport Layer\n           Security (TLS) Versions 1.2 and Earlier\", RFC 8422,\n           DOI 10.17487/RFC8422, August 2018,\n           <https://www.rfc-editor.org/info/rfc8422>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n           Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n           <https://www.rfc-editor.org/info/rfc8446>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9000]  Iyengar, J., Ed. and M. Thomson, Ed., \"QUIC: A UDP-Based\n           Multiplexed and Secure Transport\", RFC 9000,\n           DOI 10.17487/RFC9000, May 2021,\n           <https://www.rfc-editor.org/info/rfc9000>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9640]  Watsen, K., \"YANG Data Types and Groupings for\n           Cryptography\", RFC 9640, DOI 10.17487/RFC9640, October\n           2024, <https://www.rfc-editor.org/info/rfc9640>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9641]  Watsen, K., \"A YANG Data Model for a Truststore\",\n           RFC 9641, DOI 10.17487/RFC9641, October 2024,\n           <https://www.rfc-editor.org/info/rfc9641>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9642]  Watsen, K., \"A YANG Data Model for a Keystore\", RFC 9642,\n           DOI 10.17487/RFC9642, October 2024,\n           <https://www.rfc-editor.org/info/rfc9642>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[HTTP-CLIENT-SERVER]\n           Watsen, K., \"YANG Groupings for HTTP Clients and HTTP\n           Servers\", Work in Progress, Internet-Draft, draft-ietf-\n           netconf-http-client-server-23, 15 August 2024,\n           <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-\n           http-client-server-23>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[IANA-CIPHER-ALGS]\n           IANA, \"TLS Cipher Suites\",\n           <https://www.iana.org/assignments/tls-parameters/>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[IANA-YANG-PARAMETERS]\n           IANA, \"YANG Parameters\",\n           <https://www.iana.org/assignments/yang-parameters>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[NETCONF-CLIENT-SERVER]\n           Watsen, K., \"NETCONF Client and Server Models\", Work in\n           Progress, Internet-Draft, draft-ietf-netconf-netconf-\n           client-server-37, 14 August 2024,\n           <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-\n           netconf-client-server-37>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RESTCONF-CLIENT-SERVER]\n           Watsen, K., \"RESTCONF Client and Server Models\", Work in\n           Progress, Internet-Draft, draft-ietf-netconf-restconf-\n           client-server-38, 14 August 2024,\n           <https://datatracker.ietf.org/doc/html/draft-ietf-netconf-\n           restconf-client-server-38>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n           DOI 10.17487/RFC3688, January 2004,\n           <https://www.rfc-editor.org/info/rfc3688>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5056]  Williams, N., \"On the Use of Channel Bindings to Secure\n           Channels\", RFC 5056, DOI 10.17487/RFC5056, November 2007,\n           <https://www.rfc-editor.org/info/rfc5056>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n           (TLS) Protocol Version 1.2\", RFC 5246,\n           DOI 10.17487/RFC5246, August 2008,\n           <https://www.rfc-editor.org/info/rfc5246>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8071]  Watsen, K., \"NETCONF Call Home and RESTCONF Call Home\",\n           RFC 8071, DOI 10.17487/RFC8071, February 2017,\n           <https://www.rfc-editor.org/info/rfc8071>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8259]  Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data\n           Interchange Format\", STD 90, RFC 8259,\n           DOI 10.17487/RFC8259, December 2017,\n           <https://www.rfc-editor.org/info/rfc8259>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8340]  Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n           BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018,\n           <https://www.rfc-editor.org/info/rfc8340>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8342]  Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,\n           and R. Wilton, \"Network Management Datastore Architecture\n           (NMDA)\", RFC 8342, DOI 10.17487/RFC8342, March 2018,\n           <https://www.rfc-editor.org/info/rfc8342>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8407]  Bierman, A., \"Guidelines for Authors and Reviewers of\n           Documents Containing YANG Data Models\", BCP 216, RFC 8407,\n           DOI 10.17487/RFC8407, October 2018,\n           <https://www.rfc-editor.org/info/rfc8407>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8407BIS]\n           Bierman, A., Boucadair, M., and Q. Wu, \"Guidelines for\n           Authors and Reviewers of Documents Containing YANG Data\n           Models\", Work in Progress, Internet-Draft, draft-ietf-\n           netmod-rfc8407bis-17, 27 September 2024,\n           <https://datatracker.ietf.org/doc/html/draft-ietf-netmod-\n           rfc8407bis-17>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8996]  Moriarty, K. and S. Farrell, \"Deprecating TLS 1.0 and TLS\n           1.1\", BCP 195, RFC 8996, DOI 10.17487/RFC8996, March 2021,\n           <https://www.rfc-editor.org/info/rfc8996>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9110]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,\n           Ed., \"HTTP Semantics\", STD 97, RFC 9110,\n           DOI 10.17487/RFC9110, June 2022,\n           <https://www.rfc-editor.org/info/rfc9110>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9257]  Housley, R., Hoyland, J., Sethi, M., and C. A. Wood,\n           \"Guidance for External Pre-Shared Key (PSK) Usage in TLS\",\n           RFC 9257, DOI 10.17487/RFC9257, July 2022,\n           <https://www.rfc-editor.org/info/rfc9257>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9258]  Benjamin, D. and C. A. Wood, \"Importing External Pre-\n           Shared Keys (PSKs) for TLS 1.3\", RFC 9258,\n           DOI 10.17487/RFC9258, July 2022,\n           <https://www.rfc-editor.org/info/rfc9258>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9643]  Watsen, K. and M. Scharf, \"YANG Groupings for TCP Clients\n           and TCP Servers\", RFC 9643, DOI 10.17487/RFC9643, October\n           2024, <https://www.rfc-editor.org/info/rfc9643>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9644]  Watsen, K., \"YANG Groupings for SSH Clients and SSH\n           Servers\", RFC 9644, DOI 10.17487/RFC9644, October 2024,\n           <https://www.rfc-editor.org/info/rfc9644>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[SYSTEM-CONFIG]\n           Ma, Q., Wu, Q., and C. Feng, \"System-defined\n           Configuration\", Work in Progress, Internet-Draft, draft-\n           ietf-netmod-system-config-09, 29 September 2024,\n           <https://datatracker.ietf.org/doc/html/draft-ietf-netmod-\n           system-config-09>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[W3C.REC-xml-20081126]\n           Bray, T., Paoli, J., Sperberg-McQueen, C. M., Maler, E.,\n           and F. Yergeau, \"Extensible Markup Language (XML) 1.0\n           (Fifth Edition)\", W3C Recommendation REC-xml-20081126,\n           November 2008, <https://www.w3.org/TR/xml/>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix A. Script to Generate IANA-Maintained YANG Modules",
      "section_title": true,
      "ja": "付録A. IANAが維持したYangモジュールを生成するスクリプト"
    },
    {
      "indent": 3,
      "text": "This section is not normative.",
      "ja": "このセクションは規範的ではありません。"
    },
    {
      "indent": 3,
      "text": "The Python <https://www.python.org> script contained in this section was used to create the initial IANA-maintained \"iana-tls-cipher-suite-algs\" YANG module maintained at [IANA-YANG-PARAMETERS].",
      "ja": "このセクションに含まれるPython <https://www.python.org>スクリプトを使用して、[iana-yang-parameters]に維持されている最初のianaが維持した「iana-tls-cipher-suite-algs」ヤンモジュールを作成しました。"
    },
    {
      "indent": 3,
      "text": "Run the script using the command 'python gen-yang-modules.py' to produce the YANG module file in the current directory.",
      "ja": "コマンド「Python Gen-Yang-Modules.py」を使用してスクリプトを実行して、現在のディレクトリでYangモジュールファイルを作成します。"
    },
    {
      "indent": 3,
      "text": "Be aware that the script does not attempt to copy the \"revision\" statements from the previous/current YANG module. Copying the revision statements must be done manually.",
      "ja": "スクリプトは、前/現在のYangモジュールから「改訂」ステートメントをコピーしようとしないことに注意してください。改訂ステートメントのコピーは手動で行う必要があります。"
    },
    {
      "indent": 3,
      "text": "=============== NOTE: '\\\\' line wrapping per RFC 8792 ===============\n\nimport re\nimport csv\nimport requests\nimport textwrap\nimport requests_cache\nfrom io import StringIO\nfrom datetime import datetime\n\n# Metadata for the one YANG module produced by this script\nMODULES = [\n    {\n        \"csv_url\": \"https://www.iana.org/assignments/tls-parameters/\\\n\\tls-parameters-4.csv\",\n        \"spaced_name\": \"cipher-suite\",\n        \"hyphenated_name\": \"cipher-suite\",\n        \"prefix\": \"tlscsa\",\n    }\n]\n\n\ndef create_module_begin(module, f):\n\n    # Define template for all four modules\n    PREAMBLE_TEMPLATE=\"\"\"\nmodule iana-tls-HNAME-algs {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:iana-tls-HNAME-algs\";\n  prefix PREFIX;\n\n  organization\n    \"Internet Assigned Numbers Authority (IANA)\";\n\n  contact\n    \"Postal: ICANN\n             12025 Waterfront Drive, Suite 300\n             Los Angeles, CA  90094-2536\n             United States of America\n     Tel:    +1 310 301 5800\n     Email:  <iana@iana.org>\";\n\n  description\n    \"This module defines enumerations for the cipher suite\n     algorithms defined in the 'TLS Cipher Suites' registry\n     under the 'Transport Layer Security (TLS) Parameters'\n     registry group maintained by IANA.\n\n     Copyright (c) 2024 IETF Trust and the persons identified as\n     authors of the code. All rights reserved.\n\n     Redistribution and use in source and binary forms, with\n     or without modification, is permitted pursuant to, and\n     subject to the license terms contained in, the Revised\n     BSD License set forth in Section 4.c of the IETF Trust's\n     Legal Provisions Relating to IETF Documents\n     (https://trustee.ietf.org/license-info).\n\n     The initial version of this YANG module is part of RFC 9645\n     (https://www.rfc-editor.org/info/rfc9645); see the RFC\n     itself for full legal notices.\n\n     All versions of this module are published by IANA\n     (https://www.iana.org/assignments/yang-parameters).\";\n\n  revision DATE {\n    description\n      \"This initial version of the module was created using\n       the script defined in RFC 9645 to reflect the contents\n       of the SNAME algorithms registry maintained by IANA.\";\n    reference\n      \"RFC 9645: YANG Groupings for TLS Clients and TLS Servers\";\n  }\n\n  typedef tls-HNAME-algorithm {\n    type enumeration {\n\"\"\"\n    # Replacements\n    rep = {\n      \"DATE\": datetime.today().strftime('%Y-%m-%d'),\n      \"YEAR\": datetime.today().strftime('%Y'),\n      \"SNAME\": module[\"spaced_name\"],\n      \"HNAME\": module[\"hyphenated_name\"],\n      \"PREFIX\": module[\"prefix\"]\n    }\n\n    # Do the replacement\n    rep = dict((re.escape(k), v) for k, v in rep.items())\n    pattern = re.compile(\"|\".join(rep.keys()))\n    text = pattern.sub(lambda m: rep[re.escape(m.group(0))], PREAMBL\\\n\\E_TEMPLATE)\n\n    # Write preamble into the file\n    f.write(text)\n\n\ndef create_module_body(module, f):\n\n    # Fetch the current CSV file from IANA\n    r = requests.get(module[\"csv_url\"])\n    assert r.status_code == 200, \"Could not get \" + module[\"csv_url\"]\n\n    # Parse each CSV line\n    with StringIO(r.text) as csv_file:\n        csv_reader = csv.DictReader(csv_file)\n        for row in csv_reader:\n\n            # Skip reserved algs\n            if row[\"Description\"].startswith(\"Unassigned\"):\n                continue\n\n            # Skip unassigned algs\n            if row[\"Description\"].startswith(\"Reserved\"):\n                continue\n\n            # Ensure this is the TLS line\n            assert row[\"Description\"].startswith(\"TLS_\"), \"Unrecogni\\\n\\zed description: '\" + row[\"Description\"] + \"'\"\n\n            # Set the 'refs' and 'titles' lists\n            if row[\"Reference\"] == \"\":\n                pass # skip when the Reference field is empty\n\n            else:\n\n                # There may be more than one ref\n                refs = row[\"Reference\"][1:-1]  # remove the '[' and \\\n\\']' chars\n                refs = refs.split(\"][\")\n                titles = []\n                for ref in refs:\n\n                    # Ascertain the ref's title\n                    if ref.startswith(\"RFC\"):\n\n                        # Fetch the current BIBTEX entry\n                        bibtex_url=\"https://datatracker.ietf.org/doc\\\n\\/\"+ ref.lower() + \"/bibtex/\"\n                        r = requests.get(bibtex_url)\n                        assert r.status_code == 200, \"Could not GET \\\n\\\" + bibtex_url\n\n                        # Append to 'titles' value from the \"title\" \\\n\\line\n                        for item in r.text.split(\"\\n\"):\n                            if \"title =\" in item:\n                                title = re.sub('.*{{(.*)}}.*', r'\\g<\\\n\\1>', item)\n                                if title.startswith(\"ECDHE\\_PSK\"):\n                                    title = re.sub(\"ECDHE\\\\\\\\_PSK\", \\\n\\\"ECDHE_PSK\", title)\n                                titles.append(re.sub('.*{{(.*)}}.*',\\\n\\ r'\\g<1>', title))\n                                break\n                        else:\n                            raise Exception(\"RFC title not found\")\n\n\n                        # Insert a space: \"RFC9645\" --> \"RFC 9645\"\n                        index = refs.index(ref)\n                        refs[index] = \"RFC \" + ref[3:]\n\n                    elif ref == \"IESG Action 2018-08-16\":\n\n                        # Rewrite the ref value\n                        index = refs.index(ref)\n                        refs[index] = \"IESG Action\"\n\n                        # Let title be something descriptive\n                        titles.append(\"IESG Action 2018-08-16\")\n\n                    elif ref == \"draft-irtf-cfrg-aegis-aead-08\":\n\n                        # Manually set the document's title\n                        titles.append(\"The AEGIS Family of Authentic\\\n\\ated Encryption Algorithms\")\n\n                    elif ref:\n                        raise Exception(f'ref \"{ref}\" not found')\n\n                    else:\n                        raise Exception(f'ref missing: {row}')\n\n            # Write out the enum\n            f.write(f'      enum {row[\"Description\"]} {{\\n');\n            if row[\"Recommended\"] == 'N':\n                f.write(f'        status deprecated;\\n')\n            f.write(f'        description\\n')\n            description = f'          \"Enumeration for the \\'{row[\"D\\\n\\escription\"]}\\' algorithm.\";'\n            description = textwrap.fill(description, width=69, subse\\\n\\quent_indent=\"           \")\n            f.write(f'{description}\\n')\n            f.write('        reference\\n')\n            f.write('          \"')\n            if row[\"Reference\"] == \"\":\n                f.write('Missing in IANA registry.')\n            else:\n                ref_len = len(refs)\n                for i in range(ref_len):\n                    ref = refs[i]\n                    f.write(f'{ref}:\\n')\n                    title = \"             \" + titles[i]\n                    if i == ref_len - 1:\n                        title += '\";'\n                    title = textwrap.fill(title, width=69, subsequen\\\n\\t_indent=\"             \")\n                    f.write(f'{title}')\n                    if i != ref_len - 1:\n                        f.write('\\n           ')\n            f.write('\\n')\n            f.write('      }\\n')\n\n\n\ndef create_module_end(module, f):\n\n    # Close out the enumeration, typedef, and module\n    f.write(\"    }\\n\")\n    f.write(\"    description\\n\")\n    f.write(f'      \"An enumeration for TLS {module[\"spaced_name\"]} \\\n\\algorithms.\";\\n')\n    f.write(\"  }\\n\")\n    f.write('\\n')\n    f.write('}\\n')\n\n\ndef create_module(module):\n\n    # Install cache for 8x speedup\n    requests_cache.install_cache()\n\n    # Ascertain the yang module's name\n    yang_module_name = \"iana-tls-\" + module[\"hyphenated_name\"] + \"-a\\\n\\lgs.yang\"\n\n    # Create yang module file\n    with open(yang_module_name, \"w\") as f:\n        create_module_begin(module, f)\n        create_module_body(module, f)\n        create_module_end(module, f)\n\n\ndef main():\n    for module in MODULES:\n        create_module(module)\n\n\nif __name__ == \"__main__\":\n    main()",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "section_title": true,
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank the following for lively discussions on list and in the halls (ordered by first name): Alan Luchuk, Andy Bierman, Balázs Kovács, Benoit Claise, Bert Wijnen, David Lamparter, Dhruv Dhody, Éric Vyncke, Gary Wu, Henk Birkholz, Jeff Hartley, Jürgen Schönwälder, Ladislav Lhotka, Liang Xia, Martin Björklund, Martin Thomson, Mehmet Ersue, Michal Vaško, Murray Kucherawy, Paul Wouters, Phil Shafer, Qin Wu, Radek Krejci, Rob Wilton, Roman Danyliw, Russ Housley, Sean Turner, Thomas Martin, and Tom Petch.",
      "ja": "著者は、リストとホールでの活発な議論（ファーストネームで注文）について、以下に感謝したいと思います：アラン・ルチュク、アンディ・ビアマン、バラズ・コバカス、ブノワ・クレイズ、バート・ウィジネン、デビッド・ランパーター、ドゥルフ・ドーディ、エリック・ヴィンケ、ガリー・ワウ、ヘンク・ビルクホルツ、ジェフ・ハートリー、ユルゲン・シェーンウェルダー、ラディスラフ・ロッカ、リアン・シア、マーティン・トムソン、メフメット・エルエ、ミカル・ヴァシュコ、マレー・クチェロウィー、ポール・ワター、フィル・シャファー、ロバン・シェーファー、ロバン・シェーファー、フィル・シャファーHousley、Sean Turner、Thomas Martin、Tom Petch。"
    },
    {
      "indent": 0,
      "text": "Contributors",
      "section_title": true,
      "ja": "貢献者"
    },
    {
      "indent": 3,
      "text": "Special acknowledgement goes to Gary Wu who contributed the \"ietf-tls-common\" module and Tom Petch who carefully ensured that references were set correctly throughout.",
      "ja": "特別な謝辞は、「IETF-TLS-Common」モジュールとTom Petchに貢献したGary Wuに届き、参照が正しく設定されていることを慎重に保証しました。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "section_title": true,
      "ja": "著者の連絡先"
    },
    {
      "indent": 3,
      "text": "Kent Watsen\nWatsen Networks\nEmail: kent+ietf@watsen.net",
      "raw": true,
      "ja": ""
    }
  ]
}