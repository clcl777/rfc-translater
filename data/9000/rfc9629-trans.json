{
  "title": {
    "text": "RFC 9629 - Using Key Encapsulation Mechanism (KEM) Algorithms in the Cryptographic Message Syntax (CMS)",
    "ja": "RFC 9629 - 暗号化メッセージの構文（CMS）でキーカプセル化メカニズム（KEM）アルゴリズムを使用する"
  },
  "number": 9629,
  "created_at": "2024-08-08 23:24:18.857502+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        R. Housley\nRequest for Comments: 9629                                Vigil Security\nUpdates: 5652                                                    J. Gray\nCategory: Standards Track                                        Entrust\nISSN: 2070-1721                                  大久保　智史 (T. Okubo)\n                                            Penguin Securities Pte. Ltd.\n                                                             August 2024",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Using Key Encapsulation Mechanism (KEM) Algorithms in the Cryptographic Message Syntax (CMS)",
      "section_title": true,
      "ja": "暗号化メッセージの構文（CMS）でキーカプセル化メカニズム（KEM）アルゴリズムを使用する"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "section_title": true,
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "The Cryptographic Message Syntax (CMS) supports key transport and key agreement algorithms. In recent years, cryptographers have been specifying Key Encapsulation Mechanism (KEM) algorithms, including quantum-secure KEM algorithms. This document defines conventions for the use of KEM algorithms by the originator and recipients to encrypt and decrypt CMS content. This document updates RFC 5652.",
      "ja": "暗号化メッセージ構文（CMS）は、主要な輸送および主要な合意アルゴリズムをサポートしています。近年、暗号統計学者は、量子セキュアKEMアルゴリズムを含む重要なカプセル化メカニズム（KEM）アルゴリズムを指定しています。このドキュメントでは、CMSコンテンツを暗号化および復号化するために、発信者と受信者によるKEMアルゴリズムの使用に関する規則を定義します。このドキュメントは、RFC 5652を更新します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "section_title": true,
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準トラックドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表しています。公開レビューを受けており、インターネットエンジニアリングステアリンググループ（IESG）からの出版が承認されています。インターネット標準の詳細については、RFC 7841のセクション2で入手できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9629.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https://www.rfc-editor.org/info/rfc9629で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "section_title": true,
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2024 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2024 IETF Trustおよび文書著者として特定された人。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Revised BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Revised BSD License.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、セクション4.Eで説明されている法的規定のセクション4.Eで説明されており、改訂されたBSDライセンスで説明されている保証なしで提供されるように、改訂されたBSDライセンステキストを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "section_title": true,
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n  1.1.  Terminology\n  1.2.  ASN.1\n  1.3.  CMS Version Numbers\n2.  KEM Processing Overview\n3.  KEM Recipient Information\n4.  KEM Algorithm Identifier\n5.  Key Derivation\n6.  ASN.1 Modules\n  6.1.  KEMAlgorithmInformation-2023 ASN.1 Module\n  6.2.  CMS-KEMRecipientInfo-2023 ASN.1 Module\n7.  Security Considerations\n8.  IANA Considerations\n9.  References\n  9.1.  Normative References\n  9.2.  Informative References\nAcknowledgements\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document updates \"Cryptographic Message Syntax (CMS)\" [RFC5652].",
      "ja": "このドキュメントは、「暗号化メッセージ構文（CMS）」[RFC5652]を更新します。"
    },
    {
      "indent": 3,
      "text": "The CMS enveloped-data content type [RFC5652] and the CMS authenticated-enveloped-data content type [RFC5083] support both key transport and key agreement algorithms to establish the key used to encrypt and decrypt the content. In recent years, cryptographers have been specifying Key Encapsulation Mechanism (KEM) algorithms, including quantum-secure KEM algorithms. This document defines conventions for the use of KEM algorithms for the CMS enveloped-data content type and the CMS authenticated-enveloped-data content type.",
      "ja": "CMSエンベロープDATAコンテンツタイプ[RFC5652]とCMS認証エンベロープDATAコンテンツタイプ[RFC5083]は、キートランスポートとキー契約アルゴリズムの両方をサポートして、コンテンツを暗号化および解読するために使用されるキーを確立します。近年、暗号統計学者は、量子セキュアKEMアルゴリズムを含む重要なカプセル化メカニズム（KEM）アルゴリズムを指定しています。このドキュメントでは、CMSエンベロープDATAコンテンツタイプとCMS認証エンベロープDATAコンテンツタイプにKEMアルゴリズムを使用するための規則を定義します。"
    },
    {
      "indent": 3,
      "text": "A KEM algorithm is a one-pass (store-and-forward) mechanism for transporting random keying material to a recipient using the recipient's public key. This means that the originator and the recipients do not need to be online at the same time. The recipient's private key is needed to recover the random keying material, which is then treated as a pairwise shared secret (ss) between the originator and recipient.",
      "ja": "KEMアルゴリズムは、レシピエントの公開キーを使用してレシピエントにランダムキーイン材を輸送するためのワンパス（ストアアンドフォワード）メカニズムです。これは、発信者と受信者が同時にオンラインである必要がないことを意味します。受信者の秘密鍵は、ランダムキーイング材料を回復するために必要です。ランダムキーイング材料は、オリジネーターと受信者の間でペアワイズ共有秘密（SS）として扱われます。"
    },
    {
      "indent": 3,
      "text": "The KEMRecipientInfo structure defined in this document uses the pairwise shared secret as an input to a key derivation function (KDF) to produce a pairwise key-encryption key (KEK). Then, the pairwise KEK is used to encrypt a content-encryption key (CEK) or a content-authenticated-encryption key (CAEK) for that recipient. All of the recipients receive the same CEK or CAEK.",
      "ja": "このドキュメントで定義されているKemrecipientInfo構造は、ペアワイズ共有シークレットをキー派生関数（KDF）への入力として使用して、ペアワイズキー暗号化キー（KEK）を生成します。次に、ペアワイズケックを使用して、その受信者のコンテンツ暗号化キー（CEK）またはコンテンツ照会誘発キー（CAEK）を暗号化します。すべての受信者は同じCEKまたはCAEKを受け取ります。"
    },
    {
      "indent": 3,
      "text": "In this environment, security depends on three things. First, the KEM algorithm must be secure against adaptive chosen ciphertext attacks. Second, the key-encryption algorithm must provide confidentiality and integrity protection. Third, the choices of the KDF and the key-encryption algorithm need to provide the same level of security as the KEM algorithm.",
      "ja": "この環境では、セキュリティは3つのことに依存します。まず、KEMアルゴリズムは、適応選択した暗号文攻撃に対して安全でなければなりません。第二に、キー暗号化アルゴリズムは、機密性と整合性の保護を提供する必要があります。第三に、KDFの選択とキー暗号化アルゴリズムは、KEMアルゴリズムと同じレベルのセキュリティを提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "A KEM algorithm provides three functions:",
      "ja": "KEMアルゴリズムは3つの関数を提供します。"
    },
    {
      "indent": 3,
      "text": "KeyGen() -> (pk, sk):",
      "ja": "keygen（） - >（pk、sk）："
    },
    {
      "indent": 12,
      "text": "Generate the public key (pk) and a private key (sk).",
      "ja": "公開キー（PK）と秘密鍵（SK）を生成します。"
    },
    {
      "indent": 3,
      "text": "Encapsulate(pk) -> (ct, ss):",
      "ja": "cancapsulate（pk） - >（ct、ss）："
    },
    {
      "indent": 12,
      "text": "Given the recipient's public key (pk), produce a ciphertext (ct) to be passed to the recipient and shared secret (ss) for the originator.",
      "ja": "受信者の公開キー（PK）を考えると、受信者のレシピエントと共有秘密（SS）に渡される暗号文（CT）を作成します。"
    },
    {
      "indent": 3,
      "text": "Decapsulate(sk, ct) -> ss:",
      "ja": "Decapsulate（SK、CT） - > SS："
    },
    {
      "indent": 12,
      "text": "Given the private key (sk) and the ciphertext (ct), produce the shared secret (ss) for the recipient.",
      "ja": "秘密鍵（SK）と暗号文（CT）を考えると、受信者に共有秘密（SS）が生成されます。"
    },
    {
      "indent": 3,
      "text": "To support a particular KEM algorithm, the CMS originator MUST implement the KEM Encapsulate() function.",
      "ja": "特定のKEMアルゴリズムをサポートするには、CMSオリジネーターはKEM Encapsulate（）関数を実装する必要があります。"
    },
    {
      "indent": 3,
      "text": "To support a particular KEM algorithm, the CMS recipient MUST implement the KEM KeyGen() function and the KEM Decapsulate() function. The recipient's public key is usually carried in a certificate [RFC5280].",
      "ja": "特定のKEMアルゴリズムをサポートするには、CMSレシピエントはKEM KeyGen（）関数とKEM Decapsulate（）関数を実装する必要があります。受信者の公開キーは通常、証明書[RFC5280]に掲載されます。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "ja": "1.1. 用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "「必須」、「必要」、「必須」、「shall」、「shall」、「suff」、 \"not\"、 \"becommended\"、 \"becommented\"、 \"may\"、 \"optional「このドキュメントでは、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます。"
    },
    {
      "indent": 0,
      "text": "1.2. ASN.1",
      "section_title": true,
      "ja": "1.2. ASN.1"
    },
    {
      "indent": 3,
      "text": "CMS values are generated using ASN.1 [X.680], which uses the Basic Encoding Rules (BER) and the Distinguished Encoding Rules (DER) [X.690].",
      "ja": "CMS値は、asn.1 [x.680]を使用して生成されます。これは、基本的なエンコーディングルール（BER）と識別式エンコードルール（der）[x.690]を使用します。"
    },
    {
      "indent": 0,
      "text": "1.3. CMS Version Numbers",
      "section_title": true,
      "ja": "1.3. CMSバージョン番号"
    },
    {
      "indent": 3,
      "text": "As described in Section 1.3 of [RFC5652], the major data structures include a version number as the first item in the data structure. The version number is intended to avoid ASN.1 decode errors. Some implementations do not check the version number prior to attempting a decode, and then if a decode error occurs, the version number is checked as part of the error-handling routine. This is a reasonable approach; it places error processing outside of the fast path. This approach is also forgiving when an incorrect version number is used by the originator.",
      "ja": "[RFC5652]のセクション1.3で説明されているように、主要なデータ構造には、データ構造の最初の項目としてバージョン番号が含まれています。バージョン番号は、ASN.1デコードエラーを回避することを目的としています。一部の実装では、デコードを試行する前にバージョン番号を確認しません。デコードエラーが発生した場合、バージョン番号はエラー処理ルーチンの一部としてチェックされます。これは合理的なアプローチです。エラー処理は高速パスの外側に配置されます。このアプローチは、オリジネーターが誤ったバージョン番号を使用している場合にも寛容です。"
    },
    {
      "indent": 3,
      "text": "Whenever the structure is updated, a higher version number will be assigned. However, to ensure maximum interoperability, the higher version number is only used when the new syntax feature is employed. That is, the lowest version number that supports the generated syntax is used.",
      "ja": "構造が更新されるたびに、より高いバージョン番号が割り当てられます。ただし、最大の相互運用性を確保するために、より高いバージョン数は、新しい構文機能が採用されている場合にのみ使用されます。つまり、生成された構文をサポートする最低バージョン番号が使用されます。"
    },
    {
      "indent": 0,
      "text": "2. KEM Processing Overview",
      "section_title": true,
      "ja": "2. KEM処理の概要"
    },
    {
      "indent": 3,
      "text": "KEM algorithms can be used with three CMS content types: the enveloped-data content type [RFC5652], the authenticated-data content type [RFC5652], or the authenticated-enveloped-data content type [RFC5083]. For simplicity, the terminology associated with the enveloped-data content type will be used in this overview.",
      "ja": "KEMアルゴリズムは、3つのCMSコンテンツタイプで使用できます：封筒DATAコンテンツタイプ[RFC5652]、認証されたDATAコンテンツタイプ[RFC5652]、または認証されたエンベロープDATAコンテンツタイプ[RFC5083]。簡単にするために、この概要では、封筒のコンテンツタイプに関連付けられた用語を使用します。"
    },
    {
      "indent": 3,
      "text": "The originator randomly generates the CEK (or the CAEK), and then all recipients obtain that key as an encrypted object within the KEMRecipientInfo encryptedKey field explained in Section 3. All recipients use the originator-generated symmetric key to decrypt the CMS message.",
      "ja": "オリジネーターはCEK（またはCAEK）をランダムに生成し、その後、すべての受信者がセクション3で説明されているKemrecipientInfo暗号化されたキーフィールド内の暗号化されたオブジェクトとしてそのキーを取得します。"
    },
    {
      "indent": 3,
      "text": "A KEM algorithm and a key derivation function are used to securely establish a pairwise symmetric KEK, which is used to encrypt the originator-generated CEK (or the CAEK).",
      "ja": "KEMアルゴリズムとキー導出関数を使用して、ペアワイズ対称KEKを安全に確立します。これは、オリジネーターで生成されたCEK（またはCAEK）を暗号化するために使用されます。"
    },
    {
      "indent": 3,
      "text": "In advance, each recipient uses the KEM KeyGen() function to create a key pair. The recipient will often obtain a certificate [RFC5280] that includes the newly generated public key. Whether the public key is certified or not, the newly generated public key is made available to potential originators.",
      "ja": "事前に、各受信者はKem keygen（）関数を使用してキーペアを作成します。受信者は、多くの場合、新しく生成された公開キーを含む証明書[RFC5280]を取得します。公開キーが認定されているかどうかにかかわらず、新しく生成された公開キーは潜在的な創始者が利用できるようになります。"
    },
    {
      "indent": 3,
      "text": "The originator establishes the CEK (or the CAEK) using these steps:",
      "ja": "オリジネーターは、これらの手順を使用してCEK（またはCAEK）を確立します。"
    },
    {
      "indent": 8,
      "text": "1. The CEK (or the CAEK) is generated at random.",
      "ja": "1. CEK（またはCAEK）はランダムに生成されます。"
    },
    {
      "indent": 8,
      "text": "2. For each recipient:",
      "ja": "2. 各受信者に対して："
    },
    {
      "indent": 14,
      "text": "* The recipient's public key is used with the KEM Encapsulate() function to obtain a pairwise shared secret (ss) and the ciphertext for the recipient.",
      "ja": "* 受信者の公開キーは、KEM cankapsulate（）関数で使用され、ペアワイズ共有秘密（SS）と受信者の暗号文を取得します。"
    },
    {
      "indent": 14,
      "text": "* The key derivation function is used to derive a pairwise symmetric KEK, from the pairwise ss and other data that is optionally sent in the ukm field.",
      "ja": "* キー導出関数は、ペアワイズSSおよびオプションでUKMフィールドで送信される他のデータから、ペアワイズ対称kekを導出するために使用されます。"
    },
    {
      "indent": 14,
      "text": "* The KEK is used to encrypt the CEK for this recipient.",
      "ja": "* KEKは、この受信者のCEKを暗号化するために使用されます。"
    },
    {
      "indent": 8,
      "text": "3. The CEK (or the CAEK) is used to encrypt the content for all recipients.",
      "ja": "3. CEK（またはCAEK）は、すべての受信者のコンテンツを暗号化するために使用されます。"
    },
    {
      "indent": 3,
      "text": "The recipient obtains the CEK (or the CAEK) using these steps:",
      "ja": "受信者は、これらの手順を使用してCEK（またはCAEK）を取得します。"
    },
    {
      "indent": 8,
      "text": "1. The recipient's private key and the ciphertext are used with the KEM Decapsulate() function to obtain a pairwise ss.",
      "ja": "1. 受信者の秘密鍵とciphertextは、KEM Decapsulate（）関数で使用され、ペアワイズSSを取得します。"
    },
    {
      "indent": 8,
      "text": "2. The key derivation function is used to derive a pairwise symmetric KEK, from the pairwise ss and other data that is optionally sent in the ukm field.",
      "ja": "2. キー導出関数は、ペアワイズSSおよびオプションでUKMフィールドで送信される他のデータから、ペアワイズ対称kekを導出するために使用されます。"
    },
    {
      "indent": 8,
      "text": "3. The KEK is used to decrypt the CEK (or the CAEK).",
      "ja": "3. KEKは、CEK（またはCAEK）を復号化するために使用されます。"
    },
    {
      "indent": 8,
      "text": "4. The CEK (or the CAEK) is used to decrypt the content.",
      "ja": "4. CEK（またはCAEK）は、コンテンツを復号化するために使用されます。"
    },
    {
      "indent": 0,
      "text": "3. KEM Recipient Information",
      "section_title": true,
      "ja": "3. KEMの受信者情報"
    },
    {
      "indent": 3,
      "text": "This document defines KEMRecipientInfo for use with KEM algorithms. As specified in Section 6.2.5 of [RFC5652], recipient information for additional key management techniques is represented in the OtherRecipientInfo type. Each key management technique is identified by a unique ASN.1 object identifier.",
      "ja": "このドキュメントでは、KemRecipientInfoがKem Algorithmsで使用することを定義しています。[RFC5652]のセクション6.2.5で指定されているように、追加の主要な管理手法のレシピエント情報は、他のRecipientInfoタイプで表されます。各重要な管理手法は、一意のASN.1オブジェクト識別子によって識別されます。"
    },
    {
      "indent": 3,
      "text": "The object identifier associated with KEMRecipientInfo is:",
      "ja": "KemrecipientInfoに関連付けられているオブジェクト識別子は次のとおりです。"
    },
    {
      "indent": 5,
      "text": "id-ori OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\n  rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) 13 }\n\nid-ori-kem OBJECT IDENTIFIER ::= { id-ori 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The KEMRecipientInfo type is:",
      "ja": "kemrecipientinfoタイプは次のとおりです。"
    },
    {
      "indent": 5,
      "text": "KEMRecipientInfo ::= SEQUENCE {\n  version CMSVersion,  -- always set to 0\n  rid RecipientIdentifier,\n  kem KEMAlgorithmIdentifier,\n  kemct OCTET STRING,\n  kdf KeyDerivationAlgorithmIdentifier,\n  kekLength INTEGER (1..65535),\n  ukm [0] EXPLICIT UserKeyingMaterial OPTIONAL,\n  wrap KeyEncryptionAlgorithmIdentifier,\n  encryptedKey EncryptedKey }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The fields of the KEMRecipientInfo type have the following meanings:",
      "ja": "KemrecipientInfoタイプのフィールドには、次の意味があります。"
    },
    {
      "indent": 3,
      "text": " version is the syntax version number. The version MUST be 0. The CMSVersion type is described in Section 10.2.5 of [RFC5652].",
      "ja": "バージョンは構文バージョン番号です。バージョンは0でなければなりません。CMSバージョンタイプは、[RFC5652]のセクション10.2.5で説明されています。"
    },
    {
      "indent": 3,
      "text": " rid specifies the recipient's certificate or key that was used by the originator with the KEM Encapsulate() function. The RecipientIdentifier provides two alternatives for specifying the recipient's certificate [RFC5280], and thereby the recipient's public key. The recipient's certificate MUST contain a KEM public key. Therefore, a recipient X.509 version 3 certificate that contains a key usage extension MUST assert the keyEncipherment bit. The issuerAndSerialNumber alternative identifies the recipient's certificate by the issuer's distinguished name and the certificate serial number; the subjectKeyIdentifier alternative identifies the recipient's certificate by a key identifier. When an X.509 certificate is referenced, the key identifier matches the X.509 subjectKeyIdentifier extension value. When other certificate formats are referenced, the documents that specify the certificate format and their use with the CMS must include details on matching the key identifier to the appropriate certificate field. For recipient processing, implementations MUST support both of these alternatives for specifying the recipient's certificate. For originator processing, implementations MUST support at least one of these alternatives.",
      "ja": "RIDは、KEM Encapsulate（）関数を使用して発信者が使用した受信者の証明書またはキーを指定します。受信者は、受信者の証明書[RFC5280]を指定するための2つの代替手段を提供し、それにより受信者の公開キーを提供します。受信者の証明書には、KEMの公開キーが含まれている必要があります。したがって、主要な使用法拡張機能を含む受信者X.509バージョン3証明書は、KeyEciphermentビットをアサートする必要があります。発行者の代替案は、発行者の著名な名前と証明書のシリアル番号による受信者の証明書を識別します。subjecteyidentifierの代替手段は、キー識別子による受信者の証明書を識別します。X.509証明書が参照されると、キー識別子はX.509件名の拡張機能値と一致します。他の証明書形式が参照される場合、証明書形式を指定するドキュメントとCMSでの使用を指定するドキュメントには、キー識別子の適切な証明書フィールドを一致させる詳細を含める必要があります。受信者の処理のために、実装は、受信者の証明書を指定するためのこれらの代替案の両方をサポートする必要があります。オリジネーター処理のために、実装はこれらの代替案の少なくとも1つをサポートする必要があります。"
    },
    {
      "indent": 3,
      "text": " kem identifies the KEM algorithm, and any associated parameters, used by the originator. The KEMAlgorithmIdentifier is described in Section 4.",
      "ja": "KEMは、発信者が使用するKEMアルゴリズムと、関連するパラメーターを識別します。Kemalgorithmidentifierについては、セクション4で説明します。"
    },
    {
      "indent": 3,
      "text": " kemct is the ciphertext produced by the KEM Encapsulate() function for this recipient.",
      "ja": "KEMCTは、この受信者のKEM capsulate（）関数によって生成される暗号文です。"
    },
    {
      "indent": 3,
      "text": " kdf identifies the key derivation function, and any associated parameters, used by the originator to generate the KEK. The KeyDerivationAlgorithmIdentifier is described in Section 10.1.6 of [RFC5652].",
      "ja": "KDFは、KEKを生成するためにオリジネーターが使用するキー派生関数と関連するパラメーターを識別します。KeyDerivationalGorithMidentifierは、[RFC5652]のセクション10.1.6で説明されています。"
    },
    {
      "indent": 3,
      "text": " kekLength is the size of the KEK in octets. This value is one of the inputs to the key derivation function. The upper bound on the integer value is provided to make it clear to implementers that support for very large integer values is not needed. Implementations MUST confirm that the value provided is consistent with the key-encryption algorithm identified in the wrap field below.",
      "ja": "Keklengthは、オクテットのKekのサイズです。この値は、キー導出関数への入力の1つです。整数値の上限は、非常に大きな整数値をサポートする必要がないことを実装者に明確にするために提供されます。実装は、提供された値が、以下のラップフィールドで識別されたキー暗号化アルゴリズムと一致していることを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": " ukm is optional user keying material. When the ukm value is provided, it is used as part of the info structure described in Section 5 to provide a context input to the key derivation function. For example, the ukm value could include a nonce, application-specific context information, or an identifier for the originator. A KEM algorithm may place requirements on the ukm value. Implementations that do not support the ukm field SHOULD gracefully discontinue processing when the ukm field is present. Note that this requirement expands the original purpose of the ukm described in Section 10.2.6 of [RFC5652]; it is not limited to being used with key agreement algorithms.",
      "ja": "UKMはオプションのユーザーキーイング素材です。UKM値が提供されると、セクション5で説明されている情報構造の一部として使用され、キー派生関数へのコンテキスト入力を提供します。たとえば、UKM値には、非CE、アプリケーション固有のコンテキスト情報、またはオリジネーターの識別子が含まれます。KEMアルゴリズムは、UKM値に要件を配置する場合があります。UKMフィールドをサポートしていない実装は、UKMフィールドが存在する場合に処理を優雅に中止する必要があります。この要件は、[RFC5652]のセクション10.2.6で説明されているUKMの本来の目的を拡大することに注意してください。キー契約アルゴリズムで使用されることに限定されません。"
    },
    {
      "indent": 3,
      "text": " wrap identifies a key-encryption algorithm used to encrypt the CEK. The KeyEncryptionAlgorithmIdentifier is described in Section 10.1.3 of [RFC5652].",
      "ja": "LAPは、CEKを暗号化するために使用されるキー暗号化アルゴリズムを識別します。KeyEncryptionalgorithmidentifierは、[RFC5652]のセクション10.1.3で説明されています。"
    },
    {
      "indent": 3,
      "text": " encryptedKey is the result of encrypting the CEK or the CAEK (the content-authenticated-encryption key, as discussed in [RFC5083]) with the KEK. EncryptedKey is an OCTET STRING.",
      "ja": "暗号化されたKeyは、CEKまたはCAEK（[RFC5083]で説明されているように、コンテンツ - 認証された暗号化キー）をKEKで暗号化した結果です。暗号化されたKeyはOctet Stringです。"
    },
    {
      "indent": 0,
      "text": "4. KEM Algorithm Identifier",
      "section_title": true,
      "ja": "4. KEMアルゴリズム識別子"
    },
    {
      "indent": 3,
      "text": "The KEMAlgorithmIdentifier type identifies a KEM algorithm used to establish a pairwise ss. The details of establishment depend on the KEM algorithm used. A key derivation function is used to transform the pairwise ss value into a KEK.",
      "ja": "Kemalgorithmidentifierタイプは、ペアワイズSSの確立に使用されるKEMアルゴリズムを識別します。確立の詳細は、使用されるKEMアルゴリズムに依存します。キー派生関数を使用して、ペアワイズSS値をKEKに変換します。"
    },
    {
      "indent": 5,
      "text": "KEMAlgorithmIdentifier ::= AlgorithmIdentifier{ KEM-ALGORITHM, {...} }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. Key Derivation",
      "section_title": true,
      "ja": "5. キー派生"
    },
    {
      "indent": 3,
      "text": "This section describes the conventions of using the KDF to compute the KEK for KEMRecipientInfo. For simplicity, the terminology used in the HKDF specification [RFC5869] is used here.",
      "ja": "このセクションでは、KDFを使用してKemrecipientInfoのKEKを計算する慣習について説明します。簡単にするために、HKDF仕様[RFC5869]で使用される用語がここで使用されます。"
    },
    {
      "indent": 3,
      "text": "Many KDFs internally employ a one-way hash function. When this is the case, the hash function that is used is indirectly indicated by the KeyDerivationAlgorithmIdentifier. Other KDFs internally employ an encryption algorithm. When this is the case, the encryption that is used is indirectly indicated by the KeyDerivationAlgorithmIdentifier.",
      "ja": "多くのKDFは、一元配置ハッシュ関数を内部的に採用しています。この場合、使用されるハッシュ関数は、KeyDerivationalGorithMidentifierによって間接的に示されます。他のKDFは、暗号化アルゴリズムを内部的に採用しています。これが当てはまる場合、使用される暗号化は、KeyDerivationalGorithMidentifierによって間接的に示されます。"
    },
    {
      "indent": 3,
      "text": "The KDF inputs are as follows:",
      "ja": "KDF入力は次のとおりです。"
    },
    {
      "indent": 3,
      "text": " IKM is the input keying material. It is a symmetric secret input to the KDF. The KDF may use a hash function or an encryption algorithm to generate a pseudorandom key. The algorithm used to derive the IKM is dependent on the algorithm identified in the KeyDerivationAlgorithmIdentifier.",
      "ja": "IKMは入力キーイング素材です。これは、KDFへの対称的な秘密の入力です。KDFは、ハッシュ関数または暗号化アルゴリズムを使用して、擬似ランダムキーを生成する場合があります。IKMの導出に使用されるアルゴリズムは、KeyDerivationalGorithMidentifierで識別されたアルゴリズムに依存します。"
    },
    {
      "indent": 3,
      "text": " L is the length of the output keying material in octets. L is identified in the kekLength of the KEMRecipientInfo. The value is dependent on the key-encryption algorithm used; the key-encryption algorithm is identified in the KeyEncryptionAlgorithmIdentifier.",
      "ja": "Lは、オクテットの出力キーイン材料の長さです。lは、Kemrecipientinfoのkeklengthで識別されます。値は、使用されるキー暗号化アルゴリズムに依存します。KeyEncryptingAlgorithMidentifierでキー暗号化アルゴリズムが識別されます。"
    },
    {
      "indent": 3,
      "text": " info is contextual input to the KDF. The DER-encoded CMSORIforKEMOtherInfo structure is created from elements of the KEMRecipientInfo structure. CMSORIforKEMOtherInfo is defined as:",
      "ja": "情報は、KDFへのコンテキスト入力です。der-Encoded cmsoriforkemotherinfo構造は、Kemrecipientinfo構造の要素から作成されます。cmsoriforkemotherinfoは次のように定義されています。"
    },
    {
      "indent": 9,
      "text": "CMSORIforKEMOtherInfo ::= SEQUENCE {\n  wrap KeyEncryptionAlgorithmIdentifier,\n  kekLength INTEGER (1..65535),\n  ukm [0] EXPLICIT UserKeyingMaterial OPTIONAL }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The CMSORIforKEMOtherInfo structure contains the following:",
      "ja": "CMSORIFORKEMOTHERINFO構造には、次のものが含まれています。"
    },
    {
      "indent": 3,
      "text": " wrap identifies a key-encryption algorithm; the output of the key derivation function will be used as a key for this algorithm.",
      "ja": "LAPは、キー暗号化アルゴリズムを識別します。キー導出関数の出力は、このアルゴリズムのキーとして使用されます。"
    },
    {
      "indent": 3,
      "text": " kekLength is the length of the KEK in octets; the output of the key derivation function will be exactly this size.",
      "ja": "Keklengthは、オクテットのKekの長さです。キー導入関数の出力はまさにこのサイズになります。"
    },
    {
      "indent": 3,
      "text": " ukm is optional user keying material; see Section 3.",
      "ja": "UKMはオプションのユーザーキーイング素材です。セクション3を参照してください。"
    },
    {
      "indent": 3,
      "text": "The KDF output is as follows:",
      "ja": "KDF出力は次のとおりです。"
    },
    {
      "indent": 3,
      "text": " OKM is the output keying material with the exact length of L octets. The OKM is the KEK that is used to encrypt the CEK or the CAEK.",
      "ja": "OKMは、lオクテットの正確な長さの出力キーイン材料です。OKMは、CEKまたはCAEKを暗号化するために使用されるKEKです。"
    },
    {
      "indent": 3,
      "text": "An acceptable KDF MUST accept an IKM, L, and info as inputs. An acceptable KDF MAY also accept a salt input value, which is carried as a parameter to the KeyDerivationAlgorithmIdentifier if present. All of these inputs MUST influence the output of the KDF.",
      "ja": "許容可能なKDFは、IKM、L、および情報を入力として受け入れる必要があります。許容可能なKDFは、存在する場合はkeyderivationalgorithmidentifierにパラメーターとして運ばれる塩入力値を受け入れる場合があります。これらの入力はすべて、KDFの出力に影響を与える必要があります。"
    },
    {
      "indent": 0,
      "text": "6. ASN.1 Modules",
      "section_title": true,
      "ja": "6. ASN.1モジュール"
    },
    {
      "indent": 3,
      "text": "This section provides two ASN.1 modules [X.680]. The first ASN.1 module is an extension to the AlgorithmInformation-2009 module discussed in [RFC5912]; it defines the KEM-ALGORITHM CLASS. The second ASN.1 module defines the structures needed to use KEM algorithms with CMS [RFC5652].",
      "ja": "このセクションでは、2つのasn.1モジュール[x.680]を提供します。最初のASN.1モジュールは、[RFC5912]で説明されているアルゴリズムFormation-2009モジュールの拡張です。KEM-Algorithmクラスを定義します。2番目のASN.1モジュールは、CMS [RFC5652]でKEMアルゴリズムを使用するために必要な構造を定義します。"
    },
    {
      "indent": 3,
      "text": "The first ASN.1 module uses EXPLICIT tagging, and the second ASN.1 module uses IMPLICIT tagging.",
      "ja": "最初のASN.1モジュールは明示的なタグ付けを使用し、2番目のASN.1モジュールは暗黙のタグ付けを使用します。"
    },
    {
      "indent": 3,
      "text": "Both ASN.1 modules follow the conventions established in [RFC5911], [RFC5912], and [RFC6268].",
      "ja": "両方のASN.1モジュールは、[RFC5911]、[RFC5912]、および[RFC6268]で確立された規則に従います。"
    },
    {
      "indent": 0,
      "text": "6.1. KEMAlgorithmInformation-2023 ASN.1 Module",
      "section_title": true,
      "ja": "6.1. Kemalgorithminformation-2023 ASN.1モジュール"
    },
    {
      "indent": 5,
      "text": "KEMAlgorithmInformation-2023\n  { iso(1) identified-organization(3) dod(6) internet(1)\n    security(5) mechanisms(5) pkix(7) id-mod(0)\n        id-mod-kemAlgorithmInformation-2023(109) }\n\nDEFINITIONS EXPLICIT TAGS ::=\nBEGIN\n-- EXPORTS ALL;\nIMPORTS\n  ParamOptions, PUBLIC-KEY, SMIME-CAPS\n  FROM AlgorithmInformation-2009\n    { iso(1) identified-organization(3) dod(6) internet(1)\n      security(5) mechanisms(5) pkix(7) id-mod(0)\n      id-mod-algorithmInformation-02(58) } ;\n\n-- KEM-ALGORITHM\n--\n-- Describes the basic properties of a KEM algorithm\n--\n-- Suggested prefix for KEM algorithm objects is: kema-\n--\n--  &id - contains the OID identifying the KEM algorithm\n--  &Value - if present, contains a type definition for the kemct;\n--               if absent, implies that no ASN.1 encoding is\n--               performed on the kemct value\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &PublicKeySet - specifies which public keys are used with\n--               this algorithm\n--  &Ukm - if absent, type for user keying material\n--  &ukmPresence - specifies the requirements to define the UKM\n--               field\n--  &smimeCaps - contains the object describing how the S/MIME\n--               capabilities are presented.\n--\n-- Example:\n-- kema-kem-rsa KEM-ALGORITHM ::= {\n--    IDENTIFIER id-kem-rsa\n--    PARAMS TYPE RsaKemParameters ARE optional\n--    PUBLIC-KEYS { pk-rsa | pk-rsa-kem }\n--    UKM ARE optional\n--    SMIME-CAPS { TYPE GenericHybridParameters\n--        IDENTIFIED BY id-rsa-kem }\n-- }\n\nKEM-ALGORITHM ::= CLASS {\n  &id             OBJECT IDENTIFIER UNIQUE,\n  &Value          OPTIONAL,\n  &Params         OPTIONAL,\n  &paramPresence  ParamOptions DEFAULT absent,\n  &PublicKeySet   PUBLIC-KEY OPTIONAL,\n  &Ukm            OPTIONAL,\n  &ukmPresence    ParamOptions DEFAULT absent,\n  &smimeCaps      SMIME-CAPS OPTIONAL\n} WITH SYNTAX {\n  IDENTIFIER &id\n  [VALUE &Value]\n  [PARAMS [TYPE &Params] ARE &paramPresence]\n  [PUBLIC-KEYS &PublicKeySet]\n  [UKM [TYPE &Ukm] ARE &ukmPresence]\n  [SMIME-CAPS &smimeCaps]\n}\n\nEND",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.2. CMS-KEMRecipientInfo-2023 ASN.1 Module",
      "section_title": true,
      "ja": "6.2. cms-kemrecipientinfo-2023 asn.1モジュール"
    },
    {
      "indent": 5,
      "text": "CMS-KEMRecipientInfo-2023\n  { iso(1) member-body(2) us(840) rsadsi(113549)\n    pkcs(1) pkcs-9(9) smime(16) modules(0)\n    id-mod-cms-kemri-2023(77) }\n\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\n-- EXPORTS ALL;\nIMPORTS\n  OTHER-RECIPIENT, CMSVersion, RecipientIdentifier,\n  EncryptedKey, KeyDerivationAlgorithmIdentifier,\n  KeyEncryptionAlgorithmIdentifier, UserKeyingMaterial\n    FROM CryptographicMessageSyntax-2010  -- RFC 6268\n      { iso(1) member-body(2) us(840) rsadsi(113549)\n        pkcs(1) pkcs-9(9) smime(16) modules(0)\n        id-mod-cms-2009(58) }\n  KEM-ALGORITHM\n    FROM KEMAlgorithmInformation-2023  -- RFC 9629\n      { iso(1) identified-organization(3) dod(6) internet(1)\n        security(5) mechanisms(5) pkix(7) id-mod(0)\n        id-mod-kemAlgorithmInformation-2023(109) }\n  AlgorithmIdentifier{}\n    FROM AlgorithmInformation-2009  -- RFC 5912\n      { iso(1) identified-organization(3) dod(6) internet(1)\n        security(5) mechanisms(5) pkix(7) id-mod(0)\n        id-mod-algorithmInformation-02(58) } ;\n\n--\n-- OtherRecipientInfo Types (ori-)\n--\n\nSupportedOtherRecipInfo OTHER-RECIPIENT ::= { ori-KEM, ... }\n\nori-KEM OTHER-RECIPIENT ::= {\n  KEMRecipientInfo IDENTIFIED BY id-ori-kem }\n\nid-ori OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\n  rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) 13 }\n\nid-ori-kem OBJECT IDENTIFIER ::= { id-ori 3 }\n\n--\n-- KEMRecipientInfo\n--\n\nKEMRecipientInfo ::= SEQUENCE {\n  version CMSVersion,  -- always set to 0\n  rid RecipientIdentifier,\n  kem KEMAlgorithmIdentifier,\n  kemct OCTET STRING,\n  kdf KeyDerivationAlgorithmIdentifier,\n  kekLength INTEGER (1..65535),\n  ukm [0] EXPLICIT UserKeyingMaterial OPTIONAL,\n  wrap KeyEncryptionAlgorithmIdentifier,\n  encryptedKey EncryptedKey }\n\nKEMAlgSet KEM-ALGORITHM ::= { ... }\n\nKEMAlgorithmIdentifier ::=\n  AlgorithmIdentifier{ KEM-ALGORITHM, {KEMAlgSet} }\n\n--\n-- CMSORIforKEMOtherInfo\n--\n\nCMSORIforKEMOtherInfo ::= SEQUENCE {\n  wrap KeyEncryptionAlgorithmIdentifier,\n  kekLength INTEGER (1..65535),\n  ukm [0] EXPLICIT UserKeyingMaterial OPTIONAL }\n\nEND",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The security considerations discussed in [RFC5652] are applicable to this document.",
      "ja": "[RFC5652]で説明されているセキュリティ上の考慮事項は、このドキュメントに適用できます。"
    },
    {
      "indent": 3,
      "text": "To be appropriate for use with this specification, the KEM algorithm MUST explicitly be designed to be secure when the public key is used many times. For example, a KEM algorithm with a single-use public key is not appropriate, because the public key is expected to be carried in a long-lived certificate [RFC5280] and used over and over. Thus, KEM algorithms that offer indistinguishability under adaptive chosen ciphertext attack (IND-CCA2) security are appropriate. A common design pattern for obtaining IND-CCA2 security with public key reuse is to apply the Fujisaki-Okamoto (FO) transform [FO] or a variant of the FO transform [HHK].",
      "ja": "この仕様で使用するのに適しているため、公開キーを何度も使用する場合、KEMアルゴリズムを明示的に安全にするように設計する必要があります。たとえば、公開キーは長寿命の証明書[RFC5280]で運ばれ、何度も使用されると予想されるため、単一使用の公開キーを備えたKEMアルゴリズムは適切ではありません。したがって、適応的に選択されたCiphertext攻撃（IND-CCA2）セキュリティの下で区別不可能を提供するKEMアルゴリズムが適切です。公開キーの再利用を使用してIND-CCA2セキュリティを取得するための一般的な設計パターンは、富士キサキオカモト（FO）変換[FO]またはFO変換[HHK]のバリアントを適用することです。"
    },
    {
      "indent": 3,
      "text": "The KDF SHOULD offer at least the security level of the KEM.",
      "ja": "KDFは、少なくともKEMのセキュリティレベルを提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "The choice of the key-encryption algorithm and the size of the KEK SHOULD be made based on the security level provided by the KEM. The key-encryption algorithm and the KEK SHOULD offer at least the security level of the KEM.",
      "ja": "KEMが提供するセキュリティレベルに基づいて、キー暗号化アルゴリズムの選択とKEKのサイズを作成する必要があります。キー暗号化アルゴリズムとKEKは、少なくともKEMのセキュリティレベルを提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "KEM algorithms do not provide data origin authentication; therefore, when a KEM algorithm is used with the authenticated-data content type, the contents are delivered with integrity from an unknown source.",
      "ja": "KEMアルゴリズムは、データの起源認証を提供しません。したがって、認証されたDATAコンテンツタイプでKEMアルゴリズムが使用される場合、コンテンツは未知のソースから完全性を持って配信されます。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST protect the KEM private key, the KEK, and the CEK (or the CAEK). Compromise of the KEM private key may result in the disclosure of all contents protected with that KEM private key. However, compromise of the KEK, the CEK, or the CAEK may result in disclosure of the encrypted content of a single message.",
      "ja": "実装は、KEMの秘密鍵、KEK、およびCEK（またはCAEK）を保護する必要があります。KEMの秘密鍵の妥協は、そのKEMの秘密鍵で保護されているすべてのコンテンツの開示をもたらす可能性があります。ただし、Kek、CEK、またはCaekの妥協により、単一のメッセージの暗号化されたコンテンツが開示される可能性があります。"
    },
    {
      "indent": 3,
      "text": "The KEM produces the IKM input value for the KDF. This IKM value MUST NOT be reused for any other purpose. Likewise, any random value used by the KEM algorithm to produce the shared secret or its encapsulation MUST NOT be reused for any other purpose. That is, the originator MUST generate a fresh KEM shared secret for each recipient in the KEMRecipientInfo structure, including any random value used by the KEM algorithm to produce the KEM shared secret. In addition, the originator MUST discard the KEM shared secret, including any random value used by the KEM algorithm to produce the KEM shared secret, after constructing the entry in the KEMRecipientInfo structure for the corresponding recipient. Similarly, the recipient MUST discard the KEM shared secret, including any random value used by the KEM algorithm to produce the KEM shared secret, after constructing the KEK from the KEMRecipientInfo structure.",
      "ja": "KEMは、KDFのIKM入力値を生成します。このIKM値は、他の目的のために再利用してはなりません。同様に、共有秘密またはそのカプセル化を生成するためにKEMアルゴリズムによって使用されるランダムな値は、他の目的のために再利用してはなりません。つまり、発信元は、KemRecipientInfo構造の各受信者に対して、KEMアルゴリズムで使用されるランダムな値を含む、KEM共有秘密を生成するためのランダムな値を含む、新鮮なKEM共有秘密を生成する必要があります。さらに、対応する受信者のKemrecipientInfo構造のエントリを構築した後、KEMアルゴリズムで使用されるKEM共有秘密を作成するためにKEMアルゴリズムが使用するランダムな値を含む、発信者はKEM共有秘密を廃棄する必要があります。同様に、受信者は、Kemrecipientinfo構造からKEKを構築した後、KEMアルゴリズムが使用するKEM共有秘密を生成するために使用するランダムな値を含む、KEM共有秘密を廃棄する必要があります。"
    },
    {
      "indent": 3,
      "text": "Implementations MUST randomly generate content-encryption keys, content-authenticated-encryption keys, and message-authentication keys. Also, the generation of KEM key pairs relies on random numbers. The use of inadequate pseudorandom number generators (PRNGs) to generate these keys can result in little or no security. An attacker may find it much easier to reproduce the PRNG environment that produced the keys, searching the resulting small set of possibilities, rather than brute-force searching the whole key space. The generation of quality random numbers is difficult. [RFC4086] offers important guidance in this area.",
      "ja": "実装では、コンテンツエンクションキー、Content-Authenticated-Incryption Keys、およびMessage-Authentication Keysをランダムに生成する必要があります。また、KEMキーペアの生成は乱数に依存しています。これらのキーを生成するために不十分な擬似ランダム数ジェネレーター（PRNG）を使用すると、セキュリティがほとんどまたはまったくなりません。攻撃者は、キーを生成したPRNG環境を再現する方がはるかに簡単になる場合があり、キー空間全体を検索するのではなく、結果として生じる小さな可能性のセットを検索します。品質の乱数の生成は困難です。[RFC4086]は、この分野で重要なガイダンスを提供します。"
    },
    {
      "indent": 3,
      "text": "If the cipher and key sizes used for the key-encryption algorithm and the content-encryption algorithm are different, the effective security is determined by the weaker of the two algorithms. If, for example, the content is encrypted with AES-CBC using a 128-bit CEK and the CEK is wrapped with AES-KEYWRAP using a 256-bit KEK, then at most 128 bits of protection is provided.",
      "ja": "キー暗号化アルゴリズムとコンテンツ暗号化アルゴリズムに使用される暗号サイズとキーサイズが異なる場合、効果的なセキュリティは2つのアルゴリズムの弱い方によって決定されます。たとえば、コンテンツが128ビットCEKを使用してAES-CBCで暗号化され、CEKが256ビットKEKを使用してAES-KeyWrapでラップされている場合、最大128ビットの保護が提供されます。"
    },
    {
      "indent": 3,
      "text": "If the cipher and key sizes used for the key-encryption algorithm and the content-authenticated-encryption algorithm are different, the effective security is determined by the weaker of the two algorithms. If, for example, the content is encrypted with AES-GCM using a 128-bit CAEK and the CAEK is wrapped with AES-KEYWRAP using a 192-bit KEK, then at most 128 bits of protection is provided.",
      "ja": "キー暗号化アルゴリズムに使用される暗号サイズとキーサイズが、コンテンツ因果関係のある暗号化アルゴリズムが異なる場合、効果的なセキュリティは2つのアルゴリズムの弱い方によって決定されます。たとえば、コンテンツが128ビットCAEKを使用してAES-GCMで暗号化され、CAEKが192ビットKEKを使用してAES-KeeWrapで包まれている場合、最大128ビットの保護が提供されます。"
    },
    {
      "indent": 3,
      "text": "If the cipher and key sizes used for the key-encryption algorithm and the message-authentication algorithm are different, the effective security is determined by the weaker of the two algorithms. If, for example, the content is authenticated with HMAC-SHA256 using a 512-bit message-authentication key and the message-authentication key is wrapped with AES-KEYWRAP using a 256-bit KEK, then at most 256 bits of protection is provided.",
      "ja": "キー暗号化アルゴリズムに使用される暗号サイズとキーサイズとメッセージ認証アルゴリズムが異なる場合、効果的なセキュリティは2つのアルゴリズムの弱い方によって決定されます。たとえば、コンテンツが512ビットのメッセージオーセティテンションキーを使用してHMAC-Sha256で認証され、メッセージauthenticationキーが256ビットKEKを使用してAES-KeyWrapで包まれている場合、最大256ビットの保護が提供されます。。"
    },
    {
      "indent": 3,
      "text": "Implementers should be aware that cryptographic algorithms, including KEM algorithms, become weaker with time. As new cryptoanalysis techniques are developed and computing capabilities advance, the work factor to break a particular cryptographic algorithm will be reduced. As a result, cryptographic algorithm implementations should be modular, allowing new algorithms to be readily inserted. That is, implementers should be prepared for the set of supported algorithms to change over time.",
      "ja": "実装者は、KEMアルゴリズムを含む暗号化アルゴリズムが時間とともに弱くなることに注意する必要があります。新しい暗号分析技術が開発され、コンピューティング機能が進むにつれて、特定の暗号化アルゴリズムを破る作業要因が削減されます。その結果、暗号化アルゴリズムの実装はモジュール式である必要があり、新しいアルゴリズムを容易に挿入できるようにします。つまり、実装者は、サポートされているアルゴリズムのセットが時間の経過とともに変更されるように準備する必要があります。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "For KEMRecipientInfo as defined in Section 3, IANA has assigned the following OID in the \"SMI Security for S/MIME Other Recipient Info Identifiers (1.2.840.113549.1.9.16.13)\" registry:",
      "ja": "セクション3で定義されているKemrecipientInfoの場合、IANAは次のOIDを「S/MIMEのSMIセキュリティの他の受信者情報識別子（1.2.840.113549.1.9.16.13）」に割り当てました。"
    },
    {
      "indent": 0,
      "text": "+=========+=============+============+\n| Decimal | Description | References |\n+=========+=============+============+\n| 3       | id-ori-kem  | RFC 9629   |\n+---------+-------------+------------+\n\n               Table 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "For the ASN.1 module defined in Section 6.1, IANA has assigned the following OID in the \"SMI Security for PKIX Module Identifier\" registry (1.3.6.1.5.5.7.0):",
      "ja": "セクション6.1で定義されているASN.1モジュールの場合、IANAは次のOIDを「PKIXモジュール識別子のSMIセキュリティ」レジストリ（1.3.6.1.1.5.5.7.0）に割り当てました。"
    },
    {
      "indent": 0,
      "text": "+=========+=====================================+============+\n| Decimal | Description                         | References |\n+=========+=====================================+============+\n| 109     | id-mod-kemAlgorithmInformation-2023 | RFC 9629   |\n+---------+-------------------------------------+------------+\n\n                           Table 2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "For the ASN.1 module defined in Section 6.2, IANA has assigned the following OID in the \"SMI Security for S/MIME Module Identifier (1.2.840.113549.1.9.16.0)\" registry:",
      "ja": "セクション6.2で定義されているASN.1モジュールの場合、IANAは次のOIDを「S/MIMEモジュール識別子のSMIセキュリティ（1.2.840.113549.1.9.16.0）」に割り当てました。"
    },
    {
      "indent": 0,
      "text": "+=========+=======================+============+\n| Decimal | Description           | References |\n+=========+=======================+============+\n| 77      | id-mod-cms-kemri-2023 | RFC 9629   |\n+---------+-----------------------+------------+\n\n                    Table 3",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n           Requirement Levels\", BCP 14, RFC 2119,\n           DOI 10.17487/RFC2119, March 1997,\n           <https://www.rfc-editor.org/info/rfc2119>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5083]  Housley, R., \"Cryptographic Message Syntax (CMS)\n           Authenticated-Enveloped-Data Content Type\", RFC 5083,\n           DOI 10.17487/RFC5083, November 2007,\n           <https://www.rfc-editor.org/info/rfc5083>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n           Housley, R., and W. Polk, \"Internet X.509 Public Key\n           Infrastructure Certificate and Certificate Revocation List\n           (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008,\n           <https://www.rfc-editor.org/info/rfc5280>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5652]  Housley, R., \"Cryptographic Message Syntax (CMS)\", STD 70,\n           RFC 5652, DOI 10.17487/RFC5652, September 2009,\n           <https://www.rfc-editor.org/info/rfc5652>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5911]  Hoffman, P. and J. Schaad, \"New ASN.1 Modules for\n           Cryptographic Message Syntax (CMS) and S/MIME\", RFC 5911,\n           DOI 10.17487/RFC5911, June 2010,\n           <https://www.rfc-editor.org/info/rfc5911>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5912]  Hoffman, P. and J. Schaad, \"New ASN.1 Modules for the\n           Public Key Infrastructure Using X.509 (PKIX)\", RFC 5912,\n           DOI 10.17487/RFC5912, June 2010,\n           <https://www.rfc-editor.org/info/rfc5912>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n           2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n           May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[X.680]    ITU-T, \"Information technology - Abstract Syntax Notation\n           One (ASN.1): Specification of basic notation\", ITU-T\n           Recommendation X.680, ISO/IEC 8824-1:2021, February 2021,\n           <https://www.itu.int/rec/T-REC-X.680>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[X.690]    ITU-T, \"Information technology - ASN.1 encoding rules:\n           Specification of Basic Encoding Rules (BER), Canonical\n           Encoding Rules (CER) and Distinguished Encoding Rules\n           (DER)\", ITU-T Recommendation X.690, ISO/IEC 8825-1:2021,\n           February 2021, <https://www.itu.int/rec/T-REC-X.690>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[FO]       Fujisaki, E. and T. Okamoto, \"Secure Integration of\n           Asymmetric and Symmetric Encryption Schemes\", Springer\n           Science and Business Media LLC, Journal of Cryptology,\n           vol. 26, no. 1, pp. 80-101, DOI 10.1007/s00145-011-9114-1,\n           December 2011,\n           <https://doi.org/10.1007/s00145-011-9114-1>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[HHK]      Hofheinz, D., Hövelmanns, K., and E. Kiltz, \"A Modular\n           Analysis of the Fujisaki-Okamoto Transformation\", Springer\n           International Publishing, Theory of Cryptography, TCC\n           2017, Lecture Notes in Computer Science, vol. 10677, pp.\n           341-371, Print ISBN 9783319704999, Online ISBN\n           9783319705002, DOI 10.1007/978-3-319-70500-2_12, November\n           2017, <https://doi.org/10.1007/978-3-319-70500-2_12>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC4086]  Eastlake 3rd, D., Schiller, J., and S. Crocker,\n           \"Randomness Requirements for Security\", BCP 106, RFC 4086,\n           DOI 10.17487/RFC4086, June 2005,\n           <https://www.rfc-editor.org/info/rfc4086>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5869]  Krawczyk, H. and P. Eronen, \"HMAC-based Extract-and-Expand\n           Key Derivation Function (HKDF)\", RFC 5869,\n           DOI 10.17487/RFC5869, May 2010,\n           <https://www.rfc-editor.org/info/rfc5869>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC6268]  Schaad, J. and S. Turner, \"Additional New ASN.1 Modules\n           for the Cryptographic Message Syntax (CMS) and the Public\n           Key Infrastructure Using X.509 (PKIX)\", RFC 6268,\n           DOI 10.17487/RFC6268, July 2011,\n           <https://www.rfc-editor.org/info/rfc6268>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "section_title": true,
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Our thanks to Burt Kaliski for his guidance and design review.",
      "ja": "彼の指導とデザインのレビューをしてくれたBurt Kaliskiに感謝します。"
    },
    {
      "indent": 3,
      "text": "Our thanks to Carl Wallace for his careful review of the ASN.1 modules.",
      "ja": "ASN.1モジュールを慎重にレビューしてくれたCarl Wallaceに感謝します。"
    },
    {
      "indent": 3,
      "text": "Our thanks to Hendrik Brockhaus, Jonathan Hammell, Mike Jenkins, David von Oheimb, Francois Rousseau, and Linda Dunbar for their careful reviews and thoughtful comments.",
      "ja": "Hendrik Brockhaus、Jonathan Hammell、Mike Jenkins、David Von Oheimb、Francois Rousseau、Linda Dunbarに感謝します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "section_title": true,
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Russ Housley\nVigil Security, LLC\nHerndon, VA\nUnited States of America\nEmail: housley@vigilsec.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "John Gray\nEntrust\nMinneapolis, MN\nUnited States of America\nEmail: john.gray@entrust.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Tomofumi Okubo\nPenguin Securities Pte. Ltd.\nSingapore\nEmail: tomofumi.okubo+ietf@gmail.com\n\nAdditional contact information:\n\n   大久保　智史\n   Penguin Securities Pte. Ltd.\n   Singapore",
      "raw": true,
      "ja": ""
    }
  ]
}