{
  "title": {
    "text": "RFC 9369 - QUIC Version 2",
    "ja": "RFC 9369 - QUICバージョン2"
  },
  "number": 9369,
  "created_at": "2024-03-15 07:51:20.905099+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                           M. Duke\nRequest for Comments: 9369                                    Google LLC\nCategory: Standards Track                                       May 2023\nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 29,
      "text": "QUIC Version 2",
      "title": true,
      "section_title": true,
      "ja": "QUICバージョン2"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "section_title": true,
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies QUIC version 2, which is identical to QUIC version 1 except for some trivial details. Its purpose is to combat various ossification vectors and exercise the version negotiation framework. It also serves as a template for the minimum changes in any future version of QUIC.",
      "ja": "このドキュメントは、QUICバージョン2を指定します。これは、些細な詳細を除き、QUICバージョン1と同じです。その目的は、さまざまな骨化ベクターと闘い、バージョンのネゴシエーションフレームワークを行使することです。また、QUICの将来のバージョンの最小変更のテンプレートとしても機能します。"
    },
    {
      "indent": 3,
      "text": "Note that \"version 2\" is an informal name for this proposal that indicates it is the second version of QUIC to be published as a Standards Track document. The protocol specified here uses a version number other than 2 in the wire image, in order to minimize ossification risks.",
      "ja": "「バージョン2」は、この提案の非公式名であり、標準トラックドキュメントとして公開されるQUICの2番目のバージョンであることを示すことに注意してください。ここで指定されているプロトコルは、骨化リスクを最小限に抑えるために、ワイヤ画像に2以外のバージョン番号を使用します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "section_title": true,
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準トラックドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表しています。公開レビューを受けており、インターネットエンジニアリングステアリンググループ（IESG）からの出版が承認されています。インターネット標準の詳細については、RFC 7841のセクション2で入手できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9369.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https：//www.rfc-editor.org/info/rfc9369で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "section_title": true,
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2023 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2023 IETF Trustおよび文書著者として特定された人。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Revised BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Revised BSD License.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、セクション4.Eで説明されている法的規定のセクション4.Eで説明されており、改訂されたBSDライセンスで説明されている保証なしで提供されるように、改訂されたBSDライセンステキストを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "section_title": true,
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Conventions\n3.  Differences with QUIC Version 1\n  3.1.  Version Field\n  3.2.  Long Header Packet Types\n  3.3.  Cryptography Changes\n    3.3.1.  Initial Salt\n    3.3.2.  HMAC-based Key Derivation Function (HKDF) Labels\n    3.3.3.  Retry Integrity Tag\n4.  Version Negotiation Considerations\n  4.1.  Compatible Negotiation Requirements\n5.  TLS Resumption and NEW_TOKEN Tokens\n6.  Ossification Considerations\n7.  Applicability\n8.  Security Considerations\n9.  IANA Considerations\n10. References\n  10.1.  Normative References\n  10.2.  Informative References\nAppendix A.  Sample Packet Protection\n  A.1.  Keys\n  A.2.  Client Initial\n  A.3.  Server Initial\n  A.4.  Retry\n  A.5.  ChaCha20-Poly1305 Short Header Packet\nAcknowledgments\nAuthor's Address",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "QUIC version 1 [QUIC] has numerous extension points, including the version number that occupies the second through fifth bytes of every long header (see [QUIC-INVARIANTS]). If experimental versions are rare, and QUIC version 1 constitutes the vast majority of QUIC traffic, there is the potential for middleboxes to ossify on the version bytes that are usually 0x00000001.",
      "ja": "QUICバージョン1 [QUIC]には、すべての長いヘッダーの2番目の5番目のバイトを占めるバージョン番号を含む多数の拡張ポイントがあります（[quic-invariants]を参照）。実験バージョンがまれであり、QUICバージョン1がQUICトラフィックの大部分を構成する場合、通常0x00000001のバージョンバイトでミドルボックスが骨化する可能性があります。"
    },
    {
      "indent": 3,
      "text": "In QUIC version 1, Initial packets are encrypted with the version-specific salt, as described in Section 5.2 of [QUIC-TLS]. Protecting Initial packets in this way allows observers to inspect their contents, which includes the TLS Client Hello or Server Hello messages. Again, there is the potential for middleboxes to ossify on the version 1 key derivation and packet formats.",
      "ja": "QUICバージョン1では、[QUIC-TLS]のセクション5.2で説明されているように、初期パケットはバージョン固有の塩で暗号化されています。この方法で初期パケットを保護することで、観察者はコンテンツを検査できます。これには、TLSクライアントのHelloまたはServer Helloメッセージが含まれます。繰り返しますが、バージョン1のキー派生とパケット形式でミドルボックスが骨化する可能性があります。"
    },
    {
      "indent": 3,
      "text": "Finally, [QUIC-VN] describes two mechanisms endpoints can use to negotiate which QUIC version to select. The \"incompatible\" version negotiation method can support switching from any QUIC version to any other version with full generality, at the cost of an additional round trip at the start of the connection. \"Compatible\" version negotiation eliminates the round-trip penalty but levies some restrictions on how much the two versions can differ semantically.",
      "ja": "最後に、[QUIC-VN]は、選択するQUICバージョンをネゴシエートするためにエンドポイントが使用できる2つのメカニズムを説明します。「互換性のない」バージョンネゴシエーション方法は、接続の開始時に追加の往復を犠牲にして、QUICバージョンから他のバージョンの完全なバージョンへの切り替えをサポートできます。「互換性のある」バージョンのネゴシエーションは、往復ペナルティを排除しますが、2つのバージョンがセマンティブで異なる可能性についての制限を課します。"
    },
    {
      "indent": 3,
      "text": "QUIC version 2 is meant to mitigate ossification concerns and exercise the version negotiation mechanisms. The changes provide an example of the minimum set of changes necessary to specify a new QUIC version. However, note that the choice of the version number on the wire is randomly chosen instead of \"2\", and the two bits that identify each Long Header packet type are different from version 1; both of these properties are meant to combat ossification and are not strictly required of a new QUIC version.",
      "ja": "QUICバージョン2は、骨化の懸念を軽減し、バージョン交渉メカニズムを行使することを目的としています。この変更は、新しいQUICバージョンを指定するために必要な最小の変更セットの例を提供します。ただし、ワイヤー上のバージョン番号の選択は「2」ではなくランダムに選択されており、各長いヘッダーパケットタイプを識別する2つのビットはバージョン1とは異なることに注意してください。これらのプロパティは両方とも、骨化と闘うことを目的としており、新しいQUICバージョンには厳密に要求されていません。"
    },
    {
      "indent": 3,
      "text": "Any endpoint that supports two versions needs to implement version negotiation to protect against downgrade attacks.",
      "ja": "2つのバージョンをサポートするエンドポイントは、ダウングレード攻撃から保護するためにバージョンネゴシエーションを実装する必要があります。"
    },
    {
      "indent": 0,
      "text": "2. Conventions",
      "section_title": true,
      "ja": "2. 規約"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Differences with QUIC Version 1",
      "section_title": true,
      "ja": "3. QUICバージョン1の違い"
    },
    {
      "indent": 3,
      "text": "Except for a few differences, QUIC version 2 endpoints MUST implement the QUIC version 1 specification as described in [QUIC], [QUIC-TLS], and [QUIC-RECOVERY]. The remainder of this section lists the differences.",
      "ja": "いくつかの違いを除いて、QUICバージョン2エンドポイントは、[QUIC]、[QUIC-TLS]、および[QUIC-Recovery]で説明されているQUICバージョン1仕様を実装する必要があります。このセクションの残りには、違いがリストされています。"
    },
    {
      "indent": 0,
      "text": "3.1. Version Field",
      "section_title": true,
      "ja": "3.1. バージョンフィールド"
    },
    {
      "indent": 3,
      "text": "The Version field of long headers is 0x6b3343cf. This was generated by taking the first four bytes of the sha256sum of \"QUICv2 version number\".",
      "ja": "ロングヘッダーのバージョンフィールドは0x6B3343CFです。これは、「Quicv2バージョン番号」のSHA256Sumの最初の4バイトを取得することによって生成されました。"
    },
    {
      "indent": 0,
      "text": "3.2. Long Header Packet Types",
      "section_title": true,
      "ja": "3.2. 長いヘッダーパケットタイプ"
    },
    {
      "indent": 3,
      "text": "All version 2 Long Header packet types are different. The Type field values are:",
      "ja": "すべてのバージョン2ロングヘッダーパケットタイプは異なります。タイプフィールド値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "* Initial: 0b01",
      "ja": "* 初期：0B01"
    },
    {
      "indent": 6,
      "text": "* 0-RTT: 0b10",
      "ja": "* 0-RTT：0B10"
    },
    {
      "indent": 6,
      "text": "* Handshake: 0b11",
      "ja": "* 握手：0B11"
    },
    {
      "indent": 6,
      "text": "* Retry: 0b00",
      "ja": "* 再試行：0b00"
    },
    {
      "indent": 0,
      "text": "3.3. Cryptography Changes",
      "section_title": true,
      "ja": "3.3. 暗号化の変更"
    },
    {
      "indent": 0,
      "text": "3.3.1. Initial Salt",
      "section_title": true,
      "ja": "3.3.1. 初期塩"
    },
    {
      "indent": 3,
      "text": "The salt used to derive Initial keys in Section 5.2 of [QUIC-TLS] changes to:",
      "ja": "[quic-tls]のセクション5.2の初期キーを導き出すために使用される塩は次のように変更されます。"
    },
    {
      "indent": 3,
      "text": "initial_salt = 0x0dede3def700a6db819381be6e269dcbf9bd2ed9",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "This is the first 20 bytes of the sha256sum of \"QUICv2 salt\".",
      "ja": "これは、「Quicv2塩」のSha256Sumの最初の20バイトです。"
    },
    {
      "indent": 0,
      "text": "3.3.2. HMAC-based Key Derivation Function (HKDF) Labels",
      "section_title": true,
      "ja": "3.3.2. HMACベースのキー派生関数（HKDF）ラベル"
    },
    {
      "indent": 3,
      "text": "The labels used in [QUIC-TLS] to derive packet protection keys (Section 5.1), header protection keys (Section 5.4), Retry Integrity Tag keys (Section 5.8), and key updates (Section 6.1) change from \"quic key\" to \"quicv2 key\", from \"quic iv\" to \"quicv2 iv\", from \"quic hp\" to \"quicv2 hp\", and from \"quic ku\" to \"quicv2 ku\" to meet the guidance for new versions in Section 9.6 of that document.",
      "ja": "[QUIC-TLS]で使用されているラベルは、パケット保護キー（セクション5.1）、ヘッダー保護キー（セクション5.4）、再試行タグキー（セクション5.8）、およびキーアップデート（セクション6.1）を「QUICキー」から変更するために導出します。「QUICV2キー」、「QUIC IV」から「QUICV2 IV」から「QUIC HP」から「QUICV2 HP」から「QUICKU」から「QUICV2 KU」から「QUICV2 KU」から「QUICV2 KU」から「QUICV2 KU」から「QUICV2 KU」から「QUICV2 KU」書類。"
    },
    {
      "indent": 0,
      "text": "3.3.3. Retry Integrity Tag",
      "section_title": true,
      "ja": "3.3.3. 整合性タグを再試行します"
    },
    {
      "indent": 3,
      "text": "The key and nonce used for the Retry Integrity Tag (Section 5.8 of [QUIC-TLS]) change to:",
      "ja": "再試行整合性タグ（[QUIC-TLS]のセクション5.8）に使用されるキーとノンセは次のように変更します。"
    },
    {
      "indent": 3,
      "text": "secret =\n  0xc4dd2484d681aefa4ff4d69c2c20299984a765a5d3c31982f38fc74162155e9f\nkey = 0x8fb4b01b56ac48e260fbcbcead7ccc92\nnonce = 0xd86969bc2d7c6d9990efb04a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The secret is the sha256sum of \"QUICv2 retry secret\". The key and nonce are derived from this secret with the labels \"quicv2 key\" and \"quicv2 iv\", respectively.",
      "ja": "秘密は、「Quicv2 Retry Secret」のSha256Sumです。キーとノンセは、それぞれこの秘密から派生しており、それぞれ「quicv2キー」と「quicv2 iv」というラベルがあります。"
    },
    {
      "indent": 0,
      "text": "4. Version Negotiation Considerations",
      "section_title": true,
      "ja": "4. バージョン交渉に関する考慮事項"
    },
    {
      "indent": 3,
      "text": "QUIC version 2 is not intended to deprecate version 1. Endpoints that support version 2 might continue support for version 1 to maximize compatibility with other endpoints. In particular, HTTP clients often use Alt-Svc [RFC7838] to discover QUIC support. As this mechanism does not currently distinguish between QUIC versions, HTTP servers SHOULD support multiple versions to reduce the probability of incompatibility and the cost associated with QUIC version negotiation or TCP fallback. For example, an origin advertising support for \"h3\" in Alt-Svc should support QUIC version 1, as it was the original QUIC version used by HTTP/3; therefore, some clients will only support that version.",
      "ja": "QUICバージョン2は、バージョン1を非難することを意図していません。サポートバージョン2をサポートするエンドポイントは、他のエンドポイントとの互換性を最大化するためにバージョン1のサポートを継続する可能性があります。特に、HTTPクライアントは多くの場合、Alt-SVC [RFC7838]を使用してQUICサポートを発見します。このメカニズムは現在QUICバージョンを区別していないため、HTTPサーバーは複数のバージョンをサポートして、互換性の確率とQUICバージョンの交渉またはTCPフォールバックに関連するコストを削減する必要があります。たとえば、Alt-SVCの「H3」のオリジン広告サポートは、HTTP/3が使用している元のQUICバージョンであるため、QUICバージョン1をサポートする必要があります。したがって、一部のクライアントはそのバージョンのみをサポートします。"
    },
    {
      "indent": 3,
      "text": "Any QUIC endpoint that supports QUIC version 2 MUST send, process, and validate the version_information transport parameter specified in [QUIC-VN] to prevent version downgrade attacks.",
      "ja": "QUICバージョン2をサポートするquicエンドポイントは、バージョンのダウングレード攻撃を防ぐために、[quic-vn]で指定されたバージョン_informationTransportパラメーターを送信、処理、および検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "Note that version 2 meets the definition in [QUIC-VN] of a compatible version with version 1, and version 1 is compatible with version 2. Therefore, servers can use compatible negotiation to switch a connection between the two versions. Endpoints that support both versions SHOULD support compatible version negotiation to avoid a round trip.",
      "ja": "バージョン2は、バージョン1と互換性のあるバージョンの[quic-vn]の定義を満たしており、バージョン1はバージョン2と互換性があることに注意してください。したがって、サーバーは互換性のあるネゴシエーションを使用して、2つのバージョン間の接続を切り替えることができます。両方のバージョンをサポートするエンドポイントは、往復を避けるために互換性のあるバージョンのネゴシエーションをサポートする必要があります。"
    },
    {
      "indent": 0,
      "text": "4.1. Compatible Negotiation Requirements",
      "section_title": true,
      "ja": "4.1. 互換性のある交渉要件"
    },
    {
      "indent": 3,
      "text": "Compatible version negotiation between versions 1 and 2 follows the same requirements in either direction. This section uses the terms \"original version\" and \"negotiated version\" from [QUIC-VN].",
      "ja": "バージョン1と2の間の互換性のあるバージョンのネゴシエーションは、どちらの方向でも同じ要件に従います。このセクションでは、[quic-vn]の「オリジナルバージョン」と「ネゴシエートバージョン」という用語を使用します。"
    },
    {
      "indent": 3,
      "text": "If the server sends a Retry packet, it MUST use the original version. The client ignores Retry packets using other versions. The client MUST NOT use a different version in the subsequent Initial packet that contains the Retry token. The server MAY encode the QUIC version in its Retry token to validate that the client did not switch versions, and drop the packet if it switched, to enforce client compliance.",
      "ja": "サーバーが再試行パケットを送信する場合、元のバージョンを使用する必要があります。クライアントは、他のバージョンを使用して再試行パケットを無視します。クライアントは、再試行トークンを含む後続の初期パケットで別のバージョンを使用してはなりません。サーバーは、retryトークンでQUICバージョンをエンコードして、クライアントがバージョンを切り替えていないことを検証し、スイッチした場合はパケットをドロップしてクライアントコンプライアンスを実施する場合があります。"
    },
    {
      "indent": 3,
      "text": "QUIC version 2 uses the same transport parameters to authenticate the Retry as QUIC version 1. After switching to a negotiated version after a Retry, the server MUST include the relevant transport parameters to validate that the server sent the Retry and the connection IDs used in the exchange, as described in Section 7.3 of [QUIC].",
      "ja": "QUICバージョン2では、同じトランスポートパラメーターを使用して、QUICバージョン1として再試行を認証します。再試行後にネゴシエートバージョンに切り替えた後、サーバーには、サーバーが再試行を送信したことを検証するために、サーバーに関連するトランスポートパラメーターを含める必要があります。[QUIC]のセクション7.3で説明されているように、交換。"
    },
    {
      "indent": 3,
      "text": "The server cannot send CRYPTO frames until it has processed the client's transport parameters. The server MUST send all CRYPTO frames using the negotiated version.",
      "ja": "サーバーは、クライアントのトランスポートパラメーターを処理するまで、暗号フレームを送信できません。サーバーは、ネゴシエートバージョンを使用してすべての暗号フレームを送信する必要があります。"
    },
    {
      "indent": 3,
      "text": "The client learns the negotiated version by observing the first long header Version field that differs from the original version. If the client receives a CRYPTO frame from the server in the original version, it indicates that the negotiated version is equal to the original version.",
      "ja": "クライアントは、元のバージョンとは異なる最初のロングヘッダーバージョンフィールドを観察することにより、ネゴシエートバージョンを学習します。クライアントが元のバージョンのサーバーから暗号フレームを受信した場合、ネゴシエートされたバージョンが元のバージョンに等しいことを示します。"
    },
    {
      "indent": 3,
      "text": "Before the server is able to process transport parameters from the client, it might need to respond to Initial packets from the client. For these packets, the server uses the original version.",
      "ja": "サーバーがクライアントからの輸送パラメーターを処理する前に、クライアントからの初期パケットに応答する必要がある場合があります。これらのパケットでは、サーバーは元のバージョンを使用します。"
    },
    {
      "indent": 3,
      "text": "Once the client has learned the negotiated version, it SHOULD send subsequent Initial packets using that version. The server MUST NOT discard its original version Initial receive keys until it successfully processes a Handshake packet with the negotiated version.",
      "ja": "クライアントがネゴシエートバージョンを学習したら、そのバージョンを使用して後続の初期パケットを送信する必要があります。サーバーは、元のバージョンの初期受信キーを破棄してはならないのは、ネゴシエートバージョンでハンドシェイクパケットを正常に処理するまでです。"
    },
    {
      "indent": 3,
      "text": "Both endpoints MUST send Handshake and 1-RTT packets using the negotiated version. An endpoint MUST drop packets using any other version. Endpoints have no need to generate the keying material that would allow them to decrypt or authenticate such packets.",
      "ja": "両方のエンドポイントは、ネゴシエートバージョンを使用してハンドシェイクと1-RTTパケットを送信する必要があります。エンドポイントは、他のバージョンを使用してパケットをドロップする必要があります。エンドポイントには、そのようなパケットを復号化または認証できるキーイン材料を生成する必要はありません。"
    },
    {
      "indent": 3,
      "text": "The client MUST NOT send 0-RTT packets using the negotiated version, even after processing a packet of that version from the server. Servers can accept 0-RTT and then process 0-RTT packets from the original version.",
      "ja": "クライアントは、サーバーからそのバージョンのパケットを処理した後でも、ネゴシエートバージョンを使用して0-RTTパケットを送信してはなりません。サーバーは0-RTTを受け入れ、元のバージョンから0-RTTパケットを処理できます。"
    },
    {
      "indent": 0,
      "text": "5. TLS Resumption and NEW_TOKEN Tokens",
      "section_title": true,
      "ja": "5. TLS再開とnew_tokenトークン"
    },
    {
      "indent": 3,
      "text": "TLS session tickets and NEW_TOKEN tokens are specific to the QUIC version of the connection that provided them. Clients MUST NOT use a session ticket or token from a QUIC version 1 connection to initiate a QUIC version 2 connection, and vice versa. When a connection includes compatible version negotiation, any issued server tokens are considered to originate from the negotiated version, not the original one.",
      "ja": "TLSセッションチケットとnew_tokenトークンは、それらを提供する接続のQUICバージョンに固有のものです。クライアントは、QUICバージョン1接続のセッションチケットまたはトークンを使用して、QUICバージョン2接続を開始してはなりません。その逆も同様です。接続に互換性のあるバージョンのネゴシエーションが含まれる場合、発行されたサーバートークンは、元のバージョンではなく、ネゴシエートされたバージョンから発生すると見なされます。"
    },
    {
      "indent": 3,
      "text": "Servers MUST validate the originating version of any session ticket or token and not accept one issued from a different version. A rejected ticket results in falling back to a full TLS handshake, without 0-RTT. A rejected token results in the client address remaining unverified, which limits the amount of data the server can send.",
      "ja": "サーバーは、セッションチケットまたはトークンの発信バージョンを検証し、別のバージョンから発行されたものを受け入れない必要があります。拒否されたチケットは、0-RTTなしで完全なTLSの握手に戻ることになります。拒否されたトークンの結果は、クライアントアドレスが未確認のままであるため、サーバーが送信できるデータの量を制限します。"
    },
    {
      "indent": 3,
      "text": "After compatible version negotiation, any resulting session ticket maps to the negotiated version rather than the original one.",
      "ja": "互換性のあるバージョンのネゴシエーションの後、結果として生じるセッションチケットは、元のバージョンではなく、ネゴシエートされたバージョンにマップされます。"
    },
    {
      "indent": 0,
      "text": "6. Ossification Considerations",
      "section_title": true,
      "ja": "6. 骨化の考慮事項"
    },
    {
      "indent": 3,
      "text": "QUIC version 2 provides protection against some forms of ossification. Devices that assume that all long headers will encode version 1, or that the version 1 Initial key derivation formula will remain version-invariant, will not correctly process version 2 packets.",
      "ja": "QUICバージョン2は、いくつかの形式の骨化に対する保護を提供します。すべての長いヘッダーがバージョン1をエンコードすると仮定するデバイス、またはバージョン1の初期キー派生式はバージョンin variantのままであると、バージョン2パケットを正しく処理しません。"
    },
    {
      "indent": 3,
      "text": "However, many middleboxes, such as firewalls, focus on the first packet in a connection, which will often remain in the version 1 format due to the considerations above.",
      "ja": "ただし、ファイアウォールなどの多くのミドルボックスは、接続内の最初のパケットに焦点を当てています。これは、上記の考慮事項のためにバージョン1形式に残ることがよくあります。"
    },
    {
      "indent": 3,
      "text": "Clients interested in combating middlebox ossification can initiate a connection using version 2 if they are reasonably certain the server supports it and if they are willing to suffer a round-trip penalty if they are incorrect. In particular, a server that issues a session ticket for version 2 indicates an intent to maintain version 2 support while the ticket remains valid, even if support cannot be guaranteed.",
      "ja": "ミドルボックスの骨化との闘いに関心のあるクライアントは、サーバーがそれをサポートしていることを合理的に確信している場合は、バージョン2を使用して接続を開始できます。特に、バージョン2のセッションチケットを発行するサーバーは、サポートを保証できなくても、チケットが有効なままである間、バージョン2サポートを維持する意図を示します。"
    },
    {
      "indent": 0,
      "text": "7. Applicability",
      "section_title": true,
      "ja": "7. 適用可能性"
    },
    {
      "indent": 3,
      "text": "QUIC version 2 provides no change from QUIC version 1 for the capabilities available to applications. Therefore, all Application-Layer Protocol Negotiation (ALPN) [RFC7301] codepoints specified to operate over QUIC version 1 can also operate over this version of QUIC. In particular, both the \"h3\" [HTTP/3] and \"doq\" [RFC9250] ALPNs can operate over QUIC version 2.",
      "ja": "QUICバージョン2は、アプリケーションで利用可能な機能について、QUICバージョン1からの変更を提供しません。したがって、QUICバージョン1で動作するように指定されたすべてのアプリケーション層プロトコルネゴシエーション（ALPN）[RFC7301]コードポイントも、このバージョンのQUICで動作することができます。特に、「H3」[HTTP/3]と「DOQ」[RFC9250]の両方が、QUICバージョン2で動作することができます。"
    },
    {
      "indent": 3,
      "text": "Unless otherwise stated, all QUIC extensions defined to work with version 1 also work with version 2.",
      "ja": "特に明記しない限り、バージョン1で動作するように定義されるすべてのQUIC拡張機能もバージョン2で動作します。"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "QUIC version 2 introduces no changes to the security or privacy properties of QUIC version 1.",
      "ja": "QUICバージョン2では、QUICバージョン1のセキュリティまたはプライバシープロパティに変更がありません。"
    },
    {
      "indent": 3,
      "text": "The mandatory version negotiation mechanism guards against downgrade attacks, but downgrades have no security implications, as the version properties are identical.",
      "ja": "必須バージョンのネゴシエーションメカニズムは、ダウングレード攻撃に対して守られていますが、バージョンのプロパティが同一であるため、ダウングレードにはセキュリティの意味がありません。"
    },
    {
      "indent": 3,
      "text": "Support for QUIC version 2 can help an observer to fingerprint both client and server devices.",
      "ja": "QUICバージョン2のサポートは、オブザーバーがクライアントデバイスとサーバーデバイスの両方を指紋するのに役立ちます。"
    },
    {
      "indent": 0,
      "text": "9. IANA Considerations",
      "section_title": true,
      "ja": "9. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has added the following entries to the \"QUIC Versions\" registry maintained at <https://www.iana.org/assignments/quic>.",
      "ja": "IANAは、<https://www.iana.org/assignments/quic>に維持されている「QUICバージョン」レジストリに次のエントリを追加しました。"
    },
    {
      "indent": 3,
      "text": "Value:",
      "ja": "価値："
    },
    {
      "indent": 12,
      "text": "0x6b3343cf",
      "ja": "0x6b3343cf"
    },
    {
      "indent": 3,
      "text": "Status:",
      "ja": "状態："
    },
    {
      "indent": 12,
      "text": "permanent",
      "ja": "永続パーマネント恒久常任不変永住永久的な一定不変"
    },
    {
      "indent": 3,
      "text": "Specification:",
      "ja": "仕様："
    },
    {
      "indent": 12,
      "text": "RFC 9369",
      "ja": "RFC 9369"
    },
    {
      "indent": 3,
      "text": "Change Controller:",
      "ja": "Change Controller："
    },
    {
      "indent": 12,
      "text": "IETF",
      "ja": "IETF"
    },
    {
      "indent": 3,
      "text": "Contact:",
      "ja": "接触："
    },
    {
      "indent": 12,
      "text": "QUIC WG",
      "ja": "quic wg"
    },
    {
      "indent": 3,
      "text": "Value:",
      "ja": "価値："
    },
    {
      "indent": 12,
      "text": "0x709a50c4",
      "ja": "0x709A50C4"
    },
    {
      "indent": 3,
      "text": "Status:",
      "ja": "状態："
    },
    {
      "indent": 12,
      "text": "provisional",
      "ja": "仮仮設一時の一時的"
    },
    {
      "indent": 3,
      "text": "Specification:",
      "ja": "仕様："
    },
    {
      "indent": 12,
      "text": "RFC 9369",
      "ja": "RFC 9369"
    },
    {
      "indent": 3,
      "text": "Change Controller:",
      "ja": "Change Controller："
    },
    {
      "indent": 12,
      "text": "IETF",
      "ja": "IETF"
    },
    {
      "indent": 3,
      "text": "Contact:",
      "ja": "接触："
    },
    {
      "indent": 12,
      "text": "QUIC WG",
      "ja": "quic wg"
    },
    {
      "indent": 3,
      "text": "Notes:",
      "ja": "ノート："
    },
    {
      "indent": 12,
      "text": "QUIC v2 draft codepoint",
      "ja": "QUIC V2ドラフトコードポイント"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "ja": "10.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[QUIC]     Iyengar, J., Ed. and M. Thomson, Ed., \"QUIC: A UDP-Based\n           Multiplexed and Secure Transport\", RFC 9000,\n           DOI 10.17487/RFC9000, May 2021,\n           <https://www.rfc-editor.org/info/rfc9000>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[QUIC-RECOVERY]\n           Iyengar, J., Ed. and I. Swett, Ed., \"QUIC Loss Detection\n           and Congestion Control\", RFC 9002, DOI 10.17487/RFC9002,\n           May 2021, <https://www.rfc-editor.org/info/rfc9002>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[QUIC-TLS] Thomson, M., Ed. and S. Turner, Ed., \"Using TLS to Secure\n           QUIC\", RFC 9001, DOI 10.17487/RFC9001, May 2021,\n           <https://www.rfc-editor.org/info/rfc9001>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[QUIC-VN]  Schinazi, D. and E. Rescorla, \"Compatible Version\n           Negotiation for QUIC\", RFC 9368, DOI 10.17487/RFC9368, May\n           2023, <https://www.rfc-editor.org/info/rfc9368>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n           Requirement Levels\", BCP 14, RFC 2119,\n           DOI 10.17487/RFC2119, March 1997,\n           <https://www.rfc-editor.org/info/rfc2119>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n           2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n           May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "ja": "10.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[HTTP/3]   Bishop, M., Ed., \"HTTP/3\", RFC 9114, DOI 10.17487/RFC9114,\n           June 2022, <https://www.rfc-editor.org/info/rfc9114>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[QUIC-INVARIANTS]\n           Thomson, M., \"Version-Independent Properties of QUIC\",\n           RFC 8999, DOI 10.17487/RFC8999, May 2021,\n           <https://www.rfc-editor.org/info/rfc8999>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC7301]  Friedl, S., Popov, A., Langley, A., and E. Stephan,\n           \"Transport Layer Security (TLS) Application-Layer Protocol\n           Negotiation Extension\", RFC 7301, DOI 10.17487/RFC7301,\n           July 2014, <https://www.rfc-editor.org/info/rfc7301>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC7838]  Nottingham, M., McManus, P., and J. Reschke, \"HTTP\n           Alternative Services\", RFC 7838, DOI 10.17487/RFC7838,\n           April 2016, <https://www.rfc-editor.org/info/rfc7838>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9250]  Huitema, C., Dickinson, S., and A. Mankin, \"DNS over\n           Dedicated QUIC Connections\", RFC 9250,\n           DOI 10.17487/RFC9250, May 2022,\n           <https://www.rfc-editor.org/info/rfc9250>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix A. Sample Packet Protection",
      "section_title": true,
      "ja": "付録A. サンプルパケット保護"
    },
    {
      "indent": 3,
      "text": "This section shows examples of packet protection so that implementations can be verified incrementally. Samples of Initial packets from both the client and server plus a Retry packet are defined. These packets use an 8-byte client-chosen Destination Connection ID of 0x8394c8f03e515708. Some intermediate values are included. All values are shown in hexadecimal.",
      "ja": "このセクションでは、実装を段階的に検証できるように、パケット保護の例を示しています。クライアントとサーバーの両方からの初期パケットと再試行パケットのサンプルが定義されています。これらのパケットは、0x8394C8F03E515708の8バイトのクライアントが選択した宛先接続IDを使用します。いくつかの中間値が含まれています。すべての値は16進数で表示されます。"
    },
    {
      "indent": 0,
      "text": "A.1. Keys",
      "section_title": true,
      "ja": "A.1. キー"
    },
    {
      "indent": 3,
      "text": "The labels generated during the execution of the HKDF-Expand-Label function (that is, HkdfLabel.label) and part of the value given to the HKDF-Expand function in order to produce its output are:",
      "ja": "HKDF-EXPAND-Label関数（つまり、HKDFLABEL.LABEL）の実行中に生成されたラベルと、その出力を生成するためにHKDF-Expand関数に与えられた値の一部は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "client in: 00200f746c73313320636c69656e7420696e00",
      "ja": "クライアント：00200F746C73333320636C69656E7420696E00"
    },
    {
      "indent": 3,
      "text": "server in: 00200f746c7331332073657276657220696e00",
      "ja": "サーバーIn：00200F746C7333332073657276657220696E00"
    },
    {
      "indent": 3,
      "text": "quicv2 key: 001010746c73313320717569637632206b657900",
      "ja": "Quicv2キー：001010746C73313320717569637632206B657900"
    },
    {
      "indent": 3,
      "text": "quicv2 iv: 000c0f746c7331332071756963763220697600",
      "ja": "Quicv2 IV：000C0F746C733332071756963763220697600"
    },
    {
      "indent": 3,
      "text": "quicv2 hp: 00100f746c7331332071756963763220687000",
      "ja": "Quicv2 HP：00100F746C733332071756963763220687000"
    },
    {
      "indent": 3,
      "text": "The initial secret is common:",
      "ja": "最初の秘密は一般的です："
    },
    {
      "indent": 3,
      "text": "initial_secret = HKDF-Extract(initial_salt, cid)\n    = 2062e8b3cd8d52092614b8071d0aa1fb\n      7c2e3ac193f78b280e72d8f5751f6aba",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The secrets for protecting client packets are:",
      "ja": "クライアントパケットを保護するための秘密は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "client_initial_secret\n    = HKDF-Expand-Label(initial_secret, \"client in\", \"\", 32)\n    = 14ec9d6eb9fd7af83bf5a668bc17a7e2\n      83766aade7ecd0891f70f9ff7f4bf47b\n\nkey = HKDF-Expand-Label(client_initial_secret, \"quicv2 key\", \"\", 16)\n    = 8b1a0bc121284290a29e0971b5cd045d\n\niv  = HKDF-Expand-Label(client_initial_secret, \"quicv2 iv\", \"\", 12)\n    = 91f73e2351d8fa91660e909f\n\nhp  = HKDF-Expand-Label(client_initial_secret, \"quicv2 hp\", \"\", 16)\n    = 45b95e15235d6f45a6b19cbcb0294ba9",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The secrets for protecting server packets are:",
      "ja": "サーバーパケットを保護するための秘密は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "server_initial_secret\n    = HKDF-Expand-Label(initial_secret, \"server in\", \"\", 32)\n    = 0263db1782731bf4588e7e4d93b74639\n      07cb8cd8200b5da55a8bd488eafc37c1\n\nkey = HKDF-Expand-Label(server_initial_secret, \"quicv2 key\", \"\", 16)\n    = 82db637861d55e1d011f19ea71d5d2a7\n\niv  = HKDF-Expand-Label(server_initial_secret, \"quicv2 iv\", \"\", 12)\n    = dd13c276499c0249d3310652\n\nhp  = HKDF-Expand-Label(server_initial_secret, \"quicv2 hp\", \"\", 16)\n    = edf6d05c83121201b436e16877593c3a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2. Client Initial",
      "section_title": true,
      "ja": "A.2. クライアントの初期"
    },
    {
      "indent": 3,
      "text": "The client sends an Initial packet. The unprotected payload of this packet contains the following CRYPTO frame, plus enough PADDING frames to make a 1162-byte payload:",
      "ja": "クライアントは初期パケットを送信します。このパケットの保護されていないペイロードには、次の暗号フレームに加えて、1162バイトのペイロードを作成するのに十分なパディングフレームが含まれています。"
    },
    {
      "indent": 3,
      "text": "060040f1010000ed0303ebf8fa56f129 39b9584a3896472ec40bb863cfd3e868\n04fe3a47f06a2b69484c000004130113 02010000c000000010000e00000b6578\n616d706c652e636f6dff01000100000a 00080006001d00170018001000070005\n04616c706e0005000501000000000033 00260024001d00209370b2c9caa47fba\nbaf4559fedba753de171fa71f50f1ce1 5d43e994ec74d748002b000302030400\n0d0010000e0403050306030203080408 050806002d00020101001c0002400100\n3900320408ffffffffffffffff050480 00ffff07048000ffff08011001048000\n75300901100f088394c8f03e51570806 048000ffff",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The unprotected header indicates a length of 1182 bytes: the 4-byte packet number, 1162 bytes of frames, and the 16-byte authentication tag. The header includes the connection ID and a packet number of 2:",
      "ja": "保護されていないヘッダーは、1182バイトの長さを示します。4バイトパケット番号、1162バイトのフレーム、16バイト認証タグです。ヘッダーには、接続IDと2のパケット番号が含まれています。"
    },
    {
      "indent": 3,
      "text": "d36b3343cf088394c8f03e5157080000449e00000002",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Protecting the payload produces an output that is sampled for header protection. Because the header uses a 4-byte packet number encoding, the first 16 bytes of the protected payload is sampled and then applied to the header as follows:",
      "ja": "ペイロードを保護すると、ヘッダー保護のためにサンプリングされる出力が生成されます。ヘッダーは4バイトのパケット番号エンコードを使用するため、保護されたペイロードの最初の16バイトがサンプリングされ、次のようにヘッダーに適用されます。"
    },
    {
      "indent": 3,
      "text": "sample = ffe67b6abcdb4298b485dd04de806071\n\nmask = AES-ECB(hp, sample)[0..4]\n     = 94a0c95e80\n\nheader[0] ^= mask[0] & 0x0f\n     = d7\nheader[18..21] ^= mask[1..4]\n     = a0c95e82\nheader = d76b3343cf088394c8f03e5157080000449ea0c95e82",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The resulting protected packet is:",
      "ja": "結果の保護されたパケットは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "d76b3343cf088394c8f03e5157080000 449ea0c95e82ffe67b6abcdb4298b485\ndd04de806071bf03dceebfa162e75d6c 96058bdbfb127cdfcbf903388e99ad04\n9f9a3dd4425ae4d0992cfff18ecf0fdb 5a842d09747052f17ac2053d21f57c5d\n250f2c4f0e0202b70785b7946e992e58 a59ac52dea6774d4f03b55545243cf1a\n12834e3f249a78d395e0d18f4d766004 f1a2674802a747eaa901c3f10cda5500\ncb9122faa9f1df66c392079a1b40f0de 1c6054196a11cbea40afb6ef5253cd68\n18f6625efce3b6def6ba7e4b37a40f77 32e093daa7d52190935b8da58976ff33\n12ae50b187c1433c0f028edcc4c2838b 6a9bfc226ca4b4530e7a4ccee1bfa2a3\nd396ae5a3fb512384b2fdd851f784a65 e03f2c4fbe11a53c7777c023462239dd\n6f7521a3f6c7d5dd3ec9b3f233773d4b 46d23cc375eb198c63301c21801f6520\nbcfb7966fc49b393f0061d974a2706df 8c4a9449f11d7f3d2dcbb90c6b877045\n636e7c0c0fe4eb0f697545460c806910 d2c355f1d253bc9d2452aaa549e27a1f\nac7cf4ed77f322e8fa894b6a83810a34 b361901751a6f5eb65a0326e07de7c12\n16ccce2d0193f958bb3850a833f7ae43 2b65bc5a53975c155aa4bcb4f7b2c4e5\n4df16efaf6ddea94e2c50b4cd1dfe060 17e0e9d02900cffe1935e0491d77ffb4\nfdf85290fdd893d577b1131a610ef6a5 c32b2ee0293617a37cbb08b847741c3b\n8017c25ca9052ca1079d8b78aebd4787 6d330a30f6a8c6d61dd1ab5589329de7\n14d19d61370f8149748c72f132f0fc99 f34d766c6938597040d8f9e2bb522ff9\n9c63a344d6a2ae8aa8e51b7b90a4a806 105fcbca31506c446151adfeceb51b91\nabfe43960977c87471cf9ad4074d30e1 0d6a7f03c63bd5d4317f68ff325ba3bd\n80bf4dc8b52a0ba031758022eb025cdd 770b44d6d6cf0670f4e990b22347a7db\n848265e3e5eb72dfe8299ad7481a4083 22cac55786e52f633b2fb6b614eaed18\nd703dd84045a274ae8bfa73379661388 d6991fe39b0d93debb41700b41f90a15\nc4d526250235ddcd6776fc77bc97e7a4 17ebcb31600d01e57f32162a8560cacc\n7e27a096d37a1a86952ec71bd89a3e9a 30a2a26162984d7740f81193e8238e61\nf6b5b984d4d3dfa033c1bb7e4f0037fe bf406d91c0dccf32acf423cfa1e70710\n10d3f270121b493ce85054ef58bada42 310138fe081adb04e2bd901f2f13458b\n3d6758158197107c14ebb193230cd115 7380aa79cae1374a7c1e5bbcb80ee23e\n06ebfde206bfb0fcbc0edc4ebec30966 1bdd908d532eb0c6adc38b7ca7331dce\n8dfce39ab71e7c32d318d136b6100671 a1ae6a6600e3899f31f0eed19e3417d1\n34b90c9058f8632c798d4490da498730 7cba922d61c39805d072b589bd52fdf1\ne86215c2d54e6670e07383a27bbffb5a ddf47d66aa85a0c6f9f32e59d85a44dd\n5d3b22dc2be80919b490437ae4f36a0a e55edf1d0b5cb4e9a3ecabee93dfc6e3\n8d209d0fa6536d27a5d6fbb17641cde2 7525d61093f1b28072d111b2b4ae5f89\nd5974ee12e5cf7d5da4d6a31123041f3 3e61407e76cffcdcfd7e19ba58cf4b53\n6f4c4938ae79324dc402894b44faf8af bab35282ab659d13c93f70412e85cb19\n9a37ddec600545473cfb5a05e08d0b20 9973b2172b4d21fb69745a262ccde96b\na18b2faa745b6fe189cf772a9f84cbfc",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3. Server Initial",
      "section_title": true,
      "ja": "A.3. サーバーの初期"
    },
    {
      "indent": 3,
      "text": "The server sends the following payload in response, including an ACK frame, a CRYPTO frame, and no PADDING frames:",
      "ja": "サーバーは、ACKフレーム、暗号フレーム、およびパディングフレームなしなど、次のペイロードを応答して送信します。"
    },
    {
      "indent": 3,
      "text": "02000000000600405a020000560303ee fce7f7b37ba1d1632e96677825ddf739\n88cfc79825df566dc5430b9a045a1200 130100002e00330024001d00209d3c94\n0d89690b84d08a60993c144eca684d10 81287c834d5311bcf32bb9da1a002b00\n020304",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The header from the server includes a new connection ID and a 2-byte packet number encoding for a packet number of 1:",
      "ja": "サーバーのヘッダーには、新しい接続IDとパケット番号の1の2バイトパケット番号エンコードが含まれています。"
    },
    {
      "indent": 3,
      "text": "d16b3343cf0008f067a5502a4262b50040750001",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As a result, after protection, the header protection sample is taken, starting from the third protected byte:",
      "ja": "その結果、保護後、ヘッダー保護サンプルが採取され、3番目の保護されたバイトから始まります。"
    },
    {
      "indent": 3,
      "text": "sample = 6f05d8a4398c47089698baeea26b91eb\nmask   = 4dd92e91ea\nheader = dc6b3343cf0008f067a5502a4262b5004075d92f",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The final protected packet is then:",
      "ja": "最終的な保護されたパケットは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "dc6b3343cf0008f067a5502a4262b500 4075d92faaf16f05d8a4398c47089698\nbaeea26b91eb761d9b89237bbf872630 17915358230035f7fd3945d88965cf17\nf9af6e16886c61bfc703106fbaf3cb4c fa52382dd16a393e42757507698075b2\nc984c707f0a0812d8cd5a6881eaf21ce da98f4bd23f6fe1a3e2c43edd9ce7ca8\n4bed8521e2e140",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4. Retry",
      "section_title": true,
      "ja": "A.4. リトライ"
    },
    {
      "indent": 3,
      "text": "This shows a Retry packet that might be sent in response to the Initial packet in Appendix A.2. The integrity check includes the client-chosen connection ID value of 0x8394c8f03e515708, but that value is not included in the final Retry packet:",
      "ja": "これは、付録A.2の最初のパケットに応じて送信される可能性のある再試行パケットを示しています。整合性チェックには、0x8394C8F03E515708のクライアント選択接続ID値が含まれていますが、その値は最終的な再試行パケットに含まれていません。"
    },
    {
      "indent": 3,
      "text": "cf6b3343cf0008f067a5502a4262b574 6f6b656ec8646ce8bfe33952d9555436\n65dcc7b6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5. ChaCha20-Poly1305 Short Header Packet",
      "section_title": true,
      "ja": "A.5. Chacha20-Poly1305ショートヘッダーパケット"
    },
    {
      "indent": 3,
      "text": "This example shows some of the steps required to protect a packet with a short header. It uses AEAD_CHACHA20_POLY1305.",
      "ja": "この例は、短いヘッダーでパケットを保護するために必要ないくつかの手順を示しています。AEAD_CHACHA20_POLY1305を使用します。"
    },
    {
      "indent": 3,
      "text": "In this example, TLS produces an application write secret from which a server uses HKDF-Expand-Label to produce four values: a key, an Initialization Vector (IV), a header protection key, and the secret that will be used after keys are updated (this last value is not used further in this example).",
      "ja": "この例では、TLSは、サーバーがHKDF-Expand-Labelを使用して4つの値を作成するアプリケーションの書き込み秘密を生成します。キー、初期化ベクトル（IV）、ヘッダー保護キー、およびキーの後に使用される秘密は更新されました（この最後の値は、この例ではこれ以上使用されません）。"
    },
    {
      "indent": 3,
      "text": "secret\n    = 9ac312a7f877468ebe69422748ad00a1\n      5443f18203a07d6060f688f30f21632b\n\nkey = HKDF-Expand-Label(secret, \"quicv2 key\", \"\", 32)\n    = 3bfcddd72bcf02541d7fa0dd1f5f9eee\n      a817e09a6963a0e6c7df0f9a1bab90f2\n\niv  = HKDF-Expand-Label(secret, \"quicv2 iv\", \"\", 12)\n    = a6b5bc6ab7dafce30ffff5dd\n\nhp  = HKDF-Expand-Label(secret, \"quicv2 hp\", \"\", 32)\n    = d659760d2ba434a226fd37b35c69e2da\n      8211d10c4f12538787d65645d5d1b8e2\n\nku  = HKDF-Expand-Label(secret, \"quicv2 ku\", \"\", 32)\n    = c69374c49e3d2a9466fa689e49d476db\n      5d0dfbc87d32ceeaa6343fd0ae4c7d88",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following shows the steps involved in protecting a minimal packet with an empty Destination Connection ID. This packet contains a single PING frame (that is, a payload of just 0x01) and has a packet number of 654360564. In this example, using a packet number of length 3 (that is, 49140 is encoded) avoids having to pad the payload of the packet; PADDING frames would be needed if the packet number is encoded on fewer bytes.",
      "ja": "以下は、空の宛先接続IDで最小限のパケットを保護することに伴う手順を示しています。このパケットには、単一のpingフレーム（つまり、わずか0x01のペイロード）が含まれており、654360564のパケット番号があります。この例では、長さ3のパケット番号（つまり、49140がエンコードされています）を使用して、ペイロードをパッドにパッドする必要がありません。パケットの;パケット番号がより少ないバイトでエンコードされている場合、パディングフレームが必要になります。"
    },
    {
      "indent": 3,
      "text": "pn                 = 654360564 (decimal)\nnonce              = a6b5bc6ab7dafce328ff4a29\nunprotected header = 4200bff4\npayload plaintext  = 01\npayload ciphertext = 0ae7b6b932bc27d786f4bc2bb20f2162ba",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The resulting ciphertext is the minimum size possible. One byte is skipped to produce the sample for header protection.",
      "ja": "結果の暗号文は、可能な限り最小サイズです。ヘッダー保護用のサンプルを作成するために、1つのバイトがスキップされます。"
    },
    {
      "indent": 3,
      "text": "sample = e7b6b932bc27d786f4bc2bb20f2162ba\nmask   = 97580e32bf\nheader = 5558b1c6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The protected packet is the smallest possible packet size of 21 bytes.",
      "ja": "保護されたパケットは、21バイトの可能な限り最小のパケットサイズです。"
    },
    {
      "indent": 3,
      "text": "packet = 5558b1c60ae7b6b932bc27d786f4bc2bb20f2162ba",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "section_title": true,
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The author would like to thank Christian Huitema, Lucas Pardue, Kyle Rose, Anthony Rossi, Zahed Sarker, David Schinazi, Tatsuhiro Tsujikawa, and Martin Thomson for their helpful suggestions.",
      "ja": "著者は、クリスチャン・フイテマ、ルーカス・パルドゥ、カイル・ローズ、アンソニー・ロッシ、ザヘド・サルカー、デビッド・シナジ、タツヒロ・ツジカワ、マーティン・トムソンの有益な提案に感謝したいと思います。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "section_title": true,
      "ja": "著者の連絡先"
    },
    {
      "indent": 3,
      "text": "Martin Duke\nGoogle LLC\nEmail: martin.h.duke@gmail.com",
      "raw": true,
      "ja": ""
    }
  ]
}