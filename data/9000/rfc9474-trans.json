{
  "title": {
    "text": "RFC 9474 - RSA Blind Signatures",
    "ja": "RFC 9474 - RSAブラインドシグネチャ"
  },
  "number": 9474,
  "created_at": "2024-02-29 02:55:33.409864+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Research Task Force (IRTF)                             F. Denis\nRequest for Comments: 9474                                   Fastly Inc.\nCategory: Informational                                        F. Jacobs\nISSN: 2070-1721                                               Apple Inc.\n                                                              C. A. Wood\n                                                              Cloudflare\n                                                            October 2023",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 26,
      "text": "RSA Blind Signatures",
      "title": true,
      "section_title": true,
      "ja": "RSAブラインドシグネチャ"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "section_title": true,
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies an RSA-based blind signature protocol. RSA blind signatures were first introduced by Chaum for untraceable payments. A signature that is output from this protocol can be verified as an RSA-PSS signature.",
      "ja": "このドキュメントは、RSAベースのブラインドシグネチャープロトコルを指定します。RSAブラインドシグネチャは、最初にChaumによって追跡不可能な支払いのために導入されました。このプロトコルから出力される署名は、RSA-PSS署名として検証できます。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.",
      "ja": "このドキュメントは、IRTFのCrypto Forum Research Group（CFRG）の製品です。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "section_title": true,
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントは、インターネット標準の追跡仕様ではありません。情報目的で公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Research Task Force (IRTF). The IRTF publishes the results of Internet-related research and development activities. These results might not be suitable for deployment. This RFC represents the consensus of the Crypto Forum Research Group of the Internet Research Task Force (IRTF). Documents approved for publication by the IRSG are not candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネット研究タスクフォース（IRTF）の製品です。IRTFは、インターネット関連の研究開発活動の結果を公開しています。これらの結果は、展開に適していない場合があります。このRFCは、インターネット研究タスクフォース（IRTF）の暗号フォーラム研究グループのコンセンサスを表しています。IRSGによって公開されたことが承認された文書は、インターネット標準のレベルの候補者ではありません。RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9474.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https：//www.rfc-editor.org/info/rfc9474で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "section_title": true,
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2023 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2023 IETF Trustおよび文書著者として特定された人。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "section_title": true,
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Requirements Notation\n3.  Notation\n4.  Blind Signature Protocol\n  4.1.  Prepare\n  4.2.  Blind\n  4.3.  BlindSign\n  4.4.  Finalize\n  4.5.  Verification\n5.  RSABSSA Variants\n6.  Implementation and Usage Considerations\n  6.1.  Errors\n  6.2.  Signing Key Generation and Usage\n7.  Security Considerations\n  7.1.  Timing Side Channels and Fault Attacks\n  7.2.  Message Robustness\n  7.3.  Message Entropy\n  7.4.  Randomness Generation\n  7.5.  Key Substitution Attacks\n  7.6.  Alternative RSA Encoding Functions\n  7.7.  Post-Quantum Readiness\n8.  IANA Considerations\n9.  References\n  9.1.  Normative References\n  9.2.  Informative References\nAppendix A.  Test Vectors\n  A.1.  RSABSSA-SHA384-PSS-Randomized Test Vector\n  A.2.  RSABSSA-SHA384-PSSZERO-Randomized Test Vector\n  A.3.  RSABSSA-SHA384-PSS-Deterministic Test Vector\n  A.4.  RSABSSA-SHA384-PSSZERO-Deterministic Test Vector\nAcknowledgments\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Originally introduced in the context of digital cash systems by Chaum for untraceable payments [Chaum83], RSA blind signatures turned out to have a wide range of applications ranging from privacy-preserving digital payments to authentication mechanisms [GoogleVPN] [ApplePrivateRelay] [PrettyGoodPhonePrivacy].",
      "ja": "もともとはDigital Cash Systemsのコンテキストで、Chaumが追跡不可能な支払い[Chaum83]のために導入したRSAブラインドシグネチャーは、プライバシーを提供するデジタル決済から認証メカニズムまで幅広いアプリケーションを持っていることが判明しました。"
    },
    {
      "indent": 3,
      "text": "Recently, interest in blind signatures has grown to address operational shortcomings from applications that use Verifiable Oblivious Pseudorandom Functions (VOPRFs) [VOPRF], such as Privacy Pass [PRIVACY-PASS]. Specifically, VOPRFs are not necessarily publicly verifiable, meaning that a verifier needs access to the VOPRF private key to verify that the output of a VOPRF protocol is valid for a given input. This limitation complicates deployments where it is not desirable to distribute private keys to entities performing verification. Additionally, if the private key is kept in a Hardware Security Module, the number of operations on the key is doubled compared to a scheme where only the public key is required for verification.",
      "ja": "最近、ブラインドシグネチャへの関心は、プライバシーパス[プライバシーパス]など、検証可能な忘却の擬似ランダム関数（VOPRF）[VOPRF]を使用するアプリケーションからの運用上の欠点に対処するために増加しました。具体的には、VOPRFは必ずしも公開されているわけではありません。つまり、VOPRFプロトコルの出力が特定の入力に対して有効であることを確認するために、VOPRF秘密キーへのVerifierがアクセスする必要があることを意味します。この制限は、検証を実行するエンティティにプライベートキーを配布することが望ましくない展開を複雑にします。さらに、秘密キーがハードウェアセキュリティモジュールに保持されている場合、検証に公開キーのみが必要なスキームと比較して、キーの操作の数は2倍になります。"
    },
    {
      "indent": 3,
      "text": "In contrast, digital signatures provide a primitive that is publicly verifiable and does not require access to the private key for verification. Moreover, [JKK14] shows that one can realize a VOPRF in the random oracle model by hashing a (message, signature) pair, where the signature is computed using a deterministic blind signature protocol.",
      "ja": "対照的に、デジタル署名は、公開され、検証のために秘密鍵へのアクセスを必要としないプリミティブを提供します。さらに、[JKK14]は、（メッセージ、署名）ペアをハッシュすることにより、ランダムオラクルモデルのVOPRFを実現できることを示しています。"
    },
    {
      "indent": 3,
      "text": "This document specifies (1) a protocol for computing RSA blind signatures using RSA-PSS encoding and (2) a family of variants (Section 5) for this protocol, denoted RSABSSA (RSA Blind Signature with Appendix). In order to facilitate deployment, it is defined in such a way that the resulting (unblinded) signature can be verified with a standard RSA-PSS library.",
      "ja": "このドキュメントは、（1）RSA-PSSエンコードを使用してRSAブラインドシグネチャを計算するためのプロトコルを指定し、（2）このプロトコルのバリアントファミリー（セクション5）は、RSABSSA（付録付きRSAブラインドシグネチャー）を示します。展開を容易にするために、標準のRSA-PSSライブラリを使用して、結果として得られる（ぼやけていない）署名を検証できるように定義されています。"
    },
    {
      "indent": 3,
      "text": "This document represents the consensus of the Crypto Forum Research Group (CFRG). It is not an IETF product and is not a standard.",
      "ja": "このドキュメントは、Crypto Forum Research Group（CFRG）のコンセンサスを表しています。IETF製品ではなく、標準でもありません。"
    },
    {
      "indent": 0,
      "text": "2. Requirements Notation",
      "section_title": true,
      "ja": "2. 要件表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Notation",
      "section_title": true,
      "ja": "3. 表記"
    },
    {
      "indent": 3,
      "text": "The following terms, which describe different protocol operations, are used throughout this document:",
      "ja": "さまざまなプロトコル操作を説明する次の用語は、このドキュメント全体で使用されます。"
    },
    {
      "indent": 3,
      "text": "bytes_to_int and int_to_bytes:",
      "ja": "bytes_to_intおよびint_to_bytes："
    },
    {
      "indent": 12,
      "text": "Convert a byte string to and from a non-negative integer.  bytes_to_int and int_to_bytes are implemented as OS2IP and I2OSP -- as described in [RFC8017] -- respectively. Note that these functions operate on byte strings in big-endian byte order.",
      "ja": "バイト文字列を非陰性整数に変換します。BYTES_TO_INTおよびINT_TO_BYTESは、それぞれ[RFC8017]で説明されているように、OS2IPおよびI2OSPとして実装されます。これらの関数は、ビッグエンディアンバイト順序でバイト文字列で動作することに注意してください。"
    },
    {
      "indent": 3,
      "text": "random_integer_uniform(M, N):",
      "ja": "random_integer_uniform（m、n）："
    },
    {
      "indent": 12,
      "text": "Generate a random, uniformly distributed integer R between M inclusive and N exclusive, i.e., M <= R < N.",
      "ja": "M包括的とn排他的、つまりm <= r <nの間でランダムで均一に分布した整数rを生成します。"
    },
    {
      "indent": 3,
      "text": "bit_len(n):",
      "ja": "BIT_LEN（n）："
    },
    {
      "indent": 12,
      "text": "Compute the minimum number of bits needed to represent the positive integer n.",
      "ja": "正の整数nを表すために必要なビットの最小数を計算します。"
    },
    {
      "indent": 3,
      "text": "inverse_mod(x, n):",
      "ja": "inverse_mod（x、n）："
    },
    {
      "indent": 12,
      "text": "Compute the multiplicative inverse of x mod n or fail if x and n are not co-prime.",
      "ja": "xとnが共同プライムでない場合、x mod nの乗法逆を計算するか、故障します。"
    },
    {
      "indent": 3,
      "text": "is_coprime(x, n):",
      "ja": "is_coprime（x、n）："
    },
    {
      "indent": 12,
      "text": "Return true if x and n are co-prime, and false otherwise.",
      "ja": "xとnが共同プライムである場合はtrueを返し、それ以外の場合はfalseを返します。"
    },
    {
      "indent": 3,
      "text": "len(s):",
      "ja": "レンズ）："
    },
    {
      "indent": 12,
      "text": "The length of a byte string, in bytes.",
      "ja": "バイト単位のバイト文字列の長さ。"
    },
    {
      "indent": 3,
      "text": "random(n):",
      "ja": "ランダム（n）："
    },
    {
      "indent": 12,
      "text": "Generate n random bytes using a cryptographically secure random number generator.",
      "ja": "暗号化的に安全な乱数ジェネレーターを使用して、nランダムバイトを生成します。"
    },
    {
      "indent": 3,
      "text": "concat(x0, ..., xN):",
      "ja": "concat（x0、...、xn）："
    },
    {
      "indent": 12,
      "text": "Concatenation of byte strings. For example, concat(0x01, 0x0203, 0x040506) = 0x010203040506.",
      "ja": "バイト文字列の連結。たとえば、concat（0x01、0x0203、0x040506）= 0x010203040506。"
    },
    {
      "indent": 3,
      "text": "slice(x, i, j):",
      "ja": "スライス（x、i、j）："
    },
    {
      "indent": 12,
      "text": "Return bytes in the byte string x starting from offset i and ending at offset j, inclusive. For example, slice(0x010203040506, 1, 5) = 0x0203040506.",
      "ja": "オフセットIから始まり、オフセットJで終了するバイト文字列xのバイトを返します。たとえば、スライス（0x010203040506、1、5）= 0x0203040506。"
    },
    {
      "indent": 0,
      "text": "4. Blind Signature Protocol",
      "section_title": true,
      "ja": "4. ブラインドシグネチャプロトコル"
    },
    {
      "indent": 3,
      "text": "The RSA Blind Signature Protocol is a two-party protocol between a client and server where they interact to compute sig = Sign(sk, input_msg), where input_msg = Prepare(msg) is a prepared version of the private message msg provided by the client, and sk is the private signing key provided by the server. See Section 6.2 for details on how sk is generated and used in this protocol. Upon completion of this protocol, the server learns nothing, whereas the client learns sig. In particular, this means the server learns nothing of msg or input_msg and the client learns nothing of sk.",
      "ja": "RSAブラインドシグネチャープロトコルは、クライアントとサーバーの間の2つのパーティプロトコルであり、Sig = Sign（SK、input_msg）を計算するために対話します。Putint_msg= prepare（MSG）は、クライアントが提供するプライベートメッセージMSGの準備バージョンです、そしてSKは、サーバーが提供するプライベート署名キーです。このプロトコルでSKの生成と使用方法の詳細については、セクション6.2を参照してください。このプロトコルが完了すると、サーバーは何も学習しませんが、クライアントはSIGを学習します。特に、これはサーバーがMSGやinput_msgについて何も学習しないことを意味し、クライアントはSKについて何も学習しません。"
    },
    {
      "indent": 3,
      "text": "The protocol consists of four functions -- Prepare, Blind, BlindSign, and Finalize -- and requires one round of interaction between client and server. Let msg be the client's private input message, and let (sk, pk) be the server's private and public key pair.",
      "ja": "プロトコルは、準備、ブラインド、ブラインドサイン、および最終化の4つの関数で構成され、クライアントとサーバーの間の1ラウンドの相互作用が必要です。MSGをクライアントのプライベート入力メッセージとし、（SK、PK）をサーバーのプライベートキーと公開キーのペアとします。"
    },
    {
      "indent": 3,
      "text": "The protocol begins by the client preparing the message to be signed by computing:",
      "ja": "プロトコルは、クライアントがコンピューティングによって署名されるメッセージを準備することから始まります。"
    },
    {
      "indent": 3,
      "text": "input_msg = Prepare(msg)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The client then initiates the blind signature protocol by computing:",
      "ja": "次に、クライアントは次のように盲目の署名プロトコルを開始します。"
    },
    {
      "indent": 3,
      "text": "blinded_msg, inv = Blind(pk, input_msg)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The client then sends blinded_msg to the server, which then processes the message by computing:",
      "ja": "その後、クライアントはblinded_msgをサーバーに送信し、次のことでメッセージを処理します。"
    },
    {
      "indent": 3,
      "text": "blind_sig = BlindSign(sk, blinded_msg)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The server then sends blind_sig to the client, which then finalizes the protocol by computing:",
      "ja": "その後、サーバーはBlind_sigをクライアントに送信し、次のことでプロトコルを完成させます。"
    },
    {
      "indent": 3,
      "text": "sig = Finalize(pk, input_msg, blind_sig, inv)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The output of the protocol is input_msg and sig. Upon completion, correctness requires that clients can verify signature sig over the prepared message input_msg using the server public key pk by invoking the RSASSA-PSS-VERIFY routine defined in Section 8.1.2 of [RFC8017]. The Finalize function performs this check before returning the signature. See Section 4.5 for more details about verifying signatures produced through this protocol.",
      "ja": "プロトコルの出力はinput_msgおよびsigです。完了すると、正しさは、[RFC8017]のセクション8.1.2で定義されたRSASSA-PSS-Verifyルーチンを呼び出すことにより、クライアントが準備されたメッセージ入力_MSGを使用して、準備されたメッセージ入力_MSGを介して署名SIGを検証できることを要求します。ファイナライズ関数は、署名を返す前にこのチェックを実行します。このプロトコルを通じて作成された署名の検証の詳細については、セクション4.5を参照してください。"
    },
    {
      "indent": 3,
      "text": "Shown graphically, the protocol runs as follows:",
      "ja": "グラフィカルに示されていると、プロトコルは次のように実行されます。"
    },
    {
      "indent": 5,
      "text": " Client(pk, msg)                      Server(sk, pk)\n-----------------------------------------------------\ninput_msg = Prepare(msg)\nblinded_msg, inv = Blind(pk, input_msg)\n\n                      blinded_msg\n                      ---------->\n\n               blind_sig = BlindSign(sk, blinded_msg)\n\n                       blind_sig\n                      <----------\n\nsig = Finalize(pk, input_msg, blind_sig, inv)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In the remainder of this section, we specify the Prepare, Blind, BlindSign, and Finalize functions that are used in this protocol.",
      "ja": "このセクションの残りの部分では、このプロトコルで使用される機能、ブラインド、ブラインドサイン、および最終化された機能を指定します。"
    },
    {
      "indent": 0,
      "text": "4.1. Prepare",
      "section_title": true,
      "ja": "4.1. 準備する"
    },
    {
      "indent": 3,
      "text": "Message preparation, denoted by the Prepare function, is the process by which the message to be signed and verified is prepared for input to the blind signing protocol. There are two types of preparation functions: an identity preparation function and a randomized preparation function. The identity preparation function returns the input message without transformation, i.e., msg = PrepareIdentity(msg).",
      "ja": "準備機能で示されるメッセージの準備は、署名および検証するメッセージがブラインド署名プロトコルへの入力のために準備されたプロセスです。調製機能には2つのタイプがあります。アイデンティティ準備機能と無作為化準備機能です。ID準備関数は、変換なしで入力メッセージを返します。つまり、MSG = prepareIdentity（MSG）。"
    },
    {
      "indent": 3,
      "text": "The randomized preparation function augments the input message with fresh randomness. We denote this process by the function PrepareRandomize(msg), which takes as input a message msg and produces a randomized message input_msg. Its implementation is shown below.",
      "ja": "ランダム化された準備関数は、新鮮なランダム性で入力メッセージを強化します。このプロセスは、メッセージmsgを入力するために入力してランダム化されたメッセージinput_msgを生成する関数prearerandomize（MSG）によって示されます。その実装を以下に示します。"
    },
    {
      "indent": 3,
      "text": "PrepareRandomize(msg)\n\nInputs:\n- msg, message to be signed, a byte string\n\nOutputs:\n- input_msg, a byte string that is 32 bytes longer than msg\n\nSteps:\n1. msg_prefix = random(32)\n2. input_msg = concat(msg_prefix, msg)\n3. output input_msg",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.2. Blind",
      "section_title": true,
      "ja": "4.2. 盲目"
    },
    {
      "indent": 3,
      "text": "The Blind function encodes an input message and blinds it with the server's public key. It outputs the blinded message to be sent to the server, encoded as a byte string, and the corresponding inverse, an integer. RSAVP1 and EMSA-PSS-ENCODE are as defined in Sections 5.2.2 and 9.1.1 of [RFC8017], respectively.",
      "ja": "ブラインド関数は入力メッセージをエンコードし、サーバーの公開キーでブラインドします。盲検化されたメッセージを出力し、サーバーに送信され、バイト文字列としてエンコードされ、対応する逆数の整数が出力されます。RSAVP1およびEMSA-PSS-Encodeは、それぞれ[RFC8017]のセクション5.2.2および9.1.1で定義されています。"
    },
    {
      "indent": 3,
      "text": "If this function fails with a \"blinding error\" error, implementations SHOULD try the function again. The probability of one or more such errors in sequence is negligible. This function can also fail with an \"invalid input\" error, which indicates that one of the inputs (likely the public key) was invalid. Implementations SHOULD update the public key before calling this function again. See Section 6.1 for more information about dealing with such errors.",
      "ja": "この関数が「盲検化エラー」エラーで失敗した場合、実装は機能を再度試す必要があります。順番に1つ以上のそのようなエラーの確率は無視できます。この関数は、「無効な入力」エラーでも失敗する可能性があります。これは、入力の1つ（おそらく公開鍵）が無効であることを示しています。この関数を再度呼び出す前に、実装は公開キーを更新する必要があります。このようなエラーの処理の詳細については、セクション6.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "Note that this function invokes RSAVP1, which is defined to throw an optional error for invalid inputs. However, this error cannot occur based on how RSAVP1 is invoked, so this error is not included in the list of errors for Blind.",
      "ja": "この関数はRSAVP1を呼び出します。これは、無効な入力のオプションエラーをスローするために定義されています。ただし、このエラーはRSAVP1の呼び出し方法に基づいて発生することはできないため、このエラーはブラインドのエラーのリストに含まれていません。"
    },
    {
      "indent": 3,
      "text": "Blind(pk, msg)\n\nParameters:\n- modulus_len, the length in bytes of the RSA modulus n\n- Hash, the hash function used to hash the message\n- MGF, the mask generation function\n- salt_len, the length in bytes of the salt (denoted sLen\n  in RFC 8017)\n\nInputs:\n- pk, server public key (n, e)\n- msg, message to be signed, a byte string\n\nOutputs:\n- blinded_msg, a byte string of length modulus_len\n- inv, an integer used to unblind the signature in Finalize\n\nErrors:\n- \"message too long\": Raised when the input message is too long\n  (raised by EMSA-PSS-ENCODE)\n- \"encoding error\": Raised when the input message fails encoding\n  (raised by EMSA-PSS-ENCODE)\n- \"blinding error\": Raised when the inverse of r cannot be found\n- \"invalid input\": Raised when the message is not co-prime with n\n\nSteps:\n1. encoded_msg = EMSA-PSS-ENCODE(msg, bit_len(n))\n   with Hash, MGF, and salt_len as defined in the parameters\n2. If EMSA-PSS-ENCODE raises an error, re-raise the error and stop\n3. m = bytes_to_int(encoded_msg)\n4. c = is_coprime(m, n)\n5. If c is false, raise an \"invalid input\" error and stop\n6. r = random_integer_uniform(1, n)\n7. inv = inverse_mod(r, n)\n8. If inverse_mod fails, raise a \"blinding error\" error and stop\n9. x = RSAVP1(pk, r)\n10. z = (m * x) mod n\n11. blinded_msg = int_to_bytes(z, modulus_len)\n12. output blinded_msg, inv",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The blinding factor r MUST be randomly chosen from a uniform distribution. This is typically done via rejection sampling.",
      "ja": "盲検係数Rは、均一な分布からランダムに選択する必要があります。これは通常、拒絶サンプリングによって行われます。"
    },
    {
      "indent": 0,
      "text": "4.3. BlindSign",
      "section_title": true,
      "ja": "4.3. ブラインドサイン"
    },
    {
      "indent": 3,
      "text": "BlindSign performs the RSA private key operation on the client's blinded message input and returns the output encoded as a byte string. RSASP1 is as defined in Section 5.2.1 of [RFC8017].",
      "ja": "BlindSignは、クライアントのブラインドメッセージ入力でRSA秘密キー操作を実行し、バイト文字列としてエンコードされた出力を返します。RSASP1は、[RFC8017]のセクション5.2.1で定義されています。"
    },
    {
      "indent": 3,
      "text": "BlindSign(sk, blinded_msg)\n\nParameters:\n- modulus_len, the length in bytes of the RSA modulus n\n\nInputs:\n- sk, server private key\n- blinded_msg, encoded and blinded message to be signed, a\n  byte string\n\nOutputs:\n- blind_sig, a byte string of length modulus_len\n\nErrors:\n- \"signing failure\": Raised when the signing operation fails\n- \"message representative out of range\": Raised when the\n  message representative to sign is not an integer between 0\n  and n - 1 (raised by RSASP1)\n\nSteps:\n1. m = bytes_to_int(blinded_msg)\n2. s = RSASP1(sk, m)\n3. m' = RSAVP1(pk, s)\n4. If m != m', raise a \"signing failure\" error and stop\n5. blind_sig = int_to_bytes(s, modulus_len)\n6. output blind_sig",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.4. Finalize",
      "section_title": true,
      "ja": "4.4. 最終化します"
    },
    {
      "indent": 3,
      "text": "Finalize validates the server's response, unblinds the message to produce a signature, verifies it for correctness, and outputs the signature upon success. Note that this function will internally hash the input message as is done in Blind.",
      "ja": "ファイナライズサーバーの応答を検証し、メッセージを解除して署名を作成し、正確性のために検証し、成功に署名を出力します。この関数は、ブラインドで行われるように、入力メッセージを内部的にハッシュすることに注意してください。"
    },
    {
      "indent": 3,
      "text": "Finalize(pk, msg, blind_sig, inv)\n\nParameters:\n- modulus_len, the length in bytes of the RSA modulus n\n- Hash, the hash function used to hash the message\n- MGF, the mask generation function\n- salt_len, the length in bytes of the salt (denoted sLen\n  in RFC 8017)\n\nInputs:\n- pk, server public key (n, e)\n- msg, message to be signed, a byte string\n- blind_sig, signed and blinded element, a byte string of\n  length modulus_len\n- inv, inverse of the blind, an integer\n\nOutputs:\n- sig, a byte string of length modulus_len\n\nErrors:\n- \"invalid signature\": Raised when the signature is invalid\n- \"unexpected input size\": Raised when a byte string input doesn't\n  have the expected length\n\nSteps:\n1. If len(blind_sig) != modulus_len, raise an \"unexpected input size\"\n   error and stop\n2. z = bytes_to_int(blind_sig)\n3. s = (z * inv) mod n\n4. sig = int_to_bytes(s, modulus_len)\n5. result = RSASSA-PSS-VERIFY(pk, msg, sig) with\n   Hash, MGF, and salt_len as defined in the parameters\n6. If result = \"valid signature\", output sig, else\n   raise an \"invalid signature\" error and stop",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.5. Verification",
      "section_title": true,
      "ja": "4.5. 検証"
    },
    {
      "indent": 3,
      "text": "As described in Section 4, the output of the protocol is the prepared message input_msg and the signature sig. The message that applications consume is msg, from which input_msg is derived. Clients verify the msg signature using the server's public key pk by invoking the RSASSA-PSS-VERIFY routine defined in Section 8.1.2 of [RFC8017] with (n, e) as pk, M as input_msg, and S as sig.",
      "ja": "セクション4で説明されているように、プロトコルの出力は、準備されたメッセージinput_msgと署名Sigです。アプリケーションが消費するメッセージはMSGであり、そこからinput_msgが導出されます。クライアントは、[RFC8017]のセクション8.1.2で定義されているRSASSA-PSS-Verifyルーチンを呼び出し、（n、e）をpk、m as input_msgとして、およびsをsigとして呼び出します。"
    },
    {
      "indent": 3,
      "text": "Verification and the message that applications consume therefore depend on which preparation function is used. In particular, if the PrepareIdentity function is used, then the application message is input_msg. In contrast, if the PrepareRandomize function is used, then the application message is slice(input_msg, 32, len(input_msg)), i.e., the prepared message with the message randomizer prefix removed.",
      "ja": "したがって、アプリケーションが消費する検証とメッセージは、どの準備機能が使用されるかによって異なります。特に、prepareIdentity関数を使用する場合、アプリケーションメッセージはinput_msgです。対照的に、準備機能を使用する場合、アプリケーションメッセージはスライス（input_msg、32、len（input_msg））、つまり、メッセージランダイザープレフィックスが削除されたメッセージを使用した準備されたメッセージです。"
    },
    {
      "indent": 0,
      "text": "5. RSABSSA Variants",
      "section_title": true,
      "ja": "5. rsabssaバリエーション"
    },
    {
      "indent": 3,
      "text": "In this section, we define different named variants of RSABSSA. Each variant specifies EMSA-PSS options Hash, MGF, and sLen as defined in Section 9.1.1 of [RFC8017], as well as the type of message preparation function applied (as described in Section 4.1). Each variant uses the mask generation function 1 (MGF1) defined in Appendix B.2.1. of [RFC8017]. Future specifications can introduce other variants as desired. The named variants are as follows:",
      "ja": "このセクションでは、RSABSSAの異なる名前のバリアントを定義します。各バリアントは、[RFC8017]のセクション9.1.1で定義されているように、EMSA-PSSオプションのハッシュ、MGF、およびスレンと、適用されるメッセージ準備機能のタイプを指定します（セクション4.1で説明されています）。各バリアントは、付録B.2.1で定義されているマスク生成関数1（MGF1）を使用します。[RFC8017]。将来の仕様は、必要に応じて他のバリアントを導入できます。指定されたバリアントは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "RSABSSA-SHA384-PSS-Randomized:",
      "ja": "rsabssa-sha384-pss-randomized："
    },
    {
      "indent": 12,
      "text": "This named variant uses SHA-384 as the EMSA-PSS Hash option, MGF1 with SHA-384 as the EMSA-PSS MGF option, and 48 as the EMSA-PSS sLen option (48-byte salt length); it also uses the randomized preparation function (PrepareRandomize).",
      "ja": "この名前のバリアントは、SHA-384をEMSA-PSSハッシュオプションとして、MGF1を搭載したEMSA-PSS MGFオプションとして、EMSA-PSSスレンオプション（48バイトの塩の長さ）として48を使用します。また、ランダム化された調製機能（frearerandomize）も使用します。"
    },
    {
      "indent": 3,
      "text": "RSABSSA-SHA384-PSSZERO-Randomized:",
      "ja": "rsabssa-sha384-psszero-randomized："
    },
    {
      "indent": 12,
      "text": "This named variant uses SHA-384 as the EMSA-PSS Hash option, MGF1 with SHA-384 as the EMSA-PSS MGF option, and 0 as the EMSA-PSS sLen option (0-byte salt length); it also uses the randomized preparation function (PrepareRandomize).",
      "ja": "この名前のバリアントは、SHA-384をEMSA-PSSハッシュオプションとして、MGF1を搭載したMGF1をEMSA-PSS MGFオプションとして使用し、EMSA-PSSスレンオプション（0バイト塩の長さ）として0を使用します。また、ランダム化された調製機能（frearerandomize）も使用します。"
    },
    {
      "indent": 3,
      "text": "RSABSSA-SHA384-PSS-Deterministic:",
      "ja": "rsabssa-sha384-pss-deterministic："
    },
    {
      "indent": 12,
      "text": "This named variant uses SHA-384 as the EMSA-PSS Hash option, MGF1 with SHA-384 as the EMSA-PSS MGF option, and 48 as the EMSA-PSS sLen option (48-byte salt length); it also uses the identity preparation function (PrepareIdentity).",
      "ja": "この名前のバリアントは、SHA-384をEMSA-PSSハッシュオプションとして、MGF1を搭載したEMSA-PSS MGFオプションとして、EMSA-PSSスレンオプション（48バイトの塩の長さ）として48を使用します。また、ID準備機能（prepareIdentity）も使用します。"
    },
    {
      "indent": 3,
      "text": "RSABSSA-SHA384-PSSZERO-Deterministic:",
      "ja": "rsabssa-sha384-psszero-deterministic："
    },
    {
      "indent": 12,
      "text": "This named variant uses SHA-384 as the EMSA-PSS Hash option, MGF1 with SHA-384 as the EMSA-PSS MGF option, and 0 as the EMSA-PSS sLen option (0-byte salt length); it also uses the identity preparation function (PrepareIdentity). This is the only variant that produces deterministic signatures over the client's input message msg.",
      "ja": "この名前のバリアントは、SHA-384をEMSA-PSSハッシュオプションとして、MGF1を搭載したMGF1をEMSA-PSS MGFオプションとして使用し、EMSA-PSSスレンオプション（0バイト塩の長さ）として0を使用します。また、ID準備機能（prepareIdentity）も使用します。これは、クライアントの入力メッセージMSGに対して決定論的な署名を生成する唯一のバリアントです。"
    },
    {
      "indent": 3,
      "text": "The RECOMMENDED variants are RSABSSA-SHA384-PSS-Randomized or RSABSSA-SHA384-PSSZERO-Randomized.",
      "ja": "推奨されるバリエーションは、RSABSSA-SHA384-PSS-RandomizedまたはRsabssa-Sha384-PSSZERO-Randomizedです。"
    },
    {
      "indent": 3,
      "text": "Not all named variants can be used interchangeably. In particular, applications that provide high-entropy input messages can safely use named variants without randomized message preparation, as the additional message randomization does not offer security advantages. See [Lys22] and Section 7.3 for more information. For all other applications, the variants that use the randomized preparation function protect clients from malicious signers. A verifier that accepts randomized messages needs to remove the random component from the signed part of messages before processing.",
      "ja": "すべての名前のバリアントを同じ意味で使用できるわけではありません。特に、追加のメッセージランダム化はセキュリティの利点を提供しないため、高エントロピー入力メッセージを提供するアプリケーションは、ランダム化されたメッセージ準備なしで名前付きバリアントを安全に使用できます。詳細については、[Lys22]およびセクション7.3を参照してください。他のすべてのアプリケーションについて、ランダム化された準備機能を使用するバリアントは、悪意のある署名者からクライアントを保護します。ランダム化されたメッセージを受け入れる検証剤は、処理前にメッセージの署名された部分からランダムコンポーネントを削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "Applications that require deterministic signatures can use the RSABSSA-SHA384-PSSZERO-Deterministic variant, but only if their input messages have high entropy. Applications that use RSABSSA-SHA384- PSSZERO-Deterministic SHOULD carefully analyze the security implications, taking into account the possibility of adversarially generated signer keys as described in Section 7.3. When it is not clear whether an application requires deterministic or randomized signatures, applications SHOULD use one of the variants with randomized message preparation.",
      "ja": "決定論的な署名を必要とするアプリケーションは、RSABSSA-SHA384-PSSZERO-DETERMINISTISISTバリアントを使用できますが、入力メッセージには高いエントロピーがある場合のみです。RSABSSA-SHA384-PSSZERO-DETERMINISTICを使用するアプリケーションは、セクション7.3で説明されているように、敵対的に生成された署名者キーの可能性を考慮して、セキュリティへの影響を慎重に分析する必要があります。アプリケーションが決定論的な署名またはランダム化された署名を必要とするかどうかが明らかでない場合、アプリケーションはランダム化されたメッセージ準備を備えたバリアントのいずれかを使用する必要があります。"
    },
    {
      "indent": 0,
      "text": "6. Implementation and Usage Considerations",
      "section_title": true,
      "ja": "6. 実装と使用に関する考慮事項"
    },
    {
      "indent": 3,
      "text": "This section documents considerations for interfaces to implementations of the protocol defined in this document. This includes error handling and API considerations.",
      "ja": "このセクションでは、このドキュメントで定義されているプロトコルの実装に関するインターフェイスの考慮事項を文書化します。これには、エラー処理とAPIの考慮事項が含まれます。"
    },
    {
      "indent": 0,
      "text": "6.1. Errors",
      "section_title": true,
      "ja": "6.1. エラー"
    },
    {
      "indent": 3,
      "text": "The high-level functions specified in Section 4 are all fallible. The explicit errors generated throughout this specification, along with the conditions that lead to each error, are listed in the definitions for Blind, BlindSign, and Finalize. These errors are meant as a guide for implementors. They are not an exhaustive list of all the errors an implementation might emit. For example, implementations might run out of memory.",
      "ja": "セクション4で指定されている高レベル関数はすべて誤りがちです。この仕様全体で生成された明示的なエラーは、各エラーにつながる条件とともに、ブラインド、ブラインドサイン、および最終決定の定義にリストされています。これらのエラーは、実装者向けのガイドとして意味があります。それらは、実装が発する可能性のあるすべてのエラーの網羅的なリストではありません。たとえば、実装はメモリが不足している可能性があります。"
    },
    {
      "indent": 3,
      "text": "Moreover, implementations can handle errors as needed or desired. Where applicable, this document provides guidance for how to deal with explicit errors that are generated in the protocol. For example, a \"blinding error\" error is generated in Blind when the client produces a prime factor of the server's public key. Section 4.2 indicates that implementations SHOULD retry the Blind function when this error occurs, but an implementation could also handle this exceptional event differently, e.g., by informing the server that the key has been factored.",
      "ja": "さらに、実装は、必要に応じてエラーを処理できます。該当する場合、このドキュメントは、プロトコルで生成される明示的なエラーに対処する方法に関するガイダンスを提供します。たとえば、クライアントがサーバーの公開キーの主要な要因を生成すると、ブラインドで「目隠しエラー」エラーが生成されます。セクション4.2は、このエラーが発生したときに実装がブラインド関数を再試行する必要があることを示していますが、実装はこの例外的なイベントを異なる方法で処理することもできます。"
    },
    {
      "indent": 0,
      "text": "6.2. Signing Key Generation and Usage",
      "section_title": true,
      "ja": "6.2. キー生成と使用法に署名します"
    },
    {
      "indent": 3,
      "text": "The RECOMMENDED method for generating the server signing key pair is as specified in FIPS 186-5 [DSS].",
      "ja": "サーバー署名キーペアを生成するための推奨される方法は、FIPS 186-5 [DSS]で指定されています。"
    },
    {
      "indent": 3,
      "text": "A server signing key MUST NOT be reused for any other protocol beyond RSABSSA. Moreover, a server signing key MUST NOT be reused for different RSABSSA encoding options. That is, if a server supports two different encoding options, then it MUST have a distinct key pair for each option.",
      "ja": "サーバー署名キーは、RSABSSAを超えた他のプロトコルに対して再利用してはなりません。さらに、サーバーの署名キーを、異なるRSABSSAエンコードオプションに再利用してはなりません。つまり、サーバーが2つの異なるエンコーディングオプションをサポートする場合、各オプションに対して明確なキーペアが必要です。"
    },
    {
      "indent": 3,
      "text": "If the server public key is carried in an X.509 certificate, it MUST use the id-RSASSA-PSS OID [RFC5756]. It MUST NOT use the rsaEncryption OID [RFC5280].",
      "ja": "サーバーの公開キーがX.509証明書で運ばれている場合、ID-RSassa-PSS OID [RFC5756]を使用する必要があります。rsaeCryption oid [rfc5280]を使用してはなりません。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "ja": "7. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Lysyanskaya proved one-more-forgery polynomial security of RSABSSA variants in the random oracle model under the one-more-RSA assumption; see [Lys22]. This means the adversary cannot output n+1 valid message and signature tuples, where all messages are distinct, after interacting with the server (signer) as a client only n times, for some n that is polynomial in the protocol's security parameter. Lysyanskaya also proved that the RSABSSA variants, which use the PrepareRandomize function, achieve blindness (see version B of the protocol and related proofs in [Lys22]). Blindness means that the malicious signer learns nothing about the client input and output after the protocol execution. However, additional assumptions on the message inputs are required for blindness to hold for RSABSSA variants that use the PrepareIdentity function; see Section 7.3 for more discussion on those results.",
      "ja": "Lysyanskayaは、1つのRSA仮定の下でランダムオラクルモデルにおけるRsaBSSAバリアントの1つの焦げた多項式セキュリティを証明しました。[Lys22]を参照してください。これは、敵がn 1有効なメッセージと署名のタプルを出力できないことを意味します。これは、すべてのメッセージが異なる場合、プロトコルのセキュリティパラメーターで多項式である一部のnについて、クライアントとしてサーバー（署名者）とn回しか相互作用しないことです。Lysyanskayaはまた、準備機能を使用するRsabssaバリアントが失明を達成することを証明しました（[Lys22]のプロトコルのバージョンBおよび関連証明を参照）。失明とは、悪意のある署名者がプロトコルの実行後にクライアントの入出力について何も学ばないことを意味します。ただし、PrepareIdentity関数を使用するRSABSSAバリアントに失明するには、メッセージ入力に関する追加の仮定が必要です。これらの結果の詳細については、セクション7.3を参照してください。"
    },
    {
      "indent": 0,
      "text": "7.1. Timing Side Channels and Fault Attacks",
      "section_title": true,
      "ja": "7.1. タイミングサイドチャネルと障害攻撃"
    },
    {
      "indent": 3,
      "text": "BlindSign is functionally a remote procedure call for applying the RSA private key operation. As such, side-channel resistance is paramount to protect the private key from exposure [RemoteTimingAttacks]. Implementations SHOULD implement some form of side-channel attack mitigation, such as RSA blinding as described in Section 10 of [TimingAttacks]. Failure to apply such mitigations can lead to side-channel attacks that leak the private signing key.",
      "ja": "ブラインドサインは、機能的にはRSA秘密キー操作を適用するためのリモート手順です。そのため、サイドチャネル抵抗は、露出[RemotetimingAttacks]から秘密鍵を保護するために最も重要です。実装は、[TimingAttacks]のセクション10で説明されているRSAブラインドなど、何らかの形式のサイドチャネル攻撃緩和を実装する必要があります。そのような緩和を適用しないと、プライベート署名キーを漏らすサイドチャネル攻撃につながる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Moreover, we assume that the server does not initiate the protocol and therefore has no knowledge of when the Prepare and Blind operations take place. If this were not the case, additional side-channel mitigations might be required to prevent timing side channels through Prepare and Blind.",
      "ja": "さらに、サーバーはプロトコルを開始しないため、準備および盲目の操作がいつ行われるかについての知識がないと想定しています。そうでない場合は、準備と盲目のタイミングサイドチャネルを防ぐために、追加のサイドチャネルの緩和が必要になる場合があります。"
    },
    {
      "indent": 3,
      "text": "Beyond timing side channels, [FAULTS] describes the importance of implementation safeguards that protect against fault attacks that can also leak the private signing key. These safeguards require that implementations check that the result of the private key operation when signing is correct, i.e., given s = RSASP1(sk, m), verify that m = RSAVP1(pk, s), as is required by BlindSign. Applying this (or an equivalent) safeguard is necessary to mitigate fault attacks, even for implementations that are not based on the Chinese remainder theorem.",
      "ja": "タイミングサイドチャネルを超えて、[障害]は、プライベート署名キーを漏らす可能性のある障害攻撃から保護する実装セーフガードの重要性を説明しています。これらのセーフガードでは、署名時の秘密鍵操作の結果が正しい場合、つまりs = rsasp1（sk、m）が与えられた場合、s = rsavp1（pk、s）が盲目的に必要であることを確認する必要があります。この（または同等の）セーフガードを適用することは、中国の残りの定理に基づいていない実装であっても、障害攻撃を軽減するために必要です。"
    },
    {
      "indent": 0,
      "text": "7.2. Message Robustness",
      "section_title": true,
      "ja": "7.2. メッセージの堅牢性"
    },
    {
      "indent": 3,
      "text": "An essential property of blind signature protocols is that the signer learns nothing of the message being signed. In some circumstances, this may raise concerns regarding arbitrary signing oracles. Applications using blind signature protocols should take precautions to ensure that such oracles do not cause cross-protocol attacks. Ensuring that the signing key used for RSABSSA is distinct from other protocols prevents such cross-protocol attacks.",
      "ja": "盲目の署名プロトコルの重要な特性は、署名者が署名されているメッセージについて何も学ばないことです。状況によっては、これはarbitrary意的な署名のオラクルに関する懸念を引き起こす可能性があります。盲目の署名プロトコルを使用したアプリケーションは、そのようなオラクルがクロスプロトコル攻撃を引き起こさないように注意を払う必要があります。RSABSSAに使用される署名キーが他のプロトコルとは異なることを確認すると、そのようなクロスプロトコル攻撃が防止されます。"
    },
    {
      "indent": 3,
      "text": "An alternative solution to this problem of message blindness is to give signers proof that the message being signed is well structured. Depending on the application, zero-knowledge proofs could be useful for this purpose. Defining such proofs is out of scope for this document.",
      "ja": "メッセージの失明のこの問題の代替解決策は、署名者が署名されているメッセージが十分に構成されていることを署名者に証明することです。アプリケーションに応じて、ゼロ知識の証明はこの目的に役立つ可能性があります。このような証明を定義することは、このドキュメントの範囲外です。"
    },
    {
      "indent": 3,
      "text": "Verifiers should check that, in addition to signature validity, the signed message is well structured for the relevant application. For example, if an application of this protocol requires messages to be structures of a particular form, then verifiers should check that messages adhere to this form.",
      "ja": "検証者は、署名の有効性に加えて、署名されたメッセージが関連するアプリケーション用に十分に構成されていることを確認する必要があります。たとえば、このプロトコルのアプリケーションでメッセージが特定のフォームの構造であることを要求する場合、Verifiersはそのメッセージがこのフォームに付着することを確認する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.3. Message Entropy",
      "section_title": true,
      "ja": "7.3. メッセージエントロピー"
    },
    {
      "indent": 3,
      "text": "As discussed in [Lys22], a malicious signer can construct an invalid public key and use it to learn information about low-entropy input messages. Note that some invalid public keys may not yield valid signatures when run with the protocol, e.g., because the signature fails to verify. However, if an attacker can coerce the client to use these invalid public keys with low-entropy inputs, they can learn information about the client inputs before the protocol completes.",
      "ja": "[Lys22]で説明したように、悪意のある署名者は無効な公開キーを構築し、それを使用して低エントロピーの入力メッセージに関する情報を学習できます。一部の無効なパブリックキーは、署名が検証に失敗しているため、プロトコルで実行されたときに有効な署名を生成できない場合があります。ただし、攻撃者がクライアントに、低エントロピー入力でこれらの無効なパブリックキーを使用するように強制できる場合、プロトコルが完了する前にクライアントの入力に関する情報を学ぶことができます。"
    },
    {
      "indent": 3,
      "text": "A client that uses this protocol might be vulnerable to attack from a malicious signer unless it is able to ensure that one of the following conditions is satisfied:",
      "ja": "このプロトコルを使用するクライアントは、次の条件のいずれかが満たされていることを確認できない限り、悪意のある署名者からの攻撃に対して脆弱である可能性があります。"
    },
    {
      "indent": 10,
      "text": "(1) The client has proof that the signer's public key is honestly generated. [GRSB19] presents some (non-interactive) honest-verifier zero-knowledge proofs of various statements about the public key.",
      "ja": "(1) クライアントは、署名者の公開鍵が正直に生成されていることを証明しています。[GRSB19]は、公開鍵に関するさまざまな声明の（非対話的）正直なゼロ知識の証明を提示します。"
    },
    {
      "indent": 10,
      "text": "(2) The input message has a value that the signer is unable to guess. That is, the client has added a high-entropy component that was not available to the signer prior to them choosing their signing key.",
      "ja": "(2) 入力メッセージには、署名者が推測できない値があります。つまり、クライアントは、署名キーを選択する前に署名者が利用できなかった高エントロピーコンポーネントを追加しました。"
    },
    {
      "indent": 3,
      "text": "The named variants that use the PrepareRandomize function -- RSABSSA-SHA384-PSS-Randomized and RSABSSA-SHA384-PSSZERO-Randomized -- explicitly inject fresh entropy alongside each message to satisfy condition (2). As such, these variants are safe for all application use cases. In contrast, the named variants that use the PrepareIdentity function do not inject fresh entropy and therefore could be a problem with low-entropy inputs.",
      "ja": "準備機能を使用する指名されたバリアント -  RSABSSA-SHA384-PSS-RANDOMIZEDおよびRSABSSA-SHA384-PSSZERO-RANDOMIZED-各メッセージと一緒に新鮮なエントロピーを明示的に注入して、条件（2）を満たします。そのため、これらのバリアントはすべてのアプリケーションユースケースに対して安全です。対照的に、prepareIdentity関数を使用する指名されたバリアントは、新鮮なエントロピーを注入せず、したがって、低エントロピー入力の問題になる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Note that these variants effectively mean that the resulting signature is always randomized. As such, this interface is not suitable for applications that require deterministic signatures.",
      "ja": "これらのバリアントは、結果の署名が常にランダム化されることを効果的に意味することに注意してください。そのため、このインターフェイスは、決定論的な署名を必要とするアプリケーションには適していません。"
    },
    {
      "indent": 0,
      "text": "7.4. Randomness Generation",
      "section_title": true,
      "ja": "7.4. ランダム性の生成"
    },
    {
      "indent": 3,
      "text": "All random values in the protocol, including the salt, message randomizer prefix (msg_prefix; see Appendix A), and random blind value in Blind, MUST be generated from a cryptographically secure random number generator [RFC4086]. If these values are not generated randomly or are otherwise constructed maliciously, it might be possible for them to encode information that is not present in the signed message. For example, the PSS salt might be maliciously constructed to encode the local IP address of the client. As a result, implementations SHOULD NOT allow clients to provide these values directly.",
      "ja": "塩、メッセージランダイザープレフィックス（MSG_PREFIX;付録Aを参照）、およびブラインドのランダムブラインド値を含むプロトコル内のすべてのランダム値は、暗号化された安全な乱数ジェネレーター[RFC4086]から生成する必要があります。これらの値がランダムに生成されないか、そうでなければ悪意を持って構築されている場合、署名されたメッセージに存在しない情報をエンコードすることが可能かもしれません。たとえば、PSS塩は、クライアントのローカルIPアドレスをエンコードするために悪意を持って構築される可能性があります。その結果、実装はクライアントがこれらの値を直接提供できるようにするべきではありません。"
    },
    {
      "indent": 3,
      "text": "Note that malicious implementations could also encode client information in the message being signed, but since clients can verify the resulting message signature using the public key, this can be detected.",
      "ja": "悪意のある実装は、署名されているメッセージ内のクライアント情報をエンコードすることもできますが、クライアントは公開キーを使用して結果のメッセージ署名を検証できるため、これを検出できます。"
    },
    {
      "indent": 0,
      "text": "7.5. Key Substitution Attacks",
      "section_title": true,
      "ja": "7.5. 主要な置換攻撃"
    },
    {
      "indent": 3,
      "text": "RSA is well known for permitting key substitution attacks, wherein an attacker generates a key pair (skA, pkA) that verifies some known (message, signature) pair produced under a different (sk, pk) key pair [WM99]. This means it may be possible for an attacker to use a (message, signature) pair from one context in another. Entities that verify signatures must take care to ensure that a (message, signature) pair verifies with a valid public key from the expected issuer.",
      "ja": "RSAは、攻撃者が異なる（SK、PK）キーペア[WM99]で生成されたいくつかの既知の（メッセージ、署名）ペアを検証するキーペア（SKA、PKA）を生成するキー代替攻撃を許可することでよく知られています。これは、攻撃者があるコンテキストから別のコンテキストから（メッセージ、署名）ペアを使用できる可能性があることを意味します。署名を確認するエンティティは、（メッセージ、署名）ペアが予想される発行者から有効な公開キーと検証するように注意する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.6. Alternative RSA Encoding Functions",
      "section_title": true,
      "ja": "7.6. 代替RSAエンコーディング関数"
    },
    {
      "indent": 3,
      "text": "This document uses PSS encoding as specified in [RFC8017] for a number of reasons. First, it is recommended in recent standards, including TLS 1.3 [RFC8446], X.509 [RFC4055], and even PKCS #1 itself. According to [RFC8017], \"Although no attacks are known against RSASSA-PKCS1-v1_5, in the interest of increased robustness, RSASSA-PSS is REQUIRED in new applications.\" While RSA-PSS is more complex than RSASSA-PKCS1-v1_5 encoding, ubiquity of RSA-PSS support influenced the design decision in this document, despite PKCS #1 v1.5 having equivalent security properties for digital signatures [JKM18].",
      "ja": "このドキュメントでは、いくつかの理由で[RFC8017]で指定されたPSSエンコードを使用しています。まず、TLS 1.3 [RFC8446]、X.509 [RFC4055]、さらにはPKCS＃1自体を含む最近の標準で推奨されます。[RFC8017]によれば、「RSASSA-PKCS1-V1_5に対する攻撃は知られていませんが、堅牢性の向上のために、新しいアプリケーションではRSassa-PSSが必要です。」RSA-PSSはRSASSA-PKCS1-V1_5エンコーディングよりも複雑ですが、PKCS＃1 V1.5がデジタル署名の同等のセキュリティプロパティを持っているにもかかわらず、RSA-PSSサポートのユビキチンはこのドキュメントの設計決定に影響を与えました[JKM18]。"
    },
    {
      "indent": 3,
      "text": "Full Domain Hash (FDH) encoding [RSA-FDH] is also possible. This variant provides security equivalent to that of PSS [KK18]. However, FDH is less standard and is not used widely in related technologies. Moreover, FDH is deterministic, whereas PSS supports deterministic and probabilistic encodings.",
      "ja": "[RSA-FDH]をエンコードする完全なドメインハッシュ（FDH）も可能です。このバリアントは、PSS [KK18]と同等のセキュリティを提供します。ただし、FDHは標準性が低く、関連する技術では広く使用されていません。さらに、FDHは決定論的ですが、PSSは決定論的および確率的エンコーディングをサポートしています。"
    },
    {
      "indent": 0,
      "text": "7.7. Post-Quantum Readiness",
      "section_title": true,
      "ja": "7.7. 質量の準備"
    },
    {
      "indent": 3,
      "text": "The blind signature protocol specified in this document is not post-quantum ready, since it is based on RSA. Shor's polynomial-time factorization algorithm readily applies.",
      "ja": "このドキュメントで指定されている盲目の署名プロトコルは、RSAに基づいているため、Quantum後の準備ができていません。Shorの多項式時間因数分解アルゴリズムが容易に適用されます。"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "ja": "8. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "This document has no IANA actions.",
      "ja": "このドキュメントにはIANAアクションがありません。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "ja": "9. 参考文献"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "ja": "9.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n           Requirement Levels\", BCP 14, RFC 2119,\n           DOI 10.17487/RFC2119, March 1997,\n           <https://www.rfc-editor.org/info/rfc2119>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5756]  Turner, S., Brown, D., Yiu, K., Housley, R., and T. Polk,\n           \"Updates for RSAES-OAEP and RSASSA-PSS Algorithm\n           Parameters\", RFC 5756, DOI 10.17487/RFC5756, January 2010,\n           <https://www.rfc-editor.org/info/rfc5756>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8017]  Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch,\n           \"PKCS #1: RSA Cryptography Specifications Version 2.2\",\n           RFC 8017, DOI 10.17487/RFC8017, November 2016,\n           <https://www.rfc-editor.org/info/rfc8017>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n           2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n           May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "ja": "9.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[ApplePrivateRelay]\n           \"iCloud Private Relay Overview\", December 2021,\n           <https://www.apple.com/icloud/docs/\n           iCloud_Private_Relay_Overview_Dec2021.pdf>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[Chaum83]  Chaum, D., \"Blind Signatures for Untraceable Payments\",\n           Springer-Verlag, 1998,\n           <https://sceweb.sce.uhcl.edu/yang/teaching/\n           csci5234WebSecurityFall2011/Chaum-blind-signatures.PDF>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[DSS]      \"Digital Signature Standard (DSS)\", National Institute of\n           Standards and Technology report,\n           DOI 10.6028/nist.fips.186-5, February 2023,\n           <https://doi.org/10.6028/NIST.FIPS.186-5>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[FAULTS]   Boneh, D., DeMillo, R. A., and R. J. Lipton, \"On the\n           Importance of Checking Cryptographic Protocols for\n           Faults\", Advances in Cryptology - EUROCRYPT '97, pp.\n           37-51, DOI 10.1007/3-540-69053-0_4, 1997,\n           <https://doi.org/10.1007/3-540-69053-0_4>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[GoogleVPN]\n           \"VPN by Google One, explained\",\n           <https://one.google.com/about/vpn/howitworks>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[GRSB19]   Goldberg, S., Reyzin, L., Sagga, O., and F. Baldimtsi,\n           \"Efficient Noninteractive Certification of RSA Moduli and\n           Beyond\", October 2019,\n           <https://eprint.iacr.org/2018/057.pdf>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[JKK14]    Jarecki, S., Kiayias, A., and H. Krawczyk, \"Round-Optimal\n           Password-Protected Secret Sharing and T-PAKE in the\n           Password-Only Model\", August 2014,\n           <https://eprint.iacr.org/2014/650>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[JKM18]    Jager, T., Kakvi, S. A., and A. May, \"On the Security of\n           the PKCS#1 v1.5 Signature Scheme\", Proceedings of the 2018\n           ACM SIGSAC Conference on Computer and Communications\n           Security, pp. 1195-1208, DOI 10.1145/3243734.3243798,\n           September 2018, <https://eprint.iacr.org/2018/855>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[KK18]     Kakvi, S. A. and E. Kiltz, \"Optimal Security Proofs for\n           Full Domain Hash, Revisited\", Journal of Cryptology, vol.\n           31, no. 1, pp. 276-306, DOI 10.1007/s00145-017-9257-9,\n           April 2017, <https://doi.org/10.1007/s00145-017-9257-9>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[Lys22]    Lysyanskaya, A., \"Security Analysis of RSA-BSSA\", March\n           2023, <https://eprint.iacr.org/2022/895>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[PrettyGoodPhonePrivacy]\n           Schmitt, P. and B. Raghavan, \"Pretty Good Phone Privacy\",\n           Proceedings of the 30th USENIX Security Symposium, August\n           2021, <https://www.usenix.org/conference/usenixsecurity21/\n           presentation/schmitt>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[PRIVACY-PASS]\n           Celi, S., Davidson, A., Valdez, S., and C. A. Wood,\n           \"Privacy Pass Issuance Protocol\", Work in Progress,\n           Internet-Draft, draft-ietf-privacypass-protocol-16, 3\n           October 2023, <https://datatracker.ietf.org/doc/html/\n           draft-ietf-privacypass-protocol-16>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RemoteTimingAttacks]\n           Brumley, D. and D. Boneh, \"Remote Timing Attacks are\n           Practical\", Proceedings of the 12th USENIX Security\n           Symposium, August 2003,\n           <https://www.usenix.org/legacy/events/sec03/tech/brumley/\n           brumley.pdf>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC4055]  Schaad, J., Kaliski, B., and R. Housley, \"Additional\n           Algorithms and Identifiers for RSA Cryptography for use in\n           the Internet X.509 Public Key Infrastructure Certificate\n           and Certificate Revocation List (CRL) Profile\", RFC 4055,\n           DOI 10.17487/RFC4055, June 2005,\n           <https://www.rfc-editor.org/info/rfc4055>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC4086]  Eastlake 3rd, D., Schiller, J., and S. Crocker,\n           \"Randomness Requirements for Security\", BCP 106, RFC 4086,\n           DOI 10.17487/RFC4086, June 2005,\n           <https://www.rfc-editor.org/info/rfc4086>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n           Housley, R., and W. Polk, \"Internet X.509 Public Key\n           Infrastructure Certificate and Certificate Revocation List\n           (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008,\n           <https://www.rfc-editor.org/info/rfc5280>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n           Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n           <https://www.rfc-editor.org/info/rfc8446>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RSA-FDH]  Bellare, M. and P. Rogaway, \"Random oracles are practical:\n           a paradigm for designing efficient protocols\", CCS '93:\n           Proceedings of the 1st ACM conference on Computer and\n           communications security, pp. 62-73,\n           DOI 10.1145/168588.168596, December 1993,\n           <https://dl.acm.org/doi/abs/10.1145/168588.168596>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[TimingAttacks]\n           Kocher, P. C., \"Timing Attacks on Implementations of\n           Diffie-Hellman, RSA, DSS, and Other Systems\", Advances in\n           Cryptology - CRYPTO '96, pp. 104-113,\n           DOI 10.1007/3-540-68697-5_9, 1996,\n           <https://doi.org/10.1007/3-540-68697-5_9>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[VOPRF]    Davidson, A., Faz-Hernandez, A., Sullivan, N., and C. A.\n           Wood, \"Oblivious Pseudorandom Functions (OPRFs) using\n           Prime-Order Groups\", Work in Progress, Internet-Draft,\n           draft-irtf-cfrg-voprf-21, 21 February 2023,\n           <https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-\n           voprf-21>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[WM99]     Blake-Wilson, S. and A. Menezes, \"Unknown Key-Share\n           Attacks on the Station-to-Station (STS) Protocol\",\n           International Workshop on Public Key Cryptography, PKC\n           1999, pp. 154-170, DOI 10.1007/3-540-49162-7_12, October\n           1999, <https://link.springer.com/\n           chapter/10.1007/3-540-49162-7_12>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix A. Test Vectors",
      "section_title": true,
      "ja": "付録A. テストベクトル"
    },
    {
      "indent": 3,
      "text": "This section includes test vectors for the blind signature protocol defined in Section 4. The following parameters are specified for each test vector:",
      "ja": "このセクションには、セクション4で定義された盲目の署名プロトコルのテストベクトルが含まれています。各テストベクトルについて、次のパラメーターが指定されています。"
    },
    {
      "indent": 3,
      "text": "p, q, n, e, d:",
      "ja": "P、Q、N、E、D："
    },
    {
      "indent": 12,
      "text": "RSA private and public key (sk and pk) parameters, each encoded as a hexadecimal string.",
      "ja": "RSAプライベートキーおよび公開キー（SKおよびPK）パラメーター。それぞれが16進文字列としてエンコードされています。"
    },
    {
      "indent": 3,
      "text": "msg:",
      "ja": "MSG："
    },
    {
      "indent": 12,
      "text": "Input message being signed, encoded as a hexadecimal string. The hash is computed using SHA-384.",
      "ja": "入力メッセージが署名され、16進文字列としてエンコードされています。ハッシュはSHA-384を使用して計算されます。"
    },
    {
      "indent": 3,
      "text": "msg_prefix:",
      "ja": "msg_prefix："
    },
    {
      "indent": 12,
      "text": "Message randomizer prefix, encoded as a hexadecimal string. This is only present for variants that use the randomization preparation function.",
      "ja": "メッセージランダイザーのプレフィックスは、16進列文字列としてエンコードされています。これは、ランダム化調製関数を使用するバリアントにのみ存在します。"
    },
    {
      "indent": 3,
      "text": "prepared_msg:",
      "ja": "pread_msg："
    },
    {
      "indent": 12,
      "text": "The message actually signed. If the variant does not use the randomization preparation function, this is equal to msg.",
      "ja": "メッセージが実際に署名しました。バリアントがランダム化準備機能を使用しない場合、これはMSGに等しくなります。"
    },
    {
      "indent": 3,
      "text": "salt:",
      "ja": "塩："
    },
    {
      "indent": 12,
      "text": "Randomly generated salt used when computing the signature. The length is either 48 or 0 bytes.",
      "ja": "署名を計算するときに使用されるランダムに生成された塩。長さは48バイトまたは0バイトです。"
    },
    {
      "indent": 3,
      "text": "encoded_msg:",
      "ja": "encoded_msg："
    },
    {
      "indent": 12,
      "text": "EMSA-PSS encoded message. The mask generation function is MGF1 with SHA-384.",
      "ja": "EMSA-PSSエンコードメッセージ。マスク生成関数は、SHA-384のMGF1です。"
    },
    {
      "indent": 3,
      "text": "inv:",
      "ja": "inv："
    },
    {
      "indent": 12,
      "text": "The message blinding inverse, encoded as a hexadecimal string.",
      "ja": "逆の逆のメッセージは、16進列としてエンコードされています。"
    },
    {
      "indent": 3,
      "text": "blinded_msg, blind_sig:",
      "ja": "blinded_msg、lind_sig："
    },
    {
      "indent": 12,
      "text": "The protocol values exchanged during the computation, encoded as hexadecimal strings.",
      "ja": "プロトコル値は、16進列としてエンコードされた計算中に交換されました。"
    },
    {
      "indent": 3,
      "text": "sig:",
      "ja": "SIG："
    },
    {
      "indent": 12,
      "text": "The output message signature.",
      "ja": "出力メッセージ署名。"
    },
    {
      "indent": 0,
      "text": "A.1. RSABSSA-SHA384-PSS-Randomized Test Vector",
      "section_title": true,
      "ja": "A.1. rsabssa-sha384-pss-randomizedテストベクトル"
    },
    {
      "indent": 3,
      "text": "p = e1f4d7a34802e27c7392a3cea32a262a34dc3691bd87f3f310dc756734889305\n59c120fd0410194fb8a0da55bd0b81227e843fdca6692ae80e5a5d414116d4803fca\n7d8c30eaaae57e44a1816ebb5c5b0606c536246c7f11985d731684150b63c9a3ad9e\n41b04c0b5b27cb188a692c84696b742a80d3cd00ab891f2457443dadfeba6d6daf10\n8602be26d7071803c67105a5426838e6889d77e8474b29244cefaf418e381b312048\nb457d73419213063c60ee7b0d81820165864fef93523c9635c22210956e53a8d9632\n2493ffc58d845368e2416e078e5bcb5d2fd68ae6acfa54f9627c42e84a9d3f277401\n7e32ebca06308a12ecc290c7cd1156dcccfb2311\nq = c601a9caea66dc3835827b539db9df6f6f5ae77244692780cd334a006ab353c8\n06426b60718c05245650821d39445d3ab591ed10a7339f15d83fe13f6a3dfb20b945\n2c6a9b42eaa62a68c970df3cadb2139f804ad8223d56108dfde30ba7d367e9b0a7a8\n0c4fdba2fd9dde6661fc73fc2947569d2029f2870fc02d8325acf28c9afa19ecf962\ndaa7916e21afad09eb62fe9f1cf91b77dc879b7974b490d3ebd2e95426057f35d0a3\nc9f45f79ac727ab81a519a8b9285932d9b2e5ccd347e59f3f32ad9ca359115e7da00\n8ab7406707bd0e8e185a5ed8758b5ba266e8828f8d863ae133846304a2936ad7bc7c\n9803879d2fc4a28e69291d73dbd799f8bc238385\nn = aec4d69addc70b990ea66a5e70603b6fee27aafebd08f2d94cbe1250c556e047\na928d635c3f45ee9b66d1bc628a03bac9b7c3f416fe20dabea8f3d7b4bbf7f963be3\n35d2328d67e6c13ee4a8f955e05a3283720d3e1f139c38e43e0338ad058a9495c533\n77fc35be64d208f89b4aa721bf7f7d3fef837be2a80e0f8adf0bcd1eec5bb040443a\n2b2792fdca522a7472aed74f31a1ebe1eebc1f408660a0543dfe2a850f106a617ec6\n685573702eaaa21a5640a5dcaf9b74e397fa3af18a2f1b7c03ba91a6336158de420d\n63188ee143866ee415735d155b7c2d854d795b7bc236cffd71542df34234221a0413\ne142d8c61355cc44d45bda94204974557ac2704cd8b593f035a5724b1adf442e78c5\n42cd4414fce6f1298182fb6d8e53cef1adfd2e90e1e4deec52999bdc6c29144e8d52\na125232c8c6d75c706ea3cc06841c7bda33568c63a6c03817f722b50fcf898237d78\n8a4400869e44d90a3020923dc646388abcc914315215fcd1bae11b1c751fd52443aa\nc8f601087d8d42737c18a3fa11ecd4131ecae017ae0a14acfc4ef85b83c19fed33cf\nd1cd629da2c4c09e222b398e18d822f77bb378dea3cb360b605e5aa58b20edc29d00\n0a66bd177c682a17e7eb12a63ef7c2e4183e0d898f3d6bf567ba8ae84f84f1d23bf8\nb8e261c3729e2fa6d07b832e07cddd1d14f55325c6f924267957121902dc19b3b329\n48bdead5\ne = 010001\nd = 0d43242aefe1fb2c13fbc66e20b678c4336d20b1808c558b6e62ad16a2870771\n80b177e1f01b12f9c6cd6c52630257ccef26a45135a990928773f3bd2fc01a313f1d\nac97a51cec71cb1fd7efc7adffdeb05f1fb04812c924ed7f4a8269925dad88bd7dcf\nbc4ef01020ebfc60cb3e04c54f981fdbd273e69a8a58b8ceb7c2d83fbcbd6f784d05\n2201b88a9848186f2a45c0d2826870733e6fd9aa46983e0a6e82e35ca20a439c5ee7\nb502a9062e1066493bdadf8b49eb30d9558ed85abc7afb29b3c9bc644199654a4676\n681af4babcea4e6f71fe4565c9c1b85d9985b84ec1abf1a820a9bbebee0df1398aae\n2c85ab580a9f13e7743afd3108eb32100b870648fa6bc17e8abac4d3c99246b1f0ea\n9f7f93a5dd5458c56d9f3f81ff2216b3c3680a13591673c43194d8e6fc93fc1e37ce\n2986bd628ac48088bc723d8fbe293861ca7a9f4a73e9fa63b1b6d0074f5dea2a624c\n5249ff3ad811b6255b299d6bc5451ba7477f19c5a0db690c3e6476398b1483d10314\nafd38bbaf6e2fbdbcd62c3ca9797a420ca6034ec0a83360a3ee2adf4b9d4ba29731d\n131b099a38d6a23cc463db754603211260e99d19affc902c915d7854554aabf608e3\nac52c19b8aa26ae042249b17b2d29669b5c859103ee53ef9bdc73ba3c6b537d5c34b\n6d8f034671d7f3a8a6966cc4543df223565343154140fd7391c7e7be03e241f4ecfe\nb877a051\nmsg = 8f3dc6fb8c4a02f4d6352edf0907822c1210a9b32f9bdda4c45a698c80023a\na6b59f8cfec5fdbb36331372ebefedae7d\nmsg_prefix = 8417e699b219d583fb6216ae0c53ca0e9723442d02f1d1a34295527\ne7d929e8b\nprepared_msg = 8417e699b219d583fb6216ae0c53ca0e9723442d02f1d1a342955\n27e7d929e8b8f3dc6fb8c4a02f4d6352edf0907822c1210a9b32f9bdda4c45a698c8\n0023aa6b59f8cfec5fdbb36331372ebefedae7d\nsalt = 051722b35f458781397c3a671a7d3bd3096503940e4c4f1aaa269d60300ce\n449555cd7340100df9d46944c5356825abf\nencoded_msg = 2be01c5669eb676cb3f0002eb636427d61568f3f0579da5b998279\na7eb3ab784e5617319376d04809d83e72bef9f0738e7324af3fd1b4f0a35f4f58058\nab329495406bdb5ff31a0274be2d137c735ab0d5a591b3129a6cc46fcecc4b41dbc6\n84c965cb30e3eb4864ef18cc8d95b4d6a2002607c821d4d8a7e026ae7bb1f6b4c7c9\n3d1b58e9cd87864d6094b0d8f7e2b5f966473703634fb58c774dd4a24376e0eb262a\n24b58e3a0b4da4f36ef75651627561ff2ecee9dcbfe1d728cc31a7b46030f7a2815a\ne9edf9a2a5c0c6d8dbab1b33b9c3bbda5c083670a3550f7d74c4263aad09f8ed1d43\n5fc6295ca4d51fc02c7de9ae28ffd53372c3fa864521b27560daa11ab9daad8d0d74\n7661718d2f79c59d0661b09c74863fa32bdcb1c408d3bd24569c57aecae6e06c0c9d\neb7303c5b7b1240960fd2413d61b2e3829af8c09874fdba0fe84ca6aa7e7d533f9b0\nddfe508f562b132ca2d325f1e73f91a8a6b831a2fd9bc0bd5bfa5ea3a1dee16bd9b2\n64174b9553a4c0c0d62373353355c05b35824e4bae702f49e5a6bf83eaff65af4990\n45bcef1470a0e58ddb21856034af0db96f8636d4a6f1591f34c7224e0c0293e3d3be\n2139f2797c5ed8b65473ac2f83c52b87f8cf8754ac2f55f5e41e105df1d079a647fb\n1aa591526295667f37db1129752d024eb03bfe506a43665072118423351ef9b86633\n76f9fc073141e1e7bc\ninv = 80682c48982407b489d53d1261b19ec8627d02b8cda5336750b8cee332ae26\n0de57b02d72609c1e0e9f28e2040fc65b6f02d56dbd6aa9af8fde656f70495dfb723\nba01173d4707a12fddac628ca29f3e32340bd8f7ddb557cf819f6b01e445ad96f874\nba235584ee71f6581f62d4f43bf03f910f6510deb85e8ef06c7f09d9794a008be7ff\n2529f0ebb69decef646387dc767b74939265fec0223aa6d84d2a8a1cc912d5ca25b4\ne144ab8f6ba054b54910176d5737a2cff011da431bd5f2a0d2d66b9e70b39f4b050e\n45c0d9c16f02deda9ddf2d00f3e4b01037d7029cd49c2d46a8e1fc2c0c17520af1f4\nb5e25ba396afc4cd60c494a4c426448b35b49635b337cfb08e7c22a39b256dd032c0\n0adddafb51a627f99a0e1704170ac1f1912e49d9db10ec04c19c58f420212973e0cb\n329524223a6aa56c7937c5dffdb5d966b6cd4cbc26f3201dd25c80960a1a111b3294\n7bb78973d269fac7f5186530930ed19f68507540eed9e1bab8b00f00d8ca09b3f099\naae46180e04e3584bd7ca054df18a1504b89d1d1675d0966c4ae1407be325cdf623c\nf13ff13e4a28b594d59e3eadbadf6136eee7a59d6a444c9eb4e2198e8a974f27a39e\nb63af2c9af3870488b8adaad444674f512133ad80b9220e09158521614f1faadfe85\n05ef57b7df6813048603f0dd04f4280177a11380fbfc861dbcbd7418d62155248dad\n5fdec0991f\nblinded_msg = aa3ee045138d874669685ffaef962c7694a9450aa9b4fd6465db9b\n3b75a522bb921c4c0fdcdfae9667593255099cff51f5d3fd65e8ffb9d3b3036252a6\nb51b6edfb3f40382b2bbf34c0055e4cbcc422850e586d84f190cd449af11dc65545f\n5fe26fd89796eb87da4bda0c545f397cddfeeb56f06e28135ec74fd477949e7677f6\nf36cfae8fd5c1c5898b03b9c244cf6d1a4fb7ad1cb43aff5e80cb462fac541e72f67\nf0a50f1843d1759edfaae92d1a916d3f0efaf4d650db416c3bf8abdb5414a78cebc9\n7de676723cb119e77aea489f2bbf530c440ebc5a75dccd3ebf5a412a5f346badd61b\nee588e5917bdcce9dc33c882e39826951b0b8276c6203971947072b726e935816056\nff5cb11a71ca2946478584126bb877acdf87255f26e6cca4e0878801307485d3b7bb\n89b289551a8b65a7a6b93db010423d1406e149c87731910306e5e410b41d4da32346\n24e74f92845183e323cf7eb244f212a695f8856c675fbc3a021ce649e22c6f0d053a\n9d238841cf3afdc2739f99672a419ae13c17f1f8a3bc302ec2e7b98e8c353898b715\n0ad8877ec841ea6e4b288064c254fefd0d049c3ad196bf7ffa535e74585d0120ce72\n8036ed500942fbd5e6332c298f1ffebe9ff60c1e117b274cf0cb9d70c36ee4891528\n996ec1ed0b178e9f3c0c0e6120885f39e8ccaadbb20f3196378c07b1ff22d10049d3\n039a7a92fe7efdd95d\nblind_sig = 3f4a79eacd4445fca628a310d41e12fcd813c4d43aa4ef2b81226953\n248d6d00adfee6b79cb88bfa1f99270369fd063c023e5ed546719b0b2d143dd1bca4\n6b0e0e615fe5c63d95c5a6b873b8b50bc52487354e69c3dfbf416e7aca18d5842c89\nb676efdd38087008fa5a810161fcdec26f20ccf2f1e6ab0f9d2bb93e051cb9e86a9b\n28c5bb62fd5f5391379f887c0f706a08bcc3b9e7506aaf02485d688198f5e22eefdf\n837b2dd919320b17482c5cc54271b4ccb41d267629b3f844fd63750b01f5276c79e3\n3718bb561a152acb2eb36d8be75bce05c9d1b94eb609106f38226fb2e0f5cd5c5c39\nc59dda166862de498b8d92f6bcb41af433d65a2ac23da87f39764cb64e79e74a8f4c\ne4dd567480d967cefac46b6e9c06434c3715635834357edd2ce6f105eea854ac126c\ncfa3de2aac5607565a4e5efaac5eed491c335f6fc97e6eb7e9cea3e12de38dfb3152\n20c0a3f84536abb2fdd722813e083feda010391ac3d8fd1cd9212b5d94e634e69ebc\nc800c4d5c4c1091c64afc37acf563c7fc0a6e4c082bc55544f50a7971f3fb97d5853\nd72c3af34ffd5ce123998be5360d1059820c66a81e1ee6d9c1803b5b62af6bc87752\n6df255b6d1d835d8c840bebbcd6cc0ee910f17da37caf8488afbc08397a1941fcc79\ne76a5888a95b3d5405e13f737bea5c78d716a48eb9dc0aec8de39c4b45c6914ad4a8\n185969f70b1adf46\nsig = 191e941c57510e22d29afad257de5ca436d2316221fe870c7cb75205a6c071\nc2735aed0bc24c37f3d5bd960ab97a829a508f966bbaed7a82645e65eadaf24ab5e6\nd9421392c5b15b7f9b640d34fec512846a3100b80f75ef51064602118c1a77d28d93\n8f6efc22041d60159a518d3de7c4d840c9c68109672d743d299d8d2577ef60c19ab4\n63c716b3fa75fa56f5735349d414a44df12bf0dd44aa3e10822a651ed4cb0eb6f47c\n9bd0ef14a034a7ac2451e30434d513eb22e68b7587a8de9b4e63a059d05c8b22c7c5\n1e2cfee2d8bef511412e93c859a13726d87c57d1bc4c2e68ab121562f839c3a3d233\ne87ed63c69b7e57525367753fbebcc2a9805a2802659f5888b2c69115bf865559f10\nd906c09d048a0d71bfee4b33857393ec2b69e451433496d02c9a7910abb954317720\nbbde9e69108eafc3e90bad3d5ca4066d7b1e49013fa04e948104a1dd82b12509ecb1\n46e948c54bd8bfb5e6d18127cd1f7a93c3cf9f2d869d5a78878c03fe808a0d799e91\n0be6f26d18db61c485b303631d3568368fc41986d08a95ea6ac0592240c19d7b2241\n6b9c82ae6241e211dd5610d0baaa9823158f9c32b66318f5529491b7eeadcaa71898\na63bac9d95f4aa548d5e97568d744fc429104e32edd9c87519892a198a30d333d427\n739ffb9607b092e910ae37771abf2adb9f63bc058bf58062ad456cb934679795bbdf\ncdfad5e0f2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2. RSABSSA-SHA384-PSSZERO-Randomized Test Vector",
      "section_title": true,
      "ja": "A.2. rsabssa-sha384-psszero-randomizedテストベクトル"
    },
    {
      "indent": 3,
      "text": "p = e1f4d7a34802e27c7392a3cea32a262a34dc3691bd87f3f310dc756734889305\n59c120fd0410194fb8a0da55bd0b81227e843fdca6692ae80e5a5d414116d4803fca\n7d8c30eaaae57e44a1816ebb5c5b0606c536246c7f11985d731684150b63c9a3ad9e\n41b04c0b5b27cb188a692c84696b742a80d3cd00ab891f2457443dadfeba6d6daf10\n8602be26d7071803c67105a5426838e6889d77e8474b29244cefaf418e381b312048\nb457d73419213063c60ee7b0d81820165864fef93523c9635c22210956e53a8d9632\n2493ffc58d845368e2416e078e5bcb5d2fd68ae6acfa54f9627c42e84a9d3f277401\n7e32ebca06308a12ecc290c7cd1156dcccfb2311\nq = c601a9caea66dc3835827b539db9df6f6f5ae77244692780cd334a006ab353c8\n06426b60718c05245650821d39445d3ab591ed10a7339f15d83fe13f6a3dfb20b945\n2c6a9b42eaa62a68c970df3cadb2139f804ad8223d56108dfde30ba7d367e9b0a7a8\n0c4fdba2fd9dde6661fc73fc2947569d2029f2870fc02d8325acf28c9afa19ecf962\ndaa7916e21afad09eb62fe9f1cf91b77dc879b7974b490d3ebd2e95426057f35d0a3\nc9f45f79ac727ab81a519a8b9285932d9b2e5ccd347e59f3f32ad9ca359115e7da00\n8ab7406707bd0e8e185a5ed8758b5ba266e8828f8d863ae133846304a2936ad7bc7c\n9803879d2fc4a28e69291d73dbd799f8bc238385\nn = aec4d69addc70b990ea66a5e70603b6fee27aafebd08f2d94cbe1250c556e047\na928d635c3f45ee9b66d1bc628a03bac9b7c3f416fe20dabea8f3d7b4bbf7f963be3\n35d2328d67e6c13ee4a8f955e05a3283720d3e1f139c38e43e0338ad058a9495c533\n77fc35be64d208f89b4aa721bf7f7d3fef837be2a80e0f8adf0bcd1eec5bb040443a\n2b2792fdca522a7472aed74f31a1ebe1eebc1f408660a0543dfe2a850f106a617ec6\n685573702eaaa21a5640a5dcaf9b74e397fa3af18a2f1b7c03ba91a6336158de420d\n63188ee143866ee415735d155b7c2d854d795b7bc236cffd71542df34234221a0413\ne142d8c61355cc44d45bda94204974557ac2704cd8b593f035a5724b1adf442e78c5\n42cd4414fce6f1298182fb6d8e53cef1adfd2e90e1e4deec52999bdc6c29144e8d52\na125232c8c6d75c706ea3cc06841c7bda33568c63a6c03817f722b50fcf898237d78\n8a4400869e44d90a3020923dc646388abcc914315215fcd1bae11b1c751fd52443aa\nc8f601087d8d42737c18a3fa11ecd4131ecae017ae0a14acfc4ef85b83c19fed33cf\nd1cd629da2c4c09e222b398e18d822f77bb378dea3cb360b605e5aa58b20edc29d00\n0a66bd177c682a17e7eb12a63ef7c2e4183e0d898f3d6bf567ba8ae84f84f1d23bf8\nb8e261c3729e2fa6d07b832e07cddd1d14f55325c6f924267957121902dc19b3b329\n48bdead5\ne = 010001\nd = 0d43242aefe1fb2c13fbc66e20b678c4336d20b1808c558b6e62ad16a2870771\n80b177e1f01b12f9c6cd6c52630257ccef26a45135a990928773f3bd2fc01a313f1d\nac97a51cec71cb1fd7efc7adffdeb05f1fb04812c924ed7f4a8269925dad88bd7dcf\nbc4ef01020ebfc60cb3e04c54f981fdbd273e69a8a58b8ceb7c2d83fbcbd6f784d05\n2201b88a9848186f2a45c0d2826870733e6fd9aa46983e0a6e82e35ca20a439c5ee7\nb502a9062e1066493bdadf8b49eb30d9558ed85abc7afb29b3c9bc644199654a4676\n681af4babcea4e6f71fe4565c9c1b85d9985b84ec1abf1a820a9bbebee0df1398aae\n2c85ab580a9f13e7743afd3108eb32100b870648fa6bc17e8abac4d3c99246b1f0ea\n9f7f93a5dd5458c56d9f3f81ff2216b3c3680a13591673c43194d8e6fc93fc1e37ce\n2986bd628ac48088bc723d8fbe293861ca7a9f4a73e9fa63b1b6d0074f5dea2a624c\n5249ff3ad811b6255b299d6bc5451ba7477f19c5a0db690c3e6476398b1483d10314\nafd38bbaf6e2fbdbcd62c3ca9797a420ca6034ec0a83360a3ee2adf4b9d4ba29731d\n131b099a38d6a23cc463db754603211260e99d19affc902c915d7854554aabf608e3\nac52c19b8aa26ae042249b17b2d29669b5c859103ee53ef9bdc73ba3c6b537d5c34b\n6d8f034671d7f3a8a6966cc4543df223565343154140fd7391c7e7be03e241f4ecfe\nb877a051\nmsg = 8f3dc6fb8c4a02f4d6352edf0907822c1210a9b32f9bdda4c45a698c80023a\na6b59f8cfec5fdbb36331372ebefedae7d\nmsg_prefix = 84ea86c8cf3beedfed73beceabd792027c609d1100bf041fdd60d82\n6a718130d\nprepared_msg = 84ea86c8cf3beedfed73beceabd792027c609d1100bf041fdd60d\n826a718130d8f3dc6fb8c4a02f4d6352edf0907822c1210a9b32f9bdda4c45a698c8\n0023aa6b59f8cfec5fdbb36331372ebefedae7d\nsalt =\nencoded_msg = 37f4ea66054b3570f2c46f43125a8df8d751a81db1003edcc70e98\n88cb3d0fa71bb7634437a779c1bf9e84e88b3479894490ee41cd69fc8e911478326f\ne8460d1699f96abedde22ba0ba25a02f78bae77eb039decd41e6cd40fecc28f301c9\n4d5644eb3e55b316569e2bec3ccf8e33b06eb6defca5fe672613d33ea60f84daa560\nded4c1c5e65613fb19e090d0fc96a1394e29dfad6a7644362bf30bdc90c7ca0a0651\n90f5a099b5c33ae787b872518a724d9aa139229656eb21053bbe86c38f6d03b4c6fa\n37a900935d9b8d19e0c394be4af6af028680996e3fd533b6698ce9e2ed6a9f96d4d3\na682027ae5240040e55d75017dc303b7142c1f7e17b79778a94431398d21dc0cc7ae\n454cc0d6cf4db4d588d3fd15fd7f71576052fd2a52d688f99790dfb13808ecb24b6b\n9e9a43a8c0105670ec3ad8d6318a9c6a9cef9eb99b36d74b8e83dbacf6e8100e135b\n609850b34a4b01091b263678d7cd9905af2ffda801a2888d863a25211903b43cb5e5\n9f5dba6bc18713ce4f028f1774c593664912f1d181d4544a13a1da354332d8595f59\ncf5af260a8aaf21a6bc948b5d5d4a520c1f72c216259dc12a33c2a3bd4d32ff2bf3d\ne2ffe76e51f8af030b40fadc5899e740da20be1dd5a50f701292ceaee51fa35d9a04\n7f3efc6543dc583fb3f23abeade39c2a5b5b352de26d7a11267435be7bffa8f2292e\n139fad923dbaf863bc\ninv = 80682c48982407b489d53d1261b19ec8627d02b8cda5336750b8cee332ae26\n0de57b02d72609c1e0e9f28e2040fc65b6f02d56dbd6aa9af8fde656f70495dfb723\nba01173d4707a12fddac628ca29f3e32340bd8f7ddb557cf819f6b01e445ad96f874\nba235584ee71f6581f62d4f43bf03f910f6510deb85e8ef06c7f09d9794a008be7ff\n2529f0ebb69decef646387dc767b74939265fec0223aa6d84d2a8a1cc912d5ca25b4\ne144ab8f6ba054b54910176d5737a2cff011da431bd5f2a0d2d66b9e70b39f4b050e\n45c0d9c16f02deda9ddf2d00f3e4b01037d7029cd49c2d46a8e1fc2c0c17520af1f4\nb5e25ba396afc4cd60c494a4c426448b35b49635b337cfb08e7c22a39b256dd032c0\n0adddafb51a627f99a0e1704170ac1f1912e49d9db10ec04c19c58f420212973e0cb\n329524223a6aa56c7937c5dffdb5d966b6cd4cbc26f3201dd25c80960a1a111b3294\n7bb78973d269fac7f5186530930ed19f68507540eed9e1bab8b00f00d8ca09b3f099\naae46180e04e3584bd7ca054df18a1504b89d1d1675d0966c4ae1407be325cdf623c\nf13ff13e4a28b594d59e3eadbadf6136eee7a59d6a444c9eb4e2198e8a974f27a39e\nb63af2c9af3870488b8adaad444674f512133ad80b9220e09158521614f1faadfe85\n05ef57b7df6813048603f0dd04f4280177a11380fbfc861dbcbd7418d62155248dad\n5fdec0991f\nblinded_msg = 4c1b82d9b97b968b2ce0754e326abd49e3d723ed937d84bead34b6\na834483b43d510bf62ca47683ed366d94d3d357b270a85cf2cc2ddd171141b45d754\n9d5373cf67d14f6f462c14ebded906793144faba37f129c0f3172854ec0f854e5555\n52eec5a30c87788f1039814594f04348709e26a883be82affff207b1886b75c037f4\n3f847f45d89bcbf210c22ffcdf8118ce8a526b3723e6209c26319f8f5d2adcf0b637\n031c9fdf53470a915c587e30287ba88ed4f1cd5e93cf3d4990acf31fffdbfddec80a\ne0b728d5b4c612a396fd81acaa65566a4dc1c24624f44fd10cdba05f3d0bed2e69bb\n0d13d41a9f1b4e67aa566520778733ced5e6260f4d1982f63bb835442acffe3cb87f\n5f8ec6bb84226e0eab787159d08e57604b13557ceea97f2c4ad0631accf898f302df\n86f0b64354ec0b3bdf1b4e2a4deb4d38f655ea8d80de4cc19aa06ffcd56e348faf89\n4c8774c53235ddcc152d80cf66b417eee4d182781bab8c979937a3c7502d8f39c57c\n4f09884de5a7247f2539910a96e4b15f9a3df88edc21a13030af357467a99dca50db\na4afe4a6185a240ac8f1d8aab2e83443025f94e1af930f56f78661369cc6790701f3\n1b83aec40f96a72c7f7ba13b4ebdd8e24e7351f4ffba0a7c072cb28f13aff06cd023\n68491044fcc536213b2e3b1cf6ca81cf2097b7b19d2b36bd246f390f53768f1c2e56\n113ea91b33c7cfa647\nblind_sig = 4894f64d7214c216282d9842cbf7e7cccd9c0dcb1f4294a6bdeccd4c\n4c2446160d7cac7892f01b70dfa69f533891d2fbb447f7cf7541d1b504a2d46fc1bb\n6de26b345972aada8ebce280b906f3a10a13208f77ef896fbe6bc4504327fd4c5c8f\n03211d45ae9672e9f4be0f4900762ba2a7177a58b90d6dd1263faf2b7a5f15d50a7b\n00e733742c1b6a1ea4eb5fbfb407abf14496ab26b50cf1a5a56dea616b7a6a559577\n7400571a751c682b9fdd6badb3f72292f314f4ba2ba0f394f91676a4bb12e60ea08c\n977f7082be6357c1ca82fe3301fe5fb4128609bee2410db0481aea3a5737fb0bce93\n81272c2202644f662e99f64bf1190d66e230cc0371ec33fe32fe725dfd872041914d\n39462a909414a780c9aab394af443199eba56c83986d22d57d4421b41ff8e5bec537\nd271223adb34d26c64989048a88d8f352a06a7cc153e216a6bed9548bb38d2a1600b\n2f3403289df6df74aec525ef9e413b7140a7c1a914dedd74a336f1beed39a8e5e2ce\nf76cac094df0dbb3fa55d4b7ee781c74bed3bd8bc7aa6ef3f1dbfa4674945720ec93\ndafa6d0650229ab75e3fae687327fac081cf4bb376e02a2b73314c54c12f88572c28\n980f13aba5731bc5a3a60575ea116c8ea2fe5009168deb1255026c9310783ff7f644\n255d3e1691e194db1babd7780b9a5dc0cb3de2b700d12f49cbe4db51ca2f3c8a58b0\n9e854cc71e8070ab\nsig = 195363ba25e4bf763f6538c86865785f93f4ea6092da3ad200d41b99eb0eb0\n869fa792df619fd8fa5923d5d03d5882faae6d25054118deef5e4a6a252dd5afb0da\nc262b74c391090b1575fbafd959d26bc294f47fb45a2c1c209932c4f94b24394eded\n91fbdd015e1a85dde63c9e77a0283f812cad1192d86432c51331e46fd4f3771bbafb\n929f847a19cb05e5f79b6b519d67e8f005951e53656be97cb612d2f506618b366403\nb34648451d6fbc7318c2f3f583cc6fa17bf2108398f9284e0602187904406a9322f1\ne7b8016ca9ad11b835756df862c465c420535e25faa48bf341f7ee8192be47fa8757\n91f32f56d5e631d237060688f052426dee5b0b2b74ca5f830e82a453379eedb541fa\n4fcdaa19dae6509401e3cdd4c40f5c9243db3f6d7115c4e8cd6db8290723ab01d9d0\nd7e355a97a01547800e43f11736668c3f8908848d759c33a67a2f506abc3f6871cbe\n625b1bc71eb06d785a59501396712c581a60d6ccc450d2f4eb4cf08ae0dbfa45c286\n0425be90cc4cd4c989495bbd2963e19c59ae5d90d1ca884e80d654b5f2cd6a80c358\n8b514ee91c802736f594c340397b316a97e9c70b0609955b6c3ee06f4760d9377f07\n97a0411a244db395bb8b711ef79fbcb5589226174029be79a72dcd6f4ca566b7b1b9\na27e43b5c02a9a579d60bdda183398d66d76e0e8eceb1af2f27633589d043bcdc041\n683b31f7f1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3. RSABSSA-SHA384-PSS-Deterministic Test Vector",
      "section_title": true,
      "ja": "A.3. RSABSSA-SHA384-PSS-DETERMINISTISTテストベクター"
    },
    {
      "indent": 3,
      "text": "p = e1f4d7a34802e27c7392a3cea32a262a34dc3691bd87f3f310dc756734889305\n59c120fd0410194fb8a0da55bd0b81227e843fdca6692ae80e5a5d414116d4803fca\n7d8c30eaaae57e44a1816ebb5c5b0606c536246c7f11985d731684150b63c9a3ad9e\n41b04c0b5b27cb188a692c84696b742a80d3cd00ab891f2457443dadfeba6d6daf10\n8602be26d7071803c67105a5426838e6889d77e8474b29244cefaf418e381b312048\nb457d73419213063c60ee7b0d81820165864fef93523c9635c22210956e53a8d9632\n2493ffc58d845368e2416e078e5bcb5d2fd68ae6acfa54f9627c42e84a9d3f277401\n7e32ebca06308a12ecc290c7cd1156dcccfb2311\nq = c601a9caea66dc3835827b539db9df6f6f5ae77244692780cd334a006ab353c8\n06426b60718c05245650821d39445d3ab591ed10a7339f15d83fe13f6a3dfb20b945\n2c6a9b42eaa62a68c970df3cadb2139f804ad8223d56108dfde30ba7d367e9b0a7a8\n0c4fdba2fd9dde6661fc73fc2947569d2029f2870fc02d8325acf28c9afa19ecf962\ndaa7916e21afad09eb62fe9f1cf91b77dc879b7974b490d3ebd2e95426057f35d0a3\nc9f45f79ac727ab81a519a8b9285932d9b2e5ccd347e59f3f32ad9ca359115e7da00\n8ab7406707bd0e8e185a5ed8758b5ba266e8828f8d863ae133846304a2936ad7bc7c\n9803879d2fc4a28e69291d73dbd799f8bc238385\nn = aec4d69addc70b990ea66a5e70603b6fee27aafebd08f2d94cbe1250c556e047\na928d635c3f45ee9b66d1bc628a03bac9b7c3f416fe20dabea8f3d7b4bbf7f963be3\n35d2328d67e6c13ee4a8f955e05a3283720d3e1f139c38e43e0338ad058a9495c533\n77fc35be64d208f89b4aa721bf7f7d3fef837be2a80e0f8adf0bcd1eec5bb040443a\n2b2792fdca522a7472aed74f31a1ebe1eebc1f408660a0543dfe2a850f106a617ec6\n685573702eaaa21a5640a5dcaf9b74e397fa3af18a2f1b7c03ba91a6336158de420d\n63188ee143866ee415735d155b7c2d854d795b7bc236cffd71542df34234221a0413\ne142d8c61355cc44d45bda94204974557ac2704cd8b593f035a5724b1adf442e78c5\n42cd4414fce6f1298182fb6d8e53cef1adfd2e90e1e4deec52999bdc6c29144e8d52\na125232c8c6d75c706ea3cc06841c7bda33568c63a6c03817f722b50fcf898237d78\n8a4400869e44d90a3020923dc646388abcc914315215fcd1bae11b1c751fd52443aa\nc8f601087d8d42737c18a3fa11ecd4131ecae017ae0a14acfc4ef85b83c19fed33cf\nd1cd629da2c4c09e222b398e18d822f77bb378dea3cb360b605e5aa58b20edc29d00\n0a66bd177c682a17e7eb12a63ef7c2e4183e0d898f3d6bf567ba8ae84f84f1d23bf8\nb8e261c3729e2fa6d07b832e07cddd1d14f55325c6f924267957121902dc19b3b329\n48bdead5\ne = 010001\nd = 0d43242aefe1fb2c13fbc66e20b678c4336d20b1808c558b6e62ad16a2870771\n80b177e1f01b12f9c6cd6c52630257ccef26a45135a990928773f3bd2fc01a313f1d\nac97a51cec71cb1fd7efc7adffdeb05f1fb04812c924ed7f4a8269925dad88bd7dcf\nbc4ef01020ebfc60cb3e04c54f981fdbd273e69a8a58b8ceb7c2d83fbcbd6f784d05\n2201b88a9848186f2a45c0d2826870733e6fd9aa46983e0a6e82e35ca20a439c5ee7\nb502a9062e1066493bdadf8b49eb30d9558ed85abc7afb29b3c9bc644199654a4676\n681af4babcea4e6f71fe4565c9c1b85d9985b84ec1abf1a820a9bbebee0df1398aae\n2c85ab580a9f13e7743afd3108eb32100b870648fa6bc17e8abac4d3c99246b1f0ea\n9f7f93a5dd5458c56d9f3f81ff2216b3c3680a13591673c43194d8e6fc93fc1e37ce\n2986bd628ac48088bc723d8fbe293861ca7a9f4a73e9fa63b1b6d0074f5dea2a624c\n5249ff3ad811b6255b299d6bc5451ba7477f19c5a0db690c3e6476398b1483d10314\nafd38bbaf6e2fbdbcd62c3ca9797a420ca6034ec0a83360a3ee2adf4b9d4ba29731d\n131b099a38d6a23cc463db754603211260e99d19affc902c915d7854554aabf608e3\nac52c19b8aa26ae042249b17b2d29669b5c859103ee53ef9bdc73ba3c6b537d5c34b\n6d8f034671d7f3a8a6966cc4543df223565343154140fd7391c7e7be03e241f4ecfe\nb877a051\nmsg = 8f3dc6fb8c4a02f4d6352edf0907822c1210a9b32f9bdda4c45a698c80023a\na6b59f8cfec5fdbb36331372ebefedae7d\nmsg_prefix =\nprepared_msg = 8f3dc6fb8c4a02f4d6352edf0907822c1210a9b32f9bdda4c45a6\n98c80023aa6b59f8cfec5fdbb36331372ebefedae7d\nsalt = 051722b35f458781397c3a671a7d3bd3096503940e4c4f1aaa269d60300ce\n449555cd7340100df9d46944c5356825abf\nencoded_msg = 6e0c464d9c2f9fbc147b43570fc4f238e0d0b38870b3addcf7a421\n7df912ccef17a7f629aa850f63a063925f312d61d6437be954b45025e8282f9c0b11\n31bc8ff19a8a928d859b37113db1064f92a27f64761c181c1e1f9b251ae5a2f8a404\n7573b67a270584e089beadcb13e7c82337797119712e9b849ff56e04385d144d3ca9\nd8d92bf78adb20b5bbeb3685f17038ec6afade3ef354429c51c687b45a7018ee3a69\n66b3af15c9ba8f40e6461ba0a17ef5a799672ad882bab02b518f9da7c1a962945c2e\n9b0f02f29b31b9cdf3e633f9d9d2a22e96e1de28e25241ca7dd04147112f57897340\n3e0f4fd80865965475d22294f065e17a1c4a201de93bd14223e6b1b999fd548f2f75\n9f52db71964528b6f15b9c2d7811f2a0a35d534b8216301c47f4f04f412cae142b48\nc4cdff78bc54df690fd43142d750c671dd8e2e938e6a440b2f825b6dbb3e19f1d7a3\nc0150428a47948037c322365b7fe6fe57ac88d8f80889e9ff38177bad8c8d8d98db4\n2908b389cb59692a58ce275aa15acb032ca951b3e0a3404b7f33f655b7c7d83a2f8d\n1b6bbff49d5fcedf2e030e80881aa436db27a5c0dea13f32e7d460dbf01240c2320c\n2bb5b3225b17145c72d61d47c8f84d1e19417ebd8ce3638a82d395cc6f7050b6209d\n9283dc7b93fecc04f3f9e7f566829ac41568ef799480c733c09759aa9734e2013d76\n40dc6151018ea902bc\ninv = 80682c48982407b489d53d1261b19ec8627d02b8cda5336750b8cee332ae26\n0de57b02d72609c1e0e9f28e2040fc65b6f02d56dbd6aa9af8fde656f70495dfb723\nba01173d4707a12fddac628ca29f3e32340bd8f7ddb557cf819f6b01e445ad96f874\nba235584ee71f6581f62d4f43bf03f910f6510deb85e8ef06c7f09d9794a008be7ff\n2529f0ebb69decef646387dc767b74939265fec0223aa6d84d2a8a1cc912d5ca25b4\ne144ab8f6ba054b54910176d5737a2cff011da431bd5f2a0d2d66b9e70b39f4b050e\n45c0d9c16f02deda9ddf2d00f3e4b01037d7029cd49c2d46a8e1fc2c0c17520af1f4\nb5e25ba396afc4cd60c494a4c426448b35b49635b337cfb08e7c22a39b256dd032c0\n0adddafb51a627f99a0e1704170ac1f1912e49d9db10ec04c19c58f420212973e0cb\n329524223a6aa56c7937c5dffdb5d966b6cd4cbc26f3201dd25c80960a1a111b3294\n7bb78973d269fac7f5186530930ed19f68507540eed9e1bab8b00f00d8ca09b3f099\naae46180e04e3584bd7ca054df18a1504b89d1d1675d0966c4ae1407be325cdf623c\nf13ff13e4a28b594d59e3eadbadf6136eee7a59d6a444c9eb4e2198e8a974f27a39e\nb63af2c9af3870488b8adaad444674f512133ad80b9220e09158521614f1faadfe85\n05ef57b7df6813048603f0dd04f4280177a11380fbfc861dbcbd7418d62155248dad\n5fdec0991f\nblinded_msg = 10c166c6a711e81c46f45b18e5873cc4f494f003180dd7f115585d\n871a28930259654fe28a54dab319cc5011204c8373b50a57b0fdc7a678bd74c52325\n9dfe4fd5ea9f52f170e19dfa332930ad1609fc8a00902d725cfe50685c95e5b2968c\n9a2828a21207fcf393d15f849769e2af34ac4259d91dfd98c3a707c509e1af55647e\nfaa31290ddf48e0133b798562af5eabd327270ac2fb6c594734ce339a14ea4fe1b9a\n2f81c0bc230ca523bda17ff42a377266bc2778a274c0ae5ec5a8cbbe364fcf0d2403\nf7ee178d77ff28b67a20c7ceec009182dbcaa9bc99b51ebbf13b7d542be337172c64\n74f2cd3561219fe0dfa3fb207cff89632091ab841cf38d8aa88af6891539f263adb8\neac6402c41b6ebd72984e43666e537f5f5fe27b2b5aa114957e9a580730308a5f5a9\nc63a1eb599f093ab401d0c6003a451931b6d124180305705845060ebba6b0036154f\ncef3e5e9f9e4b87e8f084542fd1dd67e7782a5585150181c01eb6d90cb9588383738\n4a5b91dbb606f266059ecc51b5acbaa280e45cfd2eec8cc1cdb1b7211c8e14805ba6\n83f9b78824b2eb005bc8a7d7179a36c152cb87c8219e5569bba911bb32a1b923ca83\nde0e03fb10fba75d85c55907dda5a2606bf918b056c3808ba496a4d95532212040a5\nf44f37e1097f26dc27b98a51837daa78f23e532156296b64352669c94a8a855acf30\n533d8e0594ace7c442\nblind_sig = 364f6a40dbfbc3bbb257943337eeff791a0f290898a6791283bba581\nd9eac90a6376a837241f5f73a78a5c6746e1306ba3adab6067c32ff69115734ce014\nd354e2f259d4cbfb890244fd451a497fe6ecf9aa90d19a2d441162f7eaa7ce3fc4e8\n9fd4e76b7ae585be2a2c0fd6fb246b8ac8d58bcb585634e30c9168a434786fe5e0b7\n4bfe8187b47ac091aa571ffea0a864cb906d0e28c77a00e8cd8f6aba4317a8cc7bf3\n2ce566bd1ef80c64de041728abe087bee6cadd0b7062bde5ceef308a23bd1ccc154f\nd0c3a26110df6193464fc0d24ee189aea8979d722170ba945fdcce9b1b4b63349980\nf3a92dc2e5418c54d38a862916926b3f9ca270a8cf40dfb9772bfbdd9a3e0e089236\n9c18249211ba857f35963d0e05d8da98f1aa0c6bba58f47487b8f663e395091275f8\n2941830b050b260e4767ce2fa903e75ff8970c98bfb3a08d6db91ab1746c86420ee2\ne909bf681cac173697135983c3594b2def673736220452fde4ddec867d40ff42dd3d\na36c84e3e52508b891a00f50b4f62d112edb3b6b6cc3dbd546ba10f36b03f06c0d82\naeec3b25e127af545fac28e1613a0517a6095ad18a98ab79f68801e05c175e15bae2\n1f821e80c80ab4fdec6fb34ca315e194502b8f3dcf7892b511aee45060e3994cd15e\n003861bc7220a2babd7b40eda03382548a34a7110f9b1779bf3ef6011361611e6bc5\nc0dc851e1509de1a\nsig = 6fef8bf9bc182cd8cf7ce45c7dcf0e6f3e518ae48f06f3c670c649ac737a8b\n8119a34d51641785be151a697ed7825fdfece82865123445eab03eb4bb91cecf4d69\n51738495f8481151b62de869658573df4e50a95c17c31b52e154ae26a04067d5ecdc\n1592c287550bb982a5bb9c30fd53a768cee6baabb3d483e9f1e2da954c7f4cf492fe\n3944d2fe456c1ecaf0840369e33fb4010e6b44bb1d721840513524d8e9a3519f40d1\nb81ae34fb7a31ee6b7ed641cb16c2ac999004c2191de0201457523f5a4700dd64926\n7d9286f5c1d193f1454c9f868a57816bf5ff76c838a2eeb616a3fc9976f65d4371de\necfbab29362caebdff69c635fe5a2113da4d4d8c24f0b16a0584fa05e80e607c5d9a\n2f765f1f069f8d4da21f27c2a3b5c984b4ab24899bef46c6d9323df4862fe51ce300\nfca40fb539c3bb7fe2dcc9409e425f2d3b95e70e9c49c5feb6ecc9d43442c33d5000\n3ee936845892fb8be475647da9a080f5bc7f8a716590b3745c2209fe05b17992830c\ne15f32c7b22cde755c8a2fe50bd814a0434130b807dc1b7218d4e85342d70695a5d7\nf29306f25623ad1e8aa08ef71b54b8ee447b5f64e73d09bdd6c3b7ca224058d7c67c\nc7551e9241688ada12d859cb7646fbd3ed8b34312f3b49d69802f0eaa11bc4211c2f\n7a29cd5c01ed01a39001c5856fab36228f5ee2f2e1110811872fe7c865c42ed59029\nc706195d52",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4. RSABSSA-SHA384-PSSZERO-Deterministic Test Vector",
      "section_title": true,
      "ja": "A.4. rsabssa-sha384-psszero-deterministicテストベクター"
    },
    {
      "indent": 3,
      "text": "p = e1f4d7a34802e27c7392a3cea32a262a34dc3691bd87f3f310dc756734889305\n59c120fd0410194fb8a0da55bd0b81227e843fdca6692ae80e5a5d414116d4803fca\n7d8c30eaaae57e44a1816ebb5c5b0606c536246c7f11985d731684150b63c9a3ad9e\n41b04c0b5b27cb188a692c84696b742a80d3cd00ab891f2457443dadfeba6d6daf10\n8602be26d7071803c67105a5426838e6889d77e8474b29244cefaf418e381b312048\nb457d73419213063c60ee7b0d81820165864fef93523c9635c22210956e53a8d9632\n2493ffc58d845368e2416e078e5bcb5d2fd68ae6acfa54f9627c42e84a9d3f277401\n7e32ebca06308a12ecc290c7cd1156dcccfb2311\nq = c601a9caea66dc3835827b539db9df6f6f5ae77244692780cd334a006ab353c8\n06426b60718c05245650821d39445d3ab591ed10a7339f15d83fe13f6a3dfb20b945\n2c6a9b42eaa62a68c970df3cadb2139f804ad8223d56108dfde30ba7d367e9b0a7a8\n0c4fdba2fd9dde6661fc73fc2947569d2029f2870fc02d8325acf28c9afa19ecf962\ndaa7916e21afad09eb62fe9f1cf91b77dc879b7974b490d3ebd2e95426057f35d0a3\nc9f45f79ac727ab81a519a8b9285932d9b2e5ccd347e59f3f32ad9ca359115e7da00\n8ab7406707bd0e8e185a5ed8758b5ba266e8828f8d863ae133846304a2936ad7bc7c\n9803879d2fc4a28e69291d73dbd799f8bc238385\nn = aec4d69addc70b990ea66a5e70603b6fee27aafebd08f2d94cbe1250c556e047\na928d635c3f45ee9b66d1bc628a03bac9b7c3f416fe20dabea8f3d7b4bbf7f963be3\n35d2328d67e6c13ee4a8f955e05a3283720d3e1f139c38e43e0338ad058a9495c533\n77fc35be64d208f89b4aa721bf7f7d3fef837be2a80e0f8adf0bcd1eec5bb040443a\n2b2792fdca522a7472aed74f31a1ebe1eebc1f408660a0543dfe2a850f106a617ec6\n685573702eaaa21a5640a5dcaf9b74e397fa3af18a2f1b7c03ba91a6336158de420d\n63188ee143866ee415735d155b7c2d854d795b7bc236cffd71542df34234221a0413\ne142d8c61355cc44d45bda94204974557ac2704cd8b593f035a5724b1adf442e78c5\n42cd4414fce6f1298182fb6d8e53cef1adfd2e90e1e4deec52999bdc6c29144e8d52\na125232c8c6d75c706ea3cc06841c7bda33568c63a6c03817f722b50fcf898237d78\n8a4400869e44d90a3020923dc646388abcc914315215fcd1bae11b1c751fd52443aa\nc8f601087d8d42737c18a3fa11ecd4131ecae017ae0a14acfc4ef85b83c19fed33cf\nd1cd629da2c4c09e222b398e18d822f77bb378dea3cb360b605e5aa58b20edc29d00\n0a66bd177c682a17e7eb12a63ef7c2e4183e0d898f3d6bf567ba8ae84f84f1d23bf8\nb8e261c3729e2fa6d07b832e07cddd1d14f55325c6f924267957121902dc19b3b329\n48bdead5\ne = 010001\nd = 0d43242aefe1fb2c13fbc66e20b678c4336d20b1808c558b6e62ad16a2870771\n80b177e1f01b12f9c6cd6c52630257ccef26a45135a990928773f3bd2fc01a313f1d\nac97a51cec71cb1fd7efc7adffdeb05f1fb04812c924ed7f4a8269925dad88bd7dcf\nbc4ef01020ebfc60cb3e04c54f981fdbd273e69a8a58b8ceb7c2d83fbcbd6f784d05\n2201b88a9848186f2a45c0d2826870733e6fd9aa46983e0a6e82e35ca20a439c5ee7\nb502a9062e1066493bdadf8b49eb30d9558ed85abc7afb29b3c9bc644199654a4676\n681af4babcea4e6f71fe4565c9c1b85d9985b84ec1abf1a820a9bbebee0df1398aae\n2c85ab580a9f13e7743afd3108eb32100b870648fa6bc17e8abac4d3c99246b1f0ea\n9f7f93a5dd5458c56d9f3f81ff2216b3c3680a13591673c43194d8e6fc93fc1e37ce\n2986bd628ac48088bc723d8fbe293861ca7a9f4a73e9fa63b1b6d0074f5dea2a624c\n5249ff3ad811b6255b299d6bc5451ba7477f19c5a0db690c3e6476398b1483d10314\nafd38bbaf6e2fbdbcd62c3ca9797a420ca6034ec0a83360a3ee2adf4b9d4ba29731d\n131b099a38d6a23cc463db754603211260e99d19affc902c915d7854554aabf608e3\nac52c19b8aa26ae042249b17b2d29669b5c859103ee53ef9bdc73ba3c6b537d5c34b\n6d8f034671d7f3a8a6966cc4543df223565343154140fd7391c7e7be03e241f4ecfe\nb877a051\nmsg = 8f3dc6fb8c4a02f4d6352edf0907822c1210a9b32f9bdda4c45a698c80023a\na6b59f8cfec5fdbb36331372ebefedae7d\nmsg_prefix =\nprepared_msg = 8f3dc6fb8c4a02f4d6352edf0907822c1210a9b32f9bdda4c45a6\n98c80023aa6b59f8cfec5fdbb36331372ebefedae7d\nsalt =\nencoded_msg = 159499b90471b496c2639ec482e99feaba525c0420c565d17dc60c\n1bb1f47703f04436cceaa8f69811e1bf8546fa971226c9e71421b32b571ed5ea0e03\n2269d4219b4404316eb17a58f277634aeed394b7f3888153b5bb163e40807e605daf\ndd1789dd473b0846bdcb6524417bc3a35366fab4261708c0e4b4beba07a1a64bbccb\n4b1ac215d1350a50a501e8e96612028b535ad731abf1f117ee07d07a4de9cef3d70f\n5845ba84c29d5d92c6e66a1f9489a5f527b846825360fd6e90f40ed041c682e489f3\nacde984a3ea580181418c1d15017af2657bc4b70485cdc0f1ebc3693e0d70a5d01f3\n7ff640993fa071274fb9ee44e0c24dcb58ffa21a9a6540d87f24379beaafcc3b4bd4\n2c45ec6820e03738ce98bea11c71685f31db63429fab8658bdb816f1ecccb1888f24\n02de0bd2f0f9646decdcad4c11b41428eec1ed25f2a86d43bb04f95726bfbd98ea34\nca091b7adbabd0e28f17fa0345b89542d23c3530554987508a23641bd4f9e52962b0\nbee3ac9ffe005322d26a39941c5847774300411c69635f96903e8d593530908bd92a\n4fa6a2d52f88073a647a4b3894b7e4ebb80699e60227397bfa93f41b1c97e107b632\nf68e70409372ead2f072c11cf99be4486fcbf763dde28ee156db26cd358a69fcb796\n44f1f2fcc166f41a4c80f5851ee08be051f14b601418d6e56e61733b9b210c6bef17\nedac121a754d19b9bc\ninv = 80682c48982407b489d53d1261b19ec8627d02b8cda5336750b8cee332ae26\n0de57b02d72609c1e0e9f28e2040fc65b6f02d56dbd6aa9af8fde656f70495dfb723\nba01173d4707a12fddac628ca29f3e32340bd8f7ddb557cf819f6b01e445ad96f874\nba235584ee71f6581f62d4f43bf03f910f6510deb85e8ef06c7f09d9794a008be7ff\n2529f0ebb69decef646387dc767b74939265fec0223aa6d84d2a8a1cc912d5ca25b4\ne144ab8f6ba054b54910176d5737a2cff011da431bd5f2a0d2d66b9e70b39f4b050e\n45c0d9c16f02deda9ddf2d00f3e4b01037d7029cd49c2d46a8e1fc2c0c17520af1f4\nb5e25ba396afc4cd60c494a4c426448b35b49635b337cfb08e7c22a39b256dd032c0\n0adddafb51a627f99a0e1704170ac1f1912e49d9db10ec04c19c58f420212973e0cb\n329524223a6aa56c7937c5dffdb5d966b6cd4cbc26f3201dd25c80960a1a111b3294\n7bb78973d269fac7f5186530930ed19f68507540eed9e1bab8b00f00d8ca09b3f099\naae46180e04e3584bd7ca054df18a1504b89d1d1675d0966c4ae1407be325cdf623c\nf13ff13e4a28b594d59e3eadbadf6136eee7a59d6a444c9eb4e2198e8a974f27a39e\nb63af2c9af3870488b8adaad444674f512133ad80b9220e09158521614f1faadfe85\n05ef57b7df6813048603f0dd04f4280177a11380fbfc861dbcbd7418d62155248dad\n5fdec0991f\nblinded_msg = 982790826556aabe6004467671a864397eea3b95740e9a11c8b80b\n99ee0cf4dbc50af860bda81b601a2eceaa6943ef104f13325ad0be2e37f42030b312\n0e87cfee8cfe59cde1acfb25485a43275ebe777292e2518181ae531e596f988ff16f\n458daa5a42408939cbe60e7271391a21657276427d195bee6a20054101d4ceb892ec\ndea402ea1a866acf0e451a3336f07e7589330d96c3883fd5bc1a829a715b618b74a8\n6b2a898764246ad081d4c9f1edb8ab5077e315fde2417ec2dd33cad93e120340b49b\ne89c18a63e62c6bb289037283d3bf18608be11ee4c823c710b0c6b89235fed3f03a7\nb96ddd25a8f54f20dac37ce8905093ad8e066810f354fb1773236e3d3788ba755de2\nc9bce8d340078bb1831ddc7314a5018673427ced65cb356281aae08b5e6636f3eb24\n17e09d6ae476a9abcc410bc8c90813d0740e39ae75efae4c02eed49dbb7aa51258bb\n71197445d17a6029bf566ba6b36282173af2c42e9b9631366f22eb6a19ef1d92bd3c\ne0631d3a7fb3288195b0ba380a3828d5411cefd5eba83e52198c001ac9946a333a33\nd89d4d235fc833239d59837f04eaf065e9563659b00c7624a6263b727d8f2c07959b\na2bb592e7ff251b8f09c85995fd2e4474e743586576b518230986b6076b762ae7708\n8a37e4bffd2ef41ae68d6d4e79205290b4f76c42ef039638c41cdc6fe8af9b429c0d\nee45b2942e3861da2a\nblind_sig = 362ef369f9b8c1487e285514702a7cd6fe03e4a2fb854881f3d3f986\nb7742a0c9bfab6562a6cd5ed71c574af67d7e77e71b33420c08ebb0ff37886b85829\n7f9562fc366066c6d8e77bad1918b04756ba03f5c385d44f06759daf1b7a38b2a642\n48dee95d0e3886c8afa1f74afd8ac3c56520d0f3fd206df8e0d257312756803b09a7\n9d0cc38112592c3aec32de5a9bc3284c5a0a2d0808b102deafa5cc60f04e3d71c028\n4cba04f17f88aa8e07d5544fe0265807d515877f79d30ed26d522b9d9c56597647b0\ndbca5a69d6418f8d1b51481723f272c2a3d48f6f4fd6beeac3576c3edb00e8779964\n548aeab8e004c7c4f8ef9cb6e680e2d2d49792004bb3e6974fa48f241a361ca449c0\n2bd4c0ad4e66252c55e656f16049908efe59acbafa1171895dfac64d909808e54204\n69d622c7253ec1de7522b41634d383bf8786bf881cbf1561627f1e62b2d93300ec30\nec0f5f0ab32036fce068bc76b0b0c6452079537f8d7f8dcee4b42bbf2d9ad7499d38\n35cd93cfc7e8ebea3554ab5241e181e5d73241b7bebf0a281b63594a35f4993e2b41\n6d60db966b58b648cfcba2c4bee4c2830aae4a70ff55012480298f549c13b1b26842\n77bca12f592471b8a99285174f1c0ebb38fc80e74a10b3f02ec3e6682ba873f7ff0e\n1e79718b470927c74ed754d4f7c3d9a55e22246e829cdb5a1c6fb2a0a6c896df3030\n63c918bcf5eb0017\nsig = 4454b6983ff01cb28545329f394936efa42ed231e15efbc025fdaca00277ac\nf0c8e00e3d8b0ecebd35b057b8ebfc14e1a7097368a4abd20b555894ccef3d1b9528\nc6bcbda6b95376bef230d0f1feff0c1064c62c60a7ae7431d1fdfa43a81eed9235e3\n63e1ffa0b2797aba6aad6082fcd285e14fc8b71de6b9c87cb4059c7dc1e96ae1e637\n95a1e9af86b9073d1d848aef3eca8a03421bcd116572456b53bcfd4dabb0a9691f1f\nabda3ed0ce357aee2cfee5b1a0eb226f69716d4e011d96eede5e38a9acb531a64336\na0d5b0bae3ab085b658692579a376740ff6ce69e89b06f360520b864e33d82d029c8\n08248a19e18e31f0ecd16fac5cd4870f8d3ebc1c32c718124152dc905672ab0b7af4\n8bf7d1ac1ff7b9c742549c91275ab105458ae37621757add83482bbcf779e777bbd6\n1126e93686635d4766aedf5103cf7978f3856ccac9e28d21a850dbb03c811128616d\n315d717be1c2b6254f8509acae862042c034530329ce15ca2e2f6b1f5fd59272746e\n3918c748c0eb810bf76884fa10fcf749326bbfaa5ba285a0186a22e4f628dbf178d3\nbb5dc7e165ca73f6a55ecc14c4f5a26c4693ce5da032264cbec319b12ddb9787d0ef\na4fcf1e5ccee35ad85ecd453182df9ed735893f830b570faae8be0f6fe2e571a4e0d\n927cba4debd368d3b4fca33ec6251897a137cf75474a32ac8256df5e5ffa518b88b4\n3fb6f63a24",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "section_title": true,
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "We would like to thank Bjoern Tackmann, who provided an editorial and security review of this document.",
      "ja": "このドキュメントの編集およびセキュリティレビューを提供してくれたBjoern Tackmannに感謝します。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "section_title": true,
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Frank Denis\nFastly Inc.\nEmail: fd@00f.net",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Frederic Jacobs\nApple Inc.\nEmail: frederic.jacobs@apple.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Christopher A. Wood\nCloudflare\nEmail: caw@heapingbits.net",
      "raw": true,
      "ja": ""
    }
  ]
}