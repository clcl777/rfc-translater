{
  "title": {
    "text": "RFC 9180 - Hybrid Public Key Encryption",
    "ja": "RFC 9180 - ハイブリッド公開キー暗号化"
  },
  "number": 9180,
  "created_at": "2024-03-16 20:44:48.427079+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Research Task Force (IRTF)                            R. Barnes\nRequest for Comments: 9180                                         Cisco\nCategory: Informational                                     K. Bhargavan\nISSN: 2070-1721                                                  B. Lipp\n                                                                   Inria\n                                                                 C. Wood\n                                                              Cloudflare\n                                                           February 2022",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 22,
      "text": "Hybrid Public Key Encryption",
      "title": true,
      "section_title": true,
      "ja": "ハイブリッド公開キー暗号化"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "section_title": true,
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document describes a scheme for hybrid public key encryption (HPKE). This scheme provides a variant of public key encryption of arbitrary-sized plaintexts for a recipient public key. It also includes three authenticated variants, including one that authenticates possession of a pre-shared key and two optional ones that authenticate possession of a key encapsulation mechanism (KEM) private key. HPKE works for any combination of an asymmetric KEM, key derivation function (KDF), and authenticated encryption with additional data (AEAD) encryption function. Some authenticated variants may not be supported by all KEMs. We provide instantiations of the scheme using widely used and efficient primitives, such as Elliptic Curve Diffie-Hellman (ECDH) key agreement, HMAC-based key derivation function (HKDF), and SHA2.",
      "ja": "このドキュメントでは、ハイブリッド公開キー暗号化（HPKE）のスキームについて説明します。このスキームは、受信者の公開キーの任意のサイズのプレーンテキストの公開キー暗号化のバリアントを提供します。また、3つの認証されたバリアントが含まれています。これには、事前に共有キーの所有を認証するものと、キーカプセル化メカニズム（KEM）秘密鍵の所有を認証する2つのオプションキーが含まれます。HPKEは、非対称KEM、キー導入関数（KDF）、および追加データ（AEAD）暗号化関数を使用した認証された暗号化の任意の組み合わせで機能します。一部の認証されたバリアントは、すべてのKEMによってサポートされない場合があります。楕円曲線diffie-hellman（ECDH）キー契約、HMACベースのキー導入関数（HKDF）、SHA2など、広く使用された効率的なプリミティブを使用して、スキームのインスタンス化を提供します。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.",
      "ja": "このドキュメントは、IRTFのCrypto Forum Research Group（CFRG）の製品です。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "section_title": true,
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントは、インターネット標準の追跡仕様ではありません。情報目的で公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Research Task Force (IRTF). The IRTF publishes the results of Internet-related research and development activities. These results might not be suitable for deployment. This RFC represents the consensus of the Crypto Forum Research Group of the Internet Research Task Force (IRTF). Documents approved for publication by the IRSG are not candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネット研究タスクフォース（IRTF）の製品です。IRTFは、インターネット関連の研究開発活動の結果を公開しています。これらの結果は、展開に適していない場合があります。このRFCは、インターネット研究タスクフォース（IRTF）の暗号フォーラム研究グループのコンセンサスを表しています。IRSGによって公開されたことが承認された文書は、インターネット標準のレベルの候補者ではありません。RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9180.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https：//www.rfc-editor.org/info/rfc9180で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "section_title": true,
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2022 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2022 IETF Trustおよび文書著者として特定された人。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "section_title": true,
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Requirements Notation\n3.  Notation\n4.  Cryptographic Dependencies\n  4.1.  DH-Based KEM (DHKEM)\n5.  Hybrid Public Key Encryption\n  5.1.  Creating the Encryption Context\n    5.1.1.  Encryption to a Public Key\n    5.1.2.  Authentication Using a Pre-Shared Key\n    5.1.3.  Authentication Using an Asymmetric Key\n    5.1.4.  Authentication Using Both a PSK and an Asymmetric Key\n  5.2.  Encryption and Decryption\n  5.3.  Secret Export\n6.  Single-Shot APIs\n  6.1.  Encryption and Decryption\n  6.2.  Secret Export\n7.  Algorithm Identifiers\n  7.1.  Key Encapsulation Mechanisms (KEMs)\n    7.1.1.  SerializePublicKey and DeserializePublicKey\n    7.1.2.  SerializePrivateKey and DeserializePrivateKey\n    7.1.3.  DeriveKeyPair\n    7.1.4.  Validation of Inputs and Outputs\n    7.1.5.  Future KEMs\n  7.2.  Key Derivation Functions (KDFs)\n    7.2.1.  Input Length Restrictions\n  7.3.  Authenticated Encryption with Associated Data (AEAD)\n        Functions\n8.  API Considerations\n  8.1.  Auxiliary Authenticated Application Information\n  8.2.  Errors\n9.  Security Considerations\n  9.1.  Security Properties\n    9.1.1.  Key-Compromise Impersonation\n    9.1.2.  Computational Analysis\n    9.1.3.  Post-Quantum Security\n  9.2.  Security Requirements on a KEM Used within HPKE\n    9.2.1.  Encap/Decap Interface\n    9.2.2.  AuthEncap/AuthDecap Interface\n    9.2.3.  KEM Key Reuse\n  9.3.  Security Requirements on a KDF\n  9.4.  Security Requirements on an AEAD\n  9.5.  Pre-Shared Key Recommendations\n  9.6.  Domain Separation\n  9.7.  Application Embedding and Non-Goals\n    9.7.1.  Message Order and Message Loss\n    9.7.2.  Downgrade Prevention\n    9.7.3.  Replay Protection\n    9.7.4.  Forward Secrecy\n    9.7.5.  Bad Ephemeral Randomness\n    9.7.6.  Hiding Plaintext Length\n  9.8.  Bidirectional Encryption\n  9.9.  Metadata Protection\n10. Message Encoding\n11. IANA Considerations\n  11.1.  KEM Identifiers\n  11.2.  KDF Identifiers\n  11.3.  AEAD Identifiers\n12. References\n  12.1.  Normative References\n  12.2.  Informative References\nAppendix A.  Test Vectors\n  A.1.  DHKEM(X25519, HKDF-SHA256), HKDF-SHA256, AES-128-GCM\n    A.1.1.  Base Setup Information\n    A.1.2.  PSK Setup Information\n    A.1.3.  Auth Setup Information\n    A.1.4.  AuthPSK Setup Information\n  A.2.  DHKEM(X25519, HKDF-SHA256), HKDF-SHA256, ChaCha20Poly1305\n    A.2.1.  Base Setup Information\n    A.2.2.  PSK Setup Information\n    A.2.3.  Auth Setup Information\n    A.2.4.  AuthPSK Setup Information\n  A.3.  DHKEM(P-256, HKDF-SHA256), HKDF-SHA256, AES-128-GCM\n    A.3.1.  Base Setup Information\n    A.3.2.  PSK Setup Information\n    A.3.3.  Auth Setup Information\n    A.3.4.  AuthPSK Setup Information\n  A.4.  DHKEM(P-256, HKDF-SHA256), HKDF-SHA512, AES-128-GCM\n    A.4.1.  Base Setup Information\n    A.4.2.  PSK Setup Information\n    A.4.3.  Auth Setup Information\n    A.4.4.  AuthPSK Setup Information\n  A.5.  DHKEM(P-256, HKDF-SHA256), HKDF-SHA256, ChaCha20Poly1305\n    A.5.1.  Base Setup Information\n    A.5.2.  PSK Setup Information\n    A.5.3.  Auth Setup Information\n    A.5.4.  AuthPSK Setup Information\n  A.6.  DHKEM(P-521, HKDF-SHA512), HKDF-SHA512, AES-256-GCM\n    A.6.1.  Base Setup Information\n    A.6.2.  PSK Setup Information\n    A.6.3.  Auth Setup Information\n    A.6.4.  AuthPSK Setup Information\n  A.7.  DHKEM(X25519, HKDF-SHA256), HKDF-SHA256, Export-Only AEAD\n    A.7.1.  Base Setup Information\n    A.7.2.  PSK Setup Information\n    A.7.3.  Auth Setup Information\n    A.7.4.  AuthPSK Setup Information\nAcknowledgements\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Encryption schemes that combine asymmetric and symmetric algorithms have been specified and practiced since the early days of public key cryptography, e.g., [RFC1421]. Combining the two yields the key management advantages of asymmetric cryptography and the performance benefits of symmetric cryptography. The traditional combination has been \"encrypt the symmetric key with the public key.\" \"Hybrid\" public key encryption (HPKE) schemes, specified here, take a different approach: \"generate the symmetric key and its encapsulation with the public key.\" Specifically, encrypted messages convey an encryption key encapsulated with a public key scheme, along with one or more arbitrary-sized ciphertexts encrypted using that key. This type of public key encryption has many applications in practice, including Messaging Layer Security [MLS-PROTOCOL] and TLS Encrypted ClientHello [TLS-ECH].",
      "ja": "非対称および対称アルゴリズムを組み合わせた暗号化スキームは、公開キー暗号化の初期の頃から指定および実践されてきました[RFC1421]。2つを組み合わせることで、非対称暗号化の主要な管理上の利点と、対称的な暗号化のパフォーマンスの利点が得られます。従来の組み合わせは、「対称キーを公開キーと暗号化する」ことです。ここで指定された「ハイブリッド」公開キー暗号化（HPKE）スキームは、「対称キーとそのカプセル化を公開キーと生成する」という別のアプローチを取ります。」具体的には、暗号化されたメッセージは、そのキーを使用して暗号化された1つ以上の任意のサイズの暗号文とともに、公開キースキームでカプセル化された暗号化キーを伝えます。このタイプの公開キー暗号化には、メッセージングレイヤーセキュリティ[MLS-Protocol]やTLSがClientHello [TLS-ECH]を暗号化したなど、実際に多くのアプリケーションがあります。"
    },
    {
      "indent": 3,
      "text": "Currently, there are numerous competing and non-interoperable standards and variants for hybrid encryption, mostly variants on the Elliptic Curve Integrated Encryption Scheme (ECIES), including ANSI X9.63 (ECIES) [ANSI], IEEE 1363a [IEEE1363], ISO/IEC 18033-2 [ISO], and SECG SEC 1 [SECG]. See [MAEA10] for a thorough comparison. All these existing schemes have problems, e.g., because they rely on outdated primitives, lack proofs of indistinguishable (adaptive) chosen-ciphertext attack (IND-CCA2) security, or fail to provide test vectors.",
      "ja": "現在、ハイブリッド暗号化のための多くの競合しないinteroperable標準とバリアントがあり、主にANSI X9.63（ECIES）[ANSI]、IEEE 1363A [IEEE1363]、ISO/IEC 18033-2 [ISO]、およびSecg Sec 1 [secg]。徹底的な比較については、[MAEA10]を参照してください。これらの既存のスキームにはすべて問題があります。たとえば、時代遅れのプリミティブに依存している場合、区別できない（適応性のある）選択されたカイファテキスト攻撃（IND-CCA2）セキュリティの証拠がない場合、またはテストベクターの提供に失敗します。"
    },
    {
      "indent": 3,
      "text": "This document defines an HPKE scheme that provides a subset of the functions provided by the collection of schemes above but specified with sufficient clarity that they can be interoperably implemented. The HPKE construction defined herein is secure against (adaptive) chosen ciphertext attacks (IND-CCA2-secure) under classical assumptions about the underlying primitives [HPKEAnalysis] [ABHKLR20]. A summary of these analyses is in Section 9.1.",
      "ja": "このドキュメントは、上記のスキームのコレクションによって提供される機能のサブセットを提供するHPKEスキームを定義しますが、それらを相互に実装できるほど明確に指定されています。本明細書で定義されているHPKE構造は、基礎となるプリミティブ[HPKEANALYSIS] [ABHKLR20]に関する古典的な仮定の下で、（Adaptive）選択された暗号文攻撃（IND-CCA2-Secure）に対して安全です。これらの分析の概要は、セクション9.1にあります。"
    },
    {
      "indent": 3,
      "text": "This document represents the consensus of the Crypto Forum Research Group (CFRG).",
      "ja": "このドキュメントは、Crypto Forum Research Group（CFRG）のコンセンサスを表しています。"
    },
    {
      "indent": 0,
      "text": "2. Requirements Notation",
      "section_title": true,
      "ja": "2. 要件表記"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 0,
      "text": "3. Notation",
      "section_title": true,
      "ja": "3. 表記"
    },
    {
      "indent": 3,
      "text": "The following terms are used throughout this document to describe the operations, roles, and behaviors of HPKE:",
      "ja": "このドキュメント全体で、HPKEの操作、役割、および行動を説明するために、次の用語が使用されます。"
    },
    {
      "indent": 3,
      "text": "(skX, pkX):",
      "ja": "（SKX、PKX）："
    },
    {
      "indent": 12,
      "text": "A key encapsulation mechanism (KEM) key pair used in role X, where X is one of S, R, or E as sender, recipient, and ephemeral, respectively; skX is the private key and pkX is the public key.",
      "ja": "役割Xで使用されているキーカプセル化メカニズム（KEM）キーペア。Xは、それぞれS、R、またはEの1つ、またははか一か（それぞれ）です。SKXは秘密鍵であり、PKXは公開キーです。"
    },
    {
      "indent": 3,
      "text": "pk(skX):",
      "ja": "PK（SKX）："
    },
    {
      "indent": 12,
      "text": "The KEM public key corresponding to the KEM private key skX.",
      "ja": "KEMの秘密鍵SKXに対応するKEM公開キー。"
    },
    {
      "indent": 3,
      "text": "Sender (S):",
      "ja": "送信者："
    },
    {
      "indent": 12,
      "text": "Role of entity that sends an encrypted message.",
      "ja": "暗号化されたメッセージを送信するエンティティの役割。"
    },
    {
      "indent": 3,
      "text": "Recipient (R):",
      "ja": "受信者（R）："
    },
    {
      "indent": 12,
      "text": "Role of entity that receives an encrypted message.",
      "ja": "暗号化されたメッセージを受信するエンティティの役割。"
    },
    {
      "indent": 3,
      "text": "Ephemeral (E):",
      "ja": "一時的（e）："
    },
    {
      "indent": 12,
      "text": "Role of a fresh random value meant for one-time use.",
      "ja": "1回限りの使用を目的とした新鮮なランダム値の役割。"
    },
    {
      "indent": 3,
      "text": "I2OSP(n, w):",
      "ja": "i2osp（n、w）："
    },
    {
      "indent": 12,
      "text": "Convert non-negative integer n to a w-length, big-endian byte string, as described in [RFC8017].",
      "ja": "[RFC8017]に記載されているように、非陰性整数Nをwlend wlengthのビッグエンディアンバイト文字列に変換します。"
    },
    {
      "indent": 3,
      "text": "OS2IP(x):",
      "ja": "OS2IP（x）："
    },
    {
      "indent": 12,
      "text": "Convert byte string x to a non-negative integer, as described in [RFC8017], assuming big-endian byte order.",
      "ja": "[RFC8017]で説明されているように、バイト文字列Xを非陰性整数に変換します。"
    },
    {
      "indent": 3,
      "text": "concat(x0, ..., xN):",
      "ja": "concat（x0、...、xn）："
    },
    {
      "indent": 12,
      "text": "Concatenation of byte strings. concat(0x01, 0x0203, 0x040506) = 0x010203040506.",
      "ja": "バイト文字列の連結。concat（0x01、0x0203、0x040506）= 0x010203040506。"
    },
    {
      "indent": 3,
      "text": "random(n):",
      "ja": "ランダム（n）："
    },
    {
      "indent": 12,
      "text": "A pseudorandom byte string of length n bytes",
      "ja": "長さnバイトの擬似ランダムバイト文字列"
    },
    {
      "indent": 3,
      "text": "xor(a,b):",
      "ja": "xor（a、b）："
    },
    {
      "indent": 12,
      "text": "XOR of byte strings; xor(0xF0F0, 0x1234) = 0xE2C4. It is an error to call this function with two arguments of unequal length.",
      "ja": "バイト文字列のXor;xor（0xf0f0、0x1234）= 0xe2c4。不均等な長さの2つの引数でこの関数を呼び出すことはエラーです。"
    },
    {
      "indent": 0,
      "text": "4. Cryptographic Dependencies",
      "section_title": true,
      "ja": "4. 暗号化依存関係"
    },
    {
      "indent": 3,
      "text": "HPKE variants rely on the following primitives:",
      "ja": "HPKEバリエーションは、次のプリミティブに依存しています。"
    },
    {
      "indent": 6,
      "text": "* A key encapsulation mechanism (KEM):",
      "ja": "* キーカプセル化メカニズム（KEM）："
    },
    {
      "indent": 12,
      "text": "- GenerateKeyPair(): Randomized algorithm to generate a key pair (skX, pkX).",
      "ja": "- GenerateKeypair（）：ランダム化されたアルゴリズムを生成して、キーペア（SKX、PKX）を生成します。"
    },
    {
      "indent": 12,
      "text": "- DeriveKeyPair(ikm): Deterministic algorithm to derive a key pair (skX, pkX) from the byte string ikm, where ikm SHOULD have at least Nsk bytes of entropy (see Section 7.1.3 for discussion).",
      "ja": "- deriveKeypair（IKM）：バイト文字列IKMからキーペア（SKX、PKX）を導出する決定論的アルゴリズムでは、IKMには少なくともNSKバイトのエントロピーが必要です（セクション7.1.3を参照）。"
    },
    {
      "indent": 12,
      "text": "- SerializePublicKey(pkX): Produce a byte string of length Npk encoding the public key pkX.",
      "ja": "- SerializePublickey（PKX）：公開キーPKXをコードする長さNPKのバイト文字列を生成します。"
    },
    {
      "indent": 12,
      "text": "- DeserializePublicKey(pkXm): Parse a byte string of length Npk to recover a public key. This function can raise a DeserializeError error upon pkXm deserialization failure.",
      "ja": "- Deserializepublickey（PKXM）：長さNPKのバイト文字列を解析して、公開キーを回復します。この関数は、PKXMの脱介入障害により、脱気体化エラーエラーを引き起こす可能性があります。"
    },
    {
      "indent": 12,
      "text": "- Encap(pkR): Randomized algorithm to generate an ephemeral, fixed-length symmetric key (the KEM shared secret) and a fixed-length encapsulation of that key that can be decapsulated by the holder of the private key corresponding to pkR. This function can raise an EncapError on encapsulation failure.",
      "ja": "- Encap（PKR）：ランダム化されたアルゴリズムは、PKRに対応する秘密鍵の所有者によって脱カプセル化できる、そのキーの一時的な固定長の対称キー（KEM共有秘密）と固定長のカプセル化を生成します。この関数は、カプセル化障害でエンカペローを上げることができます。"
    },
    {
      "indent": 12,
      "text": "- Decap(enc, skR): Deterministic algorithm using the private key skR to recover the ephemeral symmetric key (the KEM shared secret) from its encapsulated representation enc. This function can raise a DecapError on decapsulation failure.",
      "ja": "- Decap（ENC、SKR）：秘密キーSKRを使用して、カプセル化された表現Encからはかなか対称キー（KEM共有秘密）を回復する決定論的アルゴリズム。この関数は、脱カプセル化の障害に関するdecaperrorを上げることができます。"
    },
    {
      "indent": 12,
      "text": "- AuthEncap(pkR, skS) (optional): Same as Encap(), and the outputs encode an assurance that the KEM shared secret was generated by the holder of the private key skS.",
      "ja": "- authencap（pkr、sks）（オプション）：encap（）と同じで、出力はkem共有秘密が秘密鍵SKSの所有者によって生成されたという保証をエンコードします。"
    },
    {
      "indent": 12,
      "text": "- AuthDecap(enc, skR, pkS) (optional): Same as Decap(), and the recipient is assured that the KEM shared secret was generated by the holder of the private key skS.",
      "ja": "- authdecap（enc、skr、pks）（オプション）：decap（）と同じであり、受信者は、秘密のキーSKSの所有者によってKEM共有秘密が生成されたことを保証されます。"
    },
    {
      "indent": 12,
      "text": "- Nsecret: The length in bytes of a KEM shared secret produced by this KEM.",
      "ja": "- nsecret：このKemが作成したKemの共有秘密の長さの長さ。"
    },
    {
      "indent": 12,
      "text": "- Nenc: The length in bytes of an encapsulated key produced by this KEM.",
      "ja": "- NENC：このKEMによって生成されたカプセル化されたキーのバイト単位の長さ。"
    },
    {
      "indent": 12,
      "text": "- Npk: The length in bytes of an encoded public key for this KEM.",
      "ja": "- NPK：このKEMのエンコードされた公開キーのバイトの長さ。"
    },
    {
      "indent": 12,
      "text": "- Nsk: The length in bytes of an encoded private key for this KEM.",
      "ja": "- NSK：このKEMのエンコードされた秘密鍵のバイトの長さ。"
    },
    {
      "indent": 6,
      "text": "* A key derivation function (KDF):",
      "ja": "* キー派生関数（KDF）："
    },
    {
      "indent": 12,
      "text": "- Extract(salt, ikm): Extract a pseudorandom key of fixed length Nh bytes from input keying material ikm and an optional byte string salt.",
      "ja": "- 抽出（塩、IKM）：入力キーイング材料IKMとオプションのバイトストリングソルトからの固定長NHバイトの擬似ランダムキーを抽出します。"
    },
    {
      "indent": 12,
      "text": "- Expand(prk, info, L): Expand a pseudorandom key prk using optional string info into L bytes of output keying material.",
      "ja": "- 拡張（PRK、情報、L）：オプションの文字列情報を使用して、出力キーイン材料のLバイトに擬似ランダムキーPRKを拡張します。"
    },
    {
      "indent": 12,
      "text": "- Nh: The output size of the Extract() function in bytes.",
      "ja": "- NH：バイト単位の抽出（）関数の出力サイズ。"
    },
    {
      "indent": 6,
      "text": "* An AEAD encryption algorithm [RFC5116]:",
      "ja": "* AEAD暗号化アルゴリズム[RFC5116]："
    },
    {
      "indent": 12,
      "text": "- Seal(key, nonce, aad, pt): Encrypt and authenticate plaintext pt with associated data aad using symmetric key key and nonce nonce, yielding ciphertext and tag ct. This function can raise a MessageLimitReachedError upon failure.",
      "ja": "- シール（キー、ノンセ、AAD、PT）：対称キーキーとノンセノンセを使用して、関連データを使用してプレーンテキストPTを暗号化および認証し、暗号文とタグCTを生成します。この関数は、障害時にMessagelimitreachederrorを上げることができます。"
    },
    {
      "indent": 12,
      "text": "- Open(key, nonce, aad, ct): Decrypt ciphertext and tag ct using associated data aad with symmetric key key and nonce nonce, returning plaintext message pt. This function can raise an OpenError or MessageLimitReachedError upon failure.",
      "ja": "- Open（key、nonce、aad、ct）：対称キーとノンセンを備えた関連データを使用して、ciphertextとタグCTを復号化し、プレーンテキストメッセージPtを返します。この関数は、障害時にOpenErrorまたはMessagelimitreachedErrorを上げることができます。"
    },
    {
      "indent": 12,
      "text": "- Nk: The length in bytes of a key for this algorithm.",
      "ja": "- NK：このアルゴリズムのキーのバイトの長さ。"
    },
    {
      "indent": 12,
      "text": "- Nn: The length in bytes of a nonce for this algorithm.",
      "ja": "- NN：このアルゴリズムの非CEのバイトの長さ。"
    },
    {
      "indent": 12,
      "text": "- Nt: The length in bytes of the authentication tag for this algorithm.",
      "ja": "- NT：このアルゴリズムの認証タグのバイトの長さ。"
    },
    {
      "indent": 3,
      "text": "Beyond the above, a KEM MAY also expose the following functions, whose behavior is detailed in Section 7.1.2:",
      "ja": "上記を超えて、KEMは次の機能を公開する場合があります。その動作はセクション7.1.2で詳述されています。"
    },
    {
      "indent": 6,
      "text": "* SerializePrivateKey(skX): Produce a byte string of length Nsk encoding the private key skX.",
      "ja": "* SerializePrivateKey（SKX）：秘密キーSKXをエンコードする長さNSKのバイト文字列を生成します。"
    },
    {
      "indent": 6,
      "text": "* DeserializePrivateKey(skXm): Parse a byte string of length Nsk to recover a private key. This function can raise a DeserializeError error upon skXm deserialization failure.",
      "ja": "* DeserializePrivateKey（SKXM）：長さNSKのバイト文字列を解析して、秘密鍵を回復します。この関数は、SKXMの敏arialializationの故障により、脱気体化エラーエラーを引き起こす可能性があります。"
    },
    {
      "indent": 3,
      "text": "A _ciphersuite_ is a triple (KEM, KDF, AEAD) containing a choice of algorithm for each primitive.",
      "ja": "_ciphersuite_は、各プリミティブのアルゴリズムの選択を含むトリプル（kem、kdf、aead）です。"
    },
    {
      "indent": 3,
      "text": "A set of algorithm identifiers for concrete instantiations of these primitives is provided in Section 7. Algorithm identifier values are two bytes long.",
      "ja": "これらのプリミティブの具体的なインスタンス化のためのアルゴリズム識別子のセットは、セクション7に記載されています。アルゴリズム識別子値は2バイトの長さです。"
    },
    {
      "indent": 3,
      "text": "Note that GenerateKeyPair can be implemented as DeriveKeyPair(random(Nsk)).",
      "ja": "GenerateKeypairは、deriveKeypair（ランダム（NSK））として実装できることに注意してください。"
    },
    {
      "indent": 3,
      "text": "The notation pk(skX), depending on its use and the KEM and its implementation, is either the computation of the public key using the private key, or just syntax expressing the retrieval of the public key, assuming it is stored along with the private key object.",
      "ja": "表記PK（SKX）は、その使用とKEMとその実装に応じて、プライベートキーを使用して公開キーを使用して公開キーの計算であるか、プライベートとともに保存されていると仮定して、公開キーの検索を表現する構文のみです。キーオブジェクト。"
    },
    {
      "indent": 3,
      "text": "The following two functions are defined to facilitate domain separation of KDF calls as well as context binding:",
      "ja": "次の2つの関数は、KDFコールのドメイン分離とコンテキストバインディングを促進するために定義されています。"
    },
    {
      "indent": 3,
      "text": "def LabeledExtract(salt, label, ikm):\n  labeled_ikm = concat(\"HPKE-v1\", suite_id, label, ikm)\n  return Extract(salt, labeled_ikm)\n\ndef LabeledExpand(prk, label, info, L):\n  labeled_info = concat(I2OSP(L, 2), \"HPKE-v1\", suite_id,\n                        label, info)\n  return Expand(prk, labeled_info, L)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The value of suite_id depends on where the KDF is used; it is assumed implicit from the implementation and not passed as a parameter. If used inside a KEM algorithm, suite_id MUST start with \"KEM\" and identify this KEM algorithm; if used in the remainder of HPKE, it MUST start with \"HPKE\" and identify the entire ciphersuite in use. See Sections 4.1 and 5.1 for details.",
      "ja": "suite_idの値は、KDFが使用される場所に依存します。実装から暗黙的であると想定されており、パラメーターとして渡されません。KEMアルゴリズム内で使用する場合、suite_idは「KEM」から始めて、このKEMアルゴリズムを識別する必要があります。HPKEの残りの部分で使用する場合は、「HPKE」から始めて、使用中のすべてのCiphersuiteを特定する必要があります。詳細については、セクション4.1および5.1を参照してください。"
    },
    {
      "indent": 0,
      "text": "4.1. DH-Based KEM (DHKEM)",
      "section_title": true,
      "ja": "4.1. DHベースのKEM（DHKEM）"
    },
    {
      "indent": 3,
      "text": "Suppose we are given a KDF, and a Diffie-Hellman (DH) group providing the following operations:",
      "ja": "KDFと、次の操作を提供するDiffie-Hellman（DH）グループが与えられているとします。"
    },
    {
      "indent": 6,
      "text": "* DH(skX, pkY): Perform a non-interactive Diffie-Hellman exchange using the private key skX and public key pkY to produce a Diffie-Hellman shared secret of length Ndh. This function can raise a ValidationError as described in Section 7.1.4.",
      "ja": "* DH（SKX、PKY）：秘密キーSKXと公開キーPKYを使用して、非対話型Diffie-Hellman Exchangeを実行して、長さNDHのDiffie-Hellmanの共有秘密を共有します。この関数は、セクション7.1.4で説明されているように、検証エラーを上げることができます。"
    },
    {
      "indent": 6,
      "text": "* Ndh: The length in bytes of a Diffie-Hellman shared secret produced by DH().",
      "ja": "* NDH：dh（）が生成したdiffie-hellmanの長さのバイトの共有秘密を共有しました。"
    },
    {
      "indent": 6,
      "text": "* Nsk: The length in bytes of a Diffie-Hellman private key.",
      "ja": "* NSK：Diffie-Hellmanの秘密鍵のバイトの長さ。"
    },
    {
      "indent": 3,
      "text": "Then we can construct a KEM that implements the interface defined in Section 4 called DHKEM(Group, KDF) in the following way, where Group denotes the Diffie-Hellman group and KDF denotes the KDF. The function parameters pkR and pkS are deserialized public keys, and enc is a serialized public key. Since encapsulated keys are Diffie-Hellman public keys in this KEM algorithm, we use SerializePublicKey() and DeserializePublicKey() to encode and decode them, respectively. Npk equals Nenc. GenerateKeyPair() produces a key pair for the Diffie-Hellman group in use. Section 7.1.3 contains the DeriveKeyPair() function specification for DHKEMs defined in this document.",
      "ja": "次に、DHKEM（グループ、KDF）と呼ばれるセクション4で定義されているインターフェイスを次の方法で実装するKEMを構築できます。グループでは、Diffie-HellmanグループとKDFがKDFを示します。関数パラメーターPKRとPKSは、脱色されたパブリックキーであり、ENCはシリアル化された公開キーです。カプセル化されたキーは、このKEMアルゴリズムのdiffie-hellmanパブリックキーであるため、Serializepublickey（）とdeserializepublickey（）を使用して、それぞれエンコードしてデコードします。NPKはNENCに等しくなります。GenerateKeypair（）は、使用中のdiffie-hellmanグループの重要なペアを生成します。セクション7.1.3には、このドキュメントで定義されているDHKEMのderiveKeypair（）関数仕様が含まれています。"
    },
    {
      "indent": 3,
      "text": "def ExtractAndExpand(dh, kem_context):\n  eae_prk = LabeledExtract(\"\", \"eae_prk\", dh)\n  shared_secret = LabeledExpand(eae_prk, \"shared_secret\",\n                                kem_context, Nsecret)\n  return shared_secret\n\ndef Encap(pkR):\n  skE, pkE = GenerateKeyPair()\n  dh = DH(skE, pkR)\n  enc = SerializePublicKey(pkE)\n\n  pkRm = SerializePublicKey(pkR)\n  kem_context = concat(enc, pkRm)\n\n  shared_secret = ExtractAndExpand(dh, kem_context)\n  return shared_secret, enc\n\ndef Decap(enc, skR):\n  pkE = DeserializePublicKey(enc)\n  dh = DH(skR, pkE)\n\n  pkRm = SerializePublicKey(pk(skR))\n  kem_context = concat(enc, pkRm)\n\n  shared_secret = ExtractAndExpand(dh, kem_context)\n  return shared_secret\n\ndef AuthEncap(pkR, skS):\n  skE, pkE = GenerateKeyPair()\n  dh = concat(DH(skE, pkR), DH(skS, pkR))\n  enc = SerializePublicKey(pkE)\n\n  pkRm = SerializePublicKey(pkR)\n  pkSm = SerializePublicKey(pk(skS))\n  kem_context = concat(enc, pkRm, pkSm)\n\n  shared_secret = ExtractAndExpand(dh, kem_context)\n  return shared_secret, enc\n\ndef AuthDecap(enc, skR, pkS):\n  pkE = DeserializePublicKey(enc)\n  dh = concat(DH(skR, pkE), DH(skR, pkS))\n\n  pkRm = SerializePublicKey(pk(skR))\n  pkSm = SerializePublicKey(pkS)\n  kem_context = concat(enc, pkRm, pkSm)\n\n  shared_secret = ExtractAndExpand(dh, kem_context)\n  return shared_secret",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The implicit suite_id value used within LabeledExtract and LabeledExpand is defined as follows, where kem_id is defined in Section 7.1:",
      "ja": "LabelEdextractおよびLabeleDexpandで使用される暗黙のsuite_id値は、次のように定義されます。ここで、KEM_IDはセクション7.1で定義されています。"
    },
    {
      "indent": 3,
      "text": "suite_id = concat(\"KEM\", I2OSP(kem_id, 2))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The KDF used in DHKEM can be equal to or different from the KDF used in the remainder of HPKE, depending on the chosen variant. Implementations MUST make sure to use the constants (Nh) and function calls (LabeledExtract and LabeledExpand) of the appropriate KDF when implementing DHKEM. See Section 9.3 for a comment on the choice of a KDF for the remainder of HPKE, and Section 9.6 for the rationale of the labels.",
      "ja": "DHKEMで使用されるKDFは、選択したバリアントに応じて、HPKEの残りの部分で使用されるKDFと等しいか異なる場合があります。実装は、DHKEMを実装する際に、適切なKDFの定数（NH）および関数呼び出し（LavedExtractおよびLaveledExpand）を必ず使用する必要があります。HPKEの残りのKDFの選択に関するコメントについては、ラベルの理論的根拠についてはセクション9.6については、セクション9.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "For the variants of DHKEM defined in this document, the size Nsecret of the KEM shared secret is equal to the output length of the hash function underlying the KDF. For P-256, P-384, and P-521, the size Ndh of the Diffie-Hellman shared secret is equal to 32, 48, and 66, respectively, corresponding to the x-coordinate of the resulting elliptic curve point [IEEE1363]. For X25519 and X448, the size Ndh is equal to 32 and 56, respectively (see [RFC7748], Section 5).",
      "ja": "このドキュメントで定義されているDHKEMのバリエーションの場合、KEM共有秘密のサイズのnsecretは、KDFの根底にあるハッシュ関数の出力長に等しくなります。p-256、p-384、およびp-521の場合、diffie-hellmanの共有秘密のサイズNDHは、それぞれ32、48、および66に等しく、結果の楕円曲線のX座標に対応しています[IEEE1363]。X25519およびX448の場合、サイズNDHはそれぞれ32と56に等しくなります（[RFC7748]、セクション5を参照）。"
    },
    {
      "indent": 3,
      "text": "It is important to note that the AuthEncap() and AuthDecap() functions of the DHKEM variants defined in this document are vulnerable to key-compromise impersonation (KCI). This means the assurance that the KEM shared secret was generated by the holder of the private key skS does not hold if the recipient private key skR is compromised. See Section 9.1 for more details.",
      "ja": "このドキュメントで定義されているDHKEMバリアントのauthEncap（）およびauthdecap（）関数は、キーコンプロマイズのなりすまし（KCI）に対して脆弱であることに注意することが重要です。これは、KEM共有秘密が秘密のキーSKSの所有者によって生成されたという保証を意味します。詳細については、セクション9.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "Senders and recipients MUST validate KEM inputs and outputs as described in Section 7.1.",
      "ja": "送信者と受信者は、セクション7.1で説明されているように、KEM入力と出力を検証する必要があります。"
    },
    {
      "indent": 0,
      "text": "5. Hybrid Public Key Encryption",
      "section_title": true,
      "ja": "5. ハイブリッド公開キー暗号化"
    },
    {
      "indent": 3,
      "text": "In this section, we define a few HPKE variants. All variants take a recipient public key and a sequence of plaintexts pt and produce an encapsulated key enc and a sequence of ciphertexts ct. These outputs are constructed so that only the holder of skR can decapsulate the key from enc and decrypt the ciphertexts. All the algorithms also take an info parameter that can be used to influence the generation of keys (e.g., to fold in identity information) and an aad parameter that provides additional authenticated data to the AEAD algorithm in use.",
      "ja": "このセクションでは、いくつかのHPKEバリエーションを定義します。すべてのバリアントは、受信者の公開キーと一連のプレーンテキストPTを取得し、カプセル化されたキーENCと一連の暗号文CTを生成します。これらの出力は、SKRの所有者のみがENCからキーを脱カプセル化し、暗号文を復号化できるように構築されます。すべてのアルゴリズムは、キーの生成に影響を与えるために使用できる情報パラメーター（例：ID情報の折りたたみ）と、使用中のAEADアルゴリズムに追加の認証されたデータを提供するAADパラメーターも使用します。"
    },
    {
      "indent": 3,
      "text": "In addition to the base case of encrypting to a public key, we include three authenticated variants: one that authenticates possession of a pre-shared key, one that authenticates possession of a KEM private key, and one that authenticates possession of both a pre-shared key and a KEM private key. All authenticated variants contribute additional keying material to the encryption operation. The following one-byte values will be used to distinguish between modes:",
      "ja": "公開鍵への暗号化の基本ケースに加えて、3つの認証されたバリエーションが含まれています。1つは、事前に共有されたキーの所有を認証するもの、KEMの秘密鍵の所有を認証するもの、および両方の事前の所有を認証するものを含むものを含みます。共有キーとKEMの秘密鍵。すべての認証されたバリアントは、暗号化操作に追加のキーイン材料を提供します。次の1バイト値を使用して、モードを区別します。"
    },
    {
      "indent": 25,
      "text": "+===============+=======+\n| Mode          | Value |\n+===============+=======+\n| mode_base     | 0x00  |\n+---------------+-------+\n| mode_psk      | 0x01  |\n+---------------+-------+\n| mode_auth     | 0x02  |\n+---------------+-------+\n| mode_auth_psk | 0x03  |\n+---------------+-------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 28,
      "text": "Table 1: HPKE Modes",
      "ja": "表1：HPKEモード"
    },
    {
      "indent": 3,
      "text": "All these cases follow the same basic two-step pattern:",
      "ja": "これらのすべてのケースは、同じ基本的な2段階のパターンに従います。"
    },
    {
      "indent": 8,
      "text": "1. Set up an encryption context that is shared between the sender and the recipient.",
      "ja": "1. 送信者と受信者の間で共有される暗号化コンテキストを設定します。"
    },
    {
      "indent": 8,
      "text": "2. Use that context to encrypt or decrypt content.",
      "ja": "2. そのコンテキストを使用して、コンテンツを暗号化または復号化します。"
    },
    {
      "indent": 3,
      "text": "A _context_ is an implementation-specific structure that encodes the AEAD algorithm and key in use, and manages the nonces used so that the same nonce is not used with multiple plaintexts. It also has an interface for exporting secret values, as described in Section 5.3. See Section 5.2 for a description of this structure and its interfaces. HPKE decryption fails when the underlying AEAD decryption fails.",
      "ja": "_Context_は、AEADアルゴリズムと使用キーをコードする実装固有の構造であり、同じノンセが複数のプレーンテキストで使用されないように使用されるNoncesを管理します。また、セクション5.3で説明されているように、秘密の値をエクスポートするためのインターフェイスもあります。この構造とそのインターフェイスの説明については、セクション5.2を参照してください。根底にあるAEAD復号化が失敗すると、HPKE復号化が失敗します。"
    },
    {
      "indent": 3,
      "text": "The constructions described here presume that the relevant non-private parameters (enc, psk_id, etc.) are transported between the sender and the recipient by some application making use of HPKE. Moreover, a recipient with more than one public key needs some way of determining which of its public keys was used for the encapsulation operation. As an example, applications may send this information alongside a ciphertext from the sender to the recipient. Specification of such a mechanism is left to the application. See Section 10 for more details.",
      "ja": "ここで説明する構造は、HPKEを使用するアプリケーションによって、関連する非プライベートパラメーター（ENC、PSK_IDなど）が送信者と受信者の間で輸送されると推測しています。さらに、複数の公開キーを持つ受信者は、カプセル化操作に使用された公開キーのどれを決定する何らかの方法が必要です。例として、アプリケーションは、送信者から受信者に暗号文とともにこの情報を送信する場合があります。このようなメカニズムの仕様は、アプリケーションに任されています。詳細については、セクション10を参照してください。"
    },
    {
      "indent": 3,
      "text": "Note that some KEMs may not support AuthEncap() or AuthDecap(). For such KEMs, only mode_base or mode_psk are supported. Future specifications which define new KEMs MUST indicate whether these modes are supported. See Section 7.1.5 for more details.",
      "ja": "一部のKEMはauthencap（）またはauthdecap（）をサポートしていない場合があることに注意してください。このようなKEMの場合、mode_baseまたはmode_pskのみがサポートされています。新しいKEMを定義する将来の仕様は、これらのモードがサポートされているかどうかを示す必要があります。詳細については、セクション7.1.5を参照してください。"
    },
    {
      "indent": 3,
      "text": "The procedures described in this section are laid out in a Python-like pseudocode. The algorithms in use are left implicit.",
      "ja": "このセクションで説明する手順は、Pythonのような擬似コードでレイアウトされています。使用されているアルゴリズムは暗黙のままです。"
    },
    {
      "indent": 0,
      "text": "5.1. Creating the Encryption Context",
      "section_title": true,
      "ja": "5.1. 暗号化コンテキストの作成"
    },
    {
      "indent": 3,
      "text": "The variants of HPKE defined in this document share a common key schedule that translates the protocol inputs into an encryption context. The key schedule inputs are as follows:",
      "ja": "このドキュメントで定義されているHPKEのバリエーションは、プロトコル入力を暗号化コンテキストに変換する共通のキースケジュールを共有しています。キースケジュールの入力は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "* mode: A one-byte value indicating the HPKE mode, defined in Table 1.",
      "ja": "* モード：表1で定義されているHPKEモードを示す1バイトの値。"
    },
    {
      "indent": 6,
      "text": "* shared_secret: A KEM shared secret generated for this transaction.",
      "ja": "* Shared_Secret：このトランザクションのために生成されたKEM共有秘密。"
    },
    {
      "indent": 6,
      "text": "* info: Application-supplied information (optional; default value \"\").",
      "ja": "* 情報：アプリケーションがサプリした情報（オプション、デフォルト値 \"\"）。"
    },
    {
      "indent": 6,
      "text": "* psk A pre-shared key (PSK) held by both the sender and the recipient (optional; default value \"\").",
      "ja": "* PSK送信者と受信者の両方が保有する事前共有キー（PSK）（オプション、デフォルト値 \"\"）。"
    },
    {
      "indent": 6,
      "text": "* psk_id: An identifier for the PSK (optional; default value \"\").",
      "ja": "* PSK_ID：PSKの識別子（オプション、デフォルト値 \"\"）。"
    },
    {
      "indent": 3,
      "text": "Senders and recipients MUST validate KEM inputs and outputs as described in Section 7.1.",
      "ja": "送信者と受信者は、セクション7.1で説明されているように、KEM入力と出力を検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "The psk and psk_id fields MUST appear together or not at all. That is, if a non-default value is provided for one of them, then the other MUST be set to a non-default value. This requirement is encoded in VerifyPSKInputs() below.",
      "ja": "PSKとPSK_IDフィールドは、まったく一緒に表示されるかどうかをまったく表示する必要があります。つまり、そのうちの1つに非デフォルト値が提供されている場合、もう1つは非デフォルト値に設定する必要があります。この要件は、以下のverifypskinputs（）でエンコードされています。"
    },
    {
      "indent": 3,
      "text": "The psk, psk_id, and info fields have maximum lengths that depend on the KDF itself, on the definition of LabeledExtract(), and on the constant labels used together with them. See Section 7.2.1 for precise limits on these lengths.",
      "ja": "PSK、PSK_ID、および情報フィールドは、KDF自体、LabelEdextract（）の定義、およびそれらと一緒に使用される定数ラベルに依存する最大長さを持っています。これらの長さの正確な制限については、セクション7.2.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "The key, base_nonce, and exporter_secret computed by the key schedule have the property that they are only known to the holder of the recipient private key, and the entity that used the KEM to generate shared_secret and enc.",
      "ja": "キー、base_nonce、およびexporter_secretキースケジュールによって計算されたexporter_secretには、受信者の秘密鍵の所有者のみに知られているプロパティと、kemを使用してshared_secretとencを生成するエンティティがあります。"
    },
    {
      "indent": 3,
      "text": "In the Auth and AuthPSK modes, the recipient is assured that the sender held the private key skS. This assurance is limited for the DHKEM variants defined in this document because of key-compromise impersonation, as described in Sections 4.1 and 9.1. If in the PSK and AuthPSK modes, the psk and psk_id arguments are provided as required, then the recipient is assured that the sender held the corresponding pre-shared key. See Section 9.1 for more details.",
      "ja": "AuthおよびAuthPSKモードでは、受信者は、送信者が秘密のキーSKSを保持していることを保証します。この保証は、セクション4.1および9.1で説明されているように、キーコンプロマのなりすましのためにこのドキュメントで定義されているDHKEMバリアントに対して制限されています。PSKモードとAuthPSKモードで、必要に応じてPSKおよびPSK_IDの引数が提供されている場合、受信者は、送信者が対応する事前共有キーを保持していることを保証します。詳細については、セクション9.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "The HPKE algorithm identifiers, i.e., the KEM kem_id, KDF kdf_id, and AEAD aead_id 2-byte code points, as defined in Tables 2, 3, and 5, respectively, are assumed implicit from the implementation and not passed as parameters. The implicit suite_id value used within LabeledExtract and LabeledExpand is defined based on them as follows:",
      "ja": "それぞれ表2、3、および5で定義されているように、HPKEアルゴリズム識別子、つまりKEM KEM_ID、KDF KDF_ID、およびAEAD_ID 2バイトコードポイントは、実装から暗黙的であり、パラメーターとして渡されないと想定されています。LabeleDextractおよびLabeleDexpandで使用される暗黙のsuite_id値は、次のようにそれらに基づいて定義されています。"
    },
    {
      "indent": 3,
      "text": "suite_id = concat(\n  \"HPKE\",\n  I2OSP(kem_id, 2),\n  I2OSP(kdf_id, 2),\n  I2OSP(aead_id, 2)\n)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "default_psk = \"\"\ndefault_psk_id = \"\"\n\ndef VerifyPSKInputs(mode, psk, psk_id):\n  got_psk = (psk != default_psk)\n  got_psk_id = (psk_id != default_psk_id)\n  if got_psk != got_psk_id:\n    raise Exception(\"Inconsistent PSK inputs\")\n\n  if got_psk and (mode in [mode_base, mode_auth]):\n    raise Exception(\"PSK input provided when not needed\")\n  if (not got_psk) and (mode in [mode_psk, mode_auth_psk]):\n    raise Exception(\"Missing required PSK input\")\n\ndef KeySchedule<ROLE>(mode, shared_secret, info, psk, psk_id):\n  VerifyPSKInputs(mode, psk, psk_id)\n\n  psk_id_hash = LabeledExtract(\"\", \"psk_id_hash\", psk_id)\n  info_hash = LabeledExtract(\"\", \"info_hash\", info)\n  key_schedule_context = concat(mode, psk_id_hash, info_hash)\n\n  secret = LabeledExtract(shared_secret, \"secret\", psk)\n\n  key = LabeledExpand(secret, \"key\", key_schedule_context, Nk)\n  base_nonce = LabeledExpand(secret, \"base_nonce\",\n                             key_schedule_context, Nn)\n  exporter_secret = LabeledExpand(secret, \"exp\",\n                                  key_schedule_context, Nh)\n\n  return Context<ROLE>(key, base_nonce, 0, exporter_secret)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The ROLE template parameter is either S or R, depending on the role of sender or recipient, respectively. See Section 5.2 for a discussion of the key schedule output, including the role-specific Context structure and its API.",
      "ja": "ロールテンプレートパラメーターは、それぞれ送信者または受信者の役割に応じて、SまたはRのいずれかです。ロール固有のコンテキスト構造とそのAPIを含む、主要なスケジュール出力の議論については、セクション5.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Note that the key_schedule_context construction in KeySchedule() is equivalent to serializing a structure of the following form in the TLS presentation syntax:",
      "ja": "keyschedule（）のkey_schedule_context構成は、TLSプレゼンテーションの構文の次の形式の構造をシリアル化することと同等であることに注意してください。"
    },
    {
      "indent": 3,
      "text": "struct {\n    uint8 mode;\n    opaque psk_id_hash[Nh];\n    opaque info_hash[Nh];\n} KeyScheduleContext;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.1.1. Encryption to a Public Key",
      "section_title": true,
      "ja": "5.1.1. 公開キーへの暗号化"
    },
    {
      "indent": 3,
      "text": "The most basic function of an HPKE scheme is to enable encryption to the holder of a given KEM private key. The SetupBaseS() and SetupBaseR() procedures establish contexts that can be used to encrypt and decrypt, respectively, for a given private key.",
      "ja": "HPKEスキームの最も基本的な機能は、特定のKEM秘密鍵の所有者に暗号化を有効にすることです。setupbase（）およびsetupbaser（）プロシージャは、特定の秘密鍵に対してそれぞれ暗号化と復号化に使用できるコンテキストを確立します。"
    },
    {
      "indent": 3,
      "text": "The KEM shared secret is combined via the KDF with information describing the key exchange, as well as the explicit info parameter provided by the caller.",
      "ja": "KEMの共有秘密は、KDFを介してキーエクスチェンジを説明する情報と、発信者が提供する明示的な情報パラメーターと組み合わせています。"
    },
    {
      "indent": 3,
      "text": "The parameter pkR is a public key, and enc is an encapsulated KEM shared secret.",
      "ja": "パラメーターPKRは公開鍵であり、ENCはカプセル化されたKEM共有秘密です。"
    },
    {
      "indent": 3,
      "text": "def SetupBaseS(pkR, info):\n  shared_secret, enc = Encap(pkR)\n  return enc, KeyScheduleS(mode_base, shared_secret, info,\n                           default_psk, default_psk_id)\n\ndef SetupBaseR(enc, skR, info):\n  shared_secret = Decap(enc, skR)\n  return KeyScheduleR(mode_base, shared_secret, info,\n                      default_psk, default_psk_id)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.1.2. Authentication Using a Pre-Shared Key",
      "section_title": true,
      "ja": "5.1.2. 事前に共有キーを使用した認証"
    },
    {
      "indent": 3,
      "text": "This variant extends the base mechanism by allowing the recipient to authenticate that the sender possessed a given PSK. The PSK also improves confidentiality guarantees in certain adversary models, as described in more detail in Section 9.1. We assume that both parties have been provisioned with both the PSK value psk and another byte string psk_id that is used to identify which PSK should be used.",
      "ja": "このバリアントは、受信者が送信者が特定のPSKを所有していることを認証できるようにすることにより、ベースメカニズムを拡張します。また、PSKは、セクション9.1で詳細に説明されているように、特定の敵モデルの機密保証を改善します。両当事者には、PSK値PSKと、どのPSKを使用する必要があるかを識別するために使用される別のバイト文字列PSK_IDの両方がプロビジョニングされていると仮定します。"
    },
    {
      "indent": 3,
      "text": "The primary difference from the base case is that the psk and psk_id values are used as ikm inputs to the KDF (instead of using the empty string).",
      "ja": "基本ケースとの主な違いは、PSKおよびPSK_ID値が（空の文字列を使用する代わりに）KDFへのIKM入力として使用されることです。"
    },
    {
      "indent": 3,
      "text": "The PSK MUST have at least 32 bytes of entropy and SHOULD be of length Nh bytes or longer. See Section 9.5 for a more detailed discussion.",
      "ja": "PSKには少なくとも32バイトのエントロピーが必要であり、長さのnhバイト以上でなければなりません。詳細については、セクション9.5を参照してください。"
    },
    {
      "indent": 3,
      "text": "def SetupPSKS(pkR, info, psk, psk_id):\n  shared_secret, enc = Encap(pkR)\n  return enc, KeyScheduleS(mode_psk, shared_secret, info,\n                           psk, psk_id)\n\ndef SetupPSKR(enc, skR, info, psk, psk_id):\n  shared_secret = Decap(enc, skR)\n  return KeyScheduleR(mode_psk, shared_secret, info, psk, psk_id)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.1.3. Authentication Using an Asymmetric Key",
      "section_title": true,
      "ja": "5.1.3. 非対称キーを使用した認証"
    },
    {
      "indent": 3,
      "text": "This variant extends the base mechanism by allowing the recipient to authenticate that the sender possessed a given KEM private key. This is because AuthDecap(enc, skR, pkS) produces the correct KEM shared secret only if the encapsulated value enc was produced by AuthEncap(pkR, skS), where skS is the private key corresponding to pkS. In other words, at most two entities (precisely two, in the case of DHKEM) could have produced this secret, so if the recipient is at most one, then the sender is the other with overwhelming probability.",
      "ja": "このバリアントは、受信者が特定のKEM秘密鍵を所有していることを受信者が認証できるようにすることにより、ベースメカニズムを拡張します。これは、authdecap（enc、skr、pks）が、カプセル化された値encがauthencap（pkr、sks）によって生成された場合にのみ正しいKem共有秘密を生成するためです。SKSはPKに対応する秘密鍵です。言い換えれば、せいぜい2つのエンティティ（DHKEMの場合は正確に2つ）がこの秘密を生み出すことができたので、受信者が最大1つである場合、送信者は圧倒的な確率を持つもう一方です。"
    },
    {
      "indent": 3,
      "text": "The primary difference from the base case is that the calls to Encap() and Decap() are replaced with calls to AuthEncap() and AuthDecap(), which add the sender public key to their internal context string. The function parameters pkR and pkS are public keys, and enc is an encapsulated KEM shared secret.",
      "ja": "ベースケースとの主な違いは、calls ancap（）とdecap（）への呼び出しが、authencap（）およびauthdecap（）への呼び出しに置き換えられ、送信者の公開キーを内部コンテキスト文字列に追加することです。関数パラメーターPKRとPKSはパブリックキーであり、ENCはカプセル化されたKEM共有秘密です。"
    },
    {
      "indent": 3,
      "text": "Obviously, this variant can only be used with a KEM that provides AuthEncap() and AuthDecap() procedures.",
      "ja": "明らかに、このバリアントは、authencap（）およびauthdecap（）手順を提供するKEMでのみ使用できます。"
    },
    {
      "indent": 3,
      "text": "This mechanism authenticates only the key pair of the sender, not any other identifier. If an application wishes to bind HPKE ciphertexts or exported secrets to another identity for the sender (e.g., an email address or domain name), then this identifier should be included in the info parameter to avoid identity misbinding issues [IMB].",
      "ja": "このメカニズムは、他の識別子ではなく、送信者のキーペアのみを認証します。アプリケーションがHPKE暗号文またはエクスポートされた秘密を送信者の別のアイデンティティにバインドしたい場合（たとえば、電子メールアドレスまたはドメイン名）、この識別子をINDOWパラメーターに含める必要があります[IMB]。"
    },
    {
      "indent": 3,
      "text": "def SetupAuthS(pkR, info, skS):\n  shared_secret, enc = AuthEncap(pkR, skS)\n  return enc, KeyScheduleS(mode_auth, shared_secret, info,\n                           default_psk, default_psk_id)\n\ndef SetupAuthR(enc, skR, info, pkS):\n  shared_secret = AuthDecap(enc, skR, pkS)\n  return KeyScheduleR(mode_auth, shared_secret, info,\n                      default_psk, default_psk_id)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.1.4. Authentication Using Both a PSK and an Asymmetric Key",
      "section_title": true,
      "ja": "5.1.4. PSKと非対称キーの両方を使用した認証"
    },
    {
      "indent": 3,
      "text": "This mode is a straightforward combination of the PSK and authenticated modes. Like the PSK mode, a PSK is provided as input to the key schedule, and like the authenticated mode, authenticated KEM variants are used.",
      "ja": "このモードは、PSKと認証されたモードの簡単な組み合わせです。PSKモードと同様に、PSKはキースケジュールへの入力として提供され、認証されたモードと同様に、認証されたKEMバリアントが使用されます。"
    },
    {
      "indent": 3,
      "text": "def SetupAuthPSKS(pkR, info, psk, psk_id, skS):\n  shared_secret, enc = AuthEncap(pkR, skS)\n  return enc, KeyScheduleS(mode_auth_psk, shared_secret, info,\n                           psk, psk_id)\n\ndef SetupAuthPSKR(enc, skR, info, psk, psk_id, pkS):\n  shared_secret = AuthDecap(enc, skR, pkS)\n  return KeyScheduleR(mode_auth_psk, shared_secret, info,\n                      psk, psk_id)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The PSK MUST have at least 32 bytes of entropy and SHOULD be of length Nh bytes or longer. See Section 9.5 for a more detailed discussion.",
      "ja": "PSKには少なくとも32バイトのエントロピーが必要であり、長さのnhバイト以上でなければなりません。詳細については、セクション9.5を参照してください。"
    },
    {
      "indent": 0,
      "text": "5.2. Encryption and Decryption",
      "section_title": true,
      "ja": "5.2. 暗号化と復号化"
    },
    {
      "indent": 3,
      "text": "HPKE allows multiple encryption operations to be done based on a given setup transaction. Since the public key operations involved in setup are typically more expensive than symmetric encryption or decryption, this allows applications to amortize the cost of the public key operations, reducing the overall overhead.",
      "ja": "HPKEを使用すると、特定のセットアップトランザクションに基づいて複数の暗号化操作を実行できます。セットアップに関与する公開キー操作は通常、対称的な暗号化や復号化よりも高価であるため、アプリケーションは公開キー運用のコストを償却できるため、オーバーヘッド全体が削減されます。"
    },
    {
      "indent": 3,
      "text": "In order to avoid nonce reuse, however, this encryption must be stateful. Each of the setup procedures above produces a role-specific context object that stores the AEAD and secret export parameters. The AEAD parameters consist of:",
      "ja": "ただし、非CEの再利用を避けるために、この暗号化はステートフルでなければなりません。上記の各セットアップ手順は、AEADおよび秘密のエクスポートパラメーターを保存するロール固有のコンテキストオブジェクトを生成します。AEADパラメーターは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "* The AEAD algorithm in use",
      "ja": "* 使用中のAEADアルゴリズム"
    },
    {
      "indent": 6,
      "text": "* A secret key",
      "ja": "* 秘密の鍵"
    },
    {
      "indent": 6,
      "text": "* A base nonce base_nonce",
      "ja": "* ベースNonce base_nonce"
    },
    {
      "indent": 6,
      "text": "* A sequence number (initially 0)",
      "ja": "* シーケンス番号（最初は0）"
    },
    {
      "indent": 3,
      "text": "The secret export parameters consist of:",
      "ja": "秘密のエクスポートパラメーターは次のとおりです。"
    },
    {
      "indent": 6,
      "text": "* The HPKE ciphersuite in use and",
      "ja": "* 使用中のhpke ciphersuiteおよび"
    },
    {
      "indent": 6,
      "text": "* An exporter_secret used for the secret export interface (see Section 5.3)",
      "ja": "* Secret Export Interfaceに使用されるExporter_Secret（セクション5.3を参照）"
    },
    {
      "indent": 3,
      "text": "All these parameters except the AEAD sequence number are constant. The sequence number provides nonce uniqueness: The nonce used for each encryption or decryption operation is the result of XORing base_nonce with the current sequence number, encoded as a big-endian integer of the same length as base_nonce. Implementations MAY use a sequence number that is shorter than the nonce length (padding on the left with zero), but MUST raise an error if the sequence number overflows. The AEAD algorithm produces ciphertext that is Nt bytes longer than the plaintext. Nt = 16 for AEAD algorithms defined in this document.",
      "ja": "AEADシーケンス番号を除くこれらすべてのパラメーターは一定です。シーケンス番号は、NonCeの一意性を提供します。各暗号化または復号化操作に使用されるNonCEは、base_nonceと同じ長さのビッグエンディアン整数としてエンコードされた現在のシーケンス番号を持つXoring base_nonceの結果です。実装では、NonCeの長さ（左側のパディングがゼロ）よりも短いシーケンス番号を使用する場合がありますが、シーケンス番号がオーバーフローする場合はエラーを上げる必要があります。AEADアルゴリズムは、プレーンテキストよりも長いntバイトである暗号文を生成します。このドキュメントで定義されているAEADアルゴリズムのNT = 16。"
    },
    {
      "indent": 3,
      "text": "Encryption is unidirectional from sender to recipient. The sender's context can encrypt a plaintext pt with associated data aad as follows:",
      "ja": "暗号化は、送信者から受信者への一方向です。送信者のコンテキストは、次のように、関連データを使用してプレーンテキストPTを暗号化できます。"
    },
    {
      "indent": 3,
      "text": "def ContextS.Seal(aad, pt):\n  ct = Seal(self.key, self.ComputeNonce(self.seq), aad, pt)\n  self.IncrementSeq()\n  return ct",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The recipient's context can decrypt a ciphertext ct with associated data aad as follows:",
      "ja": "受信者のコンテキストは、次のように、関連するデータを使用して暗号文CTを復号化できます。"
    },
    {
      "indent": 3,
      "text": "def ContextR.Open(aad, ct):\n  pt = Open(self.key, self.ComputeNonce(self.seq), aad, ct)\n  if pt == OpenError:\n    raise OpenError\n  self.IncrementSeq()\n  return pt",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Each encryption or decryption operation increments the sequence number for the context in use. The per-message nonce and sequence number increment details are as follows:",
      "ja": "各暗号化または復号化操作は、使用中のコンテキストのシーケンス番号を増加させます。メッセージごとのノンセとシーケンス数の増分の詳細は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "def Context<ROLE>.ComputeNonce(seq):\n  seq_bytes = I2OSP(seq, Nn)\n  return xor(self.base_nonce, seq_bytes)\n\ndef Context<ROLE>.IncrementSeq():\n  if self.seq >= (1 << (8*Nn)) - 1:\n    raise MessageLimitReachedError\n  self.seq += 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The sender's context MUST NOT be used for decryption. Similarly, the recipient's context MUST NOT be used for encryption. Higher-level protocols reusing the HPKE key exchange for more general purposes can derive separate keying material as needed using use the secret export interface; see Sections 5.3 and 9.8 for more details.",
      "ja": "送信者のコンテキストは、復号化に使用してはなりません。同様に、受信者のコンテキストを暗号化に使用してはなりません。より一般的な目的でHPKEキー交換を再利用する高レベルのプロトコルは、秘密エクスポートインターフェイスを使用して必要に応じて個別のキーイング材料を導き出すことができます。詳細については、セクション5.3および9.8を参照してください。"
    },
    {
      "indent": 3,
      "text": "It is up to the application to ensure that encryptions and decryptions are done in the proper sequence, so that encryption and decryption nonces align. If ContextS.Seal() or ContextR.Open() would cause the seq field to overflow, then the implementation MUST fail with an error. (In the pseudocode below, Context<ROLE>.IncrementSeq() fails with an error when seq overflows, which causes ContextS.Seal() and ContextR.Open() to fail accordingly.) Note that the internal Seal() and Open() calls inside correspond to the context's AEAD algorithm.",
      "ja": "暗号化と復号が適切なシーケンスで行われるようにするのは、アプリケーション次第であり、暗号化と復号化の非能力が一致するようにします。contexts.seal（）またはcontextr.open（）がseqフィールドをオーバーフローする場合、エラーで実装が失敗する必要があります。（以下の擬似コードでは、Context <lole> .incrementSeq（）がseqオーバーフローの場合、エラーで失敗します。）内部の呼び出しは、コンテキストのAEADアルゴリズムに対応します。"
    },
    {
      "indent": 0,
      "text": "5.3. Secret Export",
      "section_title": true,
      "ja": "5.3. 秘密の輸出"
    },
    {
      "indent": 3,
      "text": "HPKE provides an interface for exporting secrets from the encryption context using a variable-length pseudorandom function (PRF), similar to the TLS 1.3 exporter interface (see [RFC8446], Section 7.5). This interface takes as input a context string exporter_context and a desired length L in bytes, and produces a secret derived from the internal exporter secret using the corresponding KDF Expand function. For the KDFs defined in this specification, L has a maximum value of 255*Nh. Future specifications that define new KDFs MUST specify a bound for L.",
      "ja": "HPKEは、TLS 1.3 Exporterインターフェイスと同様に、可変長の擬似ランダム関数（PRF）を使用して、暗号化コンテキストから秘密をエクスポートするためのインターフェイスを提供します（[RFC8446]、セクション7.5を参照）。このインターフェイスは、入力としてコンテキスト文字列exporter_contextとバイト内の希望の長さlを取得し、対応するKDF展開関数を使用して内部輸出者の秘密から派生した秘密を生成します。この仕様で定義されているKDFSの場合、Lの最大値は255*nhです。新しいKDFを定義する将来の仕様は、Lの境界を指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "The exporter_context field has a maximum length that depends on the KDF itself, on the definition of LabeledExpand(), and on the constant labels used together with them. See Section 7.2.1 for precise limits on this length.",
      "ja": "Exporter_Contextフィールドは、KDF自体、LabelEdexpand（）の定義、およびそれらと一緒に使用される定数ラベルに依存する最大長さを持っています。この長さの正確な制限については、セクション7.2.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "def Context.Export(exporter_context, L):\n  return LabeledExpand(self.exporter_secret, \"sec\",\n                       exporter_context, L)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Applications that do not use the encryption API in Section 5.2 can use the export-only AEAD ID 0xFFFF when computing the key schedule. Such applications can avoid computing the key and base_nonce values in the key schedule, as they are not used by the Export interface described above.",
      "ja": "セクション5.2で暗号化APIを使用しないアプリケーションは、キースケジュールを計算するときにエクスポートのみのAEAD ID 0xffffを使用できます。このようなアプリケーションは、上記のエクスポートインターフェイスでは使用されていないため、キースケジュールでキーとbase_nonce値の計算を避けることができます。"
    },
    {
      "indent": 0,
      "text": "6. Single-Shot APIs",
      "section_title": true,
      "ja": "6. シングルショットAPI"
    },
    {
      "indent": 0,
      "text": "6.1. Encryption and Decryption",
      "section_title": true,
      "ja": "6.1. 暗号化と復号化"
    },
    {
      "indent": 3,
      "text": "In many cases, applications encrypt only a single message to a recipient's public key. This section provides templates for HPKE APIs that implement stateless \"single-shot\" encryption and decryption using APIs specified in Sections 5.1.1 and 5.2:",
      "ja": "多くの場合、アプリケーションは受信者の公開キーに単一のメッセージのみを暗号化します。このセクションでは、セクション5.1.1および5.2で指定されたAPIを使用して、ステートレスの「シングルショット」暗号化と復号化を実装するHPKE APIのテンプレートを提供します。"
    },
    {
      "indent": 3,
      "text": "def Seal<MODE>(pkR, info, aad, pt, ...):\n  enc, ctx = Setup<MODE>S(pkR, info, ...)\n  ct = ctx.Seal(aad, pt)\n  return enc, ct\n\ndef Open<MODE>(enc, skR, info, aad, ct, ...):\n  ctx = Setup<MODE>R(enc, skR, info, ...)\n  return ctx.Open(aad, ct)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The MODE template parameter is one of Base, PSK, Auth, or AuthPSK. The optional parameters indicated by \"...\" depend on MODE and may be empty. For example, SetupBase() has no additional parameters. SealAuthPSK() and OpenAuthPSK() would be implemented as follows:",
      "ja": "モードテンプレートパラメーターは、ベース、PSK、AUTH、またはAuthPSKの1つです。「...」で示されるオプションのパラメーターは、モードに依存し、空である可能性があります。たとえば、setupbase（）には追加のパラメーターがありません。SEALAUTHPSK（）およびOpenAuthPSK（）は次のように実装されます。"
    },
    {
      "indent": 3,
      "text": "def SealAuthPSK(pkR, info, aad, pt, psk, psk_id, skS):\n  enc, ctx = SetupAuthPSKS(pkR, info, psk, psk_id, skS)\n  ct = ctx.Seal(aad, pt)\n  return enc, ct\n\ndef OpenAuthPSK(enc, skR, info, aad, ct, psk, psk_id, pkS):\n  ctx = SetupAuthPSKR(enc, skR, info, psk, psk_id, pkS)\n  return ctx.Open(aad, ct)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.2. Secret Export",
      "section_title": true,
      "ja": "6.2. 秘密の輸出"
    },
    {
      "indent": 3,
      "text": "Applications may also want to derive a secret known only to a given recipient. This section provides templates for HPKE APIs that implement stateless \"single-shot\" secret export using APIs specified in Section 5.3:",
      "ja": "アプリケーションは、特定の受信者のみに知られている秘密を導き出すこともできます。このセクションでは、セクション5.3で指定されたAPIを使用して、ステートレスの「シングルショット」シークレットエクスポートを実装するHPKE APIのテンプレートを提供します。"
    },
    {
      "indent": 3,
      "text": "def SendExport<MODE>(pkR, info, exporter_context, L, ...):\n  enc, ctx = Setup<MODE>S(pkR, info, ...)\n  exported = ctx.Export(exporter_context, L)\n  return enc, exported\n\ndef ReceiveExport<MODE>(enc, skR, info, exporter_context, L, ...):\n  ctx = Setup<MODE>R(enc, skR, info, ...)\n  return ctx.Export(exporter_context, L)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "As in Section 6.1, the MODE template parameter is one of Base, PSK, Auth, or AuthPSK. The optional parameters indicated by \"...\" depend on MODE and may be empty.",
      "ja": "セクション6.1と同様に、モードテンプレートパラメーターは、ベース、PSK、AUTH、またはAuthPSKの1つです。「...」で示されるオプションのパラメーターは、モードに依存し、空である可能性があります。"
    },
    {
      "indent": 0,
      "text": "7. Algorithm Identifiers",
      "section_title": true,
      "ja": "7. アルゴリズム識別子"
    },
    {
      "indent": 3,
      "text": "This section lists algorithm identifiers suitable for different HPKE configurations. Future specifications may introduce new KEM, KDF, and AEAD algorithm identifiers and retain the security guarantees presented in this document provided they adhere to the security requirements in Sections 9.2, 9.3, and 9.4, respectively.",
      "ja": "このセクションには、さまざまなHPKE構成に適したアルゴリズム識別子をリストします。将来の仕様では、新しいKEM、KDF、およびAEADアルゴリズム識別子を導入し、それぞれセクション9.2、9.3、および9.4のセキュリティ要件を遵守することを条件に、このドキュメントに提示されたセキュリティ保証を保持する場合があります。"
    },
    {
      "indent": 0,
      "text": "7.1. Key Encapsulation Mechanisms (KEMs)",
      "section_title": true,
      "ja": "7.1. キーカプセル化メカニズム（KEMS）"
    },
    {
      "indent": 3,
      "text": "+======+===============+=========+====+===+===+====+===============+\n|Value | KEM           | Nsecret |Nenc|Npk|Nsk|Auth| Reference     |\n+======+===============+=========+====+===+===+====+===============+\n|0x0000| Reserved      | N/A     |N/A |N/A|N/A|yes | RFC 9180      |\n+------+---------------+---------+----+---+---+----+---------------+\n|0x0010| DHKEM(P-256,  | 32      |65  |65 |32 |yes | [NISTCurves], |\n|      | HKDF-SHA256)  |         |    |   |   |    | [RFC5869]     |\n+------+---------------+---------+----+---+---+----+---------------+\n|0x0011| DHKEM(P-384,  | 48      |97  |97 |48 |yes | [NISTCurves], |\n|      | HKDF-SHA384)  |         |    |   |   |    | [RFC5869]     |\n+------+---------------+---------+----+---+---+----+---------------+\n|0x0012| DHKEM(P-521,  | 64      |133 |133|66 |yes | [NISTCurves], |\n|      | HKDF-SHA512)  |         |    |   |   |    | [RFC5869]     |\n+------+---------------+---------+----+---+---+----+---------------+\n|0x0020| DHKEM(X25519, | 32      |32  |32 |32 |yes | [RFC5869],    |\n|      | HKDF-SHA256)  |         |    |   |   |    | [RFC7748]     |\n+------+---------------+---------+----+---+---+----+---------------+\n|0x0021| DHKEM(X448,   | 64      |56  |56 |56 |yes | [RFC5869],    |\n|      | HKDF-SHA512)  |         |    |   |   |    | [RFC7748]     |\n+------+---------------+---------+----+---+---+----+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 29,
      "text": "Table 2: KEM IDs",
      "ja": "表2：KEM ID"
    },
    {
      "indent": 3,
      "text": "The Auth column indicates if the KEM algorithm provides the AuthEncap()/AuthDecap() interface and is therefore suitable for the Auth and AuthPSK modes. The meaning of all other columns is explained in Section 11.1. All algorithms are suitable for the PSK mode.",
      "ja": "AUTH列は、KEMアルゴリズムがauthencap（）/authdecap（）インターフェイスを提供するかどうかを示しているため、authおよびauthpskモードに適しています。他のすべての列の意味は、セクション11.1で説明されています。すべてのアルゴリズムは、PSKモードに適しています。"
    },
    {
      "indent": 0,
      "text": "7.1.1. SerializePublicKey and DeserializePublicKey",
      "section_title": true,
      "ja": "7.1.1. serializepublickeyとdeserializepublickey"
    },
    {
      "indent": 3,
      "text": "For P-256, P-384, and P-521, the SerializePublicKey() function of the KEM performs the uncompressed Elliptic-Curve-Point-to-Octet-String conversion according to [SECG]. DeserializePublicKey() performs the uncompressed Octet-String-to-Elliptic-Curve-Point conversion.",
      "ja": "P-256、P-384、およびP-521の場合、KEMのserializepublickey（）関数は、[secg]に従って非圧縮されていない楕円曲線ポイントからオクセットのストリング変換を実行します。Deserializepublickey（）は、圧縮されていないOctet-String-to-Elliptic-Curve-Point変換を実行します。"
    },
    {
      "indent": 3,
      "text": "For X25519 and X448, the SerializePublicKey() and DeserializePublicKey() functions are the identity function, since these curves already use fixed-length byte strings for public keys.",
      "ja": "x25519およびx448の場合、serializepublickey（）およびdeserializepublickey（）関数はID関数です。これらの曲線はすでにパブリックキーに固定長バイト文字列を使用しているためです。"
    },
    {
      "indent": 3,
      "text": "Some deserialized public keys MUST be validated before they can be used. See Section 7.1.4 for specifics.",
      "ja": "一部のaserialized Public Keysを使用する前に検証する必要があります。詳細については、セクション7.1.4を参照してください。"
    },
    {
      "indent": 0,
      "text": "7.1.2. SerializePrivateKey and DeserializePrivateKey",
      "section_title": true,
      "ja": "7.1.2. serializeprivatekeyとdeserializeprivatekey"
    },
    {
      "indent": 3,
      "text": "As per [SECG], P-256, P-384, and P-521 private keys are field elements in the scalar field of the curve being used. For this section, and for Section 7.1.3, it is assumed that implementors of ECDH over these curves use an integer representation of private keys that is compatible with the OS2IP() function.",
      "ja": "[SECG]によると、P-256、P-384、およびP-521プライベートキーは、使用されている曲線のスカラーフィールドのフィールド要素です。このセクション、およびセクション7.1.3の場合、これらの曲線を介したECDHの実装者は、OS2IP（）関数と互換性のあるプライベートキーの整数表現を使用していると想定されています。"
    },
    {
      "indent": 3,
      "text": "For P-256, P-384, and P-521, the SerializePrivateKey() function of the KEM performs the Field-Element-to-Octet-String conversion according to [SECG]. If the private key is an integer outside the range [0, order-1], where order is the order of the curve being used, the private key MUST be reduced to its representative in [0, order-1] before being serialized. DeserializePrivateKey() performs the Octet-String-to-Field-Element conversion according to [SECG].",
      "ja": "P-256、P-384、およびP-521の場合、KEMのserializeprivatekey（）関数は、[secg]に従ってフィールド要素からオクセットのストリングへの変換を実行します。秘密鍵が範囲[0、順序1]の外側の整数である場合、順序は使用される曲線の順序である場合、秘密鍵は、シリアル化する前に[0、順序1]の代表者に削減する必要があります。DeserializePrivateKey（）は、[secg]に従ってオクテットストリングからフィールドへの要素変換を実行します。"
    },
    {
      "indent": 3,
      "text": "For X25519 and X448, private keys are identical to their byte string representation, so little processing has to be done. The SerializePrivateKey() function MUST clamp its output and the DeserializePrivateKey() function MUST clamp its input, where _clamping_ refers to the bitwise operations performed on k in the decodeScalar25519() and decodeScalar448() functions defined in Section 5 of [RFC7748].",
      "ja": "X25519およびX448の場合、プライベートキーはバイト文字列表現と同一であるため、処理を行う必要はほとんどありません。serializeprivatekey（）関数は出力をクランプする必要があり、deserializeprivatekey（）関数は入力をクランプする必要があります。"
    },
    {
      "indent": 3,
      "text": "To catch invalid keys early on, implementors of DHKEMs SHOULD check that deserialized private keys are not equivalent to 0 (mod order), where order is the order of the DH group. Note that this property is trivially true for X25519 and X448 groups, since clamped values can never be 0 (mod order).",
      "ja": "早い段階で無効なキーをキャッチするには、DHKEMSの実装者が、脱色されたプライベートキーが0（mod順序）に相当しないことを確認する必要があります。ここで、順序はDHグループの順序です。クランプされた値が0になることはないため、このプロパティはx25519およびx448グループに些細なことに当てはまることに注意してください。"
    },
    {
      "indent": 0,
      "text": "7.1.3. DeriveKeyPair",
      "section_title": true,
      "ja": "7.1.3. derivekeypair"
    },
    {
      "indent": 3,
      "text": "The keys that DeriveKeyPair() produces have only as much entropy as the provided input keying material. For a given KEM, the ikm parameter given to DeriveKeyPair() SHOULD have length at least Nsk, and SHOULD have at least Nsk bytes of entropy.",
      "ja": "DeriveKeypair（）が生成するキーは、提供された入力キーイング材料と同じくらいのエントロピーしかありません。特定のKEMの場合、deriveKeypair（）に与えられたIKMパラメーターは、少なくともNSKの長さを持つ必要があり、少なくともNSKバイトのエントロピーが必要です。"
    },
    {
      "indent": 3,
      "text": "All invocations of KDF functions (such as LabeledExtract or LabeledExpand) in any DHKEM's DeriveKeyPair() function use the DHKEM's associated KDF (as opposed to the ciphersuite's KDF).",
      "ja": "dhkemのdhkemのderivekeypair（）関数におけるKDF関数（LabeleDextractまたはLabeledExpandなど）のすべての呼び出し（CiphersuiteのKDFとは対照的に）を使用します。"
    },
    {
      "indent": 3,
      "text": "For P-256, P-384, and P-521, the DeriveKeyPair() function of the KEM performs rejection sampling over field elements:",
      "ja": "P-256、P-384、およびP-521の場合、KEMのderiveKeypair（）関数は、フィールド要素に対する拒絶サンプリングを実行します。"
    },
    {
      "indent": 3,
      "text": "def DeriveKeyPair(ikm):\n  dkp_prk = LabeledExtract(\"\", \"dkp_prk\", ikm)\n  sk = 0\n  counter = 0\n  while sk == 0 or sk >= order:\n    if counter > 255:\n      raise DeriveKeyPairError\n    bytes = LabeledExpand(dkp_prk, \"candidate\",\n                          I2OSP(counter, 1), Nsk)\n    bytes[0] = bytes[0] & bitmask\n    sk = OS2IP(bytes)\n    counter = counter + 1\n  return (sk, pk(sk))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "order is the order of the curve being used (see Section D.1.2 of [NISTCurves]), and is listed below for completeness.",
      "ja": "順序は、使用される曲線の順序です（[nistcurves]のセクションD.1.2を参照）、完全性については以下にリストされています。"
    },
    {
      "indent": 3,
      "text": "P-256:\n0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551\n\nP-384:\n0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf\n  581a0db248b0a77aecec196accc52973\n\nP-521:\n0x01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n  fa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "bitmask is defined to be 0xFF for P-256 and P-384, and 0x01 for P-521. The precise likelihood of DeriveKeyPair() failing with DeriveKeyPairError depends on the group being used, but it is negligibly small in all cases. See Section 8.2 for information about dealing with such failures.",
      "ja": "ビットマスクは、p-256では0xffおよびp-384で、p-521で0x01と定義されています。derivekeypairerrorで失敗するderivekeypair（）の正確な可能性は、使用されているグループに依存しますが、すべての場合には無視できるほど小さいです。このような障害の処理については、セクション8.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "For X25519 and X448, the DeriveKeyPair() function applies a KDF to the input:",
      "ja": "x25519およびx448の場合、derivekeypair（）関数はkdfを入力に適用します。"
    },
    {
      "indent": 3,
      "text": "def DeriveKeyPair(ikm):\n  dkp_prk = LabeledExtract(\"\", \"dkp_prk\", ikm)\n  sk = LabeledExpand(dkp_prk, \"sk\", \"\", Nsk)\n  return (sk, pk(sk))",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.1.4. Validation of Inputs and Outputs",
      "section_title": true,
      "ja": "7.1.4. 入力と出力の検証"
    },
    {
      "indent": 3,
      "text": "The following public keys are subject to validation if the group requires public key validation: the sender MUST validate the recipient's public key pkR; the recipient MUST validate the ephemeral public key pkE; in authenticated modes, the recipient MUST validate the sender's static public key pkS. Validation failure yields a ValidationError.",
      "ja": "グループが公開キーの検証を必要とする場合、次のパブリックキーは検証の対象となります。送信者は、受信者の公開キーPKRを検証する必要があります。受信者は、一時的な公開キーPKEを検証する必要があります。認証されたモードでは、受信者は送信者の静的公開キーPKを検証する必要があります。検証の障害により、検証エラーが得られます。"
    },
    {
      "indent": 3,
      "text": "For P-256, P-384, and P-521, senders and recipients MUST perform partial public key validation on all public key inputs, as defined in Section 5.6.2.3.4 of [keyagreement]. This includes checking that the coordinates are in the correct range, that the point is on the curve, and that the point is not the point at infinity. Additionally, senders and recipients MUST ensure the Diffie-Hellman shared secret is not the point at infinity.",
      "ja": "P-256、P-384、およびP-521の場合、送信者と受信者は、[KeyAgreement]のセクション5.6.2.3.4で定義されているように、すべての公開キー入力で部分的な公開キー検証を実行する必要があります。これには、座標が正しい範囲にあること、ポイントが曲線上にあること、およびポイントが無限のポイントではないことを確認することが含まれます。さらに、送信者と受信者は、Diffie-Hellmanの共有秘密が無限のポイントではないことを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "For X25519 and X448, public keys and Diffie-Hellman outputs MUST be validated as described in [RFC7748]. In particular, recipients MUST check whether the Diffie-Hellman shared secret is the all-zero value and abort if so.",
      "ja": "X25519およびX448の場合、[RFC7748]に記載されているように、パブリックキーとdiffie-hellman出力を検証する必要があります。特に、受信者は、diffie-hellmanの共有秘密がすべてゼロ値であるかどうかを確認する必要があり、もしそうなら中止する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.1.5. Future KEMs",
      "section_title": true,
      "ja": "7.1.5. 将来のケム"
    },
    {
      "indent": 3,
      "text": "Section 9.2 lists security requirements on a KEM used within HPKE.",
      "ja": "セクション9.2には、HPKE内で使用されるKEMのセキュリティ要件を示します。"
    },
    {
      "indent": 3,
      "text": "The AuthEncap() and AuthDecap() functions are OPTIONAL. If a KEM algorithm does not provide them, only the Base and PSK modes of HPKE are supported. Future specifications that define new KEMs MUST indicate whether or not Auth and AuthPSK modes are supported.",
      "ja": "authencap（）およびauthdecap（）関数はオプションです。KEMアルゴリズムがそれらを提供しない場合、HPKEのベースモードとPSKモードのみがサポートされています。新しいKEMを定義する将来の仕様は、認証モードとAuthPSKモードがサポートされているかどうかを示す必要があります。"
    },
    {
      "indent": 3,
      "text": "A KEM algorithm may support different encoding algorithms, with different output lengths, for KEM public keys. Such KEM algorithms MUST specify only one encoding algorithm whose output length is Npk.",
      "ja": "KEMアルゴリズムは、KEMパブリックキーに対して、異なる出力の長さの異なるエンコードアルゴリズムをサポートする場合があります。このようなKEMアルゴリズムは、出力長がNPKである1つのエンコードアルゴリズムのみを指定する必要があります。"
    },
    {
      "indent": 0,
      "text": "7.2. Key Derivation Functions (KDFs)",
      "section_title": true,
      "ja": "7.2. キー派生関数（KDFS）"
    },
    {
      "indent": 16,
      "text": "+========+=============+=====+===========+\n| Value  | KDF         | Nh  | Reference |\n+========+=============+=====+===========+\n| 0x0000 | Reserved    | N/A | RFC 9180  |\n+--------+-------------+-----+-----------+\n| 0x0001 | HKDF-SHA256 | 32  | [RFC5869] |\n+--------+-------------+-----+-----------+\n| 0x0002 | HKDF-SHA384 | 48  | [RFC5869] |\n+--------+-------------+-----+-----------+\n| 0x0003 | HKDF-SHA512 | 64  | [RFC5869] |\n+--------+-------------+-----+-----------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 29,
      "text": "Table 3: KDF IDs",
      "ja": "表3：KDF ID"
    },
    {
      "indent": 0,
      "text": "7.2.1. Input Length Restrictions",
      "section_title": true,
      "ja": "7.2.1. 入力長の制限"
    },
    {
      "indent": 3,
      "text": "This document defines LabeledExtract() and LabeledExpand() based on the KDFs listed above. These functions add prefixes to their respective inputs ikm and info before calling the KDF's Extract() and Expand() functions. This leads to a reduction of the maximum input length that is available for the inputs psk, psk_id, info, exporter_context, ikm, i.e., the variable-length parameters provided by HPKE applications. The following table lists the maximum allowed lengths of these fields for the KDFs defined in this document, as inclusive bounds in bytes:",
      "ja": "このドキュメントは、上記のKDFSに基づいて、LabelEdextract（）およびLabelEdexpand（）を定義します。これらの関数は、KDFの抽出（）および展開（）関数を呼び出す前に、それぞれの入力IKMと情報にプレフィックスを追加します。これにより、入力PSK、PSK_ID、INFO、Exporter_Context、IKM、つまりHPKEアプリケーションで提供される変数長さパラメーターで利用可能な最大入力長が減少します。次の表には、このドキュメントで定義されているKDFのこれらのフィールドの最大許可された長さを、バイトの包括的境界として示します。"
    },
    {
      "indent": 4,
      "text": "+==================+==============+===============+===============+\n| Input            | HKDF-SHA256  | HKDF-SHA384   | HKDF-SHA512   |\n+==================+==============+===============+===============+\n| psk              | 2^{61} - 88  | 2^{125} - 152 | 2^{125} - 152 |\n+------------------+--------------+---------------+---------------+\n| psk_id           | 2^{61} - 93  | 2^{125} - 157 | 2^{125} - 157 |\n+------------------+--------------+---------------+---------------+\n| info             | 2^{61} - 91  | 2^{125} - 155 | 2^{125} - 155 |\n+------------------+--------------+---------------+---------------+\n| exporter_context | 2^{61} - 120 | 2^{125} - 200 | 2^{125} - 216 |\n+------------------+--------------+---------------+---------------+\n| ikm              | 2^{61} - 84  | 2^{125} - 148 | 2^{125} - 148 |\n| (DeriveKeyPair)  |              |               |               |\n+------------------+--------------+---------------+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Table 4: Application Input Limits",
      "ja": "表4：アプリケーションの入力制限"
    },
    {
      "indent": 3,
      "text": "This shows that the limits are only marginally smaller than the maximum input length of the underlying hash function; these limits are large and unlikely to be reached in practical applications. Future specifications that define new KDFs MUST specify bounds for these variable-length parameters.",
      "ja": "これは、制限が基礎となるハッシュ関数の最大入力長よりわずかに小さいことを示しています。これらの制限は大きく、実際のアプリケーションで到達する可能性は低いです。新しいKDFを定義する将来の仕様は、これらの可変長パラメーターの境界を指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "The RECOMMENDED limit for these values is 64 bytes. This would enable interoperability with implementations that statically allocate memory for these inputs to avoid memory allocations.",
      "ja": "これらの値の推奨制限は64バイトです。これにより、これらの入力のメモリを静的に割り当てる実装との相互運用性が可能になり、メモリの割り当てを回避できます。"
    },
    {
      "indent": 3,
      "text": "The values for psk, psk_id, info, and ikm, which are inputs to LabeledExtract(), were computed with the following expression:",
      "ja": "PSK、PSK_ID、INFO、およびIKMの値は、LabelEdexTract（）への入力であり、次の式で計算されました。"
    },
    {
      "indent": 3,
      "text": "max_size_hash_input - Nb - size_version_label -\n    size_suite_id - size_input_label",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The value for exporter_context, which is an input to LabeledExpand(), was computed with the following expression:",
      "ja": "exporter_contextの値は、labedexpand（）への入力であり、次の式で計算されました。"
    },
    {
      "indent": 3,
      "text": "max_size_hash_input - Nb - Nh - size_version_label -\n    size_suite_id - size_input_label - 2 - 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In these equations, max_size_hash_input is the maximum input length of the underlying hash function in bytes, Nb is the block size of the underlying hash function in bytes, size_version_label is the size of \"HPKE-v1\" in bytes and equals 7, size_suite_id is the size of the suite_id in bytes and equals 5 for DHKEM (relevant for ikm) and 10 for the remainder of HPKE (relevant for psk, psk_id, info, and exporter_context), and size_input_label is the size in bytes of the label used as parameter to LabeledExtract() or LabeledExpand(), the maximum of which is 13 across all labels in this document.",
      "ja": "これらの方程式では、max_size_hash_inputはバイトの基礎となるハッシュ関数の最大入力長、nbはバイトの基礎となるハッシュ関数のブロックサイズ、size_version_labelはバイトの「hpke-v1」のサイズであり、等しい7、size_suite_idsuite_id in bytes and equals in dhkem（ikmに関連する）、残りのhpke（psk、psk_id、info、and exporter_contextに関連する）の場合は、size_input_labelは、パラメーターとして使用されるラベルのバイトのサイズです。labeedextract（）またはlabeledexpand（）は、このドキュメントのすべてのラベルにわたって最大13です。"
    },
    {
      "indent": 0,
      "text": "7.3. Authenticated Encryption with Associated Data (AEAD) Functions",
      "section_title": true,
      "ja": "7.3. 関連データ（AEAD）関数を使用した認証された暗号化"
    },
    {
      "indent": 8,
      "text": "+========+==================+=====+=====+=====+===========+\n| Value  | AEAD             | Nk  | Nn  | Nt  | Reference |\n+========+==================+=====+=====+=====+===========+\n| 0x0000 | Reserved         | N/A | N/A | N/A | RFC 9180  |\n+--------+------------------+-----+-----+-----+-----------+\n| 0x0001 | AES-128-GCM      | 16  | 12  | 16  | [GCM]     |\n+--------+------------------+-----+-----+-----+-----------+\n| 0x0002 | AES-256-GCM      | 32  | 12  | 16  | [GCM]     |\n+--------+------------------+-----+-----+-----+-----------+\n| 0x0003 | ChaCha20Poly1305 | 32  | 12  | 16  | [RFC8439] |\n+--------+------------------+-----+-----+-----+-----------+\n| 0xFFFF | Export-only      | N/A | N/A | N/A | RFC 9180  |\n+--------+------------------+-----+-----+-----+-----------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 29,
      "text": "Table 5: AEAD IDs",
      "ja": "表5：AEAD ID"
    },
    {
      "indent": 3,
      "text": "The 0xFFFF AEAD ID is reserved for applications that only use the Export interface; see Section 5.3 for more details.",
      "ja": "0xffff AEAD IDは、エクスポートインターフェイスのみを使用するアプリケーション用に予約されています。詳細については、セクション5.3を参照してください。"
    },
    {
      "indent": 0,
      "text": "8. API Considerations",
      "section_title": true,
      "ja": "8. APIの考慮事項"
    },
    {
      "indent": 3,
      "text": "This section documents considerations for interfaces to implementations of HPKE. This includes error handling considerations and recommendations that improve interoperability when HPKE is used in applications.",
      "ja": "このセクションでは、HPKEの実装に対するインターフェイスの考慮事項を文書化します。これには、HPKEがアプリケーションで使用されているときに相互運用性を向上させるエラー処理の考慮事項と推奨事項が含まれます。"
    },
    {
      "indent": 0,
      "text": "8.1. Auxiliary Authenticated Application Information",
      "section_title": true,
      "ja": "8.1. 補助認証アプリケーション情報"
    },
    {
      "indent": 3,
      "text": "HPKE has two places at which applications can specify auxiliary authenticated information: (1) during context construction via the Setup info parameter, and (2) during Context operations, i.e., with the aad parameter for Open() and Seal(), and the exporter_context parameter for Export(). Application information applicable to multiple operations on a single Context should use the Setup info parameter. This avoids redundantly processing this information for each Context operation. In contrast, application information that varies on a per-message basis should be specified via the Context APIs (Seal(), Open(), or Export()).",
      "ja": "HPKEには、アプリケーションが補助認証情報を指定できる2つの場所があります。（1）セットアップ情報パラメーターを介したコンテキスト構築中、および（2）コンテキスト操作中、つまりopen（）とseal（）のAADパラメーター、およびExport（）のexporter_contextパラメーター。単一のコンテキストで複数の操作に適用されるアプリケーション情報は、セットアップ情報パラメーターを使用する必要があります。これにより、コンテキスト操作ごとにこの情報を冗長に処理しません。対照的に、メッセージごとに変化するアプリケーション情報は、コンテキストAPI（SEAL（）、Open（）、またはExport（）を介して指定する必要があります。"
    },
    {
      "indent": 3,
      "text": "Applications that only use the single-shot APIs described in Section 6 should use the Setup info parameter for specifying auxiliary authenticated information. Implementations which only expose single-shot APIs should not allow applications to use both Setup info and Context aad or exporter_context auxiliary information parameters.",
      "ja": "セクション6で説明されているシングルショットAPIのみを使用するアプリケーションは、補助認証情報を指定するためにセットアップ情報パラメーターを使用する必要があります。シングルショットAPIのみを公開する実装は、アプリケーションがセットアップ情報とコンテキストAADまたはexporter_context補助情報パラメーターの両方を使用することを許可してはなりません。"
    },
    {
      "indent": 0,
      "text": "8.2. Errors",
      "section_title": true,
      "ja": "8.2. エラー"
    },
    {
      "indent": 3,
      "text": "The high-level, public HPKE APIs specified in this document are all fallible. These include the Setup functions and all encryption context functions. For example, Decap() can fail if the encapsulated key enc is invalid, and Open() may fail if ciphertext decryption fails. The explicit errors generated throughout this specification, along with the conditions that lead to each error, are as follows:",
      "ja": "このドキュメントで指定されている高レベルのパブリックHPKE APIはすべて誤りがあります。これらには、セットアップ関数とすべての暗号化コンテキスト関数が含まれます。たとえば、カプセル化されたキーEncが無効である場合、Decap（）は故障し、ciphertext復号化が失敗した場合にopen（）が故障する可能性があります。この仕様全体で生成された明示的なエラーは、各エラーにつながる条件とともに、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "* ValidationError: KEM input or output validation failure; Section 4.1.",
      "ja": "* VALIDATIONERROR：KEM入力または出力検証障害。セクション4.1。"
    },
    {
      "indent": 6,
      "text": "* DeserializeError: Public or private key deserialization failure; Section 4.",
      "ja": "* DeserializeError：公共または秘密のキーの脱皮化の失敗。セクション4。"
    },
    {
      "indent": 6,
      "text": "* EncapError: Encap() failure; Section 4.",
      "ja": "* encaperror：encap（）fails;セクション4。"
    },
    {
      "indent": 6,
      "text": "* DecapError: Decap() failure; Section 4.",
      "ja": "* decaperror：decap（）故障;セクション4。"
    },
    {
      "indent": 6,
      "text": "* OpenError: Context AEAD Open() failure; Sections 4 and 5.2.",
      "ja": "* OpenError：コンテキストAEAD Open（）障害。セクション4および5.2。"
    },
    {
      "indent": 6,
      "text": "* MessageLimitReachedError: Context AEAD sequence number overflow; Sections 4 and 5.2.",
      "ja": "* Messagelimitreachederror：コンテキストAEADシーケンス番号オーバーフロー。セクション4および5.2。"
    },
    {
      "indent": 6,
      "text": "* DeriveKeyPairError: Key pair derivation failure; Section 7.1.3.",
      "ja": "* derivekeypairerror：キーペア派生障害。セクション7.1.3。"
    },
    {
      "indent": 3,
      "text": "Implicit errors may also occur. As an example, certain classes of failures, e.g., malformed recipient public keys, may not yield explicit errors. For example, for the DHKEM variant described in this specification, the Encap() algorithm fails when given an invalid recipient public key. However, other KEM algorithms may not have an efficient algorithm for verifying the validity of public keys. As a result, an equivalent error may not manifest until AEAD decryption at the recipient. As another example, DHKEM's AuthDecap() function will produce invalid output if given the wrong sender public key. This error is not detectable until subsequent AEAD decryption.",
      "ja": "暗黙のエラーも発生する可能性があります。例として、特定のクラスの障害、たとえば不正な受信者のパブリックキーは、明示的なエラーを生成できない場合があります。たとえば、この仕様で説明されているDHKEMバリアントの場合、無効な受信者の公開キーが与えられた場合、encap（）アルゴリズムは失敗します。ただし、他のKEMアルゴリズムには、パブリックキーの有効性を検証するための効率的なアルゴリズムがない場合があります。その結果、同等の誤差は、レシピエントでAEAD復号化まで現れることはありません。別の例として、DHKEMのauthdecap（）関数は、間違った送信者の公開キーが与えられた場合、無効な出力を生成します。このエラーは、後続のAEAD復号化まで検出できません。"
    },
    {
      "indent": 3,
      "text": "The errors in this document are meant as a guide for implementors. They are not an exhaustive list of all the errors an implementation might emit. For example, future KEMs might have internal failure cases, or an implementation might run out of memory.",
      "ja": "このドキュメントのエラーは、実装者向けのガイドとして意図されています。それらは、実装が発する可能性のあるすべてのエラーの網羅的なリストではありません。たとえば、将来のKEMには内部障害のケースがあるか、実装がメモリがなくなる場合があります。"
    },
    {
      "indent": 3,
      "text": "How these errors are expressed in an API or handled by applications is an implementation-specific detail. For example, some implementations may abort or panic upon a DeriveKeyPairError failure given that it only occurs with negligible probability, whereas other implementations may retry the failed DeriveKeyPair operation. See Section 7.1.3 for more information. As another example, some implementations of the DHKEM specified in this document may choose to transform ValidationError from DH() into an EncapError or DecapError from Encap() or Decap(), respectively, whereas others may choose to raise ValidationError unmodified.",
      "ja": "これらのエラーがAPIで表現されるか、アプリケーションによって処理される方法は、実装固有の詳細です。たとえば、一部の実装は、無視できる確率でのみ発生することを考えると、派生キーパイアエラーの故障を中止またはパニックに陥ることがありますが、他の実装では故障した派生操作を再試行する可能性があります。詳細については、セクション7.1.3を参照してください。別の例として、このドキュメントで指定されているDHKEMのいくつかの実装は、それぞれdh（）からencap（）またはdecap（）からvalidationerrorをdh（）からencaperrorまたはdecaperrorに変換することを選択する場合がありますが、他の人は検証済みの未修正を上げることを選択できます。"
    },
    {
      "indent": 3,
      "text": "Applications using HPKE APIs should not assume that the errors here are complete, nor should they assume certain classes of errors will always manifest the same way for all ciphersuites. For example, the DHKEM specified in this document will emit a DeserializationError or ValidationError if a KEM public key is invalid. However, a new KEM might not have an efficient algorithm for determining whether or not a public key is valid. In this case, an invalid public key might instead yield an OpenError when trying to decrypt a ciphertext.",
      "ja": "HPKE APIを使用するアプリケーションは、ここのエラーが完全であると仮定したり、特定のクラスのエラーが常にすべてのCiphersuitesで同じように現れると仮定すべきではありません。たとえば、このドキュメントで指定されたDHKEMは、KEMの公開鍵が無効である場合、DeserializationErrorまたはValidationErrorを放出します。ただし、新しいKEMには、公開キーが有効かどうかを判断するための効率的なアルゴリズムがない場合があります。この場合、無効な公開キーは、暗号文を復号化しようとするときにOpenErrorを生成する可能性があります。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "ja": "9. セキュリティに関する考慮事項"
    },
    {
      "indent": 0,
      "text": "9.1. Security Properties",
      "section_title": true,
      "ja": "9.1. セキュリティプロパティ"
    },
    {
      "indent": 3,
      "text": "HPKE has several security goals, depending on the mode of operation, against active and adaptive attackers that can compromise partial secrets of senders and recipients. The desired security goals are detailed below:",
      "ja": "HPKEには、運用モードに応じて、送信者や受信者の部分的な秘密を損なう可能性のあるアクティブおよび適応攻撃者に対していくつかのセキュリティ目標があります。目的のセキュリティ目標については、以下に詳しく説明してください。"
    },
    {
      "indent": 6,
      "text": "* Message secrecy: Confidentiality of the sender's messages against chosen ciphertext attacks",
      "ja": "* メッセージの秘密：選択した暗号文攻撃に対する送信者のメッセージの機密性"
    },
    {
      "indent": 6,
      "text": "* Export key secrecy: Indistinguishability of each export secret from a uniformly random bitstring of equal length, i.e., Context.Export is a variable-length PRF",
      "ja": "* エクスポートキーの秘密：等しい長さの均一にランダムなビットストリング（つまり、コンテキスト.Exportが可変）のPRFとの区別の区画を区別しません。"
    },
    {
      "indent": 6,
      "text": "* Sender authentication: Proof of sender origin for PSK, Auth, and AuthPSK modes",
      "ja": "* 送信者認証：PSK、AUTH、およびAUTHPSKモードの送信者原点の証明"
    },
    {
      "indent": 3,
      "text": "These security goals are expected to hold for any honest sender and honest recipient keys, as well as if the honest sender and honest recipient keys are the same.",
      "ja": "これらのセキュリティの目標は、正直な送信者であり、正直な受信者キー、および正直な送信者と正直な受信者キーが同じかどうかを保持することが期待されています。"
    },
    {
      "indent": 3,
      "text": "HPKE mitigates malleability problems (called benign malleability [SECG]) in prior public key encryption standards based on ECIES by including all public keys in the context of the key schedule.",
      "ja": "HPKEは、キースケジュールのコンテキストにすべての公開キーを含めることにより、ECIEに基づいた以前の公開キー暗号化基準で、柔軟性の問題（良性柔軟性[SECG]と呼ばれる）を軽減します。"
    },
    {
      "indent": 3,
      "text": "HPKE does not provide forward secrecy with respect to recipient compromise. In the Base and Auth modes, the secrecy properties are only expected to hold if the recipient private key skR is not compromised at any point in time. In the PSK and AuthPSK modes, the secrecy properties are expected to hold if the recipient private key skR and the pre-shared key are not both compromised at any point in time. See Section 9.7 for more details.",
      "ja": "HPKEは、受信者の妥協に関して前向きな秘密を提供しません。ベースモードおよびAUTHモードでは、秘密のプロパティは、受信者の秘密キーSKRがいずれでも妥協しない場合にのみ保持されると予想されます。PSKモードとAuthPSKモードでは、受信者の秘密キーSKRと事前共有キーがいずれでも妥協しない場合、秘密のプロパティが保持されると予想されます。詳細については、セクション9.7を参照してください。"
    },
    {
      "indent": 3,
      "text": "In the Auth mode, sender authentication is generally expected to hold if the sender private key skS is not compromised at the time of message reception. In the AuthPSK mode, sender authentication is generally expected to hold if, at the time of message reception, the sender private key skS and the pre-shared key are not both compromised.",
      "ja": "AUTHモードでは、メッセージ受信時に送信者の秘密鍵SKSが侵害されない場合、送信者認証は一般に保持されると予想されます。AuthPSKモードでは、メッセージ受信時に送信者の秘密キーSKSと事前共有キーが両方とも妥協していない場合、送信者認証は一般に保持されると予想されます。"
    },
    {
      "indent": 3,
      "text": "Besides forward secrecy and key-compromise impersonation, which are highlighted in this section because of their particular cryptographic importance, HPKE has other non-goals that are described in Section 9.7: no tolerance of message reordering or loss, no downgrade or replay prevention, no hiding of the plaintext length, and no protection against bad ephemeral randomness. Section 9.7 suggests application-level mitigations for some of them.",
      "ja": "特定の暗号化の重要性のためにこのセクションで強調されているフォワードの秘密とキーコンプロマのなりすましに加えて、HPKEにはセクション9.7で説明されている他の非ゴールがあります。プレーンテキストの長さを隠し、悪い一時的なランダム性に対する保護はありません。セクション9.7では、それらのいくつかのアプリケーションレベルの緩和を示唆しています。"
    },
    {
      "indent": 0,
      "text": "9.1.1. Key-Compromise Impersonation",
      "section_title": true,
      "ja": "9.1.1. キーコンプロマのなりすまし"
    },
    {
      "indent": 3,
      "text": "The DHKEM variants defined in this document are vulnerable to key-compromise impersonation attacks [BJM97], which means that sender authentication cannot be expected to hold in the Auth mode if the recipient private key skR is compromised, and in the AuthPSK mode if the pre-shared key and the recipient private key skR are both compromised. NaCl's box interface [NaCl] has the same issue. At the same time, this enables repudiability.",
      "ja": "このドキュメントで定義されているDHKEMバリエーションは、キーコンプロマのなりすまし攻撃[BJM97]に対して脆弱です。つまり、受信者の秘密キーSKRが侵害されている場合は、送信者認証がAUTHモードに保持されるとは期待できません。-haredキーと受信者の秘密鍵SKRはどちらも妥協されます。NaClのボックスインターフェイス[NACL]にも同じ問題があります。同時に、これにより拒否性が可能になります。"
    },
    {
      "indent": 3,
      "text": "As shown by [ABHKLR20], key-compromise impersonation attacks are generally possible on HPKE because KEM ciphertexts are not bound to HPKE messages. An adversary who knows a recipient's private key can decapsulate an observed KEM ciphertext, compute the key schedule, and encrypt an arbitrary message that the recipient will accept as coming from the original sender. Importantly, this is possible even with a KEM that is resistant to key-compromise impersonation attacks. As a result, mitigating this issue requires fundamental changes that are out of scope of this specification.",
      "ja": "[abhklr20]で示されているように、Kem ciphertextsはHPKEメッセージにバインドされていないため、HPKEではキーコンプロマのなりすまし攻撃が一般的に可能です。受信者の秘密鍵を知っている敵は、観察されたKEM Ciphertextを脱カプセル化し、キースケジュールを計算し、受信者が元の送信者から来ると受け入れる任意のメッセージを暗号化することができます。重要なことに、これは、キーコンプロマのなりすまし攻撃に耐性のあるKEMであっても可能です。その結果、この問題を軽減するには、この仕様の範囲外の根本的な変更が必要です。"
    },
    {
      "indent": 3,
      "text": "Applications that require resistance against key-compromise impersonation SHOULD take extra steps to prevent this attack. One possibility is to produce a digital signature over (enc, ct) tuples using a sender's private key -- where ct is an AEAD ciphertext produced by the single-shot or multi-shot API and enc is the corresponding KEM encapsulated key.",
      "ja": "主要な妥協に対する抵抗を必要とするアプリケーションは、この攻撃を防ぐために追加の措置を講じる必要があります。1つの可能性は、送信者の秘密鍵を使用してデジタル署名（ENC、CT）タプルを作成することです。ここで、CTはシングルショットまたはマルチショットAPIおよびENCによって生成されるAEAD暗号です。対応するKEMカプセル化キーです。"
    },
    {
      "indent": 3,
      "text": "Given these properties, pre-shared keys strengthen both the authentication and the secrecy properties in certain adversary models. One particular example in which this can be useful is a hybrid quantum setting: if a non-quantum-resistant KEM used with HPKE is broken by a quantum computer, the security properties are preserved through the use of a pre-shared key. As described in Section 7 of [RFC8696] this assumes that the pre-shared key has not been compromised.",
      "ja": "これらのプロパティを考えると、事前に共有キーは、特定の敵モデルの認証と秘密のプロパティの両方を強化します。これが役立つ特定の例の1つは、ハイブリッド量子設定です。HPKEで使用されている量子耐性のKEMが量子コンピューターによって破損している場合、セキュリティプロパティは、事前共有キーを使用して保存されます。[RFC8696]のセクション7で説明されているように、これは、事前に共有キーが妥協されていないことを前提としています。"
    },
    {
      "indent": 0,
      "text": "9.1.2. Computational Analysis",
      "section_title": true,
      "ja": "9.1.2. 計算分析"
    },
    {
      "indent": 3,
      "text": "It is shown in [CS01] that a hybrid public key encryption scheme of essentially the same form as the Base mode described here is IND-CCA2-secure as long as the underlying KEM and AEAD schemes are IND-CCA2-secure. Moreover, it is shown in [HHK06] that IND-CCA2 security of the KEM and the data encapsulation mechanism are necessary conditions to achieve IND-CCA2 security for hybrid public key encryption. The main difference between the scheme proposed in [CS01] and the Base mode in this document (both named HPKE) is that we interpose some KDF calls between the KEM and the AEAD. Analyzing the HPKE Base mode instantiation in this document therefore requires verifying that the additional KDF calls do not cause the IND-CCA2 property to fail, as well as verifying the additional export key secrecy property.",
      "ja": "[CS01]では、基礎となるKEMおよびAEADスキームがIND-CCA2-Secureである限り、基本的にベースモードと同じ形式のハイブリッド公開キー暗号化スキームがIND-CCA2-Secureであることが示されています。さらに、[HHK06]では、KEMのIND-CCA2セキュリティとデータカプセル化メカニズムが、ハイブリッド公開キー暗号化のIND-CCA2セキュリティを達成するために必要な条件であることが示されています。[CS01]で提案されているスキームと、このドキュメントのベースモード（両方ともHPKEという名前）の主な違いは、KEMとAEADの間にKDFコールを挿入することです。したがって、このドキュメントのHPKEベースモードのインスタンス化を分析するには、追加のKDF呼び出しがIND-CCA2プロパティを失敗させないことを確認し、追加のエクスポートキーの秘密プロパティを確認する必要があります。"
    },
    {
      "indent": 3,
      "text": "Analysis of the PSK, Auth, and AuthPSK modes defined in this document additionally requires verifying the sender authentication property. While the PSK mode just adds supplementary keying material to the key schedule, the Auth and AuthPSK modes make use of a non-standard authenticated KEM construction. Generally, the authenticated modes of HPKE can be viewed and analyzed as flavors of signcryption [SigncryptionDZ10].",
      "ja": "このドキュメントで定義されているPSK、AUTH、およびAuthPSKモードの分析には、Sender認証プロパティの検証が必要です。PSKモードは、補足キーイン素材を主要なスケジュールに追加するだけですが、AuthとAuthPSKモードは非標準認証KEM構造を使用します。一般に、HPKEの認証されたモードは、signCryptionのフレーバーとして表示および分析できます[SignCryptionDZ10]。"
    },
    {
      "indent": 3,
      "text": "A preliminary computational analysis of all HPKE modes has been done in [HPKEAnalysis], indicating asymptotic security for the case where the KEM is DHKEM, the AEAD is any IND-CPA-secure and INT-CTXT-secure scheme, and the DH group and KDF satisfy the following conditions:",
      "ja": "すべてのHPKEモードの予備的な計算分析は[HPKEANALYSIS]で行われており、KEMがDHKEMである場合の漸近セキュリティを示しています。KDFは次の条件を満たします。"
    },
    {
      "indent": 6,
      "text": "* DH group: The gap Diffie-Hellman (GDH) problem is hard in the appropriate subgroup [GAP].",
      "ja": "* DHグループ：GAP DIFFIE-HELLMAN（GDH）問題は、適切なサブグループ[GAP]で困難です。"
    },
    {
      "indent": 6,
      "text": "* Extract() and Expand(): Extract() can be modeled as a random oracle. Expand() can be modeled as a pseudorandom function, wherein the first argument is the key.",
      "ja": "* 抽出（）および展開（）：extract（）は、ランダムオラクルとしてモデル化できます。拡張（）は、最初の引数が鍵である擬似ランダム関数としてモデル化できます。"
    },
    {
      "indent": 3,
      "text": "In particular, the KDFs and DH groups defined in this document (see Sections 7.2 and 7.1) satisfy these properties when used as specified. The analysis in [HPKEAnalysis] demonstrates that under these constraints, HPKE continues to provide IND-CCA2 security, and provides the additional properties noted above. Also, the analysis confirms the expected properties hold under the different key compromise cases mentioned above. The analysis considers a sender that sends one message using the encryption context, and additionally exports two independent secrets using the secret export interface.",
      "ja": "特に、このドキュメントで定義されているKDFSおよびDHグループ（セクション7.2および7.1を参照）は、指定されている場合に使用した場合にこれらのプロパティを満たします。[hpkeanalysis]の分析は、これらの制約の下で、HPKEがIND-CCA2セキュリティを提供し続け、上記の追加プロパティを提供することを示しています。また、分析は、上記のさまざまな重要な妥協事例の下で予想されるプロパティが保持されることを確認します。この分析では、暗号化コンテキストを使用して1つのメッセージを送信する送信者を検討し、さらに秘密エクスポートインターフェイスを使用して2つの独立した秘密をエクスポートします。"
    },
    {
      "indent": 3,
      "text": "The table below summarizes the main results from [HPKEAnalysis]. N/A means that a property does not apply for the given mode, whereas Y means the given mode satisfies the property.",
      "ja": "以下の表は、[hpkeanalysis]の主な結果をまとめたものです。n/aは、特定のモードにプロパティが適用されないことを意味しますが、yは指定されたモードがプロパティを満たすことを意味します。"
    },
    {
      "indent": 10,
      "text": "+=========+==============+=============+==============+\n| Variant | Message Sec. | Export Sec. | Sender Auth. |\n+=========+==============+=============+==============+\n| Base    |      Y       |      Y      |     N/A      |\n+---------+--------------+-------------+--------------+\n| PSK     |      Y       |      Y      |      Y       |\n+---------+--------------+-------------+--------------+\n| Auth    |      Y       |      Y      |      Y       |\n+---------+--------------+-------------+--------------+\n| AuthPSK |      Y       |      Y      |      Y       |\n+---------+--------------+-------------+--------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Table 6: HPKE Mode Security Properties",
      "ja": "表6：HPKEモードセキュリティプロパティ"
    },
    {
      "indent": 3,
      "text": "If non-DH-based KEMs are to be used with HPKE, further analysis will be necessary to prove their security. The results from [CS01] provide some indication that any IND-CCA2-secure KEM will suffice here, but are not conclusive given the differences in the schemes.",
      "ja": "非DHベースのKEMをHPKEで使用する場合、セキュリティを証明するためにさらなる分析が必要になります。[CS01]の結果は、IND-CCA2-Secure KEMで十分であることを示していますが、スキームの違いを考えると決定的ではありません。"
    },
    {
      "indent": 3,
      "text": "A detailed computational analysis of HPKE's Auth mode single-shot encryption API has been done in [ABHKLR20]. The paper defines security notions for authenticated KEMs and for authenticated public key encryption, using the outsider and insider security terminology known from signcryption [SigncryptionDZ10]. The analysis proves that DHKEM's AuthEncap()/AuthDecap() interface fulfills these notions for all Diffie-Hellman groups specified in this document. The analysis also provides exact security bounds, under the assumptions that the gap Diffie-Hellman (GDH) problem is hard in the appropriate subgroup [GAP], and that HKDF can be modeled as a random oracle.",
      "ja": "HPKEのAUTHモードシングルショット暗号化APIの詳細な計算分析は、[ABHKLR20]で行われました。このペーパーでは、signcryption [SignCryptionDZ10]から知られている部外者およびインサイダーセキュリティ用語を使用して、認証されたKEMSおよび認証された公開キー暗号化のセキュリティ概念を定義します。この分析では、DHKEMのauthencap（）/authdecap（）インターフェイスが、このドキュメントで指定されているすべてのdiffie-hellmanグループのこれらの概念を満たすことが証明されています。また、この分析は、適切なサブグループ[GAP]ではGAP Diffie-Hellman（GDH）の問題が困難であり、HKDFをランダムオラクルとしてモデル化できるという仮定の下で、正確なセキュリティ境界を提供します。"
    },
    {
      "indent": 3,
      "text": "Further, [ABHKLR20] proves composition theorems, showing that HPKE's Auth mode fulfills the security notions of authenticated public key encryption for all KDFs and AEAD schemes specified in this document, given any authenticated KEM satisfying the previously defined security notions for authenticated KEMs. The theorems assume that the KEM is perfectly correct; they could easily be adapted to work with KEMs that have a nonzero but negligible probability for decryption failure. The assumptions on the KDF are that Extract() and Expand() can be modeled as pseudorandom functions wherein the first argument is the key, respectively. The assumption for the AEAD is IND-CPA and IND-CTXT security.",
      "ja": "さらに、[ABHKLR20]は組成定理を証明し、HPKEの認証モードが、このドキュメントで指定されたすべてのKDFとAEADスキームの認証された公開キー暗号化のセキュリティ概念を満たしていることを示しています。定理は、KEMが完全に正しいと仮定しています。それらは、ゼロではないが無視できる確率が復号化障害を持つKEMとの作業に簡単に適応することができます。KDFの仮定は、extract（）およびendoce（）は、最初の引数がそれぞれ鍵である疑似ランダム関数としてモデル化できるということです。AEADの仮定は、IND-CPAおよびIND-CTXTセキュリティです。"
    },
    {
      "indent": 3,
      "text": "In summary, the analysis in [ABHKLR20] proves that the single-shot encryption API of HPKE's Auth mode satisfies the desired message confidentiality and sender authentication properties listed at the beginning of this section; it does not consider multiple messages, nor the secret export API.",
      "ja": "要約すると、[ABHKLR20]の分析は、HPKEのAUTHモードのシングルショット暗号化APIが、このセクションの冒頭にリストされている希望のメッセージの機密性と送信者認証プロパティを満たすことを証明しています。複数のメッセージやSecret Export APIを考慮しません。"
    },
    {
      "indent": 0,
      "text": "9.1.3. Post-Quantum Security",
      "section_title": true,
      "ja": "9.1.3. 質量セキュリティ"
    },
    {
      "indent": 3,
      "text": "All of [CS01], [HPKEAnalysis], and [ABHKLR20] are premised on classical security models and assumptions, and do not consider adversaries capable of quantum computation. A full proof of post-quantum security would need to take appropriate security models and assumptions into account, in addition to simply using a post-quantum KEM. However, the composition theorems from [ABHKLR20] for HPKE's Auth mode only make standard assumptions (i.e., no random oracle assumption) that are expected to hold against quantum adversaries (although with slightly worse bounds). Thus, these composition theorems, in combination with a post-quantum-secure authenticated KEM, guarantee the post-quantum security of HPKE's Auth mode.",
      "ja": "[CS01]、[hpkeanalysis]、および[abhklr20]はすべて、古典的なセキュリティモデルと仮定を前提としており、量子計算が可能な敵を考慮していません。ポストクアントゥムのセキュリティの完全な証明は、単にQuantum Post-Quantum KEMを使用するだけでなく、適切なセキュリティモデルと仮定を考慮に入れる必要があります。ただし、HPKEの認証モードの[ABHKLR20]の構成定理は、量子敵に対して保持されると予想される標準的な仮定（つまり、ランダムなOracleの仮定はありません）のみを行います（ただし、わずかに悪い境界があります）。したがって、これらの組成定理は、四分の一秒間の認証されたKEMと組み合わせて、HPKEのAUTHモードの質量セキュリティを保証します。"
    },
    {
      "indent": 3,
      "text": "In future work, the analysis from [ABHKLR20] can be extended to cover HPKE's other modes and desired security properties. The hybrid quantum-resistance property described above, which is achieved by using the PSK or AuthPSK mode, is not proven in [HPKEAnalysis] because this analysis requires the random oracle model; in a quantum setting, this model needs adaption to, for example, the quantum random oracle model.",
      "ja": "将来の作業では、[ABHKLR20]の分析を拡張して、HPKEの他のモードと望ましいセキュリティプロパティをカバーすることができます。この分析にはランダムなOracleモデルが必要であるため、PSKまたはAuthPSKモードを使用して達成される上記のハイブリッド量子耐性特性は[hpkeanalysis]で証明されていません。量子設定では、このモデルは、たとえば量子ランダムオラクルモデルへの適応が必要です。"
    },
    {
      "indent": 0,
      "text": "9.2. Security Requirements on a KEM Used within HPKE",
      "section_title": true,
      "ja": "9.2. HPKE内で使用されるKEMのセキュリティ要件"
    },
    {
      "indent": 3,
      "text": "A KEM used within HPKE MUST allow HPKE to satisfy its desired security properties described in Section 9.1. Section 9.6 lists requirements concerning domain separation.",
      "ja": "HPKE内で使用されるKEMは、HPKEがセクション9.1で説明されている望ましいセキュリティプロパティを満たすことを許可する必要があります。セクション9.6には、ドメイン分離に関する要件を示します。"
    },
    {
      "indent": 3,
      "text": "In particular, the KEM shared secret MUST be a uniformly random byte string of length Nsecret. This means, for instance, that it would not be sufficient if the KEM shared secret is only uniformly random as an element of some set prior to its encoding as a byte string.",
      "ja": "特に、KEMの共有秘密は、均一にランダムなバイト文字列の長さnSecretでなければなりません。これは、たとえば、KEMの共有秘密がバイト文字列としてエンコードする前にいくつかのセットの要素として均一にランダムである場合、それだけでは不十分であることを意味します。"
    },
    {
      "indent": 0,
      "text": "9.2.1. Encap/Decap Interface",
      "section_title": true,
      "ja": "9.2.1. cap/decapインターフェイス"
    },
    {
      "indent": 3,
      "text": "As mentioned in Section 9, [CS01] provides some indications that if the KEM's Encap()/Decap() interface (which is used in the Base and PSK modes) is IND-CCA2-secure, HPKE is able to satisfy its desired security properties. An appropriate definition of IND-CCA2 security for KEMs can be found in [CS01] and [BHK09].",
      "ja": "セクション9で述べたように、[CS01]は、KEMのEncap（）/Decap（）インターフェイス（ベースモードとPSKモードで使用されている）がIND-CCA2-Secureである場合、HPKEが望ましいセキュリティを満たすことができるという兆候を示しています。プロパティ。KEMSのIND-CCA2セキュリティの適切な定義は、[CS01]および[BHK09]にあります。"
    },
    {
      "indent": 0,
      "text": "9.2.2. AuthEncap/AuthDecap Interface",
      "section_title": true,
      "ja": "9.2.2. authencap/authdecapインターフェイス"
    },
    {
      "indent": 3,
      "text": "The analysis of HPKE's Auth mode single-shot encryption API in [ABHKLR20] provides composition theorems that guarantee that HPKE's Auth mode achieves its desired security properties if the KEM's AuthEncap()/AuthDecap() interface satisfies multi-user Outsider-CCA, Outsider-Auth, and Insider-CCA security, as defined in the same paper.",
      "ja": "[ABHKLR20]のHPKEのAUTHモードシングルショット暗号化APIの分析は、KEMのAuthEncap（）/AuthDecap（）インターフェイスがマルチユーザーアウトサイダー-CCAを満たす場合、HPKEの認証モードが望ましいセキュリティプロパティを達成することを保証する構成定理を提供します。同じ論文で定義されているように、AUTH、およびInsider-CCAセキュリティ。"
    },
    {
      "indent": 3,
      "text": "Intuitively, Outsider-CCA security formalizes confidentiality, and Outsider-Auth security formalizes authentication of the KEM shared secret in case none of the sender or recipient private keys are compromised. Insider-CCA security formalizes confidentiality of the KEM shared secret in case the sender private key is known or chosen by the adversary. (If the recipient private key is known or chosen by the adversary, confidentiality is trivially broken, because then the adversary knows all secrets on the recipient's side).",
      "ja": "直感的に、アウトサイダーCCAセキュリティは機密性を正式化し、送信者または受信者のプライベートキーが侵害されていない場合に備えて、KEM共有秘密の認証を正式化します。Insider-CCAセキュリティは、送信者の秘密鍵が敵によって既知または選択された場合に備えて、KEM共有秘密の機密性を正式化します。（受信者の秘密鍵が敵によって知られているか、選ばれた場合、敵は受信者の側のすべての秘密を知っているため、機密性がわずかに壊れています）。"
    },
    {
      "indent": 3,
      "text": "An Insider-Auth security notion would formalize authentication of the KEM shared secret in case the recipient private key is known or chosen by the adversary. (If the sender private key is known or chosen by the adversary, it can create KEM ciphertexts in the name of the sender). Because of the generic attack on an analogous Insider-Auth security notion of HPKE described in Section 9.1, a definition of Insider-Auth security for KEMs used within HPKE is not useful.",
      "ja": "Insider-Authのセキュリティの概念は、受信者の秘密鍵が敵によって既知または選択された場合に備えて、KEM共有秘密の認証を正式にします。（送信者の秘密鍵が敵によって既知または選択されている場合、送信者の名前でKEM Ciphertextsを作成できます）。セクション9.1に記載されているHPKEの類似のインサイダーセキュリティの概念に対する一般的な攻撃のため、HPKE内で使用されるKEMのインサイダー-Authセキュリティの定義は役に立ちません。"
    },
    {
      "indent": 0,
      "text": "9.2.3. KEM Key Reuse",
      "section_title": true,
      "ja": "9.2.3. Kemキーの再利用"
    },
    {
      "indent": 3,
      "text": "An ikm input to DeriveKeyPair() (Section 7.1.3) MUST NOT be reused elsewhere, in particular not with DeriveKeyPair() of a different KEM.",
      "ja": "deriveKeypair（）（セクション7.1.3）へのIKM入力は、特に別のKEMのderiveKeypair（）ではなく、他の場所で再利用してはなりません。"
    },
    {
      "indent": 3,
      "text": "The randomness used in Encap() and AuthEncap() to generate the KEM shared secret or its encapsulation MUST NOT be reused elsewhere.",
      "ja": "encap（）およびauthencap（）で使用されるランダム性は、KEM共有秘密を生成するか、そのカプセル化を他の場所に再利用してはなりません。"
    },
    {
      "indent": 3,
      "text": "Since a KEM key pair belonging to a sender or recipient works with all modes, it can be used with multiple modes in parallel. HPKE is constructed to be secure in such settings due to domain separation using the suite_id variable. However, there is no formal proof of security at the time of writing for using multiple modes in parallel; [HPKEAnalysis] and [ABHKLR20] only analyze isolated modes.",
      "ja": "送信者または受信者に属するKEMキーペアは、すべてのモードで動作するため、複数のモードで並行して使用できます。HPKEは、SUITE_ID変数を使用したドメイン分離のため、このような設定で安全に構築されています。ただし、複数のモードを並行して使用するための執筆時点では、セキュリティの正式な証明はありません。[hpkeanalysis]および[abhklr20]は、孤立したモードのみを分析します。"
    },
    {
      "indent": 0,
      "text": "9.3. Security Requirements on a KDF",
      "section_title": true,
      "ja": "9.3. KDFのセキュリティ要件"
    },
    {
      "indent": 3,
      "text": "The choice of the KDF for HPKE SHOULD be made based on the security level provided by the KEM and, if applicable, by the PSK. The KDF SHOULD at least have the security level of the KEM and SHOULD at least have the security level provided by the PSK.",
      "ja": "HPKE用のKDFの選択は、KEMが提供するセキュリティレベル、および該当する場合はPSKによって提供される必要があります。KDFは、少なくともKEMのセキュリティレベルを持つ必要があり、少なくともPSKが提供するセキュリティレベルを持つ必要があります。"
    },
    {
      "indent": 0,
      "text": "9.4. Security Requirements on an AEAD",
      "section_title": true,
      "ja": "9.4. AEADのセキュリティ要件"
    },
    {
      "indent": 3,
      "text": "All AEADs MUST be IND-CCA2-secure, as is currently true for all AEADs listed in Section 7.3.",
      "ja": "セクション7.3にリストされているすべてのAEADSに現在当てはまるように、すべてのAEADSはIND-CCA2-Secureでなければなりません。"
    },
    {
      "indent": 0,
      "text": "9.5. Pre-Shared Key Recommendations",
      "section_title": true,
      "ja": "9.5. 事前に共有された重要な推奨事項"
    },
    {
      "indent": 3,
      "text": "In the PSK and AuthPSK modes, the PSK MUST have at least 32 bytes of entropy and SHOULD be of length Nh bytes or longer. Using a PSK longer than 32 bytes but shorter than Nh bytes is permitted.",
      "ja": "PSKおよびAuthPSKモードでは、PSKには少なくとも32バイトのエントロピーが必要であり、長さのNHバイト以上でなければなりません。PSKを32バイトより長く使用するが、NHバイトよりも短いことは許可されています。"
    },
    {
      "indent": 3,
      "text": "HPKE is specified to use HKDF as its key derivation function. HKDF is not designed to slow down dictionary attacks (see [RFC5869]). Thus, HPKE's PSK mechanism is not suitable for use with a low-entropy password as the PSK: In scenarios in which the adversary knows the KEM shared secret shared_secret and has access to an oracle that distinguishes between a good and a wrong PSK, it can perform PSK-recovering attacks. This oracle can be the decryption operation on a captured HPKE ciphertext or any other recipient behavior that is observably different when using a wrong PSK. The adversary knows the KEM shared secret shared_secret if it knows all KEM private keys of one participant. In the PSK mode, this is trivially the case if the adversary acts as the sender.",
      "ja": "HPKEは、HKDFをそのキー導出関数として使用するように指定されています。HKDFは、辞書攻撃を遅くするようには設計されていません（[RFC5869]を参照）。したがって、HPKEのPSKメカニズムは、PSKとしての低エントロピーパスワードでの使用には適していません：敵がKEMが秘密のShared_Secretを共有し、善と間違ったPSKを区別するオラクルにアクセスできるシナリオでは、それはそれが可能です。PSK回復攻撃を実行します。このオラクルは、キャプチャされたHPKE暗号文または間違ったPSKを使用する場合に観察的に異なる他のレシピエントの動作の復号化操作になります。敵は、1人の参加者のすべてのKEMプライベートキーを知っている場合、KEM Shared Secret Shared_Secretを知っています。PSKモードでは、敵が送信者として機能する場合、これは些細な場合です。"
    },
    {
      "indent": 3,
      "text": "To recover a lower entropy PSK, an attacker in this scenario can trivially perform a dictionary attack. Given a set S of possible PSK values, the attacker generates an HPKE ciphertext for each value in S, and submits the resulting ciphertexts to the oracle to learn which PSK is being used by the recipient. Further, because HPKE uses AEAD schemes that are not key-committing, an attacker can mount a partitioning oracle attack [LGR20] that can recover the PSK from a set of S possible PSK values, with |S| = m*k, in roughly m + log k queries to the oracle using ciphertexts of length proportional to k, the maximum message length in blocks. (Applying the multi-collision algorithm from [LGR20] requires a small adaptation to the algorithm wherein the appropriate nonce is computed for each candidate key. This modification adds one call to HKDF per key. The number of partitioning oracle queries remains unchanged.) As a result, the PSK must therefore be chosen with sufficient entropy so that m + log k is prohibitive for attackers (e.g., 2^128). Future specifications can define new AEAD algorithms that are key-committing.",
      "ja": "より低いエントロピーPSKを回復するために、このシナリオの攻撃者は辞書攻撃を簡単に実行できます。可能なPSK値のセットを与えられた場合、攻撃者はSの各値のHPKE暗号文を生成し、結果の暗号文をOracleに提出して、受信者が使用しているPSKを学習します。さらに、HPKEはキーコミットではないAEADスキームを使用するため、攻撃者は、| S |でsの可能なPSK値のセットからPSKを回復できるオラクル攻撃[LGR20]を組み込むことができます。= m*k、kに比例した長さのciphertextsを使用して、ほぼm log k k log k queries in the oracleにクエリをクエリします。これは、ブロックの最大メッセージ長です。（[LGR20]からマルチ衝突アルゴリズムを適用するには、各候補キーに対して適切な非CEが計算されるアルゴリズムへの小さな適応が必要です。この変更は、キーごとにHKDFに1つの呼び出しを追加します。したがって、Mog Kが攻撃者に禁止されるように、PSKは十分なエントロピーで選択する必要があります（例：2^128）。将来の仕様は、キーコミッティングの新しいAEADアルゴリズムを定義できます。"
    },
    {
      "indent": 0,
      "text": "9.6. Domain Separation",
      "section_title": true,
      "ja": "9.6. ドメイン分離"
    },
    {
      "indent": 3,
      "text": "HPKE allows combining a DHKEM variant DHKEM(Group, KDF') and a KDF such that both KDFs are instantiated by the same KDF. By design, the calls to Extract() and Expand() inside DHKEM and the remainder of HPKE use separate input domains. This justifies modeling them as independent functions even if instantiated by the same KDF. This domain separation between DHKEM and the remainder of HPKE is achieved by using prefix-free sets of suite_id values in LabeledExtract() and LabeledExpand() (KEM... in DHKEM and HPKE... in the remainder of HPKE). Recall that a set is prefix-free if no element is a prefix of another within the set.",
      "ja": "HPKEを使用すると、DHKEMバリアントDHKEM（グループ、KDF '）とKDFを組み合わせて、両方のKDFが同じKDFによってインスタンス化されるようにします。設計上、DHKEM内の抽出（）および展開（）への呼び出しとHPKEの残りの部分は、個別の入力ドメインを使用します。これは、同じKDFによってインスタンス化されたとしても、それらを独立した機能としてモデル化することを正当化します。DHKEMとHPKEの残りの部分との間のこのドメイン分離は、LaveleDextract（）およびlabeledexpand（）（kem ... in dhkem and hpke ... in hpkeの残り）にsuite_id値のプレフィックスを含まないセットを使用することで実現されます。要素がない場合は、セット内の別の接頭辞の接頭辞がない場合は、セットが接頭辞なしであることを思い出してください。"
    },
    {
      "indent": 3,
      "text": "Future KEM instantiations MUST ensure, should Extract() and Expand() be used internally, that they can be modeled as functions independent from the invocations of Extract() and Expand() in the remainder of HPKE. One way to ensure this is by using LabeledExtract() and LabeledExpand() with a suite_id as defined in Section 4, which will ensure input domain separation, as outlined above. Particular attention needs to be paid if the KEM directly invokes functions that are used internally in HPKE's Extract() or Expand(), such as Hash() and HMAC() in the case of HKDF. It MUST be ensured that inputs to these invocations cannot collide with inputs to the internal invocations of these functions inside Extract() or Expand(). In HPKE's KeySchedule() this is avoided by using Extract() instead of Hash() on the arbitrary-length inputs info and psk_id.",
      "ja": "将来のKEMインスタンス化は、HPKEの残りの抽出（）と展開（）の呼び出しから独立して機能としてモデル化できることを、内部で拡張（）使用する必要があることを確認する必要があります。これを保証する1つの方法は、上記のように、入力ドメイン分離を確実にするセクション4で定義されているように、suite_idを使用してlabeledextract（）とlabeledexpand（）を使用することです。HKDFの場合、HPKEのExtract（）やHMAC（）などのHPKEのExtract（）やExpand（）で内部で使用される関数をKEMが直接呼び出す場合、特に注意が必要です。これらの呼び出しへの入力は、抽出（）または展開（）内のこれらの関数の内部呼び出しへの入力と衝突できないことを保証する必要があります。hpkeのkeyschedule（）では、任意の長さの入力情報とpsk_idでhash（）の代わりにextract（）を使用することにより、これは回避されます。"
    },
    {
      "indent": 3,
      "text": "The string literal \"HPKE-v1\" used in LabeledExtract() and LabeledExpand() ensures that any secrets derived in HPKE are bound to the scheme's name and version, even when possibly derived from the same Diffie-Hellman or KEM shared secret as in another scheme or version.",
      "ja": "labeledextract（）およびlabeledexpand（）で使用される文字列リテラル「hpke-v1」は、HPKEで派生した秘密がスキームの名前とバージョンに拘束されることを保証します。スキームまたはバージョン。"
    },
    {
      "indent": 0,
      "text": "9.7. Application Embedding and Non-Goals",
      "section_title": true,
      "ja": "9.7. アプリケーションの埋め込みと非ゴール"
    },
    {
      "indent": 3,
      "text": "HPKE is designed to be a fairly low-level mechanism. As a result, it assumes that certain properties are provided by the application in which HPKE is embedded and leaves certain security properties to be provided by other mechanisms. Otherwise said, certain properties are out of scope for HPKE.",
      "ja": "HPKEは、かなり低レベルのメカニズムになるように設計されています。その結果、特定のプロパティがHPKEが組み込まれ、他のメカニズムによって提供される特定のセキュリティプロパティを残すアプリケーションによって提供されると想定しています。そうでなければ、特定のプロパティはHPKEの範囲外です。"
    },
    {
      "indent": 0,
      "text": "9.7.1. Message Order and Message Loss",
      "section_title": true,
      "ja": "9.7.1. メッセージの順序とメッセージの損失"
    },
    {
      "indent": 3,
      "text": "The primary requirement that HPKE imposes on applications is the requirement that ciphertexts MUST be presented to ContextR.Open() in the same order in which they were generated by ContextS.Seal(). When the single-shot API is used (see Section 6), this is trivially true (since there is only ever one ciphertext). Applications that allow for multiple invocations of Open() / Seal() on the same context MUST enforce the ordering property described above.",
      "ja": "HPKEがアプリケーションに課す主な要件は、CONTEXTR.OPEN（）にCONTEXTR.OPEN（）がContexts.Seal（）によって生成されたのと同じ順序で提示される必要があるという要件です。シングルショットAPIが使用される場合（セクション6を参照）、これは簡単に真実です（1つの暗号文があるため）。同じコンテキストでOpen（） / SEAL（）の複数の呼び出しを可能にするアプリケーションは、上記の順序付けプロパティを実施する必要があります。"
    },
    {
      "indent": 3,
      "text": "Ordering requirements of this character are usually fulfilled by providing a sequence number in the framing of encrypted messages. Whatever information is used to determine the ordering of HPKE-encrypted messages SHOULD be included in the associated data passed to ContextS.Seal() and ContextR.Open(). The specifics of this scheme are up to the application.",
      "ja": "このキャラクターの順序付け要件は、通常、暗号化されたメッセージのフレーミングにシーケンス番号を提供することにより満たされます。HPKE暗号化されたメッセージの順序付けを決定するために使用される情報は、Contexts.Seal（）およびcontextr.open（）に渡された関連データに含める必要があります。このスキームの詳細はアプリケーション次第です。"
    },
    {
      "indent": 3,
      "text": "HPKE is not tolerant of lost messages. Applications MUST be able to detect when a message has been lost. When an unrecoverable loss is detected, the application MUST discard any associated HPKE context.",
      "ja": "HPKEは、失われたメッセージに寛容ではありません。アプリケーションは、メッセージが失われたときに検出できる必要があります。回復不可能な損失が検出された場合、アプリケーションは関連するHPKEコンテキストを破棄する必要があります。"
    },
    {
      "indent": 0,
      "text": "9.7.2. Downgrade Prevention",
      "section_title": true,
      "ja": "9.7.2. 格下げ予防"
    },
    {
      "indent": 3,
      "text": "HPKE assumes that the sender and recipient agree on what algorithms to use. Depending on how these algorithms are negotiated, it may be possible for an intermediary to force the two parties to use suboptimal algorithms.",
      "ja": "HPKEは、送信者と受信者が使用するアルゴリズムに同意すると想定しています。これらのアルゴリズムがどのように交渉されるかに応じて、仲介者が2つの当事者に最適ではないアルゴリズムの使用を強制することが可能かもしれません。"
    },
    {
      "indent": 0,
      "text": "9.7.3. Replay Protection",
      "section_title": true,
      "ja": "9.7.3. リプレイ保護"
    },
    {
      "indent": 3,
      "text": "The requirement that ciphertexts be presented to the ContextR.Open() function in the same order they were generated by ContextS.Seal() provides a degree of replay protection within a stream of ciphertexts resulting from a given context. HPKE provides no other replay protection.",
      "ja": "contextr.open（）関数にciphertextsがコンテキストによって生成されたのと同じ順序で提示されるという要件は、特定のコンテキストから生じるciphertextsのストリーム内である程度のリプレイ保護を提供します。HPKEは他のリプレイ保護を提供しません。"
    },
    {
      "indent": 0,
      "text": "9.7.4. Forward Secrecy",
      "section_title": true,
      "ja": "9.7.4. フォワード秘密"
    },
    {
      "indent": 3,
      "text": "HPKE ciphertexts are not forward secret with respect to recipient compromise in any mode. This means that compromise of long-term recipient secrets allows an attacker to decrypt past ciphertexts encrypted under said secrets. This is because only long-term secrets are used on the side of the recipient.",
      "ja": "hpke ciphertextsは、どんなモードでも受信者の妥協に関して前向きな秘密ではありません。これは、長期的な受信者の秘密の妥協により、攻撃者が上記の秘密の下で暗号化された過去の暗号文を解読できるようにすることを意味します。これは、受信者の側面に長期的な秘密のみが使用されるためです。"
    },
    {
      "indent": 3,
      "text": "HPKE ciphertexts are forward secret with respect to sender compromise in all modes. This is because ephemeral randomness is used on the sender's side, which is supposed to be erased directly after computation of the KEM shared secret and ciphertext.",
      "ja": "HPKE ciphertextsは、すべてのモードでの送信者の妥協点に関して、前向きな秘密です。これは、一時的なランダム性が送信者側で使用されているためです。これは、KEM共有の秘密と暗号文の計算後に消去されることになっています。"
    },
    {
      "indent": 0,
      "text": "9.7.5. Bad Ephemeral Randomness",
      "section_title": true,
      "ja": "9.7.5. 悪い一時的なランダム性"
    },
    {
      "indent": 3,
      "text": "If the randomness used for KEM encapsulation is bad -- i.e., of low entropy or compromised because of a broken or subverted random number generator -- the confidentiality guarantees of HPKE degrade significantly. In Base mode, confidentiality guarantees can be lost completely; in the other modes, at least forward secrecy with respect to sender compromise can be lost completely.",
      "ja": "KEMのカプセル化に使用されるランダム性が悪い場合 - つまり、エントロピーが低いか、壊れた乱数ジェネレーターのために侵害された場合、HPKEの機密保証は大幅に低下します。ベースモードでは、機密性の保証は完全に失われる可能性があります。他のモードでは、少なくとも送信者の妥協点に関する前進する秘密は完全に失われる可能性があります。"
    },
    {
      "indent": 3,
      "text": "Such a situation could also lead to the reuse of the same KEM shared secret and thus to the reuse of same key-nonce pairs for the AEAD. The AEADs specified in this document are not secure in case of nonce reuse. This attack vector is particularly relevant in authenticated modes because knowledge of the ephemeral randomness is not enough to derive shared_secret in these modes.",
      "ja": "このような状況は、同じKEM共有秘密の再利用につながり、したがってAEADの同じキーノンセペアの再利用につながる可能性があります。このドキュメントで指定されているAEADSは、非CEの再利用の場合に安全ではありません。この攻撃ベクトルは、はかないランダム性の知識がこれらのモードでshared_secretを導出するのに十分ではないため、認証されたモードに特に関連しています。"
    },
    {
      "indent": 3,
      "text": "One way for applications to mitigate the impacts of bad ephemeral randomness is to combine ephemeral randomness with a local long-term secret that has been generated securely, as described in [RFC8937].",
      "ja": "[RFC8937]に記載されているように、低軽量のランダム性の影響を軽減するアプリケーションの1つの方法は、一時的なランダム性と安全に生成された局所的な長期秘密を組み合わせることです。"
    },
    {
      "indent": 0,
      "text": "9.7.6. Hiding Plaintext Length",
      "section_title": true,
      "ja": "9.7.6. プレーンテキストの長さを隠す"
    },
    {
      "indent": 3,
      "text": "AEAD ciphertexts produced by HPKE do not hide the plaintext length. Applications requiring this level of privacy should use a suitable padding mechanism. See [TLS-ECH] and [RFC8467] for examples of protocol-specific padding policies.",
      "ja": "HPKEによって作成されたAEAD暗号文は、プレーンテキストの長さを非表示にしません。このレベルのプライバシーを必要とするアプリケーションでは、適切なパディングメカニズムを使用する必要があります。プロトコル固有のパディングポリシーの例については、[TLS-ECH]および[RFC8467]を参照してください。"
    },
    {
      "indent": 0,
      "text": "9.8. Bidirectional Encryption",
      "section_title": true,
      "ja": "9.8. 双方向暗号化"
    },
    {
      "indent": 3,
      "text": "As discussed in Section 5.2, HPKE encryption is unidirectional from sender to recipient. Applications that require bidirectional encryption can derive necessary keying material with the secret export interface (Section 5.3). The type and length of such keying material depends on the application use case.",
      "ja": "セクション5.2で説明したように、HPKE暗号化は送信者から受信者への単方向です。双方向暗号化を必要とするアプリケーションは、秘密のエクスポートインターフェースを使用して必要なキーイング材料を導き出すことができます（セクション5.3）。このようなキーイング材料のタイプと長さは、アプリケーションのユースケースに依存します。"
    },
    {
      "indent": 3,
      "text": "As an example, if an application needs AEAD encryption from the recipient to the sender, it can derive a key and nonce from the corresponding HPKE context as follows:",
      "ja": "例として、アプリケーションが受信者から送信者へのAEAD暗号化が必要な場合、次のように、対応するHPKEコンテキストからキーと非CEを導き出すことができます。"
    },
    {
      "indent": 3,
      "text": "key = context.Export(\"response key\", Nk)\nnonce = context.Export(\"response nonce\", Nn)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In this example, the length of each secret is based on the AEAD algorithm used for the corresponding HPKE context.",
      "ja": "この例では、各秘密の長さは、対応するHPKEコンテキストに使用されるAEADアルゴリズムに基づいています。"
    },
    {
      "indent": 3,
      "text": "Note that HPKE's limitations with regard to sender authentication become limits on recipient authentication in this context. In particular, in the Base mode, there is no authentication of the remote party at all. Even in the Auth mode, where the remote party has proven that they hold a specific private key, this authentication is still subject to key-compromise impersonation, as discussed in Section 9.1.1.",
      "ja": "送信者認証に関するHPKEの制限は、このコンテキストでの受信者認証の制限になることに注意してください。特に、ベースモードでは、リモートパーティの認証はまったくありません。セクション9.1.1で説明したように、リモートパーティが特定の秘密鍵を保持していることを証明しているAUTHモードでさえ、この認証は依然としてキーコンプロマスのなりすましの対象となります。"
    },
    {
      "indent": 0,
      "text": "9.9. Metadata Protection",
      "section_title": true,
      "ja": "9.9. メタデータ保護"
    },
    {
      "indent": 3,
      "text": "The authenticated modes of HPKE (PSK, Auth, and AuthPSK) require that the recipient know what key material to use for the sender. This can be signaled in applications by sending the PSK ID (psk_id above) and/ or the sender's public key (pkS). However, these values themselves might be considered sensitive, since, in a given application context, they might identify the sender.",
      "ja": "HPKE（PSK、Auth、およびAuthPSK）の認証されたモードは、受信者が送信者に使用する重要な資料を知ることを要求します。これは、PSK ID（上記のPSK_ID）および/または送信者の公開キー（PKS）を送信することにより、アプリケーションでシグナルを受けることができます。ただし、これらの値自体は、特定のアプリケーションコンテキストでは、送信者を識別する可能性があるため、敏感であると見なされる場合があります。"
    },
    {
      "indent": 3,
      "text": "An application that wishes to protect these metadata values without requiring further provisioning of keys can use an additional instance of HPKE, using the unauthenticated Base mode. Where the application might have sent (psk_id, pkS, enc, ciphertext) before, it would now send (enc2, ciphertext2, enc, ciphertext), where (enc2, ciphertext2) represent the encryption of the psk_id and pkS values.",
      "ja": "キーのさらなるプロビジョニングを必要とせずにこれらのメタデータ値を保護したいアプリケーションでは、認定されていないベースモードを使用して、HPKEの追加インスタンスを使用できます。アプリケーションが以前に（PSK_ID、PKS、ENC、ciphertext）が送信された場合、（enc2、ciphertext2、enc、ciphertext）を送信します。"
    },
    {
      "indent": 3,
      "text": "The cost of this approach is an additional KEM operation each for the sender and the recipient. A potential lower-cost approach (involving only symmetric operations) would be available if the nonce-protection schemes in [BNT19] could be extended to cover other metadata. However, this construction would require further analysis.",
      "ja": "このアプローチのコストは、送信者と受信者にとってそれぞれの追加のKEM操作です。潜在的な低コストのアプローチ（対称操作のみを含む）は、[BNT19]の非CES保護スキームを他のメタデータをカバーするために拡張できる場合に利用可能になります。ただし、この構造にはさらなる分析が必要です。"
    },
    {
      "indent": 0,
      "text": "10. Message Encoding",
      "section_title": true,
      "ja": "10. メッセージエンコーディング"
    },
    {
      "indent": 3,
      "text": "This document does not specify a wire format encoding for HPKE messages. Applications that adopt HPKE must therefore specify an unambiguous encoding mechanism that includes, minimally: the encapsulated value enc, ciphertext value(s) (and order if there are multiple), and any info values that are not implicit. One example of a non-implicit value is the recipient public key used for encapsulation, which may be needed if a recipient has more than one public key.",
      "ja": "このドキュメントでは、HPKEメッセージのワイヤ形式エンコードは指定されていません。したがって、HPKEを採用するアプリケーションは、最小限には、カプセル化された値Enc、ciphertext値（および複数の場合は注文）、および暗黙的ではない情報値を含む明確なエンコードメカニズムを指定する必要があります。非明白な値の1つの例は、カプセル化に使用される受信者の公開キーです。これは、受信者が複数の公開キーを持っている場合に必要になる場合があります。"
    },
    {
      "indent": 3,
      "text": "The AEAD interface used in this document is based on [RFC5116], which produces and consumes a single ciphertext value. As discussed in [RFC5116], this ciphertext value contains the encrypted plaintext as well as any authentication data, encoded in a manner described by the individual AEAD scheme. Some implementations are not structured in this way, instead providing a separate ciphertext and authentication tag. When such AEAD implementations are used in HPKE implementations, the HPKE implementation must combine these inputs into a single ciphertext value within Seal() and parse them out within Open(), where the parsing details are defined by the AEAD scheme. For example, with the AES-GCM schemes specified in this document, the GCM authentication tag is placed in the last Nt bytes of the ciphertext output.",
      "ja": "このドキュメントで使用されているAEADインターフェイスは、[RFC5116]に基づいており、単一の暗号文を生成および消費します。[rfc5116]で説明したように、この暗号文の値には、個々のAEADスキームによって記述された方法でエンコードされた、暗号化されたプレーンテキストと認証データが含まれています。一部の実装はこのように構成されていないため、別の暗号文と認証タグを提供します。このようなAEAD実装がHPKE実装で使用される場合、HPKEの実装はこれらの入力をSEAL（）内の単一の暗号文に組み合わせてOpen（）内で解析する必要があります。たとえば、このドキュメントで指定されたAES-GCMスキームを使用すると、GCM認証タグはciphertext出力の最後のNTバイトに配置されます。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "ja": "11. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has created three new registries:",
      "ja": "IANAは3つの新しいレジストリを作成しました。"
    },
    {
      "indent": 6,
      "text": "* HPKE KEM Identifiers",
      "ja": "* HPKE KEM識別子"
    },
    {
      "indent": 6,
      "text": "* HPKE KDF Identifiers",
      "ja": "* HPKE KDF識別子"
    },
    {
      "indent": 6,
      "text": "* HPKE AEAD Identifiers",
      "ja": "* HPKE AEAD識別子"
    },
    {
      "indent": 3,
      "text": "All these registries are under \"Hybrid Public Key Encryption\", and administered under a Specification Required policy [RFC8126].",
      "ja": "これらのレジストリはすべて「ハイブリッド公開キー暗号化」の下にあり、仕様に必要なポリシー[RFC8126]に基づいて管理されています。"
    },
    {
      "indent": 0,
      "text": "11.1. KEM Identifiers",
      "section_title": true,
      "ja": "11.1. KEM識別子"
    },
    {
      "indent": 3,
      "text": "The \"HPKE KEM Identifiers\" registry lists identifiers for key encapsulation algorithms defined for use with HPKE. These identifiers are two-byte values, so the maximum possible value is 0xFFFF = 65535.",
      "ja": "HPKEで使用するために定義された主要なカプセル化アルゴリズムの「HPKE KEM ID」レジストリリスト識別子。これらの識別子は2バイト値であるため、最大値は0xffff = 65535です。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 6,
      "text": "Value:",
      "ja": "価値："
    },
    {
      "indent": 15,
      "text": "The two-byte identifier for the algorithm",
      "ja": "アルゴリズムの2バイト識別子"
    },
    {
      "indent": 6,
      "text": "KEM:",
      "ja": "ケム："
    },
    {
      "indent": 15,
      "text": "The name of the algorithm",
      "ja": "アルゴリズムの名前"
    },
    {
      "indent": 6,
      "text": "Nsecret:",
      "ja": "nsecret："
    },
    {
      "indent": 15,
      "text": "The length in bytes of a KEM shared secret produced by the algorithm",
      "ja": "アルゴリズムによって生成されたKEM共有秘密のバイトの長さ"
    },
    {
      "indent": 6,
      "text": "Nenc:",
      "ja": "NENC："
    },
    {
      "indent": 15,
      "text": "The length in bytes of an encoded encapsulated key produced by the algorithm",
      "ja": "アルゴリズムによって生成されたエンコードされたカプセル化されたキーのバイト単位の長さ"
    },
    {
      "indent": 6,
      "text": "Npk:",
      "ja": "NPK："
    },
    {
      "indent": 15,
      "text": "The length in bytes of an encoded public key for the algorithm",
      "ja": "アルゴリズムのエンコードされた公開キーのバイトの長さ"
    },
    {
      "indent": 6,
      "text": "Nsk:",
      "ja": "NSK："
    },
    {
      "indent": 15,
      "text": "The length in bytes of an encoded private key for the algorithm",
      "ja": "アルゴリズムのエンコードされた秘密鍵のバイトの長さ"
    },
    {
      "indent": 6,
      "text": "Auth:",
      "ja": "auth："
    },
    {
      "indent": 15,
      "text": "A boolean indicating if this algorithm provides the AuthEncap()/AuthDecap() interface",
      "ja": "このアルゴリズムがauthencap（）/authdecap（）インターフェイスを提供するかどうかを示すブール値"
    },
    {
      "indent": 6,
      "text": "Reference:",
      "ja": "参照："
    },
    {
      "indent": 15,
      "text": "Where this algorithm is defined",
      "ja": "このアルゴリズムが定義されている場合"
    },
    {
      "indent": 3,
      "text": "Initial contents:",
      "ja": "最初の内容："
    },
    {
      "indent": 12,
      "text": "Provided in Table 2",
      "ja": "表2に示します"
    },
    {
      "indent": 0,
      "text": "11.2. KDF Identifiers",
      "section_title": true,
      "ja": "11.2. KDF識別子"
    },
    {
      "indent": 3,
      "text": "The \"HPKE KDF Identifiers\" registry lists identifiers for key derivation functions defined for use with HPKE. These identifiers are two-byte values, so the maximum possible value is 0xFFFF = 65535.",
      "ja": "「HPKE KDF識別子」レジストリは、HPKEで使用するために定義されたキー導入関数の識別子をリストします。これらの識別子は2バイト値であるため、最大値は0xffff = 65535です。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 6,
      "text": "Value:",
      "ja": "価値："
    },
    {
      "indent": 15,
      "text": "The two-byte identifier for the algorithm",
      "ja": "アルゴリズムの2バイト識別子"
    },
    {
      "indent": 6,
      "text": "KDF:",
      "ja": "KDF："
    },
    {
      "indent": 15,
      "text": "The name of the algorithm",
      "ja": "アルゴリズムの名前"
    },
    {
      "indent": 6,
      "text": "Nh:",
      "ja": "NH："
    },
    {
      "indent": 15,
      "text": "The output size of the Extract function in bytes",
      "ja": "バイト単位の抽出機能の出力サイズ"
    },
    {
      "indent": 6,
      "text": "Reference:",
      "ja": "参照："
    },
    {
      "indent": 15,
      "text": "Where this algorithm is defined",
      "ja": "このアルゴリズムが定義されている場合"
    },
    {
      "indent": 3,
      "text": "Initial contents:",
      "ja": "最初の内容："
    },
    {
      "indent": 12,
      "text": "Provided in Table 3",
      "ja": "表3に示します"
    },
    {
      "indent": 0,
      "text": "11.3. AEAD Identifiers",
      "section_title": true,
      "ja": "11.3. AEAD識別子"
    },
    {
      "indent": 3,
      "text": "The \"HPKE AEAD Identifiers\" registry lists identifiers for authenticated encryption with associated data (AEAD) algorithms defined for use with HPKE. These identifiers are two-byte values, so the maximum possible value is 0xFFFF = 65535.",
      "ja": "「HPKE AEAD識別子」レジストリは、HPKEで使用するために定義された関連データ（AEAD）アルゴリズムを使用した認証された暗号化の識別子をリストします。これらの識別子は2バイト値であるため、最大値は0xffff = 65535です。"
    },
    {
      "indent": 3,
      "text": "Template:",
      "ja": "テンプレート："
    },
    {
      "indent": 6,
      "text": "Value:",
      "ja": "価値："
    },
    {
      "indent": 15,
      "text": "The two-byte identifier for the algorithm",
      "ja": "アルゴリズムの2バイト識別子"
    },
    {
      "indent": 6,
      "text": "AEAD:",
      "ja": "AEAD："
    },
    {
      "indent": 15,
      "text": "The name of the algorithm",
      "ja": "アルゴリズムの名前"
    },
    {
      "indent": 6,
      "text": "Nk:",
      "ja": "NK："
    },
    {
      "indent": 15,
      "text": "The length in bytes of a key for this algorithm",
      "ja": "このアルゴリズムのキーのバイトの長さ"
    },
    {
      "indent": 6,
      "text": "Nn:",
      "ja": "NN："
    },
    {
      "indent": 15,
      "text": "The length in bytes of a nonce for this algorithm",
      "ja": "このアルゴリズムのノンセのバイトの長さ"
    },
    {
      "indent": 6,
      "text": "Nt:",
      "ja": "NT："
    },
    {
      "indent": 15,
      "text": "The length in bytes of an authentication tag for this algorithm",
      "ja": "このアルゴリズムの認証タグのバイトの長さ"
    },
    {
      "indent": 6,
      "text": "Reference:",
      "ja": "参照："
    },
    {
      "indent": 15,
      "text": "Where this algorithm is defined",
      "ja": "このアルゴリズムが定義されている場合"
    },
    {
      "indent": 3,
      "text": "Initial contents:",
      "ja": "最初の内容："
    },
    {
      "indent": 12,
      "text": "Provided in Table 5",
      "ja": "表5に示します"
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "ja": "12. 参考文献"
    },
    {
      "indent": 0,
      "text": "12.1. Normative References",
      "section_title": true,
      "ja": "12.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n           Requirement Levels\", BCP 14, RFC 2119,\n           DOI 10.17487/RFC2119, March 1997,\n           <https://www.rfc-editor.org/info/rfc2119>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5116]  McGrew, D., \"An Interface and Algorithms for Authenticated\n           Encryption\", RFC 5116, DOI 10.17487/RFC5116, January 2008,\n           <https://www.rfc-editor.org/info/rfc5116>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8017]  Moriarty, K., Ed., Kaliski, B., Jonsson, J., and A. Rusch,\n           \"PKCS #1: RSA Cryptography Specifications Version 2.2\",\n           RFC 8017, DOI 10.17487/RFC8017, November 2016,\n           <https://www.rfc-editor.org/info/rfc8017>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n           Writing an IANA Considerations Section in RFCs\", BCP 26,\n           RFC 8126, DOI 10.17487/RFC8126, June 2017,\n           <https://www.rfc-editor.org/info/rfc8126>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n           2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n           May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "12.2. Informative References",
      "section_title": true,
      "ja": "12.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[ABHKLR20] Alwen, J., Blanchet, B., Hauck, E., Kiltz, E., Lipp, B.,\n           and D. Riepel, \"Analysing the HPKE Standard\", November\n           2020, <https://eprint.iacr.org/2020/1499>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[ANSI]     American National Standards Institute (ANSI), \"ANSI -\n           X9.63 Public Key Cryptography for the Financial Services\n           Industry Key Agreement and Key Transport Using Elliptic\n           Curve Cryptography\", November 2001.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[BHK09]    Bellare, M., Hofheinz, D., and E. Kiltz, \"Subtleties in\n           the Definition of IND-CCA: When and How Should Challenge-\n           Decryption be Disallowed?\", August 2009,\n           <https://eprint.iacr.org/2009/418>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[BJM97]    Blake-Wilson, S., Johnson, D., and A. Menezes, \"Key\n           agreement protocols and their security analysis: Extended\n           Abstract\", Crytography and Coding, pp. 30-45,\n           DOI 10.1007/bfb0024447, June 2005,\n           <https://doi.org/10.1007/bfb0024447>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[BNT19]    Bellare, M., Ng, R., and B. Tackmann, \"Nonces Are Noticed:\n           AEAD Revisited\", August 2019,\n           <http://dx.doi.org/10.1007/978-3-030-26948-7_9>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[CS01]     Cramer, R. and V. Shoup, \"Design and Analysis of Practical\n           Public-Key Encryption Schemes Secure against Adaptive\n           Chosen Ciphertext Attack\", December 2001,\n           <https://eprint.iacr.org/2001/108>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[GAP]      Okamoto, T. and D. Pointcheval, \"The Gap-Problems: A New\n           Class of Problems for the Security of Cryptographic\n           Schemes\", ISBN 978-3-540-44586-9, June 2001,\n           <https://link.springer.com/content/\n           pdf/10.1007/3-540-44586-2_8.pdf>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[GCM]      Dworkin, M., \"Recommendation for Block Cipher Modes of\n           Operation: Galois/Counter Mode (GCM) and GMAC\",\n           DOI 10.6028/nist.sp.800-38d, SP 800-38D, November 2007,\n           <https://doi.org/10.6028/nist.sp.800-38d>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[HHK06]    Herranz, J., Hofheinz, D., and E. Kiltz, \"Some\n           (in)sufficient conditions for secure hybrid encryption.\",\n           August 2006, <https://eprint.iacr.org/2006/265>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[HPKEAnalysis]\n           Lipp, B., \"An Analysis of Hybrid Public Key Encryption\",\n           February 2020, <https://eprint.iacr.org/2020/243>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[IEEE1363] IEEE, \"IEEE Standard Specifications for Public-Key\n           Cryptography - Amendment 1: Additional Techniques\", IEEE\n           Std 1363a-2004.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[IMB]      Diffie, W., Van Oorschot, P., and M. Wiener,\n           \"Authentication and authenticated key exchanges\", Designs,\n           Codes and Cryptography, Vol. 2, pp. 107-125,\n           DOI 10.1007/bf00124891, June 1992,\n           <https://doi.org/10.1007/bf00124891>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[ISO]      International Organization for Standardization,\n           \"Information technology - Security techniques - Encryption\n           algorithms - Part 2: Asymmetric ciphers\", ISO/\n           IEC 18033-2:2006, May 2006.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[keyagreement]\n           Barker, E., Chen, L., Roginsky, A., Vassilev, A., and R.\n           Davis, \"Recommendation for Pair-Wise Key-Establishment\n           Schemes Using Discrete Logarithm Cryptography\", NIST\n           Special Publication 800-56A Revision 3,\n           DOI 10.6028/nist.sp.800-56ar3, April 2018,\n           <https://doi.org/10.6028/nist.sp.800-56ar3>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[LGR20]    Len, J., Grubbs, P., and T. Ristenpart, \"Partitioning\n           Oracle Attacks\".",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[MAEA10]   Gayoso Martinez, V., Hernandez Alvarez, F., Hernandez\n           Encinas, L., and C. Sanchez Avila, \"A comparison of the\n           standardized versions of ECIES\", October 2010,\n           <https://ieeexplore.ieee.org/abstract/document/5604194/>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[MLS-PROTOCOL]\n           Barnes, R., Beurdouche, B., Robert, R., Millican, J.,\n           Omara, E., and K. Cohn-Gordon, \"The Messaging Layer\n           Security (MLS) Protocol\", Work in Progress, Internet-\n           Draft, draft-ietf-mls-protocol-12, 11 October 2021,\n           <https://datatracker.ietf.org/doc/html/draft-ietf-mls-\n           protocol-12>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[NaCl]     \"Public-key authenticated encryption: crypto_box\", March\n           2019, <https://nacl.cr.yp.to/box.html>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[NISTCurves]\n           National Institute of Standards and Technology (NIST),\n           \"Digital Signature Standard (DSS)\",\n           DOI 10.6028/nist.fips.186-4, FIPS PUB 186-4, July 2013,\n           <https://doi.org/10.6028/nist.fips.186-4>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC1421]  Linn, J., \"Privacy Enhancement for Internet Electronic\n           Mail: Part I: Message Encryption and Authentication\n           Procedures\", RFC 1421, DOI 10.17487/RFC1421, February\n           1993, <https://www.rfc-editor.org/info/rfc1421>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC5869]  Krawczyk, H. and P. Eronen, \"HMAC-based Extract-and-Expand\n           Key Derivation Function (HKDF)\", RFC 5869,\n           DOI 10.17487/RFC5869, May 2010,\n           <https://www.rfc-editor.org/info/rfc5869>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC7748]  Langley, A., Hamburg, M., and S. Turner, \"Elliptic Curves\n           for Security\", RFC 7748, DOI 10.17487/RFC7748, January\n           2016, <https://www.rfc-editor.org/info/rfc7748>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8439]  Nir, Y. and A. Langley, \"ChaCha20 and Poly1305 for IETF\n           Protocols\", RFC 8439, DOI 10.17487/RFC8439, June 2018,\n           <https://www.rfc-editor.org/info/rfc8439>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n           Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n           <https://www.rfc-editor.org/info/rfc8446>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8467]  Mayrhofer, A., \"Padding Policies for Extension Mechanisms\n           for DNS (EDNS(0))\", RFC 8467, DOI 10.17487/RFC8467,\n           October 2018, <https://www.rfc-editor.org/info/rfc8467>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8696]  Housley, R., \"Using Pre-Shared Key (PSK) in the\n           Cryptographic Message Syntax (CMS)\", RFC 8696,\n           DOI 10.17487/RFC8696, December 2019,\n           <https://www.rfc-editor.org/info/rfc8696>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8937]  Cremers, C., Garratt, L., Smyshlyaev, S., Sullivan, N.,\n           and C. Wood, \"Randomness Improvements for Security\n           Protocols\", RFC 8937, DOI 10.17487/RFC8937, October 2020,\n           <https://www.rfc-editor.org/info/rfc8937>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[SECG]     Standards for Efficient Cryptography Group, \"SEC 1:\n           Elliptic Curve Cryptography,\", Version 2, May 2009,\n           <https://secg.org/sec1-v2.pdf>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[SigncryptionDZ10]\n           Dent, A. and Y. Zheng, \"Practical Signcryption\",\n           Information Security and Cryptography,\n           DOI 10.1007/978-3-540-89411-7, November 2010,\n           <https://doi.org/10.1007/978-3-540-89411-7>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[TestVectors]\n           \"HPKE Test Vectors\", <https://github.com/cfrg/draft-irtf-\n           cfrg-hpke/blob/5f503c564da00b0687b3de75f1dfbdfc4079ad31/\n           test-vectors.json>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[TLS-ECH]  Rescorla, E., Oku, K., Sullivan, N., and C. A. Wood, \"TLS\n           Encrypted Client Hello\", Work in Progress, Internet-Draft,\n           draft-ietf-tls-esni-14, 13 February 2022,\n           <https://datatracker.ietf.org/doc/html/draft-ietf-tls-\n           esni-14>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix A. Test Vectors",
      "section_title": true,
      "ja": "付録A. テストベクトル"
    },
    {
      "indent": 3,
      "text": "Each section below contains test vectors for a single HPKE ciphersuite and contains the following values:",
      "ja": "以下の各セクションには、単一のhpke ciphersuiteのテストベクトルが含まれており、次の値が含まれています。"
    },
    {
      "indent": 8,
      "text": "1. Configuration information and private key material: This includes the mode, info string, HPKE ciphersuite identifiers (kem_id, kdf_id, aead_id), and all sender, recipient, and ephemeral key material. For each role X, where X is one of S, R, or E, as sender, recipient, and ephemeral, respectively, key pairs are generated as (skX, pkX) = DeriveKeyPair(ikmX). Each key pair (skX, pkX) is written in its serialized form, where skXm = SerializePrivateKey(skX) and pkXm = SerializePublicKey(pkX). For applicable modes, the shared PSK and PSK identifier are also included.",
      "ja": "1. 構成情報と秘密のキー資料：これには、モード、情報文字列、HPKE Ciphersuite識別子（KEM_ID、KDF_ID、AEAD_ID）、およびすべての送信者、受信者、および一時的なキー資料が含まれます。各役割xについて、xはS、R、またはEのいずれかのいずれかの1つであり、それぞれ送信者、R、またははかないものとして、それぞれ（SKX、PKX）= DeriveKeypair（IKMX）としてキーペアが生成されます。各キーペア（SKX、PKX）は、SKXM = SerializePrivateKey（SKX）およびPKXM = serializepublickey（PKX）のシリアル化された形式で記述されています。該当するモードの場合、共有PSKおよびPSK識別子も含まれています。"
    },
    {
      "indent": 8,
      "text": "2. Context creation intermediate values and outputs: This includes the KEM outputs enc and shared_secret used to create the context, along with intermediate values key_schedule_context and secret computed in the KeySchedule function in Section 5.1. The outputs include the context values key, base_nonce, and exporter_secret.",
      "ja": "2. コンテキストの作成中間値と出力：これには、セクション5.1のキーシェド機能で計算された中間値key_schedule_contextと中間値とともに、コンテキストの作成に使用されるKEM出力Encとshared_secretが含まれます。出力には、コンテキスト値キー、base_nonce、exporter_secretが含まれます。"
    },
    {
      "indent": 8,
      "text": "3. Encryption test vectors: A fixed plaintext message is encrypted using different sequence numbers and associated data values using the context computed in (2). Each test vector lists the sequence number and corresponding nonce computed with base_nonce, the plaintext message pt, associated data aad, and output ciphertext ct.",
      "ja": "3. 暗号化テストベクトル：固定されたプレーンテキストメッセージは、（2）で計算されたコンテキストを使用して、異なるシーケンス番号と関連するデータ値を使用して暗号化されます。各テストベクトルは、base_nonce、プレーンテキストメッセージPT、関連データAAD、および出力暗号文CTで計算されたシーケンス番号と対応するノンセをリストします。"
    },
    {
      "indent": 8,
      "text": "4. Export test vectors: Several exported values of the same length with differing context parameters are computed using the context computed in (2). Each test vector lists the exporter_context, output length L, and resulting export value.",
      "ja": "4. エクスポートテストベクトル：異なるコンテキストパラメーターを持つ同じ長さのいくつかのエクスポートされた値は、（2）で計算されたコンテキストを使用して計算されます。各テストベクトルは、Exporter_Context、出力長L、および結果のエクスポート値をリストします。"
    },
    {
      "indent": 3,
      "text": "These test vectors are also available in JSON format at [TestVectors].",
      "ja": "これらのテストベクトルは、[TestVectors]でJSON形式でも利用できます。"
    },
    {
      "indent": 0,
      "text": "A.1. DHKEM(X25519, HKDF-SHA256), HKDF-SHA256, AES-128-GCM",
      "section_title": true,
      "ja": "A.1. dhkem（x25519、hkdf-sha256）、hkdf-sha256、aes-128-gcm"
    },
    {
      "indent": 0,
      "text": "A.1.1. Base Setup Information",
      "section_title": true,
      "ja": "A.1.1. ベースセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 0\nkem_id: 32\nkdf_id: 1\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n7268600d403fce431561aef583ee1613527cff655c1343f29812e66706df3234\npkEm:\n37fda3567bdbd628e88668c3c8d7e97d1d1253b6d4ea6d44c150f741f1bf4431\nskEm:\n52c4a758a802cd8b936eceea314432798d5baf2d7e9235dc084ab1b9cfa2f736\nikmR:\n6db9df30aa07dd42ee5e8181afdb977e538f5e1fec8a06223f33f7013e525037\npkRm:\n3948cfe0ad1ddb695d780e59077195da6c56506b027329794ab02bca80815c4d\nskRm:\n4612c550263fc8ad58375df3f557aac531d26850903e55a9f23f21d8534e8ac8\nenc:\n37fda3567bdbd628e88668c3c8d7e97d1d1253b6d4ea6d44c150f741f1bf4431\nshared_secret:\nfe0e18c9f024ce43799ae393c7e8fe8fce9d218875e8227b0187c04e7d2ea1fc\nkey_schedule_context: 00725611c9d98c07c03f60095cd32d400d8347d45ed670\n97bbad50fc56da742d07cb6cffde367bb0565ba28bb02c90744a20f5ef37f3052352\n6106f637abb05449\nsecret:\n12fff91991e93b48de37e7daddb52981084bd8aa64289c3788471d9a9712f397\nkey: 4531685d41d65f03dc48f6b8302c05b0\nbase_nonce: 56d890e5accaaf011cff4b7d\nexporter_secret:\n45ff1c2e220db587171952c0592d5f5ebe103f1561a2614e38f2ffd47e99e3f8",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.1.1. Encryptions",
      "section_title": true,
      "ja": "A.1.1.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 56d890e5accaaf011cff4b7d\nct: f938558b5d72f1a23810b4be2ab4f84331acc02fc97babc53a52ae8218a355a9\n6d8770ac83d07bea87e13c512a\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 56d890e5accaaf011cff4b7c\nct: af2d7e9ac9ae7e270f46ba1f975be53c09f8d875bdc8535458c2494e8a6eab25\n1c03d0c22a56b8ca42c2063b84\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 56d890e5accaaf011cff4b7f\nct: 498dfcabd92e8acedc281e85af1cb4e3e31c7dc394a1ca20e173cb7251649158\n8d96a19ad4a683518973dcc180\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 56d890e5accaaf011cff4b79\nct: 583bd32bc67a5994bb8ceaca813d369bca7b2a42408cddef5e22f880b631215a\n09fc0012bc69fccaa251c0246d\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 56d890e5accaaf011cff4b82\nct: 7175db9717964058640a3a11fb9007941a5d1757fda1a6935c805c21af32505b\nf106deefec4a49ac38d71c9e0a\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 56d890e5accaaf011cff4a7d\nct: 957f9800542b0b8891badb026d79cc54597cb2d225b54c00c5238c25d05c30e3\nfbeda97d2e0e1aba483a2df9f2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.1.2. Exported Values",
      "section_title": true,
      "ja": "A.1.1.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n3853fe2b4035195a573ffc53856e77058e15d9ea064de3e59f4961d0095250ee\n\nexporter_context: 00\nL: 32\nexported_value:\n2e8f0b54673c7029649d4eb9d5e33bf1872cf76d623ff164ac185da9e88c21a5\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\ne9e43065102c3836401bed8c3c3c75ae46be1639869391d62c61f1ec7af54931",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.2. PSK Setup Information",
      "section_title": true,
      "ja": "A.1.2. PSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 1\nkem_id: 32\nkdf_id: 1\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n78628c354e46f3e169bd231be7b2ff1c77aa302460a26dbfa15515684c00130b\npkEm:\n0ad0950d9fb9588e59690b74f1237ecdf1d775cd60be2eca57af5a4b0471c91b\nskEm:\n463426a9ffb42bb17dbe6044b9abd1d4e4d95f9041cef0e99d7824eef2b6f588\nikmR:\nd4a09d09f575fef425905d2ab396c1449141463f698f8efdb7accfaff8995098\npkRm:\n9fed7e8c17387560e92cc6462a68049657246a09bfa8ade7aefe589672016366\nskRm:\nc5eb01eb457fe6c6f57577c5413b931550a162c71a03ac8d196babbd4e5ce0fd\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc:\n0ad0950d9fb9588e59690b74f1237ecdf1d775cd60be2eca57af5a4b0471c91b\nshared_secret:\n727699f009ffe3c076315019c69648366b69171439bd7dd0807743bde76986cd\nkey_schedule_context: 01e78d5cf6190d275863411ff5edd0dece5d39fa48e04e\nec1ed9b71be34729d18ccb6cffde367bb0565ba28bb02c90744a20f5ef37f3052352\n6106f637abb05449\nsecret:\n3728ab0b024b383b0381e432b47cced1496d2516957a76e2a9f5c8cb947afca4\nkey: 15026dba546e3ae05836fc7de5a7bb26\nbase_nonce: 9518635eba129d5ce0914555\nexporter_secret:\n3d76025dbbedc49448ec3f9080a1abab6b06e91c0b11ad23c912f043a0ee7655",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.2.1. Encryptions",
      "section_title": true,
      "ja": "A.1.2.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 9518635eba129d5ce0914555\nct: e52c6fed7f758d0cf7145689f21bc1be6ec9ea097fef4e959440012f4feb73fb\n611b946199e681f4cfc34db8ea\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 9518635eba129d5ce0914554\nct: 49f3b19b28a9ea9f43e8c71204c00d4a490ee7f61387b6719db765e948123b45\nb61633ef059ba22cd62437c8ba\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 9518635eba129d5ce0914557\nct: 257ca6a08473dc851fde45afd598cc83e326ddd0abe1ef23baa3baa4dd8cde99\nfce2c1e8ce687b0b47ead1adc9\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 9518635eba129d5ce0914551\nct: a71d73a2cd8128fcccbd328b9684d70096e073b59b40b55e6419c9c68ae21069\nc847e2a70f5d8fb821ce3dfb1c\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 9518635eba129d5ce09145aa\nct: 55f84b030b7f7197f7d7d552365b6b932df5ec1abacd30241cb4bc4ccea27bd2\nb518766adfa0fb1b71170e9392\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 9518635eba129d5ce0914455\nct: c5bf246d4a790a12dcc9eed5eae525081e6fb541d5849e9ce8abd92a3bc15517\n76bea16b4a518f23e237c14b59",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.2.2. Exported Values",
      "section_title": true,
      "ja": "A.1.2.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\ndff17af354c8b41673567db6259fd6029967b4e1aad13023c2ae5df8f4f43bf6\n\nexporter_context: 00\nL: 32\nexported_value:\n6a847261d8207fe596befb52928463881ab493da345b10e1dcc645e3b94e2d95\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n8aff52b45a1be3a734bc7a41e20b4e055ad4c4d22104b0c20285a7c4302401cd",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.3. Auth Setup Information",
      "section_title": true,
      "ja": "A.1.3. AUTHセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 2\nkem_id: 32\nkdf_id: 1\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n6e6d8f200ea2fb20c30b003a8b4f433d2f4ed4c2658d5bc8ce2fef718059c9f7\npkEm:\n23fb952571a14a25e3d678140cd0e5eb47a0961bb18afcf85896e5453c312e76\nskEm:\nff4442ef24fbc3c1ff86375b0be1e77e88a0de1e79b30896d73411c5ff4c3518\nikmR:\nf1d4a30a4cef8d6d4e3b016e6fd3799ea057db4f345472ed302a67ce1c20cdec\npkRm:\n1632d5c2f71c2b38d0a8fcc359355200caa8b1ffdf28618080466c909cb69b2e\nskRm:\nfdea67cf831f1ca98d8e27b1f6abeb5b7745e9d35348b80fa407ff6958f9137e\nikmS:\n94b020ce91d73fca4649006c7e7329a67b40c55e9e93cc907d282bbbff386f58\npkSm:\n8b0c70873dc5aecb7f9ee4e62406a397b350e57012be45cf53b7105ae731790b\nskSm:\ndc4a146313cce60a278a5323d321f051c5707e9c45ba21a3479fecdf76fc69dd\nenc:\n23fb952571a14a25e3d678140cd0e5eb47a0961bb18afcf85896e5453c312e76\nshared_secret:\n2d6db4cf719dc7293fcbf3fa64690708e44e2bebc81f84608677958c0d4448a7\nkey_schedule_context: 02725611c9d98c07c03f60095cd32d400d8347d45ed670\n97bbad50fc56da742d07cb6cffde367bb0565ba28bb02c90744a20f5ef37f3052352\n6106f637abb05449\nsecret:\n56c62333d9d9f7767f5b083fdfce0aa7e57e301b74029bb0cffa7331385f1dda\nkey: b062cb2c4dd4bca0ad7c7a12bbc341e6\nbase_nonce: a1bc314c1942ade7051ffed0\nexporter_secret:\nee1a093e6e1c393c162ea98fdf20560c75909653550540a2700511b65c88c6f1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.3.1. Encryptions",
      "section_title": true,
      "ja": "A.1.3.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: a1bc314c1942ade7051ffed0\nct: 5fd92cc9d46dbf8943e72a07e42f363ed5f721212cd90bcfd072bfd9f44e06b8\n0fd17824947496e21b680c141b\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: a1bc314c1942ade7051ffed1\nct: d3736bb256c19bfa93d79e8f80b7971262cb7c887e35c26370cfed62254369a1\nb52e3d505b79dd699f002bc8ed\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: a1bc314c1942ade7051ffed2\nct: 122175cfd5678e04894e4ff8789e85dd381df48dcaf970d52057df2c9acc3b12\n1313a2bfeaa986050f82d93645\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: a1bc314c1942ade7051ffed4\nct: dae12318660cf963c7bcbef0f39d64de3bf178cf9e585e756654043cc5059873\nbc8af190b72afc43d1e0135ada\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: a1bc314c1942ade7051ffe2f\nct: 55d53d85fe4d9e1e97903101eab0b4865ef20cef28765a47f840ff99625b7d69\ndee927df1defa66a036fc58ff2\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: a1bc314c1942ade7051fffd0\nct: 42fa248a0e67ccca688f2b1d13ba4ba84755acf764bd797c8f7ba3b9b1dc3330\n326f8d172fef6003c79ec72319",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.3.2. Exported Values",
      "section_title": true,
      "ja": "A.1.3.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n28c70088017d70c896a8420f04702c5a321d9cbf0279fba899b59e51bac72c85\n\nexporter_context: 00\nL: 32\nexported_value:\n25dfc004b0892be1888c3914977aa9c9bbaf2c7471708a49e1195af48a6f29ce\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n5a0131813abc9a522cad678eb6bafaabc43389934adb8097d23c5ff68059eb64",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.4. AuthPSK Setup Information",
      "section_title": true,
      "ja": "A.1.4. AuthPSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 3\nkem_id: 32\nkdf_id: 1\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n4303619085a20ebcf18edd22782952b8a7161e1dbae6e46e143a52a96127cf84\npkEm:\n820818d3c23993492cc5623ab437a48a0a7ca3e9639c140fe1e33811eb844b7c\nskEm:\n14de82a5897b613616a00c39b87429df35bc2b426bcfd73febcb45e903490768\nikmR:\n4b16221f3b269a88e207270b5e1de28cb01f847841b344b8314d6a622fe5ee90\npkRm:\n1d11a3cd247ae48e901939659bd4d79b6b959e1f3e7d66663fbc9412dd4e0976\nskRm:\ncb29a95649dc5656c2d054c1aa0d3df0493155e9d5da6d7e344ed8b6a64a9423\nikmS:\n62f77dcf5df0dd7eac54eac9f654f426d4161ec850cc65c54f8b65d2e0b4e345\npkSm:\n2bfb2eb18fcad1af0e4f99142a1c474ae74e21b9425fc5c589382c69b50cc57e\nskSm:\nfc1c87d2f3832adb178b431fce2ac77c7ca2fd680f3406c77b5ecdf818b119f4\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc:\n820818d3c23993492cc5623ab437a48a0a7ca3e9639c140fe1e33811eb844b7c\nshared_secret:\nf9d0e870aba28d04709b2680cb8185466c6a6ff1d6e9d1091d5bf5e10ce3a577\nkey_schedule_context: 03e78d5cf6190d275863411ff5edd0dece5d39fa48e04e\nec1ed9b71be34729d18ccb6cffde367bb0565ba28bb02c90744a20f5ef37f3052352\n6106f637abb05449\nsecret:\n5f96c55e4108c6691829aaabaa7d539c0b41d7c72aae94ae289752f056b6cec4\nkey: 1364ead92c47aa7becfa95203037b19a\nbase_nonce: 99d8b5c54669807e9fc70df1\nexporter_secret:\nf048d55eacbf60f9c6154bd4021774d1075ebf963c6adc71fa846f183ab2dde6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.4.1. Encryptions",
      "section_title": true,
      "ja": "A.1.4.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 99d8b5c54669807e9fc70df1\nct: a84c64df1e11d8fd11450039d4fe64ff0c8a99fca0bd72c2d4c3e0400bc14a40\nf27e45e141a24001697737533e\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 99d8b5c54669807e9fc70df0\nct: 4d19303b848f424fc3c3beca249b2c6de0a34083b8e909b6aa4c3688505c05ff\ne0c8f57a0a4c5ab9da127435d9\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 99d8b5c54669807e9fc70df3\nct: 0c085a365fbfa63409943b00a3127abce6e45991bc653f182a80120868fc507e\n9e4d5e37bcc384fc8f14153b24\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 99d8b5c54669807e9fc70df5\nct: 000a3cd3a3523bf7d9796830b1cd987e841a8bae6561ebb6791a3f0e34e89a4f\nb539faeee3428b8bbc082d2c1a\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 99d8b5c54669807e9fc70d0e\nct: 576d39dd2d4cc77d1a14a51d5c5f9d5e77586c3d8d2ab33bdec6379e28ce5c50\n2f0b1cbd09047cf9eb9269bb52\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 99d8b5c54669807e9fc70cf1\nct: 13239bab72e25e9fd5bb09695d23c90a24595158b99127505c8a9ff9f127e0d6\n57f71af59d67d4f4971da028f9",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.1.4.2. Exported Values",
      "section_title": true,
      "ja": "A.1.4.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n08f7e20644bb9b8af54ad66d2067457c5f9fcb2a23d9f6cb4445c0797b330067\n\nexporter_context: 00\nL: 32\nexported_value:\n52e51ff7d436557ced5265ff8b94ce69cf7583f49cdb374e6aad801fc063b010\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\na30c20370c026bbea4dca51cb63761695132d342bae33a6a11527d3e7679436d",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2. DHKEM(X25519, HKDF-SHA256), HKDF-SHA256, ChaCha20Poly1305",
      "section_title": true,
      "ja": "A.2. dhkem（x25519、hkdf-sha256）、hkdf-sha256、chacha20poly1305"
    },
    {
      "indent": 0,
      "text": "A.2.1. Base Setup Information",
      "section_title": true,
      "ja": "A.2.1. ベースセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 0\nkem_id: 32\nkdf_id: 1\naead_id: 3\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n909a9b35d3dc4713a5e72a4da274b55d3d3821a37e5d099e74a647db583a904b\npkEm:\n1afa08d3dec047a643885163f1180476fa7ddb54c6a8029ea33f95796bf2ac4a\nskEm:\nf4ec9b33b792c372c1d2c2063507b684ef925b8c75a42dbcbf57d63ccd381600\nikmR:\n1ac01f181fdf9f352797655161c58b75c656a6cc2716dcb66372da835542e1df\npkRm:\n4310ee97d88cc1f088a5576c77ab0cf5c3ac797f3d95139c6c84b5429c59662a\nskRm:\n8057991eef8f1f1af18f4a9491d16a1ce333f695d4db8e38da75975c4478e0fb\nenc:\n1afa08d3dec047a643885163f1180476fa7ddb54c6a8029ea33f95796bf2ac4a\nshared_secret:\n0bbe78490412b4bbea4812666f7916932b828bba79942424abb65244930d69a7\nkey_schedule_context: 00431df6cd95e11ff49d7013563baf7f11588c75a6611e\ne2a4404a49306ae4cfc5b69c5718a60cc5876c358d3f7fc31ddb598503f67be58ea1\ne798c0bb19eb9796\nsecret:\n5b9cd775e64b437a2335cf499361b2e0d5e444d5cb41a8a53336d8fe402282c6\nkey:\nad2744de8e17f4ebba575b3f5f5a8fa1f69c2a07f6e7500bc60ca6e3e3ec1c91\nbase_nonce: 5c4d98150661b848853b547f\nexporter_secret:\na3b010d4994890e2c6968a36f64470d3c824c8f5029942feb11e7a74b2921922",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.1.1. Encryptions",
      "section_title": true,
      "ja": "A.2.1.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 5c4d98150661b848853b547f\nct: 1c5250d8034ec2b784ba2cfd69dbdb8af406cfe3ff938e131f0def8c8b60b4db\n21993c62ce81883d2dd1b51a28\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 5c4d98150661b848853b547e\nct: 6b53c051e4199c518de79594e1c4ab18b96f081549d45ce015be002090bb119e\n85285337cc95ba5f59992dc98c\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 5c4d98150661b848853b547d\nct: 71146bd6795ccc9c49ce25dda112a48f202ad220559502cef1f34271e0cb4b02\nb4f10ecac6f48c32f878fae86b\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 5c4d98150661b848853b547b\nct: 63357a2aa291f5a4e5f27db6baa2af8cf77427c7c1a909e0b37214dd47db122b\nb153495ff0b02e9e54a50dbe16\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 5c4d98150661b848853b5480\nct: 18ab939d63ddec9f6ac2b60d61d36a7375d2070c9b683861110757062c52b888\n0a5f6b3936da9cd6c23ef2a95c\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 5c4d98150661b848853b557f\nct: 7a4a13e9ef23978e2c520fd4d2e757514ae160cd0cd05e556ef692370ca53076\n214c0c40d4c728d6ed9e727a5b",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.1.2. Exported Values",
      "section_title": true,
      "ja": "A.2.1.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n4bbd6243b8bb54cec311fac9df81841b6fd61f56538a775e7c80a9f40160606e\n\nexporter_context: 00\nL: 32\nexported_value:\n8c1df14732580e5501b00f82b10a1647b40713191b7c1240ac80e2b68808ba69\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n5acb09211139c43b3090489a9da433e8a30ee7188ba8b0a9a1ccf0c229283e53",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.2. PSK Setup Information",
      "section_title": true,
      "ja": "A.2.2. PSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 1\nkem_id: 32\nkdf_id: 1\naead_id: 3\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n35706a0b09fb26fb45c39c2f5079c709c7cf98e43afa973f14d88ece7e29c2e3\npkEm:\n2261299c3f40a9afc133b969a97f05e95be2c514e54f3de26cbe5644ac735b04\nskEm:\n0c35fdf49df7aa01cd330049332c40411ebba36e0c718ebc3edf5845795f6321\nikmR:\n26b923eade72941c8a85b09986cdfa3f1296852261adedc52d58d2930269812b\npkRm:\n13640af826b722fc04feaa4de2f28fbd5ecc03623b317834e7ff4120dbe73062\nskRm:\n77d114e0212be51cb1d76fa99dd41cfd4d0166b08caa09074430a6c59ef17879\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc:\n2261299c3f40a9afc133b969a97f05e95be2c514e54f3de26cbe5644ac735b04\nshared_secret:\n4be079c5e77779d0215b3f689595d59e3e9b0455d55662d1f3666ec606e50ea7\nkey_schedule_context: 016870c4c76ca38ae43efbec0f2377d109499d7ce73f4a\n9e1ec37f21d3d063b97cb69c5718a60cc5876c358d3f7fc31ddb598503f67be58ea1\ne798c0bb19eb9796\nsecret:\n16974354c497c9bd24c000ceed693779b604f1944975b18c442d373663f4a8cc\nkey:\n600d2fdb0313a7e5c86a9ce9221cd95bed069862421744cfb4ab9d7203a9c019\nbase_nonce: 112e0465562045b7368653e7\nexporter_secret:\n73b506dc8b6b4269027f80b0362def5cbb57ee50eed0c2873dac9181f453c5ac",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.2.1. Encryptions",
      "section_title": true,
      "ja": "A.2.2.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 112e0465562045b7368653e7\nct: 4a177f9c0d6f15cfdf533fb65bf84aecdc6ab16b8b85b4cf65a370e07fc1d78d\n28fb073214525276f4a89608ff\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 112e0465562045b7368653e6\nct: 5c3cabae2f0b3e124d8d864c116fd8f20f3f56fda988c3573b40b09997fd6c76\n9e77c8eda6cda4f947f5b704a8\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 112e0465562045b7368653e5\nct: 14958900b44bdae9cbe5a528bf933c5c990dbb8e282e6e495adf8205d19da9eb\n270e3a6f1e0613ab7e757962a4\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 112e0465562045b7368653e3\nct: c2a7bc09ddb853cf2effb6e8d058e346f7fe0fb3476528c80db6b698415c5f8c\n50b68a9a355609e96d2117f8d3\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 112e0465562045b736865318\nct: 2414d0788e4bc39a59a26d7bd5d78e111c317d44c37bd5a4c2a1235f2ddc2085\nc487d406490e75210c958724a7\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 112e0465562045b7368652e7\nct: c567ae1c3f0f75abe1dd9e4532b422600ed4a6e5b9484dafb1e43ab9f5fd662b\n28c00e2e81d3cde955dae7e218",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.2.2. Exported Values",
      "section_title": true,
      "ja": "A.2.2.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n813c1bfc516c99076ae0f466671f0ba5ff244a41699f7b2417e4c59d46d39f40\n\nexporter_context: 00\nL: 32\nexported_value:\n2745cf3d5bb65c333658732954ee7af49eb895ce77f8022873a62a13c94cb4e1\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\nad40e3ae14f21c99bfdebc20ae14ab86f4ca2dc9a4799d200f43a25f99fa78ae",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.3. Auth Setup Information",
      "section_title": true,
      "ja": "A.2.3. AUTHセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 2\nkem_id: 32\nkdf_id: 1\naead_id: 3\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n938d3daa5a8904540bc24f48ae90eed3f4f7f11839560597b55e7c9598c996c0\npkEm:\nf7674cc8cd7baa5872d1f33dbaffe3314239f6197ddf5ded1746760bfc847e0e\nskEm:\nc94619e1af28971c8fa7957192b7e62a71ca2dcdde0a7cc4a8a9e741d600ab13\nikmR:\n64835d5ee64aa7aad57c6f2e4f758f7696617f8829e70bc9ac7a5ef95d1c756c\npkRm:\n1a478716d63cb2e16786ee93004486dc151e988b34b475043d3e0175bdb01c44\nskRm:\n3ca22a6d1cda1bb9480949ec5329d3bf0b080ca4c45879c95eddb55c70b80b82\nikmS:\n9d8f94537d5a3ddef71234c0baedfad4ca6861634d0b94c3007fed557ad17df6\npkSm:\nf0f4f9e96c54aeed3f323de8534fffd7e0577e4ce269896716bcb95643c8712b\nskSm:\n2def0cb58ffcf83d1062dd085c8aceca7f4c0c3fd05912d847b61f3e54121f05\nenc:\nf7674cc8cd7baa5872d1f33dbaffe3314239f6197ddf5ded1746760bfc847e0e\nshared_secret:\nd2d67828c8bc9fa661cf15a31b3ebf1febe0cafef7abfaaca580aaf6d471e3eb\nkey_schedule_context: 02431df6cd95e11ff49d7013563baf7f11588c75a6611e\ne2a4404a49306ae4cfc5b69c5718a60cc5876c358d3f7fc31ddb598503f67be58ea1\ne798c0bb19eb9796\nsecret:\n3022dfc0a81d6e09a2e6daeeb605bb1ebb9ac49535540d9a4c6560064a6c6da8\nkey:\nb071fd1136680600eb447a845a967d35e9db20749cdf9ce098bcc4deef4b1356\nbase_nonce: d20577dff16d7cea2c4bf780\nexporter_secret:\nbe2d93b82071318cdb88510037cf504344151f2f9b9da8ab48974d40a2251dd7",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.3.1. Encryptions",
      "section_title": true,
      "ja": "A.2.3.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: d20577dff16d7cea2c4bf780\nct: ab1a13c9d4f01a87ec3440dbd756e2677bd2ecf9df0ce7ed73869b98e00c09be\n111cb9fdf077347aeb88e61bdf\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: d20577dff16d7cea2c4bf781\nct: 3265c7807ffff7fdace21659a2c6ccffee52a26d270c76468ed74202a65478bf\naedfff9c2b7634e24f10b71016\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: d20577dff16d7cea2c4bf782\nct: 3aadee86ad2a05081ea860033a9d09dbccb4acac2ded0891da40f51d4df19925\nf7a767b076a5cbc9355c8fd35e\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: d20577dff16d7cea2c4bf784\nct: 502ecccd5c2be3506a081809cc58b43b94f77cbe37b8b31712d9e21c9e61aa69\n46a8e922f54eae630f88eb8033\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: d20577dff16d7cea2c4bf77f\nct: 652e597ba20f3d9241cda61f33937298b1169e6adf72974bbe454297502eb4be\n132e1c5064702fc165c2ddbde8\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: d20577dff16d7cea2c4bf680\nct: 3be14e8b3bbd1028cf2b7d0a691dbbeff71321e7dec92d3c2cfb30a0994ab246\naf76168480285a60037b4ba13a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.3.2. Exported Values",
      "section_title": true,
      "ja": "A.2.3.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n070cffafd89b67b7f0eeb800235303a223e6ff9d1e774dce8eac585c8688c872\n\nexporter_context: 00\nL: 32\nexported_value:\n2852e728568d40ddb0edde284d36a4359c56558bb2fb8837cd3d92e46a3a14a8\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n1df39dc5dd60edcbf5f9ae804e15ada66e885b28ed7929116f768369a3f950ee",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.4. AuthPSK Setup Information",
      "section_title": true,
      "ja": "A.2.4. AuthPSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 3\nkem_id: 32\nkdf_id: 1\naead_id: 3\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n49d6eac8c6c558c953a0a252929a818745bb08cd3d29e15f9f5db5eb2e7d4b84\npkEm:\n656a2e00dc9990fd189e6e473459392df556e9a2758754a09db3f51179a3fc02\nskEm:\n5e6dd73e82b856339572b7245d3cbb073a7561c0bee52873490e305cbb710410\nikmR:\nf3304ddcf15848488271f12b75ecaf72301faabf6ad283654a14c398832eb184\npkRm:\na5099431c35c491ec62ca91df1525d6349cb8aa170c51f9581f8627be6334851\nskRm:\n7b36a42822e75bf3362dfabbe474b3016236408becb83b859a6909e22803cb0c\nikmS:\n20ade1d5203de1aadfb261c4700b6432e260d0d317be6ebbb8d7fffb1f86ad9d\npkSm:\n3ac5bd4dd66ff9f2740bef0d6ccb66daa77bff7849d7895182b07fb74d087c45\nskSm:\n90761c5b0a7ef0985ed66687ad708b921d9803d51637c8d1cb72d03ed0f64418\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc:\n656a2e00dc9990fd189e6e473459392df556e9a2758754a09db3f51179a3fc02\nshared_secret:\n86a6c0ed17714f11d2951747e660857a5fd7616c933ef03207808b7a7123fe67\nkey_schedule_context: 036870c4c76ca38ae43efbec0f2377d109499d7ce73f4a\n9e1ec37f21d3d063b97cb69c5718a60cc5876c358d3f7fc31ddb598503f67be58ea1\ne798c0bb19eb9796\nsecret:\n22670daee17530c9564001d0a7e740e80d0bcc7ae15349f472fcc9e057cbc259\nkey:\n49c7e6d7d2d257aded2a746fe6a9bf12d4de8007c4862b1fdffe8c35fb65054c\nbase_nonce: abac79931e8c1bcb8a23960a\nexporter_secret:\n7c6cc1bb98993cd93e2599322247a58fd41fdecd3db895fb4c5fd8d6bbe606b5",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.4.1. Encryptions",
      "section_title": true,
      "ja": "A.2.4.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: abac79931e8c1bcb8a23960a\nct: 9aa52e29274fc6172e38a4461361d2342585d3aeec67fb3b721ecd63f059577c\n7fe886be0ede01456ebc67d597\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: abac79931e8c1bcb8a23960b\nct: 59460bacdbe7a920ef2806a74937d5a691d6d5062d7daafcad7db7e4d8c649ad\nffe575c1889c5c2e3a49af8e3e\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: abac79931e8c1bcb8a239608\nct: 5688ff6a03ba26ae936044a5c800f286fb5d1eccdd2a0f268f6ff9773b511693\n18d1a1466bb36263415071db00\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: abac79931e8c1bcb8a23960e\nct: d936b7a01f5c7dc4c3dc04e322cc694684ee18dd71719196874e5235aed3cfb0\n6cadcd3bc7da0877488d7c551d\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: abac79931e8c1bcb8a2396f5\nct: 4d4c462f7b9b637eaf1f4e15e325b7bc629c0af6e3073422c86064cc3c98cff8\n7300f054fd56dd57dc34358beb\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: abac79931e8c1bcb8a23970a\nct: 9b7f84224922d2a9edd7b2c2057f3bcf3a547f17570575e626202e593bfdd99e\n9878a1af9e41ded58c7fb77d2f",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.2.4.2. Exported Values",
      "section_title": true,
      "ja": "A.2.4.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\nc23ebd4e7a0ad06a5dddf779f65004ce9481069ce0f0e6dd51a04539ddcbd5cd\n\nexporter_context: 00\nL: 32\nexported_value:\ned7ff5ca40a3d84561067ebc8e01702bc36cf1eb99d42a92004642b9dfaadd37\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\nd3bae066aa8da27d527d85c040f7dd6ccb60221c902ee36a82f70bcd62a60ee4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3. DHKEM(P-256, HKDF-SHA256), HKDF-SHA256, AES-128-GCM",
      "section_title": true,
      "ja": "A.3. DHKEM（P-256、HKDF-SHA256）、HKDF-SHA256、AES-128-GCM"
    },
    {
      "indent": 0,
      "text": "A.3.1. Base Setup Information",
      "section_title": true,
      "ja": "A.3.1. ベースセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 0\nkem_id: 16\nkdf_id: 1\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n4270e54ffd08d79d5928020af4686d8f6b7d35dbe470265f1f5aa22816ce860e\npkEm: 04a92719c6195d5085104f469a8b9814d5838ff72b60501e2c4466e5e67b32\n5ac98536d7b61a1af4b78e5b7f951c0900be863c403ce65c9bfcb9382657222d18c4\nskEm:\n4995788ef4b9d6132b249ce59a77281493eb39af373d236a1fe415cb0c2d7beb\nikmR:\n668b37171f1072f3cf12ea8a236a45df23fc13b82af3609ad1e354f6ef817550\npkRm: 04fe8c19ce0905191ebc298a9245792531f26f0cece2460639e8bc39cb7f70\n6a826a779b4cf969b8a0e539c7f62fb3d30ad6aa8f80e30f1d128aafd68a2ce72ea0\nskRm:\nf3ce7fdae57e1a310d87f1ebbde6f328be0a99cdbcadf4d6589cf29de4b8ffd2\nenc: 04a92719c6195d5085104f469a8b9814d5838ff72b60501e2c4466e5e67b325\nac98536d7b61a1af4b78e5b7f951c0900be863c403ce65c9bfcb9382657222d18c4\nshared_secret:\nc0d26aeab536609a572b07695d933b589dcf363ff9d93c93adea537aeabb8cb8\nkey_schedule_context: 00b88d4e6d91759e65e87c470e8b9141113e9ad5f0c8ce\nefc1e088c82e6980500798e486f9c9c09c9b5c753ac72d6005de254c607d1b534ed1\n1d493ae1c1d9ac85\nsecret:\n2eb7b6bf138f6b5aff857414a058a3f1750054a9ba1f72c2cf0684a6f20b10e1\nkey: 868c066ef58aae6dc589b6cfdd18f97e\nbase_nonce: 4e0bc5018beba4bf004cca59\nexporter_secret:\n14ad94af484a7ad3ef40e9f3be99ecc6fa9036df9d4920548424df127ee0d99f",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.1.1. Encryptions",
      "section_title": true,
      "ja": "A.3.1.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 4e0bc5018beba4bf004cca59\nct: 5ad590bb8baa577f8619db35a36311226a896e7342a6d836d8b7bcd2f20b6c7f\n9076ac232e3ab2523f39513434\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 4e0bc5018beba4bf004cca58\nct: fa6f037b47fc21826b610172ca9637e82d6e5801eb31cbd3748271affd4ecb06\n646e0329cbdf3c3cd655b28e82\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 4e0bc5018beba4bf004cca5b\nct: 895cabfac50ce6c6eb02ffe6c048bf53b7f7be9a91fc559402cbc5b8dcaeb52b\n2ccc93e466c28fb55fed7a7fec\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 4e0bc5018beba4bf004cca5d\nct: 8787491ee8df99bc99a246c4b3216d3d57ab5076e18fa27133f520703bc70ec9\n99dd36ce042e44f0c3169a6a8f\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 4e0bc5018beba4bf004ccaa6\nct: 2ad71c85bf3f45c6eca301426289854b31448bcf8a8ccb1deef3ebd87f60848a\na53c538c30a4dac71d619ee2cd\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 4e0bc5018beba4bf004ccb59\nct: 10f179686aa2caec1758c8e554513f16472bd0a11e2a907dde0b212cbe87d74f\n367f8ffe5e41cd3e9962a6afb2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.1.2. Exported Values",
      "section_title": true,
      "ja": "A.3.1.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n5e9bc3d236e1911d95e65b576a8a86d478fb827e8bdfe77b741b289890490d4d\n\nexporter_context: 00\nL: 32\nexported_value:\n6cff87658931bda83dc857e6353efe4987a201b849658d9b047aab4cf216e796\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\nd8f1ea7942adbba7412c6d431c62d01371ea476b823eb697e1f6e6cae1dab85a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.2. PSK Setup Information",
      "section_title": true,
      "ja": "A.3.2. PSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 1\nkem_id: 16\nkdf_id: 1\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n2afa611d8b1a7b321c761b483b6a053579afa4f767450d3ad0f84a39fda587a6\npkEm: 04305d35563527bce037773d79a13deabed0e8e7cde61eecee403496959e89\ne4d0ca701726696d1485137ccb5341b3c1c7aaee90a4a02449725e744b1193b53b5f\nskEm:\n57427244f6cc016cddf1c19c8973b4060aa13579b4c067fd5d93a5d74e32a90f\nikmR:\nd42ef874c1913d9568c9405407c805baddaffd0898a00f1e84e154fa787b2429\npkRm: 040d97419ae99f13007a93996648b2674e5260a8ebd2b822e84899cd52d874\n46ea394ca76223b76639eccdf00e1967db10ade37db4e7db476261fcc8df97c5ffd1\nskRm:\n438d8bcef33b89e0e9ae5eb0957c353c25a94584b0dd59c991372a75b43cb661\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc: 04305d35563527bce037773d79a13deabed0e8e7cde61eecee403496959e89e\n4d0ca701726696d1485137ccb5341b3c1c7aaee90a4a02449725e744b1193b53b5f\nshared_secret:\n2e783ad86a1beae03b5749e0f3f5e9bb19cb7eb382f2fb2dd64c99f15ae0661b\nkey_schedule_context: 01b873cdf2dff4c1434988053b7a775e980dd2039ea24f\n950b26b056ccedcb933198e486f9c9c09c9b5c753ac72d6005de254c607d1b534ed1\n1d493ae1c1d9ac85\nsecret:\nf2f534e55931c62eeb2188c1f53450354a725183937e68c85e68d6b267504d26\nkey: 55d9eb9d26911d4c514a990fa8d57048\nbase_nonce: b595dc6b2d7e2ed23af529b1\nexporter_secret:\n895a723a1eab809804973a53c0ee18ece29b25a7555a4808277ad2651d66d705",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.2.1. Encryptions",
      "section_title": true,
      "ja": "A.3.2.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: b595dc6b2d7e2ed23af529b1\nct: 90c4deb5b75318530194e4bb62f890b019b1397bbf9d0d6eb918890e1fb2be1a\nc2603193b60a49c2126b75d0eb\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: b595dc6b2d7e2ed23af529b0\nct: 9e223384a3620f4a75b5a52f546b7262d8826dea18db5a365feb8b997180b22d\n72dc1287f7089a1073a7102c27\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: b595dc6b2d7e2ed23af529b3\nct: adf9f6000773035023be7d415e13f84c1cb32a24339a32eb81df02be9ddc6abc\n880dd81cceb7c1d0c7781465b2\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: b595dc6b2d7e2ed23af529b5\nct: 1f4cc9b7013d65511b1f69c050b7bd8bbd5a5c16ece82b238fec4f30ba2400e7\nca8ee482ac5253cffb5c3dc577\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: b595dc6b2d7e2ed23af5294e\nct: cdc541253111ed7a424eea5134dc14fc5e8293ab3b537668b8656789628e4589\n4e5bb873c968e3b7cdcbb654a4\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: b595dc6b2d7e2ed23af528b1\nct: faf985208858b1253b97b60aecd28bc18737b58d1242370e7703ec33b73a4c31\na1afee300e349adef9015bbbfd",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.2.2. Exported Values",
      "section_title": true,
      "ja": "A.3.2.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\na115a59bf4dd8dc49332d6a0093af8efca1bcbfd3627d850173f5c4a55d0c185\n\nexporter_context: 00\nL: 32\nexported_value:\n4517eaede0669b16aac7c92d5762dd459c301fa10e02237cd5aeb9be969430c4\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n164e02144d44b607a7722e58b0f4156e67c0c2874d74cf71da6ca48a4cbdc5e0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.3. Auth Setup Information",
      "section_title": true,
      "ja": "A.3.3. AUTHセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 2\nkem_id: 16\nkdf_id: 1\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n798d82a8d9ea19dbc7f2c6dfa54e8a6706f7cdc119db0813dacf8440ab37c857\npkEm: 042224f3ea800f7ec55c03f29fc9865f6ee27004f818fcbdc6dc68932c1e52\ne15b79e264a98f2c535ef06745f3d308624414153b22c7332bc1e691cb4af4d53454\nskEm:\n6b8de0873aed0c1b2d09b8c7ed54cbf24fdf1dfc7a47fa501f918810642d7b91\nikmR:\n7bc93bde8890d1fb55220e7f3b0c107ae7e6eda35ca4040bb6651284bf0747ee\npkRm: 04423e363e1cd54ce7b7573110ac121399acbc9ed815fae03b72ffbd4c18b0\n1836835c5a09513f28fc971b7266cfde2e96afe84bb0f266920e82c4f53b36e1a78d\nskRm:\nd929ab4be2e59f6954d6bedd93e638f02d4046cef21115b00cdda2acb2a4440e\nikmS:\n874baa0dcf93595a24a45a7f042e0d22d368747daaa7e19f80a802af19204ba8\npkSm: 04a817a0902bf28e036d66add5d544cc3a0457eab150f104285df1e293b5c1\n0eef8651213e43d9cd9086c80b309df22cf37609f58c1127f7607e85f210b2804f73\nskSm:\n1120ac99fb1fccc1e8230502d245719d1b217fe20505c7648795139d177f0de9\nenc: 042224f3ea800f7ec55c03f29fc9865f6ee27004f818fcbdc6dc68932c1e52e\n15b79e264a98f2c535ef06745f3d308624414153b22c7332bc1e691cb4af4d53454\nshared_secret:\nd4aea336439aadf68f9348880aa358086f1480e7c167b6ef15453ba69b94b44f\nkey_schedule_context: 02b88d4e6d91759e65e87c470e8b9141113e9ad5f0c8ce\nefc1e088c82e6980500798e486f9c9c09c9b5c753ac72d6005de254c607d1b534ed1\n1d493ae1c1d9ac85\nsecret:\nfd0a93c7c6f6b1b0dd6a822d7b16f6c61c83d98ad88426df4613c3581a2319f1\nkey: 19aa8472b3fdc530392b0e54ca17c0f5\nbase_nonce: b390052d26b67a5b8a8fcaa4\nexporter_secret:\nf152759972660eb0e1db880835abd5de1c39c8e9cd269f6f082ed80e28acb164",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.3.1. Encryptions",
      "section_title": true,
      "ja": "A.3.3.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: b390052d26b67a5b8a8fcaa4\nct: 82ffc8c44760db691a07c5627e5fc2c08e7a86979ee79b494a17cc3405446ac2\nbdb8f265db4a099ed3289ffe19\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: b390052d26b67a5b8a8fcaa5\nct: b0a705a54532c7b4f5907de51c13dffe1e08d55ee9ba59686114b05945494d96\n725b239468f1229e3966aa1250\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: b390052d26b67a5b8a8fcaa6\nct: 8dc805680e3271a801790833ed74473710157645584f06d1b53ad439078d880b\n23e25256663178271c80ee8b7c\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: b390052d26b67a5b8a8fcaa0\nct: 04c8f7aae1584b61aa5816382cb0b834a5d744f420e6dffb5ddcec633a21b8b3\n472820930c1ea9258b035937a2\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: b390052d26b67a5b8a8fca5b\nct: 4a319462eaedee37248b4d985f64f4f863d31913fe9e30b6e13136053b69fe5d\n70853c84c60a84bb5495d5a678\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: b390052d26b67a5b8a8fcba4\nct: 28e874512f8940fafc7d06135e7589f6b4198bc0f3a1c64702e72c9e6abaf9f0\n5cb0d2f11b03a517898815c934",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.3.2. Exported Values",
      "section_title": true,
      "ja": "A.3.3.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n837e49c3ff629250c8d80d3c3fb957725ed481e59e2feb57afd9fe9a8c7c4497\n\nexporter_context: 00\nL: 32\nexported_value:\n594213f9018d614b82007a7021c3135bda7b380da4acd9ab27165c508640dbda\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n14fe634f95ca0d86e15247cca7de7ba9b73c9b9deb6437e1c832daf7291b79d5",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.4. AuthPSK Setup Information",
      "section_title": true,
      "ja": "A.3.4. AuthPSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 3\nkem_id: 16\nkdf_id: 1\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n3c1fceb477ec954c8d58ef3249e4bb4c38241b5925b95f7486e4d9f1d0d35fbb\npkEm: 046a1de3fc26a3d43f4e4ba97dbe24f7e99181136129c48fbe872d4743e2b1\n31357ed4f29a7b317dc22509c7b00991ae990bf65f8b236700c82ab7c11a84511401\nskEm:\n36f771e411cf9cf72f0701ef2b991ce9743645b472e835fe234fb4d6eb2ff5a0\nikmR:\nabcc2da5b3fa81d8aabd91f7f800a8ccf60ec37b1b585a5d1d1ac77f258b6cca\npkRm: 04d824d7e897897c172ac8a9e862e4bd820133b8d090a9b188b8233a64dfbc\n5f725aa0aa52c8462ab7c9188f1c4872f0c99087a867e8a773a13df48a627058e1b3\nskRm:\nbdf4e2e587afdf0930644a0c45053889ebcadeca662d7c755a353d5b4e2a8394\nikmS:\n6262031f040a9db853edd6f91d2272596eabbc78a2ed2bd643f770ecd0f19b82\npkSm: 049f158c750e55d8d5ad13ede66cf6e79801634b7acadcad72044eac2ae1d0\n480069133d6488bf73863fa988c4ba8bde1c2e948b761274802b4d8012af4f13af9e\nskSm:\nb0ed8721db6185435898650f7a677affce925aba7975a582653c4cb13c72d240\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc: 046a1de3fc26a3d43f4e4ba97dbe24f7e99181136129c48fbe872d4743e2b13\n1357ed4f29a7b317dc22509c7b00991ae990bf65f8b236700c82ab7c11a84511401\nshared_secret:\nd4c27698391db126f1612d9e91a767f10b9b19aa17e1695549203f0df7d9aebe\nkey_schedule_context: 03b873cdf2dff4c1434988053b7a775e980dd2039ea24f\n950b26b056ccedcb933198e486f9c9c09c9b5c753ac72d6005de254c607d1b534ed1\n1d493ae1c1d9ac85\nsecret:\n3bf9d4c7955da2740414e73081fa74d6f6f2b4b9645d0685219813ce99a2f270\nkey: 4d567121d67fae1227d90e11585988fb\nbase_nonce: 67c9d05330ca21e5116ecda6\nexporter_secret:\n3f479020ae186788e4dfd4a42a21d24f3faabb224dd4f91c2b2e5e9524ca27b2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.4.1. Encryptions",
      "section_title": true,
      "ja": "A.3.4.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 67c9d05330ca21e5116ecda6\nct: b9f36d58d9eb101629a3e5a7b63d2ee4af42b3644209ab37e0a272d44365407d\nb8e655c72e4fa46f4ff81b9246\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 67c9d05330ca21e5116ecda7\nct: 51788c4e5d56276771032749d015d3eea651af0c7bb8e3da669effffed299ea1\nf641df621af65579c10fc09736\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 67c9d05330ca21e5116ecda4\nct: 3b5a2be002e7b29927f06442947e1cf709b9f8508b03823127387223d7127034\n71c266efc355f1bc2036f3027c\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 67c9d05330ca21e5116ecda2\nct: 8ddbf1242fe5c7d61e1675496f3bfdb4d90205b3dfbc1b12aab41395d71a8211\n8e095c484103107cf4face5123\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 67c9d05330ca21e5116ecd59\nct: 6de25ceadeaec572fbaa25eda2558b73c383fe55106abaec24d518ef6724a7ce\n698f83ecdc53e640fe214d2f42\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 67c9d05330ca21e5116ecca6\nct: f380e19d291e12c5e378b51feb5cd50f6d00df6cb2af8393794c4df342126c2e\n29633fe7e8ce49587531affd4d",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.3.4.2. Exported Values",
      "section_title": true,
      "ja": "A.3.4.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n595ce0eff405d4b3bb1d08308d70a4e77226ce11766e0a94c4fdb5d90025c978\n\nexporter_context: 00\nL: 32\nexported_value:\n110472ee0ae328f57ef7332a9886a1992d2c45b9b8d5abc9424ff68630f7d38d\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n18ee4d001a9d83a4c67e76f88dd747766576cac438723bad0700a910a4d717e6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4. DHKEM(P-256, HKDF-SHA256), HKDF-SHA512, AES-128-GCM",
      "section_title": true,
      "ja": "A.4. DHKEM（P-256、HKDF-SHA256）、HKDF-SHA512、AES-128-GCM"
    },
    {
      "indent": 0,
      "text": "A.4.1. Base Setup Information",
      "section_title": true,
      "ja": "A.4.1. ベースセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 0\nkem_id: 16\nkdf_id: 3\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n4ab11a9dd78c39668f7038f921ffc0993b368171d3ddde8031501ee1e08c4c9a\npkEm: 0493ed86735bdfb978cc055c98b45695ad7ce61ce748f4dd63c525a3b8d53a\n15565c6897888070070c1579db1f86aaa56deb8297e64db7e8924e72866f9a472580\nskEm:\n2292bf14bb6e15b8c81a0f45b7a6e93e32d830e48cca702e0affcfb4d07e1b5c\nikmR:\nea9ff7cc5b2705b188841c7ace169290ff312a9cb31467784ca92d7a2e6e1be8\npkRm: 04085aa5b665dc3826f9650ccbcc471be268c8ada866422f739e2d531d4a88\n18a9466bc6b449357096232919ec4fe9070ccbac4aac30f4a1a53efcf7af90610edd\nskRm:\n3ac8530ad1b01885960fab38cf3cdc4f7aef121eaa239f222623614b4079fb38\nenc: 0493ed86735bdfb978cc055c98b45695ad7ce61ce748f4dd63c525a3b8d53a1\n5565c6897888070070c1579db1f86aaa56deb8297e64db7e8924e72866f9a472580\nshared_secret:\n02f584736390fc93f5b4ad039826a3fa08e9911bd1215a3db8e8791ba533cafd\nkey_schedule_context: 005b8a3617af7789ee716e7911c7e77f84cdc4cc46e60f\nb7e19e4059f9aeadc00585e26874d1ddde76e551a7679cd47168c466f6e1f705cc93\n74c192778a34fcd5ca221d77e229a9d11b654de7942d685069c633b2362ce3b3d8ea\n4891c9a2a87a4eb7cdb289ba5e2ecbf8cd2c8498bb4a383dc021454d70d46fcbbad1\n252ef4f9\nsecret: 0c7acdab61693f936c4c1256c78e7be30eebfe466812f9cc49f0b58dc970\n328dfc03ea359be0250a471b1635a193d2dfa8cb23c90aa2e25025b892a725353eeb\nkey: 090ca96e5f8aa02b69fac360da50ddf9\nbase_nonce: 9c995e621bf9a20c5ca45546\nexporter_secret: 4a7abb2ac43e6553f129b2c5750a7e82d149a76ed56dc342d7b\nca61e26d494f4855dff0d0165f27ce57756f7f16baca006539bb8e4518987ba61048\n0ac03efa8",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.1.1. Encryptions",
      "section_title": true,
      "ja": "A.4.1.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 9c995e621bf9a20c5ca45546\nct: d3cf4984931484a080f74c1bb2a6782700dc1fef9abe8442e44a6f09044c8890\n7200b332003543754eb51917ba\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 9c995e621bf9a20c5ca45547\nct: d14414555a47269dfead9fbf26abb303365e40709a4ed16eaefe1f2070f1ddeb\n1bdd94d9e41186f124e0acc62d\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 9c995e621bf9a20c5ca45544\nct: 9bba136cade5c4069707ba91a61932e2cbedda2d9c7bdc33515aa01dd0e0f7e9\nd3579bf4016dec37da4aafa800\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 9c995e621bf9a20c5ca45542\nct: a531c0655342be013bf32112951f8df1da643602f1866749519f5dcb09cc6843\n2579de305a77e6864e862a7600\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 9c995e621bf9a20c5ca455b9\nct: be5da649469efbad0fb950366a82a73fefeda5f652ec7d3731fac6c4ffa21a70\n04d2ab8a04e13621bd3629547d\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 9c995e621bf9a20c5ca45446\nct: 62092672f5328a0dde095e57435edf7457ace60b26ee44c9291110ec135cb0e1\n4b85594e4fea11247d937deb62",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.1.2. Exported Values",
      "section_title": true,
      "ja": "A.4.1.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\na32186b8946f61aeead1c093fe614945f85833b165b28c46bf271abf16b57208\n\nexporter_context: 00\nL: 32\nexported_value:\n84998b304a0ea2f11809398755f0abd5f9d2c141d1822def79dd15c194803c2a\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n93fb9411430b2cfa2cf0bed448c46922a5be9beff20e2e621df7e4655852edbc",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.2. PSK Setup Information",
      "section_title": true,
      "ja": "A.4.2. PSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 1\nkem_id: 16\nkdf_id: 3\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\nc11d883d6587f911d2ddbc2a0859d5b42fb13bf2c8e89ef408a25564893856f5\npkEm: 04a307934180ad5287f95525fe5bc6244285d7273c15e061f0f2efb211c350\n57f3079f6e0abae200992610b25f48b63aacfcb669106ddee8aa023feed301901371\nskEm:\na5901ff7d6931959c2755382ea40a4869b1dec3694ed3b009dda2d77dd488f18\nikmR:\n75bfc2a3a3541170a54c0b06444e358d0ee2b4fb78a401fd399a47a33723b700\npkRm: 043f5266fba0742db649e1043102b8a5afd114465156719cea90373229aabd\nd84d7f45dabfc1f55664b888a7e86d594853a6cccdc9b189b57839cbbe3b90b55873\nskRm:\nbc6f0b5e22429e5ff47d5969003f3cae0f4fec50e23602e880038364f33b8522\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc: 04a307934180ad5287f95525fe5bc6244285d7273c15e061f0f2efb211c3505\n7f3079f6e0abae200992610b25f48b63aacfcb669106ddee8aa023feed301901371\nshared_secret:\n2912aacc6eaebd71ff715ea50f6ef3a6637856b2a4c58ea61e0c3fc159e3bc16\nkey_schedule_context: 01713f73042575cebfd132f0cc4338523f8eae95c80a74\n9f7cf3eb9436ff1c612ca62c37df27ca46d2cc162445a92c5f5fdc57bcde129ca7b1\nf284b0c12297c037ca221d77e229a9d11b654de7942d685069c633b2362ce3b3d8ea\n4891c9a2a87a4eb7cdb289ba5e2ecbf8cd2c8498bb4a383dc021454d70d46fcbbad1\n252ef4f9\nsecret: ff2051d2128d5f3078de867143e076262ce1d0aecafc3fff3d607f1eaff0\n5345c7d5ffcb3202cdecb3d1a2f7da20592a237747b6e855390cbe2109d3e6ac70c2\nkey: 0b910ba8d9cfa17e5f50c211cb32839a\nbase_nonce: 0c29e714eb52de5b7415a1b7\nexporter_secret: 50c0a182b6f94b4c0bd955c4aa20df01f282cc12c43065a0812\nfe4d4352790171ed2b2c4756ad7f5a730ba336c8f1edd0089d8331192058c385bae3\n9c7cc8b57",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.2.1. Encryptions",
      "section_title": true,
      "ja": "A.4.2.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 0c29e714eb52de5b7415a1b7\nct: 57624b6e320d4aba0afd11f548780772932f502e2ba2a8068676b2a0d3b5129a\n45b9faa88de39e8306da41d4cc\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 0c29e714eb52de5b7415a1b6\nct: 159d6b4c24bacaf2f5049b7863536d8f3ffede76302dace42080820fa51925d4\ne1c72a64f87b14291a3057e00a\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 0c29e714eb52de5b7415a1b5\nct: bd24140859c99bf0055075e9c460032581dd1726d52cf980d308e9b20083ca62\ne700b17892bcf7fa82bac751d0\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 0c29e714eb52de5b7415a1b3\nct: 93ddd55f82e9aaaa3cfc06840575f09d80160b20538125c2549932977d1238dd\ne8126a4a91118faf8632f62cb8\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 0c29e714eb52de5b7415a148\nct: 377a98a3c34bf716581b05a6b3fdc257f245856384d5f2241c8840571c52f5c8\n5c21138a4a81655edab8fe227d\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 0c29e714eb52de5b7415a0b7\nct: cc161f5a179831d456d119d2f2c19a6817289c75d1c61cd37ac8a450acd9efba\n02e0ac00d128c17855931ff69a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.2.2. Exported Values",
      "section_title": true,
      "ja": "A.4.2.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n8158bea21a6700d37022bb7802866edca30ebf2078273757b656ef7fc2e428cf\n\nexporter_context: 00\nL: 32\nexported_value:\n6a348ba6e0e72bb3ef22479214a139ef8dac57be34509a61087a12565473da8d\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n2f6d4f7a18ec48de1ef4469f596aada4afdf6d79b037ed3c07e0118f8723bffc",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.3. Auth Setup Information",
      "section_title": true,
      "ja": "A.4.3. AUTHセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 2\nkem_id: 16\nkdf_id: 3\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n6bb031aa9197562da0b44e737db2b9e61f6c3ea1138c37de28fc37ac29bc7350\npkEm: 04fec59fa9f76f5d0f6c1660bb179cb314ed97953c53a60ab38f8e6ace60fd\n59178084d0dd66e0f79172992d4ddb2e91172ce24949bcebfff158dcc417f2c6e9c6\nskEm:\n93cddd5288e7ef4884c8fe321d075df01501b993ff49ffab8184116f39b3c655\nikmR:\n649a3f92edbb7a2516a0ade0b7dccc58a37240c4ba06f9726a952227b4adf6ff\npkRm: 04378bad519aab406e04d0e5608bcca809c02d6afd2272d4dd03e9357bd0ee\ne8adf84c8deba3155c9cf9506d1d4c8bfefe3cf033a75716cc3cc07295100ec96276\nskRm:\n1ea4484be482bf25fdb2ed39e6a02ed9156b3e57dfb18dff82e4a048de990236\nikmS:\n4d79b8691aab55a7265e8490a04bb3860ed64dece90953ad0dc43a6ea59b4bf2\npkSm: 0404d3c1f9fca22eb4a6d326125f0814c35593b1da8ea0d11a640730b215a2\n59b9b98a34ad17e21617d19fe1d4fa39a4828bfdb306b729ec51c543caca3b2d9529\nskSm:\n02b266d66919f7b08f42ae0e7d97af4ca98b2dae3043bb7e0740ccadc1957579\nenc: 04fec59fa9f76f5d0f6c1660bb179cb314ed97953c53a60ab38f8e6ace60fd5\n9178084d0dd66e0f79172992d4ddb2e91172ce24949bcebfff158dcc417f2c6e9c6\nshared_secret:\n1ed49f6d7ada333d171cd63861a1cb700a1ec4236755a9cd5f9f8f67a2f8e7b3\nkey_schedule_context: 025b8a3617af7789ee716e7911c7e77f84cdc4cc46e60f\nb7e19e4059f9aeadc00585e26874d1ddde76e551a7679cd47168c466f6e1f705cc93\n74c192778a34fcd5ca221d77e229a9d11b654de7942d685069c633b2362ce3b3d8ea\n4891c9a2a87a4eb7cdb289ba5e2ecbf8cd2c8498bb4a383dc021454d70d46fcbbad1\n252ef4f9\nsecret: 9c846ba81ddbbd57bc26d99da6cf7ab956bb735ecd47fe21ed14241c7079\n1b7484c1d06663d21a5d97bf1be70d56ab727f650c4f859c5ed3f71f8928b3c082dd\nkey: 9d4b1c83129f3de6db95faf3d539dcf1\nbase_nonce: ea4fd7a485ee5f1f4b62c1b7\nexporter_secret: ca2410672369aae1afd6c2639f4fe34ca36d35410c090608d29\n24f60def17f910d7928575434d7f991b1f19d3e8358b8278ff59ced0d5eed4774cec\n72e12766e",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.3.1. Encryptions",
      "section_title": true,
      "ja": "A.4.3.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: ea4fd7a485ee5f1f4b62c1b7\nct: 2480179d880b5f458154b8bfe3c7e8732332de84aabf06fc440f6b31f169e154\n157fa9eb44f2fa4d7b38a9236e\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: ea4fd7a485ee5f1f4b62c1b6\nct: 10cd81e3a816d29942b602a92884348171a31cbd0f042c3057c65cd93c540943\na5b05115bd520c09281061935b\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: ea4fd7a485ee5f1f4b62c1b5\nct: 920743a88d8cf6a09e1a3098e8be8edd09db136e9d543f215924043af8c7410f\n68ce6aa64fd2b1a176e7f6b3fd\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: ea4fd7a485ee5f1f4b62c1b3\nct: 6b11380fcc708fc8589effb5b5e0394cbd441fa5e240b5500522150ca8265d65\nff55479405af936e2349119dcd\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: ea4fd7a485ee5f1f4b62c148\nct: d084eca50e7554bb97ba34c4482dfe32c9a2b7f3ab009c2d1b68ecbf97bee2d2\n8cd94b6c829b96361f2701772d\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: ea4fd7a485ee5f1f4b62c0b7\nct: 247da592cc4ce834a94de2c79f5730ee49342470a021e4a4bc2bb77c53b17413\ne94d94f57b4fdaedcf97cfe7b1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.3.2. Exported Values",
      "section_title": true,
      "ja": "A.4.3.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\nf03fbc82f321a0ab4840e487cb75d07aafd8e6f68485e4f7ff72b2f55ff24ad6\n\nexporter_context: 00\nL: 32\nexported_value:\n1ce0cadec0a8f060f4b5070c8f8888dcdfefc2e35819df0cd559928a11ff0891\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n70c405c707102fd0041ea716090753be47d68d238b111d542846bd0d84ba907c",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.4. AuthPSK Setup Information",
      "section_title": true,
      "ja": "A.4.4. AuthPSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 3\nkem_id: 16\nkdf_id: 3\naead_id: 1\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n37ae06a521cd555648c928d7af58ad2aa4a85e34b8cabd069e94ad55ab872cc8\npkEm: 04801740f4b1b35823f7fb2930eac2efc8c4893f34ba111c0bb976e3c7d5dc\n0aef5a7ef0bf4057949a140285f774f1efc53b3860936b92279a11b68395d898d138\nskEm:\n778f2254ae5d661d5c7fca8c4a7495a25bd13f26258e459159f3899df0de76c1\nikmR:\n7466024b7e2d2366c3914d7833718f13afb9e3e45bcfbb510594d614ddd9b4e7\npkRm: 04a4ca7af2fc2cce48edbf2f1700983e927743a4e85bb5035ad562043e25d9\na111cbf6f7385fac55edc5c9d2ca6ed351a5643de95c36748e11dbec98730f4d43e9\nskRm:\n00510a70fde67af487c093234fc4215c1cdec09579c4b30cc8e48cb530414d0e\nikmS:\nee27aaf99bf5cd8398e9de88ac09a82ac22cdb8d0905ab05c0f5fa12ba1709f3\npkSm: 04b59a4157a9720eb749c95f842a5e3e8acdccbe834426d405509ac3191e23\nf2165b5bb1f07a6240dd567703ae75e13182ee0f69fc102145cdb5abf681ff126d60\nskSm:\nd743b20821e6326f7a26684a4beed7088b35e392114480ca9f6c325079dcf10b\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc: 04801740f4b1b35823f7fb2930eac2efc8c4893f34ba111c0bb976e3c7d5dc0\naef5a7ef0bf4057949a140285f774f1efc53b3860936b92279a11b68395d898d138\nshared_secret:\n02bee8be0dda755846115db45071c0cf59c25722e015bde1c124de849c0fea52\nkey_schedule_context: 03713f73042575cebfd132f0cc4338523f8eae95c80a74\n9f7cf3eb9436ff1c612ca62c37df27ca46d2cc162445a92c5f5fdc57bcde129ca7b1\nf284b0c12297c037ca221d77e229a9d11b654de7942d685069c633b2362ce3b3d8ea\n4891c9a2a87a4eb7cdb289ba5e2ecbf8cd2c8498bb4a383dc021454d70d46fcbbad1\n252ef4f9\nsecret: 0f9df08908a6a3d06c8e934cd3f5313f9ebccd0986e316c0198bb48bed30\ndc3db2f3baab94fd40c2c285c7288c77e2255401ee2d5884306addf4296b93c238b3\nkey: b68bb0e2fbf7431cedb46cc3b6f1fe9e\nbase_nonce: 76af62719d33d39a1cb6be9f\nexporter_secret: 7f72308ae68c9a2b3862e686cb547b16d33d00fe482c770c471\n7d8b54e9b1e547244c3602bdd86d5a788a8443befea0a7658002b23f1c96a62a6498\n6fffc511a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.4.1. Encryptions",
      "section_title": true,
      "ja": "A.4.4.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 76af62719d33d39a1cb6be9f\nct: 840669634db51e28df54f189329c1b727fd303ae413f003020aff5e26276aaa9\n10fc4296828cb9d862c2fd7d16\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 76af62719d33d39a1cb6be9e\nct: d4680a48158d9a75fd09355878d6e33997a36ee01d4a8f22032b22373b795a94\n1b7b9c5205ff99e0ff284beef4\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 76af62719d33d39a1cb6be9d\nct: c45eb6597de2bac929a0f5d404ba9d2dc1ea031880930f1fd7a283f0a0cbebb3\n5eac1a9ee0d1225f5e0f181571\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 76af62719d33d39a1cb6be9b\nct: 4ee2482ad8d7d1e9b7e651c78b6ca26d3c5314d0711710ca62c2fd8bb8996d7d\n8727c157538d5493da696b61f8\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 76af62719d33d39a1cb6be60\nct: 65596b731df010c76a915c6271a438056ce65696459432eeafdae7b4cadb6290\ndd61e68edd4e40b659d2a8cbcc\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 76af62719d33d39a1cb6bf9f\nct: 9f659482ebc52f8303f9eac75656d807ec38ce2e50c72e3078cd13d86b30e3f8\n90690a873277620f8a6a42d836",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4.4.2. Exported Values",
      "section_title": true,
      "ja": "A.4.4.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\nc8c917e137a616d3d4e4c9fcd9c50202f366cb0d37862376bc79f9b72e8a8db9\n\nexporter_context: 00\nL: 32\nexported_value:\n33a5d4df232777008a06d0684f23bb891cfaef702f653c8601b6ad4d08dddddf\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\nbed80f2e54f1285895c4a3f3b3625e6206f78f1ed329a0cfb5864f7c139b3c6a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5. DHKEM(P-256, HKDF-SHA256), HKDF-SHA256, ChaCha20Poly1305",
      "section_title": true,
      "ja": "A.5. DHKEM（P-256、HKDF-SHA256）、HKDF-SHA256、Chacha20Poly1305"
    },
    {
      "indent": 0,
      "text": "A.5.1. Base Setup Information",
      "section_title": true,
      "ja": "A.5.1. ベースセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 0\nkem_id: 16\nkdf_id: 1\naead_id: 3\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\nf1f1a3bc95416871539ecb51c3a8f0cf608afb40fbbe305c0a72819d35c33f1f\npkEm: 04c07836a0206e04e31d8ae99bfd549380b072a1b1b82e563c935c09582782\n4fc1559eac6fb9e3c70cd3193968994e7fe9781aa103f5b50e934b5b2f387e381291\nskEm:\n7550253e1147aae48839c1f8af80d2770fb7a4c763afe7d0afa7e0f42a5b3689\nikmR:\n61092f3f56994dd424405899154a9918353e3e008171517ad576b900ddb275e7\npkRm: 04a697bffde9405c992883c5c439d6cc358170b51af72812333b015621dc0f\n40bad9bb726f68a5c013806a790ec716ab8669f84f6b694596c2987cf35baba2a006\nskRm:\na4d1c55836aa30f9b3fbb6ac98d338c877c2867dd3a77396d13f68d3ab150d3b\nenc: 04c07836a0206e04e31d8ae99bfd549380b072a1b1b82e563c935c095827824\nfc1559eac6fb9e3c70cd3193968994e7fe9781aa103f5b50e934b5b2f387e381291\nshared_secret:\n806520f82ef0b03c823b7fc524b6b55a088f566b9751b89551c170f4113bd850\nkey_schedule_context: 00b738cd703db7b4106e93b4621e9a19c89c838e559642\n40e5d3f331aaf8b0d58b2e986ea1c671b61cf45eec134dac0bae58ec6f63e790b140\n0b47c33038b0269c\nsecret:\nfe891101629aa355aad68eff3cc5170d057eca0c7573f6575e91f9783e1d4506\nkey:\na8f45490a92a3b04d1dbf6cf2c3939ad8bfc9bfcb97c04bffe116730c9dfe3fc\nbase_nonce: 726b4390ed2209809f58c693\nexporter_secret:\n4f9bd9b3a8db7d7c3a5b9d44fdc1f6e37d5d77689ade5ec44a7242016e6aa205",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.1.1. Encryptions",
      "section_title": true,
      "ja": "A.5.1.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 726b4390ed2209809f58c693\nct: 6469c41c5c81d3aa85432531ecf6460ec945bde1eb428cb2fedf7a29f5a685b4\nccb0d057f03ea2952a27bb458b\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 726b4390ed2209809f58c692\nct: f1564199f7e0e110ec9c1bcdde332177fc35c1adf6e57f8d1df24022227ffa87\n16862dbda2b1dc546c9d114374\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 726b4390ed2209809f58c691\nct: 39de89728bcb774269f882af8dc5369e4f3d6322d986e872b3a8d074c7c18e85\n49ff3f85b6d6592ff87c3f310c\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 726b4390ed2209809f58c697\nct: bc104a14fbede0cc79eeb826ea0476ce87b9c928c36e5e34dc9b6905d91473ec\n369a08b1a25d305dd45c6c5f80\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 726b4390ed2209809f58c66c\nct: 8f2814a2c548b3be50259713c6724009e092d37789f6856553d61df23ebc0792\n35f710e6af3c3ca6eaba7c7c6c\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 726b4390ed2209809f58c793\nct: b45b69d419a9be7219d8c94365b89ad6951caf4576ea4774ea40e9b7047a09d6\n537d1aa2f7c12d6ae4b729b4d0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.1.2. Exported Values",
      "section_title": true,
      "ja": "A.5.1.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n9b13c510416ac977b553bf1741018809c246a695f45eff6d3b0356dbefe1e660\n\nexporter_context: 00\nL: 32\nexported_value:\n6c8b7be3a20a5684edecb4253619d9051ce8583baf850e0cb53c402bdcaf8ebb\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n477a50d804c7c51941f69b8e32fe8288386ee1a84905fe4938d58972f24ac938",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.2. PSK Setup Information",
      "section_title": true,
      "ja": "A.5.2. PSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 1\nkem_id: 16\nkdf_id: 1\naead_id: 3\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\ne1a4e1d50c4bfcf890f2b4c7d6b2d2aca61368eddc3c84162df2856843e1057a\npkEm: 04f336578b72ad7932fe867cc4d2d44a718a318037a0ec271163699cee653f\na805c1fec955e562663e0c2061bb96a87d78892bff0cc0bad7906c2d998ebe1a7246\nskEm:\n7d6e4e006cee68af9b3fdd583a0ee8962df9d59fab029997ee3f456cbc857904\nikmR:\nee51dec304abf993ef8fd52aacdd3b539108bbf6e491943266c1de89ec596a17\npkRm: 041eb8f4f20ab72661af369ff3231a733672fa26f385ffb959fd1bae46bfda\n43ad55e2d573b880831381d9367417f554ce5b2134fbba5235b44db465feffc6189e\nskRm:\n12ecde2c8bc2d5d7ed2219c71f27e3943d92b344174436af833337c557c300b3\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc: 04f336578b72ad7932fe867cc4d2d44a718a318037a0ec271163699cee653fa\n805c1fec955e562663e0c2061bb96a87d78892bff0cc0bad7906c2d998ebe1a7246\nshared_secret:\nac4f260dce4db6bf45435d9c92c0e11cfdd93743bd3075949975974cc2b3d79e\nkey_schedule_context: 01622b72afcc3795841596c67ea74400ca3b029374d7d5\n640bda367c5d67b3fbeb2e986ea1c671b61cf45eec134dac0bae58ec6f63e790b140\n0b47c33038b0269c\nsecret:\n858c8087a1c056db5811e85802f375bb0c19b9983204a1575de4803575d23239\nkey:\n6d61cb330b7771168c8619498e753f16198aad9566d1f1c6c70e2bc1a1a8b142\nbase_nonce: 0de7655fb65e1cd51a38864e\nexporter_secret:\n754ca00235b245e72d1f722a7718e7145bd113050a2aa3d89586d4cb7514bfdb",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.2.1. Encryptions",
      "section_title": true,
      "ja": "A.5.2.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 0de7655fb65e1cd51a38864e\nct: 21433eaff24d7706f3ed5b9b2e709b07230e2b11df1f2b1fe07b3c70d5948a53\nd6fa5c8bed194020bd9df0877b\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 0de7655fb65e1cd51a38864f\nct: c74a764b4892072ea8c2c56b9bcd46c7f1e9ca8cb0a263f8b40c2ba59ac9c857\n033f176019562218769d3e0452\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 0de7655fb65e1cd51a38864c\nct: dc8cd68863474d6e9cbb6a659335a86a54e036249d41acf909e738c847ff2bd3\n6fe3fcacda4ededa7032c0a220\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 0de7655fb65e1cd51a38864a\nct: cd54a8576353b1b9df366cb0cc042e46eef6f4cf01e205fe7d47e306b2fdd90f\n7185f289a26c613ca094e3be10\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 0de7655fb65e1cd51a3886b1\nct: 6324570c9d542c70c7e70570c1d8f4c52a89484746bf0625441890ededcc80c2\n4ef2301c38bfd34d689d19f67d\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 0de7655fb65e1cd51a38874e\nct: 1ea6326c8098ed0437a553c466550114fb2ca1412cca7de98709b9ccdf19206e\n52c3d39180e2cf62b3e9f4baf4",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.2.2. Exported Values",
      "section_title": true,
      "ja": "A.5.2.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n530bbc2f68f078dccc89cc371b4f4ade372c9472bafe4601a8432cbb934f528d\n\nexporter_context: 00\nL: 32\nexported_value:\n6e25075ddcc528c90ef9218f800ca3dfe1b8ff4042de5033133adb8bd54c401d\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n6f6fbd0d1c7733f796461b3235a856cc34f676fe61ed509dfc18fa16efe6be78",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.3. Auth Setup Information",
      "section_title": true,
      "ja": "A.5.3. AUTHセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 2\nkem_id: 16\nkdf_id: 1\naead_id: 3\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n0ecd212019008138a31f9104d5dba76b9f8e34d5b996041fff9e3df221dd0d5d\npkEm: 040d5176aedba55bc41709261e9195c5146bb62d783031280775f32e507d79\nb5cbc5748b6be6359760c73cfe10ca19521af704ca6d91ff32fc0739527b9385d415\nskEm:\n085fd5d5e6ce6497c79df960cac93710006b76217d8bcfafbd2bb2c20ea03c42\nikmR:\nd32236d8378b9563840653789eb7bc33c3c720e537391727bf1c812d0eac110f\npkRm: 0444f6ee41818d9fe0f8265bffd016b7e2dd3964d610d0f7514244a60dbb7a\n11ece876bb110a97a2ac6a9542d7344bf7d2bd59345e3e75e497f7416cf38d296233\nskRm:\n3cb2c125b8c5a81d165a333048f5dcae29a2ab2072625adad66dbb0f48689af9\nikmS:\n0e6be0851283f9327295fd49858a8c8908ea9783212945eef6c598ee0a3cedbb\npkSm: 04265529a04d4f46ab6fa3af4943774a9f1127821656a75a35fade898a9a1b\n014f64d874e88cddb24c1c3d79004d3a587db67670ca357ff4fba7e8b56ec013b98b\nskSm:\n39b19402e742d48d319d24d68e494daa4492817342e593285944830320912519\nenc: 040d5176aedba55bc41709261e9195c5146bb62d783031280775f32e507d79b\n5cbc5748b6be6359760c73cfe10ca19521af704ca6d91ff32fc0739527b9385d415\nshared_secret:\n1a45aa4792f4b166bfee7eeab0096c1a6e497480e2261b2a59aad12f2768d469\nkey_schedule_context: 02b738cd703db7b4106e93b4621e9a19c89c838e559642\n40e5d3f331aaf8b0d58b2e986ea1c671b61cf45eec134dac0bae58ec6f63e790b140\n0b47c33038b0269c\nsecret:\n9193210815b87a4c5496c9d73e609a6c92665b5ea0d760866294906d089ebb57\nkey:\ncf292f8a4313280a462ce55cde05b5aa5744fe4ca89a5d81b0146a5eaca8092d\nbase_nonce: 7e45c21e20e869ae00492123\nexporter_secret:\ndba6e307f71769ba11e2c687cc19592f9d436da0c81e772d7a8a9fd28e54355f",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.3.1. Encryptions",
      "section_title": true,
      "ja": "A.5.3.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 7e45c21e20e869ae00492123\nct: 25881f219935eec5ba70d7b421f13c35005734f3e4d959680270f55d71e2f5cb\n3bd2daced2770bf3d9d4916872\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 7e45c21e20e869ae00492122\nct: 653f0036e52a376f5d2dd85b3204b55455b7835c231255ae098d09ed138719b9\n7185129786338ab6543f753193\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 7e45c21e20e869ae00492121\nct: 60878706117f22180c788e62df6a595bc41906096a11a9513e84f0141e43239e\n81a98d7a235abc64112fcb8ddd\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 7e45c21e20e869ae00492127\nct: 0f9094dd08240b5fa7a388b824d19d5b4b1e126cebfd67a062c32f9ba9f1f386\n6cc38de7df2702626e2ab65c0f\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 7e45c21e20e869ae004921dc\nct: dd29319e08135c5f8401d6537a364e92172c0e3f095f3fd18923881d11c0a683\n9345dd0b54acd0edd8f8344792\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 7e45c21e20e869ae00492023\nct: e2276ec5047bc4b6ed57d6da7da2fb47a77502f0a30f17d040247c73da336d72\n2bc6c89adf68396a0912c6d152",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.3.2. Exported Values",
      "section_title": true,
      "ja": "A.5.3.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n56c4d6c1d3a46c70fd8f4ecda5d27c70886e348efb51bd5edeaa39ff6ce34389\n\nexporter_context: 00\nL: 32\nexported_value:\nd2d3e48ed76832b6b3f28fa84be5f11f09533c0e3c71825a34fb0f1320891b51\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\neb0d312b6263995b4c7761e64b688c215ffd6043ff3bad2368c862784cbe6eff",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.4. AuthPSK Setup Information",
      "section_title": true,
      "ja": "A.5.4. AuthPSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 3\nkem_id: 16\nkdf_id: 1\naead_id: 3\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\nf3a07f194703e321ef1f753a1b9fe27a498dfdfa309151d70bedd896c239c499\npkEm: 043539917ee26f8ae0aa5f784a387981b13de33124a3cde88b946720301831\n10f331400115855808244ff0c5b6ca6104483ac95724481d41bdcd9f15b430ad16f6\nskEm:\n11b7e4de2d919240616a31ab14944cced79bc2372108bb98f6792e3b645fe546\nikmR:\n1240e55a0a03548d7f963ef783b6a7362cb505e6b31dfd04c81d9b294543bfbd\npkRm: 04d383fd920c42d018b9d57fd73a01f1eee480008923f67d35169478e55d2e\n8817068daf62a06b10e0aad4a9e429fa7f904481be96b79a9c231a33e956c20b81b6\nskRm:\nc29fc577b7e74d525c0043f1c27540a1248e4f2c8d297298e99010a92e94865c\nikmS:\nce2a0387a2eb8870a3a92c34a2975f0f3f271af4384d446c7dc1524a6c6c515a\npkSm: 0492cf8c9b144b742fe5a63d9a181a19d416f3ec8705f24308ad316564823c\n344e018bd7c03a33c926bb271b28ef5bf28c0ca00abff249fee5ef7f33315ff34fdb\nskSm:\n53541bd995f874a67f8bfd8038afa67fd68876801f42ff47d0dc2a4deea067ae\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc: 043539917ee26f8ae0aa5f784a387981b13de33124a3cde88b9467203018311\n0f331400115855808244ff0c5b6ca6104483ac95724481d41bdcd9f15b430ad16f6\nshared_secret:\n87584311791036a3019bc36803cdd42e9a8931a98b13c88835f2f8a9036a4fd6\nkey_schedule_context: 03622b72afcc3795841596c67ea74400ca3b029374d7d5\n640bda367c5d67b3fbeb2e986ea1c671b61cf45eec134dac0bae58ec6f63e790b140\n0b47c33038b0269c\nsecret:\nfe52b4412590e825ea2603fa88e145b2ee014b942a774b55fab4f081301f16f4\nkey:\n31e140c8856941315d4067239fdc4ebe077fbf45a6fc78a61e7a6c8b3bacb10a\nbase_nonce: 75838a8010d2e4760254dd56\nexporter_secret:\n600895965755db9c5027f25f039a6e3e506c35b3b7084ce33c4a48d59ee1f0e3",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.4.1. Encryptions",
      "section_title": true,
      "ja": "A.5.4.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 75838a8010d2e4760254dd56\nct: 9eadfa0f954835e7e920ffe56dec6b31a046271cf71fdda55db72926e1d8fae9\n4cc6280fcfabd8db71eaa65c05\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 75838a8010d2e4760254dd57\nct: e357ad10d75240224d4095c9f6150a2ed2179c0f878e4f2db8ca95d365d174d0\n59ff8c3eb38ea9a65cfc8eaeb8\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 75838a8010d2e4760254dd54\nct: 2fa56d00f8dd479d67a2ec3308325cf3bbccaf102a64ffccdb006bd7dcb93268\n5b9a7b49cdc094a85fec1da5ef\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 75838a8010d2e4760254dd52\nct: 1fe9d6db14965003ed81a39abf240f9cd7c5a454bca0d69ef9a2de16d537364f\nbbf110b9ef11fa4a7a0172f0ce\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 75838a8010d2e4760254dda9\nct: eaf4041a5c9122b22d1f8d698eeffe45d64b4ae33d0ddca3a4cdf4a5f595acc9\n5a1a9334d06cc4d000df6aaad6\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 75838a8010d2e4760254dc56\nct: fb857f4185ce5286c1a52431867537204963ea66a3eee8d2a74419fd8751faee\n066d08277ac7880473aa4143ba",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5.4.2. Exported Values",
      "section_title": true,
      "ja": "A.5.4.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\nc52b4592cd33dd38b2a3613108ddda28dcf7f03d30f2a09703f758bfa8029c9a\n\nexporter_context: 00\nL: 32\nexported_value:\n2f03bebc577e5729e148554991787222b5c2a02b77e9b1ac380541f710e5a318\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\ne01dd49e8bfc3d9216abc1be832f0418adf8b47a7b5a330a7436c31e33d765d7",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6. DHKEM(P-521, HKDF-SHA512), HKDF-SHA512, AES-256-GCM",
      "section_title": true,
      "ja": "A.6. DHKEM（P-521、HKDF-SHA512）、HKDF-SHA512、AES-256-GCM"
    },
    {
      "indent": 0,
      "text": "A.6.1. Base Setup Information",
      "section_title": true,
      "ja": "A.6.1. ベースセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 0\nkem_id: 18\nkdf_id: 3\naead_id: 2\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE: 7f06ab8215105fc46aceeb2e3dc5028b44364f960426eb0d8e4026c2f8b5d7\ne7a986688f1591abf5ab753c357a5d6f0440414b4ed4ede71317772ac98d9239f709\n04\npkEm: 040138b385ca16bb0d5fa0c0665fbbd7e69e3ee29f63991d3e9b5fa740aab8\n900aaeed46ed73a49055758425a0ce36507c54b29cc5b85a5cee6bae0cf1c21f2731\nece2013dc3fb7c8d21654bb161b463962ca19e8c654ff24c94dd2898de12051f1ed0\n692237fb02b2f8d1dc1c73e9b366b529eb436e98a996ee522aef863dd5739d2f29b0\nskEm: 014784c692da35df6ecde98ee43ac425dbdd0969c0c72b42f2e708ab9d5354\n15a8569bdacfcc0a114c85b8e3f26acf4d68115f8c91a66178cdbd03b7bcc5291e37\n4b\nikmR: 2ad954bbe39b7122529f7dde780bff626cd97f850d0784a432784e69d86ecc\naade43b6c10a8ffdb94bf943c6da479db137914ec835a7e715e36e45e29b587bab3b\nf1\npkRm: 0401b45498c1714e2dce167d3caf162e45e0642afc7ed435df7902ccae0e84\nba0f7d373f646b7738bbbdca11ed91bdeae3cdcba3301f2457be452f271fa6837580\ne661012af49583a62e48d44bed350c7118c0d8dc861c238c72a2bda17f64704f464b\n57338e7f40b60959480c0e58e6559b190d81663ed816e523b6b6a418f66d2451ec64\nskRm: 01462680369ae375e4b3791070a7458ed527842f6a98a79ff5e0d4cbde83c2\n7196a3916956655523a6a2556a7af62c5cadabe2ef9da3760bb21e005202f7b24628\n47\nenc: 040138b385ca16bb0d5fa0c0665fbbd7e69e3ee29f63991d3e9b5fa740aab89\n00aaeed46ed73a49055758425a0ce36507c54b29cc5b85a5cee6bae0cf1c21f2731e\nce2013dc3fb7c8d21654bb161b463962ca19e8c654ff24c94dd2898de12051f1ed06\n92237fb02b2f8d1dc1c73e9b366b529eb436e98a996ee522aef863dd5739d2f29b0\nshared_secret: 776ab421302f6eff7d7cb5cb1adaea0cd50872c71c2d63c30c4f1\nd5e43653336fef33b103c67e7a98add2d3b66e2fda95b5b2a667aa9dac7e59cc1d46\nd30e818\nkey_schedule_context: 0083a27c5b2358ab4dae1b2f5d8f57f10ccccc822a4733\n26f543f239a70aee46347324e84e02d7651a10d08fb3dda739d22d50c53fbfa8122b\naacd0f9ae5913072ef45baa1f3a4b169e141feb957e48d03f28c837d8904c3d67753\n08c3d3faa75dd64adfa44e1a1141edf9349959b8f8e5291cbdc56f62b0ed6527d692\ne85b09a4\nsecret: 49fd9f53b0f93732555b2054edfdc0e3101000d75df714b98ce5aa295a37\nf1b18dfa86a1c37286d805d3ea09a20b72f93c21e83955a1f01eb7c5eead563d21e7\nkey:\n751e346ce8f0ddb2305c8a2a85c70d5cf559c53093656be636b9406d4d7d1b70\nbase_nonce: 55ff7a7d739c69f44b25447b\nexporter_secret: e4ff9dfbc732a2b9c75823763c5ccc954a2c0648fc6de80a585\n81252d0ee3215388a4455e69086b50b87eb28c169a52f42e71de4ca61c920e7bd24c\n95cc3f992",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.1.1. Encryptions",
      "section_title": true,
      "ja": "A.6.1.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 55ff7a7d739c69f44b25447b\nct: 170f8beddfe949b75ef9c387e201baf4132fa7374593dfafa90768788b7b2b20\n0aafcc6d80ea4c795a7c5b841a\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 55ff7a7d739c69f44b25447a\nct: d9ee248e220ca24ac00bbbe7e221a832e4f7fa64c4fbab3945b6f3af0c5ecd5e\n16815b328be4954a05fd352256\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 55ff7a7d739c69f44b254479\nct: 142cf1e02d1f58d9285f2af7dcfa44f7c3f2d15c73d460c48c6e0e506a3144ba\ne35284e7e221105b61d24e1c7a\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 55ff7a7d739c69f44b25447f\nct: 3bb3a5a07100e5a12805327bf3b152df728b1c1be75a9fd2cb2bf5eac0cca1fb\n80addb37eb2a32938c7268e3e5\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 55ff7a7d739c69f44b254484\nct: 4f268d0930f8d50b8fd9d0f26657ba25b5cb08b308c92e33382f369c768b558e\n113ac95a4c70dd60909ad1adc7\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 55ff7a7d739c69f44b25457b\nct: dbbfc44ae037864e75f136e8b4b4123351d480e6619ae0e0ae437f036f2f8f1e\nf677686323977a1ccbb4b4f16a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.1.2. Exported Values",
      "section_title": true,
      "ja": "A.6.1.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n05e2e5bd9f0c30832b80a279ff211cc65eceb0d97001524085d609ead60d0412\n\nexporter_context: 00\nL: 32\nexported_value:\nfca69744bb537f5b7a1596dbf34eaa8d84bf2e3ee7f1a155d41bd3624aa92b63\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\nf389beaac6fcf6c0d9376e20f97e364f0609a88f1bc76d7328e9104df8477013",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.2. PSK Setup Information",
      "section_title": true,
      "ja": "A.6.2. PSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 1\nkem_id: 18\nkdf_id: 3\naead_id: 2\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE: f3ebfa9a69a924e672114fcd9e06fa9559e937f7eccce4181a2b506df53dbe\n514be12f094bb28e01de19dd345b4f7ede5ad7eaa6b9c3019592ec68eaae9a14732c\ne0\npkEm: 040085eff0835cc84351f32471d32aa453cdc1f6418eaaecf1c2824210eb1d\n48d0768b368110fab21407c324b8bb4bec63f042cfa4d0868d19b760eb4beba1bff7\n93b30036d2c614d55730bd2a40c718f9466faf4d5f8170d22b6df98dfe0c067d02b3\n49ae4a142e0c03418f0a1479ff78a3db07ae2c2e89e5840f712c174ba2118e90fdcb\nskEm: 012e5cfe0daf5fe2a1cd617f4c4bae7c86f1f527b3207f115e262a98cc6526\n8ec88cb8645aec73b7aa0a472d0292502d1078e762646e0c093cf873243d12c39915\nf6\nikmR: a2a2458705e278e574f835effecd18232f8a4c459e7550a09d44348ae5d3b1\nea9d95c51995e657ad6f7cae659f5e186126a471c017f8f5e41da9eba74d4e0473e1\n79\npkRm: 04006917e049a2be7e1482759fb067ddb94e9c4f7f5976f655088dec452466\n14ff924ed3b385fc2986c0ecc39d14f907bf837d7306aada59dd5889086125ecd038\nead400603394b5d81f89ebfd556a898cc1d6a027e143d199d3db845cb91c5289fb26\nc5ff80832935b0e8dd08d37c6185a6f77683347e472d1edb6daa6bd7652fea628fae\nskRm: 011bafd9c7a52e3e71afbdab0d2f31b03d998a0dc875dd7555c63560e142bd\ne264428de03379863b4ec6138f813fa009927dc5d15f62314c56d4e7ff2b485753eb\n72\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc: 040085eff0835cc84351f32471d32aa453cdc1f6418eaaecf1c2824210eb1d4\n8d0768b368110fab21407c324b8bb4bec63f042cfa4d0868d19b760eb4beba1bff79\n3b30036d2c614d55730bd2a40c718f9466faf4d5f8170d22b6df98dfe0c067d02b34\n9ae4a142e0c03418f0a1479ff78a3db07ae2c2e89e5840f712c174ba2118e90fdcb\nshared_secret: 0d52de997fdaa4797720e8b1bebd3df3d03c4cf38cc8c1398168d\n36c3fc7626428c9c254dd3f9274450909c64a5b3acbe45e2d850a2fd69ac0605fe5c\n8a057a5\nkey_schedule_context: 0124497637cf18d6fbcc16e9f652f00244c981726f293b\nb7819861e85e50c94f0be30e022ab081e18e6f299fd3d3d976a4bc590f85bc7711bf\nce32ee1a7fb1c154ef45baa1f3a4b169e141feb957e48d03f28c837d8904c3d67753\n08c3d3faa75dd64adfa44e1a1141edf9349959b8f8e5291cbdc56f62b0ed6527d692\ne85b09a4\nsecret: 2cf425e26f65526afc0634a3dba4e28d980c1015130ce07c2ac7530d7a39\n1a75e5a0db428b09f27ad4d975b4ad1e7f85800e03ffeea35e8cf3fe67b18d4a1345\nkey:\nf764a5a4b17e5d1ffba6e699d65560497ebaea6eb0b0d9010a6d979e298a39ff\nbase_nonce: 479afdf3546ddba3a9841f38\nexporter_secret: 5c3d4b65a13570502b93095ef196c42c8211a4a188c4590d358\n63665c705bb140ecba6ce9256be3fad35b4378d41643867454612adfd0542a684b61\n799bf293f",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.2.1. Encryptions",
      "section_title": true,
      "ja": "A.6.2.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 479afdf3546ddba3a9841f38\nct: de69e9d943a5d0b70be3359a19f317bd9aca4a2ebb4332a39bcdfc97d5fe62f3\na77702f4822c3be531aa7843a1\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 479afdf3546ddba3a9841f39\nct: 77a16162831f90de350fea9152cfc685ecfa10acb4f7994f41aed43fa5431f23\n82d078ec88baec53943984553e\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 479afdf3546ddba3a9841f3a\nct: f1d48d09f126b9003b4c7d3fe6779c7c92173188a2bb7465ba43d899a6398a33\n3914d2bb19fd769d53f3ec7336\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 479afdf3546ddba3a9841f3c\nct: 829b11c082b0178082cd595be6d73742a4721b9ac05f8d2ef8a7704a53022d82\nbd0d8571f578c5c13b99eccff8\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 479afdf3546ddba3a9841fc7\nct: a3ee291e20f37021e82df14d41f3fbe98b27c43b318a36cacd8471a3b1051ab1\n2ee055b62ded95b72a63199a3f\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 479afdf3546ddba3a9841e38\nct: eecc2173ce1ac14b27ee67041e90ed50b7809926e55861a579949c07f6d26137\nbf9cf0d097f60b5fd2fbf348ec",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.2.2. Exported Values",
      "section_title": true,
      "ja": "A.6.2.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n62691f0f971e34de38370bff24deb5a7d40ab628093d304be60946afcdb3a936\n\nexporter_context: 00\nL: 32\nexported_value:\n76083c6d1b6809da088584674327b39488eaf665f0731151128452e04ce81bff\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n0c7cfc0976e25ae7680cf909ae2de1859cd9b679610a14bec40d69b91785b2f6",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.3. Auth Setup Information",
      "section_title": true,
      "ja": "A.6.3. AUTHセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 2\nkem_id: 18\nkdf_id: 3\naead_id: 2\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE: fe1c589c2a05893895a537f38c7cb4300b5a7e8fef3d6ccb8f07a498029c61\ne90262e009dc254c7f6235f9c6b2fd6aeff0a714db131b09258c16e217b7bd2aa619\nb0\npkEm: 04017de12ede7f72cb101dab36a111265c97b3654816dcd6183f809d4b3d11\n1fe759497f8aefdc5dbb40d3e6d21db15bdc60f15f2a420761bcaeef73b891c2b117\ne9cf01e29320b799bbc86afdc5ea97d941ea1c5bd5ebeeac7a784b3bab524746f3e6\n40ec26ee1bd91255f9330d974f845084637ee0e6fe9f505c5b87c86a4e1a6c3096dd\nskEm: 0185f03560de87bb2c543ef03607f3c33ac09980000de25eabe3b224312946\n330d2e65d192d3b4aa46ca92fc5ca50736b624402d95f6a80dc04d1f10ae95171372\n61\nikmR: 8feea0438481fc0ecd470d6adfcda334a759c6b8650452c5a5dd9b2dd2cc9b\ne33d2bb7ee64605fc07ab4664a58bb9a8de80defe510b6c97d2daf85b92cd4bb0a66\nbf\npkRm: 04007d419b8834e7513d0e7cc66424a136ec5e11395ab353da324e3586673e\ne73d53ab34f30a0b42a92d054d0db321b80f6217e655e304f72793767c4231785c4a\n4a6e008f31b93b7a4f2b8cd12e5fe5a0523dc71353c66cbdad51c86b9e0bdfcd9a45\n698f2dab1809ab1b0f88f54227232c858accc44d9a8d41775ac026341564a2d749f4\nskRm: 013ef326940998544a899e15e1726548ff43bbdb23a8587aa3bef9d1b85733\n8d87287df5667037b519d6a14661e9503cfc95a154d93566d8c84e95ce93ad05293a\n0b\nikmS: 2f66a68b85ef04822b054ef521838c00c64f8b6226935593b69e13a1a2461a\n4f1a74c10c836e87eed150c0db85d4e4f506cbb746149befac6f5c07dc48a615ef92\ndb\npkSm: 04015cc3636632ea9a3879e43240beae5d15a44fba819282fac26a19c989fa\nfdd0f330b8521dff7dc393101b018c1e65b07be9f5fc9a28a1f450d6a541ee0d7622\n1133001e8f0f6a05ab79f9b9bb9ccce142a453d59c5abebb5674839d935a3ca1a3fb\nc328539a60b3bc3c05fed22838584a726b9c176796cad0169ba4093332cbd2dc3a9f\nskSm: 001018584599625ff9953b9305849850d5e34bd789d4b81101139662fbea8b\n6508ddb9d019b0d692e737f66beae3f1f783e744202aaf6fea01506c27287e359fe7\n76\nenc: 04017de12ede7f72cb101dab36a111265c97b3654816dcd6183f809d4b3d111\nfe759497f8aefdc5dbb40d3e6d21db15bdc60f15f2a420761bcaeef73b891c2b117e\n9cf01e29320b799bbc86afdc5ea97d941ea1c5bd5ebeeac7a784b3bab524746f3e64\n0ec26ee1bd91255f9330d974f845084637ee0e6fe9f505c5b87c86a4e1a6c3096dd\nshared_secret: 26648fa2a2deb0bfc56349a590fd4cb7108a51797b634694fc020\n61e8d91b3576ac736a68bf848fe2a58dfb1956d266e68209a4d631e513badf8f4dcf\nc00f30a\nkey_schedule_context: 0283a27c5b2358ab4dae1b2f5d8f57f10ccccc822a4733\n26f543f239a70aee46347324e84e02d7651a10d08fb3dda739d22d50c53fbfa8122b\naacd0f9ae5913072ef45baa1f3a4b169e141feb957e48d03f28c837d8904c3d67753\n08c3d3faa75dd64adfa44e1a1141edf9349959b8f8e5291cbdc56f62b0ed6527d692\ne85b09a4\nsecret: 56b7acb7355d080922d2ddc227829c2276a0b456087654b3ac4b53828bd3\n4af8cf54626f85af858a15a86eba73011665cc922bc59fd07d2975f356d2674db554\nkey:\n01fced239845e53f0ec616e71777883a1f9fcab22a50f701bdeee17ad040e44d\nbase_nonce: 9752b85fe8c73eda183f9e80\nexporter_secret: 80466a9d9cc5112ddad297e817e038801e15fa18152bc4dc010\na35d7f534089c87c98b4bacd7bbc6276c4002a74085adcd9019fca6139826b529256\n9cfb7fe47",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.3.1. Encryptions",
      "section_title": true,
      "ja": "A.6.3.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: 9752b85fe8c73eda183f9e80\nct: 0116aeb3a1c405c61b1ce47600b7ecd11d89b9c08c408b7e2d1e00a4d64696d1\n2e6881dc61688209a8207427f9\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: 9752b85fe8c73eda183f9e81\nct: 37ece0cf6741f443e9d73b9966dc0b228499bb21fbf313948327231e70a18380\ne080529c0267f399ba7c539cc6\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: 9752b85fe8c73eda183f9e82\nct: d17b045cac963e45d55fd3692ec17f100df66ac06d91f3b6af8efa7ed3c88955\n50eb753bc801fe4bd27005b4bd\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: 9752b85fe8c73eda183f9e84\nct: 50c523ae7c64cada96abea16ddf67a73d2914ec86a4cedb31a7e6257f7553ed2\n44626ef79a57198192b2323384\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: 9752b85fe8c73eda183f9e7f\nct: 53d422295a6ce8fcc51e6f69e252e7195e64abf49252f347d8c25534f1865a6a\n17d949c65ce618ddc7d816111f\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: 9752b85fe8c73eda183f9f80\nct: 0dfcfc22ea768880b4160fec27ab10c75fb27766c6bb97aed373a9b6eae35d31\nafb08257401075cbb602ac5abb",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.3.2. Exported Values",
      "section_title": true,
      "ja": "A.6.3.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n8d78748d632f95b8ce0c67d70f4ad1757e61e872b5941e146986804b3990154b\n\nexporter_context: 00\nL: 32\nexported_value:\n80a4753230900ea785b6c80775092801fe91183746479f9b04c305e1db9d1f4d\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n620b176d737cf366bcc20d96adb54ec156978220879b67923689e6dca36210ed",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.4. AuthPSK Setup Information",
      "section_title": true,
      "ja": "A.6.4. AuthPSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 3\nkem_id: 18\nkdf_id: 3\naead_id: 2\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE: 54272797b1fbc128a6967ff1fd606e0c67868f7762ce1421439cbc9e90ce1b\n28d566e6c2acbce712e48eebf236696eb680849d6873e9959395b2931975d61d38bd\n6c\npkEm: 04000a5096a6e6e002c83517b494bfc2e36bfb8632fae8068362852b70d0ff\n71e560b15aff96741ecffb63d8ac3090c3769679009ac59a99a1feb4713c5f090fc0\ndbed01ad73c45d29d369e36744e9ed37d12f80700c16d816485655169a5dd66e4ddf\n27f2acffe0f56f7f77ea2b473b4bf0518b975d9527009a3d14e5a4957e3e8a9074f8\nskEm: 003430af19716084efeced1241bb1a5625b6c826f11ef31649095eb2795261\n9e36f62a79ea28001ac452fb20ddfbb66e62c6c0b1be03c0d28c97794a1fb638207a\n83\nikmR: 3db434a8bc25b27eb0c590dc64997ab1378a99f52b2cb5a5a5b2fa540888f6\nc0f09794c654f4468524e040e6b4eca2c9dcf229f908b9d318f960cc9e9baa92c5ee\ne6\npkRm: 0401655b5d3b7cfafaba30851d25edc44c6dd17d99410efbed8591303b4dbe\nea8cb1045d5255f9a60384c3bbd4a3386ae6e6fab341dc1f8db0eed5f0ab1aaac6d7\n838e00dadf8a1c2c64b48f89c633721e88369e54104b31368f26e35d04a442b0b428\n510fb23caada686add16492f333b0f7ba74c391d779b788df2c38d7a7f4778009d91\nskRm: 0053c0bc8c1db4e9e5c3e3158bfdd7fc716aef12db13c8515adf821dd692ba\n3ca53041029128ee19c8556e345c4bcb840bb7fd789f97fe10f17f0e2c6c25280728\n43\nikmS: 65d523d9b37e1273eb25ad0527d3a7bd33f67208dd1666d9904c6bc04969ae\n5831a8b849e7ff642581f2c3e56be84609600d3c6bbdaded3f6989c37d2892b1e978\nd5\npkSm: 040013761e97007293d57de70962876b4926f69a52680b4714bee1d4236aa9\n6c19b840c57e80b14e91258f0a350e3f7ba59f3f091633aede4c7ec4fa8918323aa4\n5d5901076dec8eeb22899fda9ab9e1960003ff0535f53c02c40f2ae4cdc6070a3870\nb85b4bdd0bb77f1f889e7ee51f465a308f08c666ad3407f75dc046b2ff5a24dbe2ed\nskSm: 003f64675fc8914ec9e2b3ecf13585b26dbaf3d5d805042ba487a5070b8c5a\nc1d39b17e2161771cc1b4d0a3ba6e866f4ea4808684b56af2a49b5e5111146d45d93\n26\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc: 04000a5096a6e6e002c83517b494bfc2e36bfb8632fae8068362852b70d0ff7\n1e560b15aff96741ecffb63d8ac3090c3769679009ac59a99a1feb4713c5f090fc0d\nbed01ad73c45d29d369e36744e9ed37d12f80700c16d816485655169a5dd66e4ddf2\n7f2acffe0f56f7f77ea2b473b4bf0518b975d9527009a3d14e5a4957e3e8a9074f8\nshared_secret: 9e1d5f62cb38229f57f68948a0fbc1264499910cce50ec62cb241\n88c5b0a98868f3c1cfa8c5baa97b3f24db3cdd30df6e04eae83dc4347be8a981066c\n3b5b945\nkey_schedule_context: 0324497637cf18d6fbcc16e9f652f00244c981726f293b\nb7819861e85e50c94f0be30e022ab081e18e6f299fd3d3d976a4bc590f85bc7711bf\nce32ee1a7fb1c154ef45baa1f3a4b169e141feb957e48d03f28c837d8904c3d67753\n08c3d3faa75dd64adfa44e1a1141edf9349959b8f8e5291cbdc56f62b0ed6527d692\ne85b09a4\nsecret: 50a57775958037a04098e0054576cd3bc084d0d08d29548ba4befa5676b9\n1eb4dcd0752813a052c9a930d0aba6ca10b89dd690b64032dc635dece35d1bf4645c\nkey:\n1316ed34bd52374854ed0e5cb0394ca0a79b2d8ce7f15d5104f21acdfb594286\nbase_nonce: d9c64ec8deb8a0647fafe8ff\nexporter_secret: 6cb00ff99aebb2e4a05042ce0d048326dd2c03acd61a601b103\n8a65398406a96ab8b5da3187412b2324089ea16ba4ff7e6f4fe55d281fc8ae5f2049\n032b69ebd",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.4.1. Encryptions",
      "section_title": true,
      "ja": "A.6.4.1. 暗号化"
    },
    {
      "indent": 3,
      "text": "sequence number: 0\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d30\nnonce: d9c64ec8deb8a0647fafe8ff\nct: 942a2a92e0817cf032ce61abccf4f3a7c5d21b794ed943227e07b7df2d6dd92c\n9b8a9371949e65cca262448ab7\n\nsequence number: 1\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d31\nnonce: d9c64ec8deb8a0647fafe8fe\nct: c0a83b5ec3d7933a090f681717290337b4fede5bfaa0a40ec29f93acad742888\na1513c649104c391c78d1d7f29\n\nsequence number: 2\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d32\nnonce: d9c64ec8deb8a0647fafe8fd\nct: 2847b2e0ce0b9da8fca7b0e81ff389d1682ee1b388ed09579b145058b5af6a93\na85dd50d9f417dc88f2c785312\n\nsequence number: 4\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d34\nnonce: d9c64ec8deb8a0647fafe8fb\nct: fbd9948ab9ac4a9cb9e295c07273600e6a111a3a89241d3e2178f39d532a2ec5\nc15b9b0c6937ac84c88e0ca76f\n\nsequence number: 255\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323535\nnonce: d9c64ec8deb8a0647fafe800\nct: 63113a870131b567db8f39a11b4541eafbd2d3cf3a9bf9e5c1cfcb41e52f9027\n310b82a4868215959131694d15\n\nsequence number: 256\npt: 4265617574792069732074727574682c20747275746820626561757479\naad: 436f756e742d323536\nnonce: d9c64ec8deb8a0647fafe9ff\nct: 24f9d8dadd2107376ccd143f70f9bafcd2b21d8117d45ff327e9a78f603a3260\n6e42a6a8bdb57a852591d20907",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6.4.2. Exported Values",
      "section_title": true,
      "ja": "A.6.4.2. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\na39502ef5ca116aa1317bd9583dd52f15b0502b71d900fc8a622d19623d0cb5d\n\nexporter_context: 00\nL: 32\nexported_value:\n749eda112c4cfdd6671d84595f12cd13198fc3ef93ed72369178f344fe6e09c3\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\nf8b4e72cefbff4ca6c4eabb8c0383287082cfcbb953d900aed4959afd0017095",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.7. DHKEM(X25519, HKDF-SHA256), HKDF-SHA256, Export-Only AEAD",
      "section_title": true,
      "ja": "A.7. dhkem（x25519、hkdf-sha256）、hkdf-sha256、エクスポートのみのaead"
    },
    {
      "indent": 0,
      "text": "A.7.1. Base Setup Information",
      "section_title": true,
      "ja": "A.7.1. ベースセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 0\nkem_id: 32\nkdf_id: 1\naead_id: 65535\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n55bc245ee4efda25d38f2d54d5bb6665291b99f8108a8c4b686c2b14893ea5d9\npkEm:\ne5e8f9bfff6c2f29791fc351d2c25ce1299aa5eaca78a757c0b4fb4bcd830918\nskEm:\n095182b502f1f91f63ba584c7c3ec473d617b8b4c2cec3fad5af7fa6748165ed\nikmR:\n683ae0da1d22181e74ed2e503ebf82840deb1d5e872cade20f4b458d99783e31\npkRm:\n194141ca6c3c3beb4792cd97ba0ea1faff09d98435012345766ee33aae2d7664\nskRm:\n33d196c830a12f9ac65d6e565a590d80f04ee9b19c83c87f2c170d972a812848\nenc:\ne5e8f9bfff6c2f29791fc351d2c25ce1299aa5eaca78a757c0b4fb4bcd830918\nshared_secret:\ne81716ce8f73141d4f25ee9098efc968c91e5b8ce52ffff59d64039e82918b66\nkey_schedule_context: 009bd09219212a8cf27c6bb5d54998c5240793a70ca0a8\n92234bd5e082bc619b6a3f4c22aa6d9a0424c2b4292fdf43b8257df93c2f6adbf6dd\nc9c64fee26bdd292\nsecret:\n04d64e0620aa047e9ab833b0ebcd4ff026cefbe44338fd7d1a93548102ee01af\nkey:\nbase_nonce:\nexporter_secret:\n79dc8e0509cf4a3364ca027e5a0138235281611ca910e435e8ed58167c72f79b",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.7.1.1. Exported Values",
      "section_title": true,
      "ja": "A.7.1.1. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n7a36221bd56d50fb51ee65edfd98d06a23c4dc87085aa5866cb7087244bd2a36\n\nexporter_context: 00\nL: 32\nexported_value:\nd5535b87099c6c3ce80dc112a2671c6ec8e811a2f284f948cec6dd1708ee33f0\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\nffaabc85a776136ca0c378e5d084c9140ab552b78f039d2e8775f26efff4c70e",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.7.2. PSK Setup Information",
      "section_title": true,
      "ja": "A.7.2. PSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 1\nkem_id: 32\nkdf_id: 1\naead_id: 65535\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\nc51211a8799f6b8a0021fcba673d9c4067a98ebc6794232e5b06cb9febcbbdf5\npkEm:\nd3805a97cbcd5f08babd21221d3e6b362a700572d14f9bbeb94ec078d051ae3d\nskEm:\n1d72396121a6a826549776ef1a9d2f3a2907fc6a38902fa4e401afdb0392e627\nikmR:\n5e0516b1b29c0e13386529da16525210c796f7d647c37eac118023a6aa9eb89a\npkRm:\nd53af36ea5f58f8868bb4a1333ed4cc47e7a63b0040eb54c77b9c8ec456da824\nskRm:\n98f304d4ecb312689690b113973c61ffe0aa7c13f2fbe365e48f3ed09e5a6a0c\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc:\nd3805a97cbcd5f08babd21221d3e6b362a700572d14f9bbeb94ec078d051ae3d\nshared_secret:\n024573db58c887decb4c57b6ed39f2c9a09c85600a8a0ecb11cac24c6aaec195\nkey_schedule_context: 01446fb1fe2632a0a338f0a85ed1f3a0ac475bdea2cd72\nf8c713b3a46ee737379a3f4c22aa6d9a0424c2b4292fdf43b8257df93c2f6adbf6dd\nc9c64fee26bdd292\nsecret:\n638b94532e0d0bf812cf294f36b97a5bdcb0299df36e22b7bb6858e3c113080b\nkey:\nbase_nonce:\nexporter_secret:\n04261818aeae99d6aba5101bd35ddf3271d909a756adcef0d41389d9ed9ab153",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.7.2.1. Exported Values",
      "section_title": true,
      "ja": "A.7.2.1. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\nbe6c76955334376aa23e936be013ba8bbae90ae74ed995c1c6157e6f08dd5316\n\nexporter_context: 00\nL: 32\nexported_value:\n1721ed2aa852f84d44ad020c2e2be4e2e6375098bf48775a533505fd56a3f416\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n7c9d79876a288507b81a5a52365a7d39cc0fa3f07e34172984f96fec07c44cba",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.7.3. Auth Setup Information",
      "section_title": true,
      "ja": "A.7.3. AUTHセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 2\nkem_id: 32\nkdf_id: 1\naead_id: 65535\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n43b078912a54b591a7b09b16ce89a1955a9dd60b29fb611e044260046e8b061b\npkEm:\n5ac1671a55c5c3875a8afe74664aa8bc68830be9ded0c5f633cd96400e8b5c05\nskEm:\n83d3f217071bbf600ba6f081f6e4005d27b97c8001f55cb5ff6ea3bbea1d9295\nikmR:\nfc9407ae72ed614901ebf44257fb540f617284b5361cfecd620bafc4aba36f73\npkRm:\nffd7ac24694cb17939d95feb7c4c6539bb31621deb9b96d715a64abdd9d14b10\nskRm:\ned88cda0e91ca5da64b6ad7fc34a10f096fa92f0b9ceff9d2c55124304ed8b4a\nikmS:\n2ff4c37a17b2e54046a076bf5fea9c3d59250d54d0dc8572bc5f7c046307040c\npkSm:\n89eb1feae431159a5250c5186f72a15962c8d0debd20a8389d8b6e4996e14306\nskSm:\nc85f136e06d72d28314f0e34b10aadc8d297e9d71d45a5662c2b7c3b9f9f9405\nenc:\n5ac1671a55c5c3875a8afe74664aa8bc68830be9ded0c5f633cd96400e8b5c05\nshared_secret:\ne204156fd17fd65b132d53a0558cd67b7c0d7095ee494b00f47d686eb78f8fb3\nkey_schedule_context: 029bd09219212a8cf27c6bb5d54998c5240793a70ca0a8\n92234bd5e082bc619b6a3f4c22aa6d9a0424c2b4292fdf43b8257df93c2f6adbf6dd\nc9c64fee26bdd292\nsecret:\n355e7ef17f438db43152b7fb45a0e2f49a8bf8956d5dddfec1758c0f0eb1b5d5\nkey:\nbase_nonce:\nexporter_secret:\n276d87e5cb0655c7d3dad95e76e6fc02746739eb9d968955ccf8a6346c97509e",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.7.3.1. Exported Values",
      "section_title": true,
      "ja": "A.7.3.1. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\n83c1bac00a45ed4cb6bd8a6007d2ce4ec501f55e485c5642bd01bf6b6d7d6f0a\n\nexporter_context: 00\nL: 32\nexported_value:\n08a1d1ad2af3ef5bc40232a64f920650eb9b1034fac3892f729f7949621bf06e\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\nff3b0e37a9954247fea53f251b799e2edd35aac7152c5795751a3da424feca73",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.7.4. AuthPSK Setup Information",
      "section_title": true,
      "ja": "A.7.4. AuthPSKセットアップ情報"
    },
    {
      "indent": 3,
      "text": "mode: 3\nkem_id: 32\nkdf_id: 1\naead_id: 65535\ninfo: 4f6465206f6e2061204772656369616e2055726e\nikmE:\n94efae91e96811a3a49fd1b20eb0344d68ead6ac01922c2360779aa172487f40\npkEm:\n81cbf4bd7eee97dd0b600252a1c964ea186846252abb340be47087cc78f3d87c\nskEm:\na2b43f5c67d0d560ee04de0122c765ea5165e328410844db97f74595761bbb81\nikmR:\n4dfde6fadfe5cb50fced4034e84e6d3a104aa4bf2971360032c1c0580e286663\npkRm:\nf47cd9d6993d2e2234eb122b425accfb486ee80f89607b087094e9f413253c2d\nskRm:\nc4962a7f97d773a47bdf40db4b01dc6a56797c9e0deaab45f4ea3aa9b1d72904\nikmS:\n26c12fef8d71d13bbbf08ce8157a283d5e67ecf0f345366b0e90341911110f1b\npkSm:\n29a5bf3867a6128bbdf8e070abe7fe70ca5e07b629eba5819af73810ee20112f\nskSm:\n6175b2830c5743dff5b7568a7e20edb1fe477fb0487ca21d6433365be90234d0\npsk:\n0247fd33b913760fa1fa51e1892d9f307fbe65eb171e8132c2af18555a738b82\npsk_id: 456e6e796e20447572696e206172616e204d6f726961\nenc:\n81cbf4bd7eee97dd0b600252a1c964ea186846252abb340be47087cc78f3d87c\nshared_secret:\nd69246bcd767e579b1eec80956d7e7dfbd2902dad920556f0de69bd54054a2d1\nkey_schedule_context: 03446fb1fe2632a0a338f0a85ed1f3a0ac475bdea2cd72\nf8c713b3a46ee737379a3f4c22aa6d9a0424c2b4292fdf43b8257df93c2f6adbf6dd\nc9c64fee26bdd292\nsecret:\nc15c5bec374f2087c241d3533c6ec48e1c60a21dd00085619b2ffdd84a7918c3\nkey:\nbase_nonce:\nexporter_secret:\n695b1faa479c0e0518b6414c3b46e8ef5caea04c0a192246843765ae6a8a78e0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.7.4.1. Exported Values",
      "section_title": true,
      "ja": "A.7.4.1. エクスポートされた値"
    },
    {
      "indent": 3,
      "text": "exporter_context:\nL: 32\nexported_value:\ndafd8beb94c5802535c22ff4c1af8946c98df2c417e187c6ccafe45335810b58\n\nexporter_context: 00\nL: 32\nexported_value:\n7346bb0b56caf457bcc1aa63c1b97d9834644bdacac8f72dbbe3463e4e46b0dd\n\nexporter_context: 54657374436f6e74657874\nL: 32\nexported_value:\n84f3466bd5a03bde6444324e63d7560e7ac790da4e5bbab01e7c4d575728c34a",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "section_title": true,
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "The authors would like to thank Joel Alwen, Jean-Philippe Aumasson, David Benjamin, Benjamin Beurdouche, Bruno Blanchet, Frank Denis, Stephen Farrell, Scott Fluhrer, Eduard Hauck, Scott Hollenbeck, Kevin Jacobs, Burt Kaliski, Eike Kiltz, Julia Len, John Mattsson, Christopher Patton, Doreen Riepel, Raphael Robert, Michael Rosenberg, Michael Scott, Martin Thomson, Steven Valdez, Riad Wahby, and other contributors in the CFRG for helpful feedback that greatly improved this document.",
      "ja": "著者は、Joel Alwen、Jean-Philippe Aumasson、David Benjamin、Benjamin Beurdouche、Bruno Blanchet、Frank Denis、Stephen Farrell、Scott Flurer、Eduard Hauck、Scott Hollenbeck、Kevin Jacobs、Burt Kaliskiジョン・マッツソン、クリストファー・パットン、ドリーン・リーペル、ラファエル・ロバート、マイケル・ローゼンバーグ、マイケル・スコット、マーティン・トムソン、スティーブン・バルデス、リアッド・ワービー、およびCFRGのその他の貢献者は、このドキュメントを大幅に改善しました。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "section_title": true,
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Richard L. Barnes\nCisco\nEmail: rlb@ipv.sx",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Karthik Bhargavan\nInria\nEmail: karthikeyan.bhargavan@inria.fr",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Benjamin Lipp\nInria\nEmail: ietf@benjaminlipp.de",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Christopher A. Wood\nCloudflare\nEmail: caw@heapingbits.net",
      "raw": true,
      "ja": ""
    }
  ]
}