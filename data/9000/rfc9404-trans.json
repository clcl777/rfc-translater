{
  "title": {
    "text": "RFC 9404 - JSON Meta Application Protocol (JMAP) Blob Management Extension",
    "ja": "RFC 9404 - JSONメタアプリケーションプロトコル（JMAP）BLOB管理拡張機能"
  },
  "number": 9404,
  "created_at": "2024-03-10 07:51:54.966687+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                  B. Gondwana, Ed.\nRequest for Comments: 9404                                      Fastmail\nUpdates: 8620                                                August 2023\nCategory: Standards Track                                               \nISSN: 2070-1721",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "JSON Meta Application Protocol (JMAP) Blob Management Extension",
      "title": true,
      "section_title": true,
      "ja": "JSONメタアプリケーションプロトコル（JMAP）BLOB管理拡張機能"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "section_title": true,
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "The JSON Meta Application Protocol (JMAP) base protocol (RFC 8620) provides the ability to upload and download arbitrary binary data via HTTP POST and GET on a defined endpoint. This binary data is called a \"blob\".",
      "ja": "JSONメタアプリケーションプロトコル（JMAP）ベースプロトコル（RFC 8620）は、HTTP投稿を介して任意のバイナリデータをアップロードおよびダウンロードし、定義されたエンドポイントに到達する機能を提供します。このバイナリデータは「ブロブ」と呼ばれます。"
    },
    {
      "indent": 3,
      "text": "This extension adds additional ways to create and access blobs by making inline method calls within a standard JMAP request.",
      "ja": "この拡張機能は、標準のJMAP要求内でインラインメソッド呼び出しを作成することにより、ブロブを作成およびアクセスする方法を追加します。"
    },
    {
      "indent": 3,
      "text": "This extension also adds a reverse lookup mechanism to discover where blobs are referenced within other data types.",
      "ja": "また、この拡張機能は、逆ルックアップメカニズムを追加して、他のデータ型内でBLOBが参照される場所を発見します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "section_title": true,
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "ja": "これは、インターネット標準トラックドキュメントです。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表しています。公開レビューを受けており、インターネットエンジニアリングステアリンググループ（IESG）からの出版が承認されています。インターネット標準の詳細については、RFC 7841のセクション2で入手できます。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9404.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそのフィードバックを提供する方法に関する情報は、https：//www.rfc-editor.org/info/rfc9404で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "section_title": true,
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2023 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2023 IETF Trustおよび文書著者として特定された人。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Revised BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Revised BSD License.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、セクション4.Eで説明されている法的規定のセクション4.Eで説明されており、改訂されたBSDライセンスで説明されている保証なしで提供されるように、改訂されたBSDライセンステキストを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "section_title": true,
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n2.  Conventions Used in This Document\n3.  Addition to the Capabilities Object\n  3.1.  urn:ietf:params:jmap:blob\n    3.1.1.  Capability Example\n4.  Blob Methods\n  4.1.  Blob/upload\n    4.1.1.  Blob/upload Simple Example\n    4.1.2.  Blob/upload Complex Example\n  4.2.  Blob/get\n    4.2.1.  Blob/get Simple Example\n    4.2.2.  Blob/get Example with Range and Encoding Errors\n  4.3.  Blob/lookup\n    4.3.1.  Blob/lookup Example\n5.  Security Considerations\n6.  IANA Considerations\n  6.1.  JMAP Capability Registration for \"blob\"\n  6.2.  JMAP Error Codes Registration for \"unknownDataType\"\n  6.3.  Creation of \"JMAP Data Types\" Registry\n7.  References\n  7.1.  Normative References\n  7.2.  Informative References\nAcknowledgements\nAuthor's Address",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "Sometimes JMAP [RFC8620] interactions require creating a blob and then referencing it. In the same way that IMAP literals were extended by [RFC7888], embedding small blobs directly into the JMAP method calls array can be an option for reducing round trips.",
      "ja": "JMAP [RFC8620]相互作用がブロブを作成してから参照する必要がある場合があります。IMAPリテラルが[RFC7888]によって拡張されたのと同じように、小さなブロブをJMAPメソッドコールアレイに直接埋め込むことは、往復を減らすためのオプションになります。"
    },
    {
      "indent": 3,
      "text": "Likewise, when fetching an object, it can be useful to also fetch the raw content of that object without a separate round trip.",
      "ja": "同様に、オブジェクトを取得するときは、別の往復なしでそのオブジェクトの生のコンテンツを取得することも役立ちます。"
    },
    {
      "indent": 3,
      "text": "Since raw blobs may contain arbitrary binary data, this document defines a use of the base64 coding specified in [RFC4648] for both creating and fetching blob data.",
      "ja": "生のブロブには任意のバイナリデータが含まれている可能性があるため、このドキュメントでは、BLOBデータの作成とフェッチの両方のために[RFC4648]で指定されたBase64コーディングの使用を定義します。"
    },
    {
      "indent": 3,
      "text": "When JMAP is proxied through a system that applies additional access restrictions, it can be useful to know which objects reference any particular blob; this document defines a way to discover those references.",
      "ja": "追加のアクセス制限を適用するシステムを介してJMAPがプロキシ化されている場合、どのオブジェクトが特定のBLOBを参照するかを知ることが役立ちます。このドキュメントは、これらの参照を発見する方法を定義しています。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "ja": "2. このドキュメントで使用されている規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 3,
      "text": "The definitions of JSON keys and datatypes in the document follow the conventions described in [RFC8620].",
      "ja": "ドキュメント内のJSONキーとデータ型の定義は、[RFC8620]に記載されている規則に従います。"
    },
    {
      "indent": 0,
      "text": "3. Addition to the Capabilities Object",
      "section_title": true,
      "ja": "3. 機能オブジェクトに加えます"
    },
    {
      "indent": 3,
      "text": "The capabilities object is returned as part of the JMAP Session object; see [RFC8620], Section 2.",
      "ja": "機能オブジェクトは、JMAPセッションオブジェクトの一部として返されます。[RFC8620]、セクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "This document defines an additional capability URI.",
      "ja": "このドキュメントでは、追加の機能URIを定義します。"
    },
    {
      "indent": 0,
      "text": "3.1. urn:ietf:params:jmap:blob",
      "section_title": true,
      "ja": "3.1. urn：ietf：params：jmap：blob"
    },
    {
      "indent": 3,
      "text": "The presence of the capability urn:ietf:params:jmap:blob in the accountCapabilities property of an account represents support for additional API methods on the Blob datatype. Servers that include the capability in one or more accountCapabilities properties MUST also include the property in the capabilities property.",
      "ja": "機能urnの存在：ietf：params：jmap：blob accountcapability in property of and of blobデータ型の追加のAPIメソッドのサポートを表します。1つまたは複数のアカウントキャパニティプロパティの機能を含むサーバーには、機能プロパティにプロパティを含める必要があります。"
    },
    {
      "indent": 3,
      "text": "The value of this property in the JMAP Session capabilities property MUST be an empty object.",
      "ja": "JMAPセッション機能プロパティのこのプロパティの値は、空のオブジェクトでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The value of this property in an account's accountCapabilities property is an object that MUST contain the following information on server capabilities and permissions for that account:",
      "ja": "アカウントの勘定勘定プロパティ内のこのプロパティの値は、そのアカウントのサーバー機能と許可に関する次の情報を含める必要があるオブジェクトです。"
    },
    {
      "indent": 6,
      "text": "* maxSizeBlobSet: \"UnsignedInt|null\"",
      "ja": "* maxsizeblobset：「unsignedint | null」"
    },
    {
      "indent": 6,
      "text": "* The maximum size of the blob (in octets) that the server will allow to be created (including blobs created by concatenating multiple data sources together).",
      "ja": "* サーバーが作成できるブロブ（オクテット内）の最大サイズ（複数のデータソースを一緒に連結することによって作成されたブロブを含む）。"
    },
    {
      "indent": 6,
      "text": "* Clients MUST NOT attempt to create blobs larger than this size.",
      "ja": "* クライアントは、このサイズよりも大きいブロブを作成しようとしてはなりません。"
    },
    {
      "indent": 6,
      "text": "* If this value is null, then clients are not required to limit the size of the blob they try to create, though servers can always reject creation of blobs regardless of size, e.g., due to lack of disk space or per-user rate limits.",
      "ja": "* この値がnullの場合、クライアントは作成しようとするブロブのサイズを制限する必要はありませんが、サイズはサイズに関係なく常にブロブの作成を拒否することができます。"
    },
    {
      "indent": 6,
      "text": "* maxDataSources: \"UnsignedInt\"",
      "ja": "* maxdatasources：「unsignedint」"
    },
    {
      "indent": 6,
      "text": "* The maximum number of DataSourceObjects allowed per creation in a Blob/upload.",
      "ja": "* ブロブ/アップロードで作成ごとに許可されるデータソースオブジェクトの最大数。"
    },
    {
      "indent": 6,
      "text": "* Servers MUST allow at least 64 DataSourceObjects per creation.",
      "ja": "* サーバーは、作成ごとに少なくとも64個のDataSourceObjectsを許可する必要があります。"
    },
    {
      "indent": 6,
      "text": "* supportedTypeNames: \"String[]\"",
      "ja": "* supportedtypenames： \"string []\""
    },
    {
      "indent": 6,
      "text": "* An array of data type names that are supported for Blob/lookup. If the server does not support lookups, then this will be the empty list.",
      "ja": "* Blob/Lookupにサポートされているデータ型名の配列。サーバーがルックアップをサポートしていない場合、これは空のリストになります。"
    },
    {
      "indent": 6,
      "text": "* Note that the supportedTypeNames list may include private types that are not in the \"JMAP Data Types\" registry defined by this document. Clients MUST ignore type names they do not recognise.",
      "ja": "* supportedtypenamesリストには、このドキュメントで定義された「JMAPデータ型」レジストリにないプライベートタイプが含まれる場合があることに注意してください。クライアントは、認識していないタイプ名を無視する必要があります。"
    },
    {
      "indent": 6,
      "text": "* supportedDigestAlgorithms: \"String[]\"",
      "ja": "* supporteddigestalgorithms： \"string []\""
    },
    {
      "indent": 6,
      "text": "* An array of supported digest algorithms that are supported for Blob/get. If the server does not support calculating blob digests, then this will be the empty list. Algorithms in this list MUST be present in the \"HTTP Digest Algorithm Values\" registry defined by [RFC3230]; however, in JMAP, they must be lowercased, e.g., \"md5\" rather than \"MD5\".",
      "ja": "* BLOB/GETにサポートされているサポートされているダイジェストアルゴリズムの配列。サーバーが計算BLOBダイジェストをサポートしていない場合、これは空のリストになります。このリストのアルゴリズムは、[RFC3230]で定義された「HTTP Digestアルゴリズム値」レジストリに存在する必要があります。ただし、JMAPでは、「MD5」ではなく「MD5」など、低caseでなければなりません。"
    },
    {
      "indent": 6,
      "text": "* Clients SHOULD prefer algorithms listed earlier in this list.",
      "ja": "* クライアントは、このリストの前にリストされているアルゴリズムを希望する必要があります。"
    },
    {
      "indent": 0,
      "text": "3.1.1. Capability Example",
      "section_title": true,
      "ja": "3.1.1. 機能の例"
    },
    {
      "indent": 3,
      "text": "{\n  \"capabilities\": {\n    ...,\n    \"urn:ietf:params:jmap:blob\": {}\n  },\n  \"accounts\": {\n    \"A13842\": {\n      ...\n      \"accountCapabilities\": {\n        \"urn:ietf:params:jmap:blob\": {\n          \"maxSizeBlobSet\": 50000000,\n          \"maxDataSources\": 100,\n          \"supportedTypeNames\" : [\n            \"Mailbox\",\n            \"Thread\",\n            \"Email\"\n          ],\n          \"supportedDigestAlgorithms\" : [\n            \"sha\",\n            \"sha-256\"\n          ]\n        }\n      }\n    }\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4. Blob Methods",
      "section_title": true,
      "ja": "4. ブロブメソッド"
    },
    {
      "indent": 3,
      "text": "A blob is a sequence of zero or more octets.",
      "ja": "ブロブは、ゼロ以上のオクテットのシーケンスです。"
    },
    {
      "indent": 3,
      "text": "JMAP [RFC8620] defines the Blob/copy method, which is unchanged by this specification and is selected by the urn:ietf:params:jmap:core capability.",
      "ja": "JMAP [RFC8620] BLOB/コピーメソッドを定義します。これは、この仕様で変更されておらず、urn：ietf：params：jmap：core capabilityで選択されます。"
    },
    {
      "indent": 3,
      "text": "The following JMAP methods are selected by the urn:ietf:params:jmap:blob capability.",
      "ja": "次のJMAPメソッドは、urnによって選択されます：ietf：params：jmap：blob機能。"
    },
    {
      "indent": 0,
      "text": "4.1. Blob/upload",
      "section_title": true,
      "ja": "4.1. ブロブ/アップロード"
    },
    {
      "indent": 3,
      "text": "This is similar to a Foo/set in [RFC8620] in some ways. However, blobs cannot be updated or deleted, so only create is allowed in the method call. Also, blobs do not have state, so there is no state field present in the method response.",
      "ja": "これは、いくつかの点で[RFC8620]のFOO/セットに似ています。ただし、ブロブを更新または削除することはできないため、メソッドコールでは作成のみが許可されます。また、ブロブには状態がないため、メソッド応答には状態フィールドが存在しません。"
    },
    {
      "indent": 3,
      "text": "*Parameters*",
      "ja": "*パラメーター*"
    },
    {
      "indent": 6,
      "text": "* accountId: \"Id\"",
      "ja": "* AccountID：「ID」"
    },
    {
      "indent": 6,
      "text": "* The id of the account in which the blobs will be created.",
      "ja": "* ブロブが作成されるアカウントのID。"
    },
    {
      "indent": 6,
      "text": "* create: \"Id[UploadObject]\"",
      "ja": "* 作成：「ID [uploadObject]」"
    },
    {
      "indent": 6,
      "text": "* A map of creation id to UploadObjects.",
      "ja": "* アップロードするための作成IDのマップ。"
    },
    {
      "indent": 3,
      "text": "*Result*",
      "ja": "*結果*"
    },
    {
      "indent": 3,
      "text": "The result is the same as for Foo/set in [RFC8620], with created and notCreated objects mapping from the creation id.",
      "ja": "結果は、[RFC8620]のFOO/セットの場合と同じであり、作成されたオブジェクトが作成され、作成されていないオブジェクトが作成IDからマッピングされます。"
    },
    {
      "indent": 3,
      "text": "The created objects contain:",
      "ja": "作成されたオブジェクトには次のものが含まれています。"
    },
    {
      "indent": 6,
      "text": "* id: \"Id\"",
      "ja": "* やった\""
    },
    {
      "indent": 6,
      "text": "* The blobId that was created.",
      "ja": "* 作成されたブロビド。"
    },
    {
      "indent": 6,
      "text": "* type: \"String|null\"",
      "ja": "* タイプ：「string | null」"
    },
    {
      "indent": 6,
      "text": "* The media type as given in the creation (if any). If not provided, the server MAY perform content analysis and return one of the following: the calculated value, \"application/octet-string\", or null.",
      "ja": "* 作成に記載されているメディアタイプ（ある場合）。提供されていない場合、サーバーはコンテンツ分析を実行し、次のいずれかを返すことができます：計算値「アプリケーション/オクテットストリング」、またはnull。"
    },
    {
      "indent": 6,
      "text": "* size: \"UnsignedInt\"",
      "ja": "* サイズ：「Unsigned Int」"
    },
    {
      "indent": 6,
      "text": "* As per [RFC8620], the size of the created blob in octets.",
      "ja": "* [RFC8620]によると、オクテットの作成されたブロブのサイズ。"
    },
    {
      "indent": 3,
      "text": "The created objects will also contain any other properties identical to those that would be returned in the JSON response of the upload endpoint described in [RFC8620]. This may be extended in the future; in this document, it is anticipated that implementations will extend both the upload endpoint and the Blob/upload responses in the same way.",
      "ja": "作成されたオブジェクトには、[RFC8620]で説明されているアップロードエンドポイントのJSON応答で返されるものと同一のプロパティが含まれます。これは将来拡張される可能性があります。このドキュメントでは、実装がアップロードエンドポイントとBLOB/アップロード応答の両方を同じ方法で拡張することが予想されます。"
    },
    {
      "indent": 3,
      "text": "If there is a problem with a creation, then the server will return a notCreated response with a map from the failed creation id to a SetError object.",
      "ja": "作成に問題がある場合、サーバーは、故障した作成IDからSetErrorオブジェクトにマップを使用して作成されていない応答を返します。"
    },
    {
      "indent": 3,
      "text": "For each successful upload, servers MUST add an entry to the createdIds map ([RFC8620], Section 3.3) for the request; even if the caller did not explicitly pass a createdIds, the value must be available to later methods defined in the same Request Object. This allows the blobId to be used via back-reference in subsequent method calls.",
      "ja": "アップロードが成功するたびに、サーバーはリクエストのためにcreatedIdsマップ（[RFC8620]、セクション3.3）にエントリを追加する必要があります。発信者がcreatedIdsを明示的に渡さなかった場合でも、同じ要求オブジェクトで定義された後のメソッドで値を使用できる必要があります。これにより、後続のメソッド呼び出しでの後方参照を介してブロビッドを使用できます。"
    },
    {
      "indent": 3,
      "text": "The created blob will have the same lifetime and same expiry semantics as any other binary object created via the mechanism specified in [RFC8620], Section 6.",
      "ja": "作成されたBLOBは、[RFC8620]、セクション6で指定されたメカニズムを介して作成された他のバイナリオブジェクトと同じ寿命と同じ有効期限セマンティクスを持ちます。"
    },
    {
      "indent": 3,
      "text": "Uploads using this mechanism will be restricted by the maxUploadSize limit for JMAP requests specified by the server, and clients SHOULD consider using the upload mechanism defined by [RFC8620] for blobs larger than a megabyte.",
      "ja": "このメカニズムを使用したアップロードは、サーバーによって指定されたJMAP要求のMaxuploAdsize制限によって制限され、クライアントはメガバイトよりも大きいブロブに対して[RFC8620]で定義されたアップロードメカニズムの使用を検討する必要があります。"
    },
    {
      "indent": 3,
      "text": "*UploadObject*",
      "ja": "*uploadObject*"
    },
    {
      "indent": 6,
      "text": "* data: \"DataSourceObject[]\"",
      "ja": "* データ：「DataSourceオブジェクト[]」"
    },
    {
      "indent": 6,
      "text": "* An array of zero or more octet sources in order (zero to create an empty blob). The result of each of these sources is concatenated in order to create the blob.",
      "ja": "* ゼロ以上のオクテットソースの配列（空のブロブを作成するゼロ）。これらの各ソースの結果は、BLOBを作成するために連結されています。"
    },
    {
      "indent": 6,
      "text": "* type: \"String|null\" (default: null)",
      "ja": "* タイプ：「string | null」（デフォルト：null）"
    },
    {
      "indent": 6,
      "text": "* A hint for media type of the data.",
      "ja": "* メディアタイプのデータのヒント。"
    },
    {
      "indent": 3,
      "text": "*DataSourceObject*",
      "ja": "*DataSourceObject*"
    },
    {
      "indent": 3,
      "text": "Exactly one of:",
      "ja": "ちょうど1つ："
    },
    {
      "indent": 6,
      "text": "* data:asText: \"String|null\" (raw octets, must be UTF-8)",
      "ja": "* データ：astext： \"string | null\"（rawオクテット、UTF-8でなければなりません）"
    },
    {
      "indent": 6,
      "text": "* data:asBase64: \"String|null\" (base64 representation of octets)",
      "ja": "* データ：asbase64： \"string | null\"（base64オクテットの表現）"
    },
    {
      "indent": 3,
      "text": "or a blobId source:",
      "ja": "またはブロビッドソース："
    },
    {
      "indent": 6,
      "text": "* blobId: \"Id\"",
      "ja": "* ブロビッド：「id」"
    },
    {
      "indent": 6,
      "text": "* offset: \"UnsignedInt|null\" (MAY be zero)",
      "ja": "* オフセット：「unsignedint | null」（ゼロになる可能性があります）"
    },
    {
      "indent": 6,
      "text": "* length: \"UnsignedInt|null\" (MAY be zero)",
      "ja": "* 長さ：「unsignedint | null」（ゼロになる可能性があります）"
    },
    {
      "indent": 3,
      "text": "If null, then offset is assumed to be zero.",
      "ja": "nullの場合、オフセットはゼロであると想定されます。"
    },
    {
      "indent": 3,
      "text": "If null, then length is the remaining octets in the blob.",
      "ja": "nullの場合、長さはブロブの残りのオクテットです。"
    },
    {
      "indent": 3,
      "text": "If the range cannot be fully satisfied (i.e., it begins or extends past the end of the data in the blob), then the DataSourceObject is invalid and results in a notCreated response for this creation id.",
      "ja": "範囲を完全に満たすことができない場合（つまり、BLOBのデータの端を過ぎて開始または拡張します）、DataSourceObjectは無効であり、この作成IDに対して作成されていない応答をもたらします。"
    },
    {
      "indent": 3,
      "text": "If the data properties have any invalid references or invalid data contained in them, the server MUST NOT guess the user's intent and MUST reject the creation and return a notCreated response for that creation id.",
      "ja": "データプロパティに無効な参照またはそれらに含まれるデータが含まれている場合、サーバーはユーザーの意図を推測してはならず、作成を拒否し、その作成IDに対して作成されていない応答を返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Likewise, invalid characters in the base64 of data:asBase64 or invalid UTF-8 in data:asText MUST result in a notCreated response.",
      "ja": "同様に、データのbase64の無効な文字：asbase64または無効なutf-8 in data：astextは、作成されていない応答になる必要があります。"
    },
    {
      "indent": 3,
      "text": "It is envisaged that the definition for DataSourceObject might be extended in the future, for example, to fetch external content.",
      "ja": "DataSourceObjectの定義は、たとえば外部コンテンツを取得するために、将来拡張される可能性があることが想定されています。"
    },
    {
      "indent": 3,
      "text": "A server MUST accept at least 64 DataSourceObjects per create, as described in Section 3.1 of this document.",
      "ja": "このドキュメントのセクション3.1で説明されているように、サーバーは、作成ごとに少なくとも64のDataSourceObjectsを受け入れる必要があります。"
    },
    {
      "indent": 0,
      "text": "4.1.1. Blob/upload Simple Example",
      "section_title": true,
      "ja": "4.1.1. BLOB/アップロード簡単な例"
    },
    {
      "indent": 3,
      "text": "The data:asBase64 field is set over multiple lines for ease of publication here; however, the entire data:asBase64 field would be sent as a continuous string with no wrapping on the wire.",
      "ja": "データ：ASBase64フィールドは、ここで公開されやすくするために複数の行に設定されています。ただし、データ全体：asbase64フィールドは、ワイヤーにラッピングなしで連続文字列として送信されます。"
    },
    {
      "indent": 3,
      "text": "Method Call:",
      "ja": "メソッドコール："
    },
    {
      "indent": 3,
      "text": "[\n \"Blob/upload\",\n {\n  \"accountId\": \"account1\",\n  \"create\": {\n   \"1\": {\n    \"data\" : [\n    {\n     \"data:asBase64\": \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABAQMAAAAl21bKA\n                       AAAA1BMVEX/AAAZ4gk3AAAAAXRSTlN/gFy0ywAAAApJRE\n                       FUeJxjYgAAAAYAAzY3fKgAAAAASUVORK5CYII=\"\n    }\n   ],\n   \"type\": \"image/png\"\n   }\n  }\n },\n \"R1\"\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Response:",
      "ja": "応答："
    },
    {
      "indent": 3,
      "text": "[\n  \"Blob/upload\",\n  {\n    \"accountId\" : \"account1\",\n    \"created\" : {\n      \"1\": {\n        \"id\" : \"G4c6751edf9dd6903ff54b792e432fba781271beb\",\n        \"type\" : \"image/png\",\n        \"size\" : 95\n      }\n    }\n  },\n  \"R1\"\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.1.2. Blob/upload Complex Example",
      "section_title": true,
      "ja": "4.1.2. BLOB/アップロード複雑な例"
    },
    {
      "indent": 3,
      "text": "Method Calls:",
      "ja": "メソッド呼び出し："
    },
    {
      "indent": 3,
      "text": "[\n [\n  \"Blob/upload\",\n  {\n   \"create\": {\n    \"b4\": {\n     \"data\": [\n      {\n       \"data:asText\": \"The quick brown fox jumped over the lazy dog.\"\n      }\n    ]\n   }\n  }\n },\n \"S4\"\n],\n[\n  \"Blob/upload\",\n  {\n   \"create\": {\n     \"cat\": {\n       \"data\": [\n         {\n           \"data:asText\": \"How\"\n         },\n         {\n           \"blobId\": \"#b4\",\n           \"length\": 7,\n           \"offset\": 3\n         },\n         {\n           \"data:asText\": \"was t\"\n         },\n         {\n           \"blobId\": \"#b4\",\n           \"length\": 1,\n           \"offset\": 1\n         },\n         {\n           \"data:asBase64\": \"YXQ/\"\n         }\n       ]\n     }\n   }\n  },\n  \"CAT\"\n],\n[\n  \"Blob/get\",\n  {\n   \"properties\": [\n     \"data:asText\",\n     \"size\"\n   ],\n   \"ids\": [\n     \"#cat\"\n   ]\n  },\n  \"G4\"\n ]\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Responses:",
      "ja": "反応："
    },
    {
      "indent": 3,
      "text": "[\n  [\n    \"Blob/upload\",\n    {\n      \"oldState\": null,\n      \"created\": {\n        \"b4\": {\n          \"id\": \"Gc0854fb9fb03c41cce3802cb0d220529e6eef94e\",\n          \"size\": 45,\n          \"type\": \"application/octet-stream\"\n        }\n      },\n      \"notCreated\": null,\n      \"accountId\": \"account1\"\n    },\n    \"S4\"\n  ],\n  [\n    \"Blob/upload\",\n    {\n      \"oldState\": null,\n      \"created\": {\n        \"cat\": {\n          \"id\": \"Gcc60576f036321ae6e8037ffc56bdee589bd3e23\",\n          \"size\": 19,\n          \"type\": \"application/octet-stream\"\n        }\n      },\n      \"notCreated\": null,\n      \"accountId\": \"account1\"\n    },\n    \"CAT\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"list\": [\n        {\n          \"id\": \"Gcc60576f036321ae6e8037ffc56bdee589bd3e23\",\n          \"data:asText\": \"How quick was that?\",\n          \"size\": 19\n        }\n      ],\n      \"notFound\": [],\n      \"accountId\": \"account1\"\n    },\n    \"G4\"\n  ]\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.2. Blob/get",
      "section_title": true,
      "ja": "4.2. blob/get"
    },
    {
      "indent": 3,
      "text": "A standard JMAP get, with two additional optional parameters:",
      "ja": "2つの追加のオプションパラメーターを備えた標準のJMAP GET："
    },
    {
      "indent": 6,
      "text": "* offset: \"UnsignedInt|null\"",
      "ja": "* オフセット：「unsignedint | null」"
    },
    {
      "indent": 6,
      "text": "* Start this many octets into the blob data. If null or unspecified, this defaults to zero.",
      "ja": "* この多くのオクテットをBLOBデータに開始します。nullまたは不特定の場合、これはデフォルトでゼロになります。"
    },
    {
      "indent": 6,
      "text": "* length: \"UnsignedInt|null\"",
      "ja": "* 長さ：「unsignedint | null」"
    },
    {
      "indent": 6,
      "text": "* Return at most this many octets of the blob data. If null or unspecified, then all remaining octets in the blob are returned. This can be considered equivalent to an infinitely large length value, except that the isTruncated warning is not given unless the start offset is past the end of the blob.",
      "ja": "* BLOBデータのこの多くのオクテットをせいぜい返してください。nullまたは不特定の場合、Blob内のすべての残りのオクテットが返されます。これは、開始オフセットがBLOBの終わりを過ぎない限り、イストランス化された警告が与えられないことを除いて、無限に大きな長さの値に相当すると見なすことができます。"
    },
    {
      "indent": 3,
      "text": "*Request Properties:*",
      "ja": "*プロパティのリクエスト：*"
    },
    {
      "indent": 3,
      "text": "Any of:",
      "ja": "のいずれか："
    },
    {
      "indent": 6,
      "text": "* data:asText",
      "ja": "* データ：ASTEXT"
    },
    {
      "indent": 6,
      "text": "* data:asBase64",
      "ja": "* データ：asbase64"
    },
    {
      "indent": 6,
      "text": "* data (returns data:asText if the selected octets are valid UTF-8 or data:asBase64)",
      "ja": "* データ（データを返すデータ：選択したオクテットが有効なUTF-8またはデータ：asbase64の場合ASTEXT）"
    },
    {
      "indent": 6,
      "text": "* digest:<algorithm> (where <algorithm> is one of the named algorithms in the supportedDigestAlgorithms capability)",
      "ja": "* ダイジェスト：<algorithm>（ここで<algorithm>は、supportdigestalgorithms機能の指名されたアルゴリズムの1つです）"
    },
    {
      "indent": 6,
      "text": "* size",
      "ja": "* サイズ寸法大小判値大きさ"
    },
    {
      "indent": 3,
      "text": "If not given, the properties default to data and size.",
      "ja": "指定されていない場合、プロパティはデータとサイズのデフォルトです。"
    },
    {
      "indent": 3,
      "text": "*Result Properties:*",
      "ja": "*結果プロパティ：*"
    },
    {
      "indent": 6,
      "text": "* data:asText: \"String|null\"",
      "ja": "* データ：ASTEXT：「String | Null」"
    },
    {
      "indent": 6,
      "text": "* The raw octets of the selected range if they are valid UTF-8; otherwise, null.",
      "ja": "* 有効なUTF-8の場合、選択した範囲の生のオクテット。それ以外の場合、null。"
    },
    {
      "indent": 6,
      "text": "* data:asBase64: \"String\"",
      "ja": "* データ：asbase64： \"string\""
    },
    {
      "indent": 6,
      "text": "* The base64 encoding of the octets in the selected range.",
      "ja": "* 選択した範囲のオクテットのbase64エンコード。"
    },
    {
      "indent": 6,
      "text": "* digest:<algorithm>: \"String\"",
      "ja": "* ダイジェスト：<Algorithm>： \"String\""
    },
    {
      "indent": 6,
      "text": "* The base64 encoding of the digest of the octets in the selected range, calculated using the named algorithm.",
      "ja": "* 名前付きアルゴリズムを使用して計算された、選択した範囲のオクテットのダイジェストのbase64エンコード。"
    },
    {
      "indent": 6,
      "text": "* isEncodingProblem: \"Boolean\" (default: false)",
      "ja": "* IsencodingProblem：「boolean」（デフォルト：false）"
    },
    {
      "indent": 6,
      "text": "* isTruncated: \"Boolean\" (default: false)",
      "ja": "* ISTRUNCATED：「BOOLEAN」（デフォルト：FALSE）"
    },
    {
      "indent": 6,
      "text": "* size: \"UnsignedInt\"",
      "ja": "* サイズ：「Unsigned Int」"
    },
    {
      "indent": 6,
      "text": "* The number of octets in the entire blob.",
      "ja": "* ブロブ全体のオクテットの数。"
    },
    {
      "indent": 3,
      "text": "The size value MUST always be the number of octets in the underlying blob, regardless of offset and length.",
      "ja": "サイズ値は、オフセットと長さに関係なく、常に基礎となるブロブのオクテットの数でなければなりません。"
    },
    {
      "indent": 3,
      "text": "The data fields contain a representation of the octets within the selected range that are present in the blob. If the octets selected are not valid UTF-8 (including truncating in the middle of a multi-octet sequence) and data or data:asText was requested, then the key isEncodingProblem MUST be set to true, and the data:asText response value MUST be null. In the case where data was requested and the data is not valid UTF-8, then data:asBase64 MUST be returned.",
      "ja": "データフィールドには、BLOBに存在する選択した範囲内のオクテットの表現が含まれています。選択されたオクテットが有効なUTF-8（マルチオクセットシーケンスの途中での切り捨てを含む）およびデータまたはデータ：ASTEXTが要求された場合、重要なISENCODING PROMBを真に設定する必要があり、データは次のとおりです。nullになります。データが要求され、データが有効でない場合は、utf-8を有効にしていない場合、データ：asbase64を返す必要があります。"
    },
    {
      "indent": 3,
      "text": "If the selected range requests data outside the blob (i.e., the offset+length is larger than the blob), then the result is either just the octets from the offset to the end of the blob or an empty string if the offset is past the end of the blob. Either way, the isTruncated property in the result MUST be set to true to tell the client that the requested range could not be fully satisfied. If digest was requested, any digest is calculated on the octets that would be returned for a data field.",
      "ja": "選択した範囲がブロブの外側のデータを要求する場合（つまり、オフセット長がブロブよりも大きい）、結果は、オフセットからBLOBの端までのオクテット、またはオフセットが終了を過ぎている場合の空の文字列のいずれかです。塊の。いずれにせよ、結果のイスプランスプロパティは、要求された範囲が完全に満たされないことをクライアントに伝えるために真に設定する必要があります。ダイジェストが要求された場合、データフィールドに対して返されるオクテットでダイジェストが計算されます。"
    },
    {
      "indent": 3,
      "text": "Servers SHOULD store the size for blobs in a format that is efficient to read, and clients SHOULD limit their request to just the size parameter if that is all they need, as fetching blob content could be significantly more expensive and slower for the server.",
      "ja": "サーバーは、ブロブのサイズを読み取りに効率的な形式で保存する必要があります。クライアントは、必要なのが必要な場合、要求をサイズパラメーターに制限する必要があります。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Blob/get Simple Example",
      "section_title": true,
      "ja": "4.2.1. ブロブ/簡単な例を取得します"
    },
    {
      "indent": 3,
      "text": "In this example, a blob containing the string \"The quick brown fox jumped over the lazy dog.\" has blobId Gc0854fb9fb03c41cce3802cb0d220529e6eef94e.",
      "ja": "この例では、「クイックブラウンフォックスが怠zyな犬を飛び越えた」弦を含むブロブ。ブロビッドGC0854FB9FB03C41CCE3802CB0D220529E6EEF94Eを持っています。"
    },
    {
      "indent": 3,
      "text": "The first method call requests just the size for multiple blobs, and the second requests both the size and a short range of the data for one of the blobs.",
      "ja": "最初のメソッドは、複数のブロブのサイズのみを要求し、2番目のメソッドはブロブの1つのデータのサイズと短範囲の両方を要求します。"
    },
    {
      "indent": 3,
      "text": "Method Calls:",
      "ja": "メソッド呼び出し："
    },
    {
      "indent": 3,
      "text": "[\n  [\n    \"Blob/get\",\n    {\n      \"accountId\" : \"account1\",\n      \"ids\" : [\n        \"Gc0854fb9fb03c41cce3802cb0d220529e6eef94e\",\n        \"not-a-blob\"\n      ],\n      \"properties\" : [\n        \"data:asText\",\n        \"digest:sha\",\n        \"size\"\n      ]\n    },\n    \"R1\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"accountId\" : \"account1\",\n      \"ids\" : [\n        \"Gc0854fb9fb03c41cce3802cb0d220529e6eef94e\"\n      ],\n      \"properties\" : [\n        \"data:asText\",\n        \"digest:sha\",\n        \"digest:sha-256\",\n        \"size\"\n      ],\n      \"offset\" : 4,\n      \"length\" : 9\n    },\n    \"R2\"\n  ]\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Responses:",
      "ja": "反応："
    },
    {
      "indent": 3,
      "text": "[\n [\n  \"Blob/get\",\n  {\n   \"accountId\": \"account1\",\n   \"list\": [\n    {\n     \"id\": \"Gc0854fb9fb03c41cce3802cb0d220529e6eef94e\",\n     \"data:asText\": \"The quick brown fox jumped over the lazy dog.\",\n     \"digest:sha\": \"wIVPufsDxBzOOALLDSIFKebu+U4=\",\n     \"size\": 45\n    }\n  ],\n  \"notFound\": [\n   \"not-a-blob\"\n  ]\n },\n \"R1\"\n],\n[\n \"Blob/get\",\n {\n  \"accountId\": \"account1\",\n  \"list\": [\n   {\n    \"id\": \"Gc0854fb9fb03c41cce3802cb0d220529e6eef94e\",\n    \"data:asText\": \"quick bro\",\n    \"digest:sha\": \"QiRAPtfyX8K6tm1iOAtZ87Xj3Ww=\",\n    \"digest:sha-256\": \"gdg9INW7lwHK6OQ9u0dwDz2ZY/gubi0En0xlFpKt0OA=\",\n    \"size\": 45\n    }\n   ]\n  },\n  \"R2\"\n ]\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.2.2. Blob/get Example with Range and Encoding Errors",
      "section_title": true,
      "ja": "4.2.2. 範囲とエンコーディングエラーを使用して、BLOB/EMINGを取得します"
    },
    {
      "indent": 3,
      "text": "The b1 value is the text \"The quick brown fox jumped over the \\x81\\x81 dog.\", which contains an invalid UTF-8 sequence.",
      "ja": "B1値は、「クイックブラウンフォックスが\\ x81 \\ x81 Dogを飛び越えた」というテキストです。これには、無効なUTF-8シーケンスが含まれています。"
    },
    {
      "indent": 3,
      "text": "The results have the following properties:",
      "ja": "結果には次の特性があります。"
    },
    {
      "indent": 6,
      "text": "* G1: Defaults to data and size, so b1 returns isEncodingProblem and a base64 value.",
      "ja": "* G1：デフォルトはデータとサイズであるため、B1はIsencodingProblemとBase64値を返します。"
    },
    {
      "indent": 6,
      "text": "* G2: Since data:asText was explicitly selected, does not attempt to return a value for the data, just isEncodingProblem for b1.",
      "ja": "* G2：データ：ASTEXTが明示的に選択されたため、データの値を返しようとせず、B1の問題が発生します。"
    },
    {
      "indent": 6,
      "text": "* G3: Since only data:asBase64 was requested, there is no encoding problem, and both values are returned.",
      "ja": "* G3：データのみ：asbase64が要求されたため、エンコードの問題はなく、両方の値が返されます。"
    },
    {
      "indent": 6,
      "text": "* G4: Since the requested range could be satisfied as text, both blobs are returned as data:asText, and there is no encoding problem.",
      "ja": "* G4：要求された範囲はテキストとして満たされる可能性があるため、両方のブロブはデータとして返されます：ASTEXT、およびエンコードの問題はありません。"
    },
    {
      "indent": 6,
      "text": "* G5: Both blobs cannot satisfy the requested range, so isTruncated is true for both.",
      "ja": "* G5：両方のブロブが要求された範囲を満たすことができないため、両方にイストランス化されます。"
    },
    {
      "indent": 12,
      "text": "Note: Some values have been wrapped for line length. There would be no wrapping in the data:asBase64 values on the wire.",
      "ja": "注：いくつかの値は、ラインの長さでラップされています。データにラッピングはありません：asbase64値はワイヤに値。"
    },
    {
      "indent": 3,
      "text": "Method Calls:",
      "ja": "メソッド呼び出し："
    },
    {
      "indent": 3,
      "text": "[\n  [\n    \"Blob/upload\",\n    {\n      \"create\": {\n        \"b1\": {\n          \"data\": [\n            {\n              \"data:asBase64\": \"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZW\n                                Qgb3ZlciB0aGUggYEgZG9nLg==\"\n            }\n          ]\n        },\n        \"b2\": {\n          \"data\": [\n            {\n              \"data:asText\": \"hello world\"\n            }\n          ],\n          \"type\" : \"text/plain\"\n        }\n      }\n    },\n    \"S1\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"ids\": [\n        \"#b1\",\n        \"#b2\"\n      ]\n    },\n    \"G1\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"ids\": [\n        \"#b1\",\n        \"#b2\"\n      ],\n      \"properties\": [\n        \"data:asText\",\n        \"size\"\n      ]\n    },\n    \"G2\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"ids\": [\n        \"#b1\",\n        \"#b2\"\n      ],\n      \"properties\": [\n        \"data:asBase64\",\n        \"size\"\n      ]\n    },\n    \"G3\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"offset\": 0,\n      \"length\": 5,\n      \"ids\": [\n        \"#b1\",\n        \"#b2\"\n      ]\n    },\n    \"G4\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"offset\": 20,\n      \"length\": 100,\n      \"ids\": [\n        \"#b1\",\n        \"#b2\"\n      ]\n    },\n    \"G5\"\n  ]\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Responses:",
      "ja": "反応："
    },
    {
      "indent": 3,
      "text": "[\n  [\n    \"Blob/upload\",\n    {\n      \"oldState\": null,\n      \"created\": {\n        \"b2\": {\n          \"id\": \"G2aae6c35c94fcfb415dbe95f408b9ce91ee846ed\",\n          \"size\": 11,\n          \"type\": \"application/octet-stream\"\n        },\n        \"b1\": {\n          \"id\": \"G72cfa4804194563685d9a4b695f7ba20e7739576\",\n          \"size\": 43,\n          \"type\": \"text/plain\"\n        }\n      },\n      \"updated\": null,\n      \"destroyed\": null,\n      \"notCreated\": null,\n      \"notUpdated\": null,\n      \"notDestroyed\": null,\n      \"accountId\": \"account1\"\n    },\n    \"S1\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"list\": [\n        {\n          \"id\": \"G72cfa4804194563685d9a4b695f7ba20e7739576\",\n          \"isEncodingProblem\": true,\n          \"data:asBase64\": \"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZW\n                            Qgb3ZlciB0aGUggYEgZG9nLg==\",\n          \"size\": 43\n        },\n        {\n          \"id\": \"G2aae6c35c94fcfb415dbe95f408b9ce91ee846ed\",\n          \"data:asText\": \"hello world\",\n          \"size\": 11\n        }\n      ],\n      \"notFound\": [],\n      \"accountId\": \"account1\"\n    },\n    \"G1\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"list\": [\n        {\n          \"id\": \"G72cfa4804194563685d9a4b695f7ba20e7739576\",\n          \"isEncodingProblem\": true,\n          \"size\": 43\n        },\n        {\n          \"id\": \"G2aae6c35c94fcfb415dbe95f408b9ce91ee846ed\",\n          \"data:asText\": \"hello world\",\n          \"size\": 11\n        }\n      ],\n      \"notFound\": [],\n      \"accountId\": \"account1\"\n    },\n    \"G2\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"list\": [\n        {\n          \"id\": \"G72cfa4804194563685d9a4b695f7ba20e7739576\",\n          \"data:asBase64\": \"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZW\n                            Qgb3ZlciB0aGUggYEgZG9nLg==\",\n          \"size\": 43\n        },\n        {\n          \"id\": \"G2aae6c35c94fcfb415dbe95f408b9ce91ee846ed\",\n          \"data:asBase64\": \"aGVsbG8gd29ybGQ=\",\n          \"size\": 11\n        }\n      ],\n      \"notFound\": [],\n      \"accountId\": \"account1\"\n    },\n    \"G3\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"list\": [\n        {\n          \"id\": \"G72cfa4804194563685d9a4b695f7ba20e7739576\",\n          \"data:asText\": \"The q\",\n          \"size\": 43\n        },\n        {\n          \"id\": \"G2aae6c35c94fcfb415dbe95f408b9ce91ee846ed\",\n          \"data:asText\": \"hello\",\n          \"size\": 11\n        }\n      ],\n      \"notFound\": [],\n      \"accountId\": \"account1\"\n    },\n    \"G4\"\n  ],\n  [\n    \"Blob/get\",\n    {\n      \"list\": [\n        {\n          \"id\": \"G72cfa4804194563685d9a4b695f7ba20e7739576\",\n          \"isTruncated\": true,\n          \"isEncodingProblem\": true,\n          \"data:asBase64\": \"anVtcGVkIG92ZXIgdGhlIIGBIGRvZy4=\",\n          \"size\": 43\n        },\n        {\n          \"id\": \"G2aae6c35c94fcfb415dbe95f408b9ce91ee846ed\",\n          \"isTruncated\": true,\n          \"data:asText\": \"\",\n          \"size\": 11\n        }\n      ],\n      \"notFound\": [],\n      \"accountId\": \"account1\"\n    },\n    \"G5\"\n  ]\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4.3. Blob/lookup",
      "section_title": true,
      "ja": "4.3. ブロブ/ルックアップ"
    },
    {
      "indent": 3,
      "text": "Given a list of blobIds, this method does a reverse lookup in each of the provided type names to find the list of Ids within that data type that reference the provided blob.",
      "ja": "ブロビドのリストが与えられた場合、この方法は、提供された各タイプ名を逆検索して、そのデータ型内のIDのリストを見つけて、提供されたBLOBを参照します。"
    },
    {
      "indent": 3,
      "text": "Since different datatypes will have different semantics of \"contains\", the definition of \"reference\" is somewhat loose but roughly means \"you could discover this blobId by looking at this object or at other objects recursively contained within this object\".",
      "ja": "異なるデータ型には「含まれる」というセマンティクスが異なるため、「参照」の定義はやや緩んでいますが、「このオブジェクトまたはこのオブジェクトに再帰的に含まれる他のオブジェクトを見て、この塊を発見することができます」ということを意味します。"
    },
    {
      "indent": 3,
      "text": "For example, with a server that supports [RFC8621], if a Mailbox references a blob and if any Emails within that Mailbox reference the blobId, then the Mailbox references that blobId. For any Thread that references an Email that references a blobId, it can be said that the Thread references the blobId.",
      "ja": "たとえば、[RFC8621]をサポートするサーバーでは、メールボックスがBLOBを参照し、そのメールボックス内の電子メールがブロビッドを参照する場合、メールボックスはそのブロビッドを参照します。ブロビッドを参照する電子メールを参照するスレッドの場合、スレッドはブロビッドを参照すると言えます。"
    },
    {
      "indent": 3,
      "text": "However, this does not mean that if an Email references a Mailbox in its mailboxIds property, then any blobId referenced by other Emails in that Mailbox are also referenced by the initial Email.",
      "ja": "ただし、これは、電子メールがMailboxIdsプロパティのメールボックスを参照している場合、そのメールボックス内の他のメールで参照されるブロビッドも最初の電子メールで参照されることを意味しません。"
    },
    {
      "indent": 3,
      "text": "*Parameters*",
      "ja": "*パラメーター*"
    },
    {
      "indent": 6,
      "text": "* accountId: \"Id\"",
      "ja": "* AccountID：「ID」"
    },
    {
      "indent": 6,
      "text": "* The id of the account used for the call.",
      "ja": "* アカウントのIDは、呼び出しに使用されました。"
    },
    {
      "indent": 6,
      "text": "* typeNames: \"String[]\"",
      "ja": "* Typenames：「String []」"
    },
    {
      "indent": 6,
      "text": "* A list of names from the \"JMAP Data Types\" registry or defined by private extensions that the client has requested. Only names for which \"Can reference blobs\" is true may be specified, and the capability that defines each type must also be used by the overall JMAP request in which this method is called.",
      "ja": "* 「JMAPデータ型」レジストリの名前のリスト、またはクライアントが要求したプライベートエクステンションによって定義されています。「Blobsを参照できる」が真である名前のみが指定され、各タイプを定義する機能は、このメソッドが呼び出されるJMAP要求全体でも使用する必要があります。"
    },
    {
      "indent": 6,
      "text": "* If a type name is not known by the server, or the associated capability has not been requested, then the server returns an \"unknownDataType\" error.",
      "ja": "* サーバーによってタイプ名が知られていない場合、または関連する機能が要求されていない場合、サーバーは「不明なdatatype」エラーを返します。"
    },
    {
      "indent": 6,
      "text": "* ids: \"Id[]\"",
      "ja": "* IDS：「ID []」"
    },
    {
      "indent": 6,
      "text": "* A list of blobId values to be looked for.",
      "ja": "* 探すべきブロビッド値のリスト。"
    },
    {
      "indent": 3,
      "text": "*Response*",
      "ja": "*応答*"
    },
    {
      "indent": 6,
      "text": "* list: \"BlobInfo[]\"",
      "ja": "* リスト：「Blobinfo []」"
    },
    {
      "indent": 6,
      "text": "* A list of BlobInfo objects.",
      "ja": "* Blobinfoオブジェクトのリスト。"
    },
    {
      "indent": 3,
      "text": "*BlobInfo Object*",
      "ja": "*blobinfoオブジェクト*"
    },
    {
      "indent": 6,
      "text": "* id: \"Id\"",
      "ja": "* やった\""
    },
    {
      "indent": 6,
      "text": "* The blobId.",
      "ja": "* ブロビッド。"
    },
    {
      "indent": 6,
      "text": "* matchedIds: \"String[Id[]]\"",
      "ja": "* Matchedids：「String [id []]」"
    },
    {
      "indent": 6,
      "text": "* A map from type name to a list of Ids of that data type (e.g., the name \"Email\" maps to a list of emailIds).",
      "ja": "* タイプ名からそのデータ型のIDのリストまでのマップ（たとえば、「電子メール」という名前のマップに電子メールのリストにマップされます）。"
    },
    {
      "indent": 3,
      "text": "If a blob is not visible to a user or does not exist on the server at all, then the server MUST still return an empty array for each type as this doesn't leak any information about whether the blob is on the server but not visible to the requesting user.",
      "ja": "ブロブがユーザーに表示されないか、サーバーにまったく存在しない場合、サーバーは各タイプの空の配列を返す必要があります。リクエストユーザーに。"
    },
    {
      "indent": 0,
      "text": "4.3.1. Blob/lookup Example",
      "section_title": true,
      "ja": "4.3.1. ブロブ/ルックアップの例"
    },
    {
      "indent": 3,
      "text": "Method Call:",
      "ja": "メソッドコール："
    },
    {
      "indent": 3,
      "text": "[\n  \"Blob/lookup\",\n  {\n    \"typeNames\": [\n      \"Mailbox\",\n      \"Thread\",\n      \"Email\"\n    ],\n    \"ids\": [\n      \"Gd2f81008cf07d2425418f7f02a3ca63a8bc82003\",\n      \"not-a-blob\"\n    ]\n  },\n  \"R1\"\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Response:",
      "ja": "応答："
    },
    {
      "indent": 3,
      "text": "[\n  \"Blob/lookup\",\n  {\n    \"list\": [\n      {\n        \"id\": \"Gd2f81008cf07d2425418f7f02a3ca63a8bc82003\",\n        \"matchedIds\": {\n          \"Mailbox\": [\n            \"M54e97373\",\n            \"Mcbe6b662\"\n          ],\n          \"Thread\": [\n            \"T1530616e\"\n          ],\n          \"Email\": [\n            \"E16e70a73eb4\",\n            \"E84b0930cf16\"\n          ]\n        }\n      }\n    ],\n    \"notFound\": [\n      \"not-a-blob\"\n    ]\n  },\n  \"R1\"\n]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "ja": "5. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "All security considerations for JMAP [RFC8620] apply to this specification. Additional considerations specific to the data types and functionality introduced by this document are described here.",
      "ja": "JMAP [RFC8620]のすべてのセキュリティ上の考慮事項は、この仕様に適用されます。このドキュメントで導入されたデータ型と機能に固有の追加の考慮事項については、ここで説明します。"
    },
    {
      "indent": 3,
      "text": "JSON parsers are not all consistent in handling non-UTF-8 data. JMAP requires that all JSON data be UTF-8 encoded, so servers MUST only return a null value if data:asText is requested for a range of octets that is not valid UTF-8 and set isEncodingProblem: true.",
      "ja": "JSONパーサーは、非UTF-8データの処理においてすべて一貫しているわけではありません。JMAPでは、すべてのJSONデータをUTF-8エンコードする必要があるため、サーバーはデータ：ASTEXTが有効であり、ISENCODING PROBLEM：trueを設定していない範囲のオクテットを要求する場合にのみnull値を返す必要があります。"
    },
    {
      "indent": 3,
      "text": "Servers MUST apply any access controls, such that if the authenticated user would be unable to discover the blobId by making queries, then this fact cannot be discovered via a Blob/lookup. For example, if an Email exists in a Mailbox that the authenticated user does not have access to see, then that emailId MUST NOT be returned in a lookup for a blob that is referenced by that email.",
      "ja": "サーバーは、アクセス制御を適用する必要があります。そのため、認証されたユーザーがクエリを作成してブロビッドを発見できない場合、この事実はBLOB/ルックアップで発見できません。たとえば、認証されたユーザーが表示できるようにアクセスできないメールボックスに電子メールが存在する場合、そのメールで参照されているBLOBの検索でそのemailidを返す必要はありません。"
    },
    {
      "indent": 3,
      "text": "The server MUST NOT trust that the data given to a Blob/upload is a well-formed instance of the specified media type. Also, if the server attempts to parse the given blob, only hardened parsers designed to deal with arbitrary untrusted data should be used. The server SHOULD NOT reject data on the grounds that it is not a valid specimen of the stated type.",
      "ja": "サーバーは、BLOB/アップロードに与えられたデータが指定されたメディアタイプの適切に形成されたインスタンスであることを信頼してはなりません。また、サーバーが指定されたBLOBを解析しようとする場合、任意の信頼されていないデータを処理するように設計された硬化したパーサーのみを使用する必要があります。サーバーは、指定されたタイプの有効な標本ではないという理由でデータを拒否してはなりません。"
    },
    {
      "indent": 3,
      "text": "With carefully chosen data sources, Blob/upload can be used to recreate dangerous content on the far side of security scanners (anti-virus or exfiltration scanners, for example) that may be watching the upload endpoint. Server implementations SHOULD provide a hook to allow security scanners to check the resulting blob after concatenating the data sources in the same way that they do for the upload endpoint.",
      "ja": "慎重に選択されたデータソースを使用すると、BLOB/アップロードを使用して、アップロードエンドポイントを監視している可能性のあるセキュリティスキャナー（たとえば、アンチウイルスまたはXFILTRATIONスキャナーなど）の危険なコンテンツを再現できます。サーバーの実装は、アップロードエンドポイントに対して行うのと同じ方法でデータソースを連結した後、セキュリティスキャナーが結果のブロブを確認できるようにするためのフックを提供する必要があります。"
    },
    {
      "indent": 3,
      "text": "Digest algorithms can be expensive for servers to calculate. Servers that share resources between multiple users should track resource usage by clients and rate-limit expensive operations to avoid resource starvation.",
      "ja": "ダイジェストアルゴリズムは、サーバーが計算するのに費用がかかる場合があります。複数のユーザー間でリソースを共有するサーバーは、クライアントによるリソースの使用量を追跡し、リソースの飢vを回避するためにレート制限高価な操作を追跡する必要があります。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "ja": "6. IANAの考慮事項"
    },
    {
      "indent": 0,
      "text": "6.1. JMAP Capability Registration for \"blob\"",
      "section_title": true,
      "ja": "6.1. 「BLOB」のJMAP機能登録"
    },
    {
      "indent": 3,
      "text": "IANA has registered the \"blob\" JMAP capability as follows:",
      "ja": "IANAは次のように「BLOB」JMAP機能を登録しています。"
    },
    {
      "indent": 3,
      "text": "Capability Name:",
      "ja": "機能名："
    },
    {
      "indent": 12,
      "text": "urn:ietf:params:jmap:blob",
      "ja": "urn：ietf：params：jmap：blob"
    },
    {
      "indent": 3,
      "text": "Specification document:",
      "ja": "仕様文書："
    },
    {
      "indent": 12,
      "text": "RFC 9404",
      "ja": "RFC 9404"
    },
    {
      "indent": 3,
      "text": "Intended use:",
      "ja": "使用目的："
    },
    {
      "indent": 12,
      "text": "common",
      "ja": "一般コモン通常同じ慣用頻出平凡卑近並並み尋常通俗一介月並み凡常尋常一様唯直よくあるありふれた一般的在り来たり庶民的当たり前の有りがち"
    },
    {
      "indent": 3,
      "text": "Change Controller:",
      "ja": "Change Controller："
    },
    {
      "indent": 12,
      "text": "IETF",
      "ja": "IETF"
    },
    {
      "indent": 3,
      "text": "Security and privacy considerations:",
      "ja": "セキュリティとプライバシーの考慮事項："
    },
    {
      "indent": 12,
      "text": "RFC 9404, Section 5",
      "ja": "RFC 9404、セクション5"
    },
    {
      "indent": 0,
      "text": "6.2. JMAP Error Codes Registration for \"unknownDataType\"",
      "section_title": true,
      "ja": "6.2. jmapエラーコード「不明のdatatype」の登録"
    },
    {
      "indent": 3,
      "text": "IANA has registered the \"unknownDataType\" JMAP error code as follows:",
      "ja": "IANAは、次のように「不明なdatatype」jmapエラーコードを登録しています。"
    },
    {
      "indent": 3,
      "text": "JMAP Error Code:",
      "ja": "JMAPエラーコード："
    },
    {
      "indent": 12,
      "text": "unknownDataType",
      "ja": "不明datype"
    },
    {
      "indent": 3,
      "text": "Intended use:",
      "ja": "使用目的："
    },
    {
      "indent": 12,
      "text": "common",
      "ja": "一般コモン通常同じ慣用頻出平凡卑近並並み尋常通俗一介月並み凡常尋常一様唯直よくあるありふれた一般的在り来たり庶民的当たり前の有りがち"
    },
    {
      "indent": 3,
      "text": "Change Controller:",
      "ja": "Change Controller："
    },
    {
      "indent": 12,
      "text": "IETF",
      "ja": "IETF"
    },
    {
      "indent": 3,
      "text": "Reference:",
      "ja": "参照："
    },
    {
      "indent": 12,
      "text": "RFC 9404",
      "ja": "RFC 9404"
    },
    {
      "indent": 3,
      "text": "Description:",
      "ja": "説明："
    },
    {
      "indent": 12,
      "text": "The server does not recognise this data type, or the capability to enable it is not present in the current Request Object.",
      "ja": "サーバーは、このデータ型を認識していません。また、現在のリクエストオブジェクトに存在しないことを有効にする機能は認識されません。"
    },
    {
      "indent": 0,
      "text": "6.3. Creation of \"JMAP Data Types\" Registry",
      "section_title": true,
      "ja": "6.3. 「JMAPデータ型」レジストリの作成"
    },
    {
      "indent": 3,
      "text": "IANA has created a new registry called \"JMAP Data Types\". Table 1 shows the initial contents of this new registry.",
      "ja": "IANAは、「JMAPデータ型」と呼ばれる新しいレジストリを作成しました。表1は、この新しいレジストリの初期内容を示しています。"
    },
    {
      "indent": 0,
      "text": "+================+=====+=======+=========================+=========+\n|Type Name       |Can  |Can Use|Capability               |Reference|\n|                |Ref  |for    |                         |         |\n|                |Blobs|State  |                         |         |\n|                |     |Change |                         |         |\n+================+=====+=======+=========================+=========+\n|Core            |No   |No     |urn:ietf:params:jmap:core|[RFC8620]|\n+----------------+-----+-------+-------------------------+---------+\n|PushSubscription|No   |No     |urn:ietf:params:jmap:core|[RFC8620]|\n+----------------+-----+-------+-------------------------+---------+\n|Mailbox         |Yes  |Yes    |urn:ietf:params:jmap:mail|[RFC8621]|\n+----------------+-----+-------+-------------------------+---------+\n|Thread          |Yes  |Yes    |urn:ietf:params:jmap:mail|[RFC8621]|\n+----------------+-----+-------+-------------------------+---------+\n|Email           |Yes  |Yes    |urn:ietf:params:jmap:mail|[RFC8621]|\n+----------------+-----+-------+-------------------------+---------+\n|EmailDelivery   |No   |Yes    |urn:ietf:params:jmap:mail|[RFC8621]|\n+----------------+-----+-------+-------------------------+---------+\n|SearchSnippet   |No   |No     |urn:ietf:params:jmap:mail|[RFC8621]|\n+----------------+-----+-------+-------------------------+---------+\n|Identity        |No   |Yes    |urn:ietf:params:jmap:    |[RFC8621]|\n|                |     |       |submission               |         |\n+----------------+-----+-------+-------------------------+---------+\n|EmailSubmission |No   |Yes    |urn:ietf:params:jmap:    |[RFC8621]|\n|                |     |       |submission               |         |\n+----------------+-----+-------+-------------------------+---------+\n|VacationResponse|No   |Yes    |urn:ietf:params:jmap:    |[RFC8621]|\n|                |     |       |vacationresponse         |         |\n+----------------+-----+-------+-------------------------+---------+\n|MDN             |No   |No     |urn:ietf:params:jmap:mdn |[RFC9007]|\n+----------------+-----+-------+-------------------------+---------+\n\n                              Table 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The registration policy for this registry is \"Specification Required\" [RFC8126]. Either an RFC or a similarly stable reference document defines a JMAP Data Type and associated capability.",
      "ja": "このレジストリの登録ポリシーは「必要な仕様」です[RFC8126]。RFCまたは同様に安定した参照ドキュメントのいずれかが、JMAPデータ型と関連する機能を定義します。"
    },
    {
      "indent": 3,
      "text": "IANA will appoint designated experts to review requests for additions to this registry, with guidance to allow any registration that provides a stable document describing the capability and control over the URI namespace to which the capability URI points.",
      "ja": "IANAは、指定された専門家を任命して、このレジストリへの追加のリクエストを確認し、URIの能力がURIを指しているURIネームスペースの機能と制御を記述する安定したドキュメントを提供する登録を許可するガイダンスを提供します。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "ja": "7.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n           Requirement Levels\", BCP 14, RFC 2119,\n           DOI 10.17487/RFC2119, March 1997,\n           <https://www.rfc-editor.org/info/rfc2119>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC3230]  Mogul, J. and A. Van Hoff, \"Instance Digests in HTTP\",\n           RFC 3230, DOI 10.17487/RFC3230, January 2002,\n           <https://www.rfc-editor.org/info/rfc3230>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC4648]  Josefsson, S., \"The Base16, Base32, and Base64 Data\n           Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006,\n           <https://www.rfc-editor.org/info/rfc4648>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n           2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n           May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8620]  Jenkins, N. and C. Newman, \"The JSON Meta Application\n           Protocol (JMAP)\", RFC 8620, DOI 10.17487/RFC8620, July\n           2019, <https://www.rfc-editor.org/info/rfc8620>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "ja": "7.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC7888]  Melnikov, A., Ed., \"IMAP4 Non-synchronizing Literals\",\n           RFC 7888, DOI 10.17487/RFC7888, May 2016,\n           <https://www.rfc-editor.org/info/rfc7888>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n           Writing an IANA Considerations Section in RFCs\", BCP 26,\n           RFC 8126, DOI 10.17487/RFC8126, June 2017,\n           <https://www.rfc-editor.org/info/rfc8126>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC8621]  Jenkins, N. and C. Newman, \"The JSON Meta Application\n           Protocol (JMAP) for Mail\", RFC 8621, DOI 10.17487/RFC8621,\n           August 2019, <https://www.rfc-editor.org/info/rfc8621>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "[RFC9007]  Ouazana, R., Ed., \"Handling Message Disposition\n           Notification with the JSON Meta Application Protocol\n           (JMAP)\", RFC 9007, DOI 10.17487/RFC9007, March 2021,\n           <https://www.rfc-editor.org/info/rfc9007>.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "section_title": true,
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Joris Baum, Jim Fenton, Neil Jenkins, Alexey Melnikov, Ken Murchison, Robert Stepanek, and the JMAP Working Group in the IETF.",
      "ja": "Joris Baum、Jim Fenton、Neil Jenkins、Alexey Melnikov、Ken Murchison、Robert Stepanek、およびIETFのJMAPワーキンググループ。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "section_title": true,
      "ja": "著者の連絡先"
    },
    {
      "indent": 3,
      "text": "Bron Gondwana (editor)\nFastmail\nLevel 2, 114 William St\nMelbourne VIC 3000\nAustralia\nEmail: brong@fastmailteam.com\nURI:   https://www.fastmail.com",
      "raw": true,
      "ja": ""
    }
  ]
}