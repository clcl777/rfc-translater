{
  "title": {
    "text": "RFC 9512 - YAML Media Type",
    "ja": "RFC 9512 - YAMLメディアタイプ"
  },
  "number": 9512,
  "created_at": "2024-02-17 23:48:01.338291+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                          R. Polli\nRequest for Comments: 9512                       DTD, Italian Government\nCategory: Informational                                         E. Wilde\nISSN: 2070-1721                                                    Axway\n                                                                  E. Aro\n                                                                 Mozilla\n                                                           February 2024",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 28,
      "text": "YAML Media Type",
      "ja": "YAMLメディアタイプ"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document registers the application/yaml media type and the +yaml structured syntax suffix with IANA. Both identify document components that are serialized according to the YAML specification.",
      "ja": "このドキュメントでは、IANAを使用したアプリケーション/YAMLメディアタイプとYAML構造化された構文サフィックスを登録します。どちらも、YAML仕様に従ってシリアル化されたドキュメントコンポーネントを識別します。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "ja": "このドキュメントは、インターネット標準の追跡仕様ではありません。情報目的で公開されています。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are candidates for any level of Internet Standard; see Section 2 of RFC 7841.",
      "ja": "このドキュメントは、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティのコンセンサスを表しています。公開レビューを受けており、インターネットエンジニアリングステアリンググループ（IESG）からの出版が承認されています。IESGによって承認されたすべてのドキュメントが、インターネット標準のあらゆるレベルの候補者であるわけではありません。RFC 7841のセクション2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc9512.",
      "ja": "このドキュメントの現在のステータス、任意のERRATA、およびそれに関するフィードバックを提供する方法に関する情報は、https：//www.rfc-editor.org/info/rfc9512で取得できます。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2024 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "ja": "著作権（c）2024 IETF Trustおよび文書著者として特定された人。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Revised BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Revised BSD License.",
      "ja": "このドキュメントは、BCP 78およびIETFドキュメント（https://trustee.ietf.org/license-info）に関連するIETF Trustの法的規定の対象となります。この文書に関するあなたの権利と制限を説明するので、これらの文書を注意深く確認してください。このドキュメントから抽出されたコードコンポーネントには、セクション4.Eで説明されている法的規定のセクション4.Eで説明されており、改訂されたBSDライセンスで説明されている保証なしで提供されるように、改訂されたBSDライセンステキストを含める必要があります。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction\n  1.1.  Notational Conventions\n  1.2.  Fragment Identification\n    1.2.1.  Fragment Identification via Alias Nodes\n2.  Media Type and Structured Syntax Suffix Registrations\n  2.1.  Media Type application/yaml\n  2.2.  The +yaml Structured Syntax Suffix\n3.  Interoperability Considerations\n  3.1.  YAML Is an Evolving Language\n  3.2.  YAML Streams\n  3.3.  Filename Extension\n  3.4.  YAML and JSON\n  3.5.  Fragment Identifiers\n4.  Security Considerations\n  4.1.  Arbitrary Code Execution\n  4.2.  Resource Exhaustion\n  4.3.  YAML Streams\n  4.4.  Expressing Booleans\n5.  IANA Considerations\n6.  References\n  6.1.  Normative References\n  6.2.  Informative References\nAppendix A.  Examples Related to Fragment Identifier\n        Interoperability\n  A.1.  Unreferenceable Nodes\n  A.2.  Referencing a Missing Node\n  A.3.  Representation Graph with Anchors and Cyclic References\nAcknowledgements\nAuthors' Addresses",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "YAML [YAML] is a data serialization format that is capable of conveying one or multiple documents in a single presentation stream (e.g., a file or a network resource). It is widely used on the Internet, including in the API sector (e.g., see [OAS]), but a corresponding media type and structured syntax suffix had not previously been registered by IANA.",
      "ja": "YAML [YAML]は、単一のプレゼンテーションストリーム（ファイルやネットワークリソースなど）で1つまたは複数のドキュメントを伝えることができるデータシリアル化形式です。APIセクター（[OAS]を参照）を含むインターネットで広く使用されていますが、対応するメディアタイプと構造化された構文の接尾辞は以前にIANAによって登録されていませんでした。"
    },
    {
      "indent": 3,
      "text": "To increase interoperability when exchanging YAML streams and leverage content negotiation mechanisms when exchanging YAML resources, this specification registers the application/yaml media type and the +yaml structured syntax suffix [MEDIATYPE].",
      "ja": "YAMLストリームを交換するときに相互運用性を向上させ、YAMLリソースを交換するときにコンテンツネゴシエーションメカニズムを活用するために、この仕様はアプリケーション/YAMLメディアタイプとYAML構造化された構文サフィックス[Mediatype]を登録します。"
    },
    {
      "indent": 3,
      "text": "Moreover, it provides security considerations and interoperability considerations related to [YAML], including its relation with [JSON].",
      "ja": "さらに、[JSON]との関係を含め、[YAML]に関連するセキュリティに関する考慮事項と相互運用性の考慮事項を提供します。"
    },
    {
      "indent": 0,
      "text": "1.1. Notational Conventions",
      "section_title": true,
      "ja": "1.1. 表記規則"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "ja": "この文書のキーワード \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", および \"OPTIONAL\" はBCP 14 [RFC2119] [RFC8174]で説明されているように、すべて大文字の場合にのみ解釈されます。"
    },
    {
      "indent": 3,
      "text": "The terms \"content negotiation\" and \"resource\" in this document are to be interpreted as in [HTTP].",
      "ja": "このドキュメントの「コンテンツネゴシエーション」と「リソース」という用語は、[http]のように解釈されます。"
    },
    {
      "indent": 3,
      "text": "The terms \"fragment\" and \"fragment identifier\" in this document are to be interpreted as in [URI].",
      "ja": "このドキュメントの「フラグメント」と「フラグメント識別子」という用語は、[uri]のように解釈されます。"
    },
    {
      "indent": 3,
      "text": "The terms \"presentation\", \"stream\", \"YAML document\", \"representation graph\", \"tag\", \"serialization detail\", \"node\", \"alias node\", \"anchor\", and \"anchor name\" in this document are to be interpreted as in [YAML].",
      "ja": "「プレゼンテーション」、「ストリーム」、「YAMLドキュメント」、「表現グラフ」、「タグ」、「シリアル化の詳細」、「ノード」、「エイリアスノード」、「アンカー」、「アンカー名」という用語[YAML]のように解釈されます。"
    },
    {
      "indent": 3,
      "text": "Figures containing YAML code always start with the %YAML directive to improve readability.",
      "ja": "YAMLコードを含む数値は、常に読みやすさを向上させるための％YAML指令から始まります。"
    },
    {
      "indent": 0,
      "text": "1.2. Fragment Identification",
      "section_title": true,
      "ja": "1.2. フラグメント識別"
    },
    {
      "indent": 3,
      "text": "A fragment identifies a node in a stream.",
      "ja": "フラグメントは、ストリーム内のノードを識別します。"
    },
    {
      "indent": 3,
      "text": "A fragment identifier starting with \"*\" is to be interpreted as a YAML alias node (see Section 1.2.1).",
      "ja": "「*」で始まるフラグメント識別子は、YAMLエイリアスノードとして解釈されます（セクション1.2.1を参照）。"
    },
    {
      "indent": 3,
      "text": "For single-document YAML streams, a fragment identifier that is empty or that starts with \"/\" is to be interpreted as a JSON Pointer [JSON-POINTER] and is evaluated on the YAML representation graph, traversing alias nodes; in particular, the empty fragment identifier references the root node. This syntax can only reference the YAML nodes that are on a path that is made up of nodes interoperable with the JSON data model (see Section 3.4).",
      "ja": "単一ドキュメントYAMLストリームの場合、空になっているか、「/」で始まるフラグメント識別子は、JSONポインター[JSONポインター]として解釈され、YAML表現グラフで評価され、エイリアスノードを横断します。特に、空のフラグメント識別子はルートノードを参照します。この構文は、JSONデータモデルと相互運用可能なノードで構成されるパス上にあるYAMLノードのみを参照できます（セクション3.4を参照）。"
    },
    {
      "indent": 3,
      "text": "A fragment identifier is not guaranteed to reference an existing node. Therefore, applications SHOULD define how an unresolved alias node ought to be handled.",
      "ja": "フラグメント識別子は、既存のノードを参照することは保証されていません。したがって、アプリケーションは、未解決のエイリアスノードの処理方法を定義する必要があります。"
    },
    {
      "indent": 0,
      "text": "1.2.1. Fragment Identification via Alias Nodes",
      "section_title": true,
      "ja": "1.2.1. エイリアスノードを介したフラグメント識別"
    },
    {
      "indent": 3,
      "text": "This section describes how to use alias nodes (see Sections 3.2.2.2 and 7.1 of [YAML]) as fragment identifiers to designate nodes.",
      "ja": "このセクションでは、エイリアスノード（[YAML]のセクション3.2.2.2および7.1のセクションを参照）を、ノードを指定するフラグメント識別子として使用する方法について説明します。"
    },
    {
      "indent": 3,
      "text": "A YAML alias node can be represented in a URI fragment identifier by encoding it into bytes using UTF-8 [UTF-8], but percent-encoding of those characters is not allowed by the fragment rule in Section 3.5 of [URI].",
      "ja": "YAMLエイリアスノードは、UTF-8 [UTF-8]を使用してバイトにエンコードすることにより、URIフラグメント識別子で表現できますが、[URI]のセクション3.5のフラグメントルールでは許可されません。"
    },
    {
      "indent": 3,
      "text": "If multiple nodes match a fragment identifier, the first occurrence of such a match is selected.",
      "ja": "複数のノードがフラグメント識別子と一致する場合、そのような一致の最初の発生が選択されます。"
    },
    {
      "indent": 3,
      "text": "Users concerned with interoperability of fragment identifiers:",
      "ja": "フラグメント識別子の相互運用性に関係するユーザー："
    },
    {
      "indent": 3,
      "text": "* SHOULD limit alias nodes to a set of characters that do not require encoding to be expressed as URI fragment identifiers (this is generally possible since anchor names are a serialization detail), and",
      "ja": "* エイリアスノードをURIフラグメント識別子として表現するためにエンコーディングを必要としない文字のセットに制限する必要があります（これは、アンカー名はシリアル化の詳細であるため、一般的に可能です）。"
    },
    {
      "indent": 3,
      "text": "* SHOULD NOT use alias nodes that match multiple nodes.",
      "ja": "* 複数のノードに一致するエイリアスノードを使用しないでください。"
    },
    {
      "indent": 3,
      "text": "In the example resource below, the relative reference (see Section 4.2 of [URI]) file.yaml#*foo identifies the first alias node *foo pointing to the node with value scalar and not to the one in the second document, whereas the relative reference file.yaml#*document_2 identifies the root node of the second document {one: [a, sequence]}.",
      "ja": "以下のリソースの例では、相対参照（[uri]のセクション4.2を参照）file.yaml＃ *fooは、最初のエイリアスノード *を識別します。相対参照ファイル。yaml＃*document_2 2番目のドキュメントのルートノード{1：[a、sequence]}を識別します。"
    },
    {
      "indent": 4,
      "text": "%YAML 1.2 --- one: &foo scalar two: &bar - some - sequence - items ... %YAML 1.2 --- &document_2 one: &foo [a, sequence]",
      "ja": "％yaml 1.2 --- 1つ：＆foo Scalar 2：＆bar -some -sequence -items ...％yaml 1.2 ---＆document_2 One：＆foo [a、sequence]"
    },
    {
      "indent": 11,
      "text": "Figure 1: A YAML Stream Containing Two YAML Documents",
      "ja": "図1：2つのYAMLドキュメントを含むYAMLストリーム"
    },
    {
      "indent": 0,
      "text": "2. Media Type and Structured Syntax Suffix Registrations",
      "section_title": true,
      "ja": "2. メディアタイプと構造化された構文サフィックス登録"
    },
    {
      "indent": 3,
      "text": "This section includes the information required for IANA to register the application/yaml media type and the +yaml structured syntax suffix per [MEDIATYPE].",
      "ja": "このセクションには、IANAがアプリケーション/YAMLメディアタイプを登録するために必要な情報と、[Mediatype]ごとにYAML構造化された構文サフィックスが含まれています。"
    },
    {
      "indent": 0,
      "text": "2.1. Media Type application/yaml",
      "section_title": true,
      "ja": "2.1. メディアタイプアプリケーション/YAML"
    },
    {
      "indent": 3,
      "text": "The media type for YAML is application/yaml; the following information serves as the registration form for this media type.",
      "ja": "YAMLのメディアタイプはアプリケーション/YAMLです。次の情報は、このメディアタイプの登録フォームとして機能します。"
    },
    {
      "indent": 3,
      "text": "Type name: application",
      "ja": "タイプ名：アプリケーション"
    },
    {
      "indent": 3,
      "text": "Subtype name: yaml",
      "ja": "サブタイプ名：Yaml"
    },
    {
      "indent": 3,
      "text": "Required parameters: N/A",
      "ja": "必要なパラメーター：n/a"
    },
    {
      "indent": 3,
      "text": "Optional parameters: N/A; unrecognized parameters should be ignored.",
      "ja": "オプションのパラメーター：n/a;認識されていないパラメーターは無視する必要があります。"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: binary",
      "ja": "考慮事項のエンコード：バイナリ"
    },
    {
      "indent": 3,
      "text": "Security considerations: See Section 4 of this document.",
      "ja": "セキュリティ上の考慮事項：このドキュメントのセクション4を参照してください。"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: See Section 3 of this document.",
      "ja": "相互運用性の考慮事項：このドキュメントのセクション3を参照してください。"
    },
    {
      "indent": 3,
      "text": "Published specification: [YAML], this document",
      "ja": "公開された仕様：[yaml]、このドキュメント"
    },
    {
      "indent": 3,
      "text": "Applications that use this media type: Applications that need a human-friendly, cross-language, and Unicode-based data serialization language designed around the common data types of dynamic programming languages.",
      "ja": "このメディアタイプを使用するアプリケーション：動的プログラミング言語の一般的なデータタイプを中心に設計された、人間に優しい、言語的、およびユニコードベースのデータシリアル化言語を必要とするアプリケーション。"
    },
    {
      "indent": 3,
      "text": "Fragment identifier considerations: See Section 1.2 of this document.",
      "ja": "フラグメント識別子の考慮事項：このドキュメントのセクション1.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Additional information:",
      "ja": "追加情報："
    },
    {
      "indent": 6,
      "text": "Deprecated alias names for this type:  application/x-yaml, text/\n   yaml, and text/x-yaml.  These names are used but are not\n   registered.\nMagic number(s):  N/A\nFile extension(s):  \"yaml\" (preferred) and \"yml\".  See Section 3.3\n   of this document.\nMacintosh file type code(s):  N/A\nWindows Clipboard Name:  YAML",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Person and email address to contact for further information: See the Authors' Addresses section of this document.",
      "ja": "詳細については、連絡先への個人およびメールアドレス：このドキュメントの著者のアドレスセクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Intended usage: COMMON",
      "ja": "意図された使用法：共通"
    },
    {
      "indent": 3,
      "text": "Restrictions on usage: None",
      "ja": "使用に関する制限：なし"
    },
    {
      "indent": 3,
      "text": "Author: See the Authors' Addresses section of this document.",
      "ja": "著者：このドキュメントの著者のアドレスセクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Change controller: IETF",
      "ja": "Change Controller：IETF"
    },
    {
      "indent": 0,
      "text": "2.2. The +yaml Structured Syntax Suffix",
      "section_title": true,
      "ja": "2.2. YAML構造化構文の接尾辞"
    },
    {
      "indent": 3,
      "text": "The suffix +yaml MAY be used with any media type whose representation follows that established for application/yaml. The structured syntax suffix registration form follows. See [MEDIATYPE] for definitions of each part of the registration form.",
      "ja": "接尾辞YAMLは、アプリケーション/YAMLのために確立された表現が続くメディアタイプで使用できます。構造化された構文サフィックス登録フォームが続きます。登録フォームの各部分の定義については、[mediatype]を参照してください。"
    },
    {
      "indent": 3,
      "text": "Name: YAML Ain't Markup Language (YAML)",
      "ja": "名前：YAMLはマークアップ言語ではありません（YAML）"
    },
    {
      "indent": 3,
      "text": "+suffix:  +yaml",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "References: [YAML], this document",
      "ja": "参照：[YAML]、このドキュメント"
    },
    {
      "indent": 3,
      "text": "Encoding considerations: Same as application/yaml",
      "ja": "考慮事項のエンコード：アプリケーション/YAMLと同じ"
    },
    {
      "indent": 3,
      "text": "Interoperability considerations: Same as application/yaml",
      "ja": "相互運用性の考慮事項：アプリケーション/YAMLと同じ"
    },
    {
      "indent": 3,
      "text": "Fragment identifier considerations: Unlike application/yaml, there is no fragment identification syntax defined for +yaml.",
      "ja": "フラグメント識別子の考慮事項：Application/YAMLとは異なり、YAMLに対して定義されたフラグメント識別構文はありません。"
    },
    {
      "indent": 6,
      "text": "A specific xxx/yyy+yaml media type needs to define the syntax and semantics for fragment identifiers because the ones defined for application/yaml do not apply unless explicitly expressed.",
      "ja": "特定のXXX/YYY YAMLメディアタイプは、アプリケーション/YAMLに対して定義されたものが明示的に表現されない限り適用されないため、フラグメント識別子の構文とセマンティクスを定義する必要があります。"
    },
    {
      "indent": 3,
      "text": "Security considerations: Same as application/yaml",
      "ja": "セキュリティ上の考慮事項：アプリケーション/YAMLと同じ"
    },
    {
      "indent": 3,
      "text": "Contact:  httpapi@ietf.org or art@ietf.org",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Author: See the Authors' Addresses section of this document.",
      "ja": "著者：このドキュメントの著者のアドレスセクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Change controller: IETF",
      "ja": "Change Controller：IETF"
    },
    {
      "indent": 0,
      "text": "3. Interoperability Considerations",
      "section_title": true,
      "ja": "3. 相互運用性の考慮事項"
    },
    {
      "indent": 0,
      "text": "3.1. YAML Is an Evolving Language",
      "section_title": true,
      "ja": "3.1. Yamlは進化する言語です"
    },
    {
      "indent": 3,
      "text": "YAML is an evolving language, and over time, some features have been added and others removed.",
      "ja": "Yamlは進化する言語であり、時間の経過とともにいくつかの機能が追加され、他の機能が削除されています。"
    },
    {
      "indent": 3,
      "text": "The application/yaml media type registration is independent of the YAML version. This allows content negotiation of version-independent YAML resources.",
      "ja": "アプリケーション/YAMLメディアタイプの登録は、YAMLバージョンとは無関係です。これにより、バージョンに依存しないYAMLリソースのコンテンツネゴシエーションが可能になります。"
    },
    {
      "indent": 3,
      "text": "Implementers concerned about features related to a specific YAML version can specify it in YAML documents using the %YAML directive (see Section 6.8.1 of [YAML]).",
      "ja": "特定のYAMLバージョンに関連する機能に関係する実装者は、％YAML指令を使用してYAMLドキュメントで指定できます（[YAML]のセクション6.8.1を参照）。"
    },
    {
      "indent": 0,
      "text": "3.2. YAML Streams",
      "section_title": true,
      "ja": "3.2. YAMLストリーム"
    },
    {
      "indent": 3,
      "text": "A YAML stream can contain zero or more YAML documents.",
      "ja": "YAMLストリームには、ゼロ以上のYAMLドキュメントを含めることができます。"
    },
    {
      "indent": 3,
      "text": "When receiving a multi-document stream, an application that only expects single-document streams should signal an error instead of ignoring the extra documents.",
      "ja": "マルチドキュメントストリームを受信する場合、単一ドキュメントストリームのみを期待するアプリケーションは、追加のドキュメントを無視するのではなく、エラーを通知する必要があります。"
    },
    {
      "indent": 3,
      "text": "Current implementations consider different documents in a stream independent, similarly to JSON text sequences (see [RFC7464]); elements such as anchors are not guaranteed to be referenceable across different documents.",
      "ja": "現在の実装では、JSONテキストシーケンスと同様に、ストリーム内のさまざまなドキュメントを考慮しています（[RFC7464]を参照）。アンカーなどの要素は、異なるドキュメントで参照可能であることが保証されていません。"
    },
    {
      "indent": 0,
      "text": "3.3. Filename Extension",
      "section_title": true,
      "ja": "3.3. ファイル名拡張機能"
    },
    {
      "indent": 3,
      "text": "The \"yaml\" filename extension is the preferred one; it is the most popular and widely used on the web. The \"yml\" filename extension is still used. The simultaneous usage of two filename extensions in the same context might cause interoperability issues (e.g., when both a \"config.yaml\" and a \"config.yml\" are present).",
      "ja": "「YAML」ファイル名拡張機能が推奨されるものです。それは最も人気があり、ウェブで広く使用されています。「YML」ファイル名拡張機能は引き続き使用されています。同じコンテキストで2つのファイル名拡張機能を同時に使用すると、相互運用性の問題が発生する可能性があります（たとえば、「config.yaml」と「config.yml」の両方が存在する場合）。"
    },
    {
      "indent": 0,
      "text": "3.4. YAML and JSON",
      "section_title": true,
      "ja": "3.4. YamlとJson"
    },
    {
      "indent": 3,
      "text": "When using flow collection styles (see Section 7.4 of [YAML]), a YAML document could look like JSON [JSON]; thus, similar interoperability considerations apply.",
      "ja": "フローコレクションスタイル（[YAML]のセクション7.4を参照）を使用する場合、YAMLドキュメントはJSON [JSON]のように見える可能性があります。したがって、同様の相互運用性の考慮事項が適用されます。"
    },
    {
      "indent": 3,
      "text": "When using YAML as a more efficient format to serialize information intended to be consumed as JSON, information not reflected in the representation graph and classified as presentation or serialization details (see Section 3.2 of [YAML]) can be discarded. This includes comments (see Section 3.2.3.3 of [YAML]), directives, and alias nodes (see Section 7.1 of [YAML]) that do not have a JSON counterpart.",
      "ja": "YAMLをより効率的な形式として使用する場合、JSONとして消費されることを目的とした情報をシリアル化する場合、表現グラフに反映され、プレゼンテーションまたはシリアル化の詳細として分類されます（[YAML]のセクション3.2を参照）。これには、JSONのカウンターパートがないコメント（[YAML]のセクション3.2.3.3）、ディレクティブ、およびエイリアスノード（[YAML]のセクション7.1を参照）を含みます。"
    },
    {
      "indent": 4,
      "text": "%YAML 1.2 --- # This comment will be lost # when serializing in JSON. Title: type: string maxLength: &text_limit 64",
      "ja": "％YAML 1.2 ---＃このコメントは、JSONでシリアル化するときに失われます。タイトル：タイプ：文字列maxlength：＆text_limit 64"
    },
    {
      "indent": 4,
      "text": "Name: type: string maxLength: *text_limit # Replaced by the value 64.",
      "ja": "名前：タイプ：文字列maxlength： *text_limit＃値64に置き換えられました。"
    },
    {
      "indent": 11,
      "text": "Figure 2: JSON Replaces Alias Nodes with Static Values",
      "ja": "図2：JSONはエイリアスノードを静的値に置き換えます"
    },
    {
      "indent": 3,
      "text": "Implementers need to ensure that relevant information will not be lost during processing. For example, they might consider alias nodes being replaced by static values as acceptable.",
      "ja": "実装者は、処理中に関連情報が失われないようにする必要があります。たとえば、エイリアスノードが静的値に置き換えられると考える場合があります。"
    },
    {
      "indent": 3,
      "text": "In some cases, an implementer may want to define a list of allowed YAML features, taking into account that the following features might have interoperability issues with [JSON]:",
      "ja": "場合によっては、実装者は、[JSON]との相互運用性の問題がある可能性があることを考慮して、許可されたYAML機能のリストを定義したい場合があります。"
    },
    {
      "indent": 3,
      "text": "* multi-document YAML streams",
      "ja": "* マルチドキュメントYamlストリーム"
    },
    {
      "indent": 3,
      "text": "* non-UTF-8 encoding. Before encoding YAML streams in UTF-16 or UTF-32, it is important to note that Section 8.1 of [JSON] mandates the use of UTF-8 when exchanging JSON texts between systems that are not part of a closed ecosystem and that Section 5.2 of [YAML] recommends the use of UTF-8.",
      "ja": "* 非UTF-8エンコーディング。UTF-16またはUTF-32でYAMLストリームをエンコードする前に、[JSON]のセクション8.1は、閉じたエコシステムの一部ではないシステムとそのセクション5.2のシステム間でJSONテキストを交換する場合、UTF-8の使用を義務付けていることに注意することが重要です。[YAML]はUTF-8の使用を推奨します。"
    },
    {
      "indent": 3,
      "text": "* mapping keys that are not strings",
      "ja": "* 文字列ではないマッピングキー"
    },
    {
      "indent": 3,
      "text": "* cyclic references represented using anchors (see Section 4.2 and Figure 4)",
      "ja": "* アンカーを使用して表される周期的参照（セクション4.2および図4を参照）"
    },
    {
      "indent": 3,
      "text": "* .inf and .nan float values, since JSON does not support them",
      "ja": "* JSONはそれらをサポートしていないため、.infと.nanフロート値の値"
    },
    {
      "indent": 3,
      "text": "* non-JSON types, including the ones associated with tags like !!timestamp that were included in the default schema of older YAML versions",
      "ja": "* 古いYAMLバージョンのデフォルトスキーマに含まれていたタイムスタンプに関連付けられたタグに関連付けられたものを含む、JSONタイプ以外のタイプ"
    },
    {
      "indent": 3,
      "text": "* tags in general, specifically ones that do not map to JSON types, e.g., custom and local tags such as !!python/object and !mytag (see Section 2.4 of [YAML])",
      "ja": "* 一般的に、特にJSONタイプにマッピングしないタグ、たとえば、!! Python/Objectや！MyTagなどのカスタムタグやローカルタグ（[YAML]のセクション2.4を参照））"
    },
    {
      "indent": 4,
      "text": "%YAML 1.2 --- non-json-keys: 0: a number [0, 1]: a sequence ? {k: v} : a map --- non-json-keys: !date 2020-01-01: a timestamp non-json-value: !date 2020-01-01 ...",
      "ja": "％yaml 1.2 --- nonjson-keys：0：a number [0、1]：シーケンス？{k：v}：マップ---非json-keys：！日付2020-01-01：タイムスタンプnonjson-value：！date 2020-01-01 ..."
    },
    {
      "indent": 7,
      "text": "Figure 3: Example of Mapping Keys and Values Not Supported in JSON in a Multi-Document YAML Stream",
      "ja": "図3：マルチドキュメントYAMLストリームのJSONでサポートされていないキーと値のマッピングの例"
    },
    {
      "indent": 0,
      "text": "3.5. Fragment Identifiers",
      "section_title": true,
      "ja": "3.5. フラグメント識別子"
    },
    {
      "indent": 3,
      "text": "To allow fragment identifiers to traverse alias nodes, the YAML representation graph needs to be generated before the fragment identifier evaluation. It is important that this evaluation does not cause the issues mentioned in Sections 3.4 and 4, such as infinite loops and unexpected code execution.",
      "ja": "フラグメント識別子がエイリアスノードを通過できるようにするには、フラグメント識別子評価の前にYAML表現グラフを生成する必要があります。この評価が、無限ループや予期しないコード実行など、セクション3.4および4に記載されている問題を引き起こさないことが重要です。"
    },
    {
      "indent": 3,
      "text": "Implementers need to consider that the YAML version and supported features (e.g., merge keys) can affect the generation of the representation graph (see Figure 9).",
      "ja": "実装者は、YAMLバージョンとサポートされている機能（マージキーなど）が表現グラフの生成に影響を与える可能性があることを考慮する必要があります（図9を参照）。"
    },
    {
      "indent": 3,
      "text": "In Section 1.2, this document extends the use of specifications based on the JSON data model with support for YAML fragment identifiers. This is to improve the interoperability of already-consolidated practices, such as writing OpenAPI documents [OAS] in YAML.",
      "ja": "セクション1.2では、このドキュメントでは、YAMLフラグメント識別子をサポートするJSONデータモデルに基づいて仕様の使用を拡張します。これは、YAMLでOpenapiドキュメント[OAS]を書くなど、すでに統合されたプラクティスの相互運用性を改善するためです。"
    },
    {
      "indent": 3,
      "text": "Appendix A provides a non-exhaustive list of examples to help readers understand interoperability issues related to fragment identifiers.",
      "ja": "付録Aでは、読者がフラグメント識別子に関連する相互運用性の問題を理解するのに役立つ例の非網羅的なリストを提供します。"
    },
    {
      "indent": 0,
      "text": "4. Security Considerations",
      "section_title": true,
      "ja": "4. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Security requirements for both media types and media type suffixes are discussed in Section 4.6 of [MEDIATYPE].",
      "ja": "メディアタイプとメディアタイプのサフィックスの両方のセキュリティ要件については、[Mediatype]のセクション4.6で説明します。"
    },
    {
      "indent": 0,
      "text": "4.1. Arbitrary Code Execution",
      "section_title": true,
      "ja": "4.1. 任意のコード実行"
    },
    {
      "indent": 3,
      "text": "Care should be used when using YAML tags because their resolution might trigger unexpected code execution.",
      "ja": "YAMLタグを使用する場合は、解決策が予期しないコード実行をトリガーする可能性があるため、注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "Code execution in deserializers should be disabled by default and only be enabled explicitly. In the latter case, the implementation should ensure (for example, via specific functions) that the code execution results in strictly bounded time/memory limits.",
      "ja": "脱介入者のコード実行は、デフォルトで無効にする必要があり、明示的にのみ有効にする必要があります。後者の場合、実装は（たとえば、特定の機能を介して）コードの実行により、時間/メモリの制限が厳密に制限されることを保証する必要があります。"
    },
    {
      "indent": 3,
      "text": "Many implementations provide safe deserializers that address these issues.",
      "ja": "多くの実装は、これらの問題に対処する安全な脱介入者を提供します。"
    },
    {
      "indent": 0,
      "text": "4.2. Resource Exhaustion",
      "section_title": true,
      "ja": "4.2. リソースの疲労"
    },
    {
      "indent": 3,
      "text": "YAML documents are rooted, connected, directed graphs and can contain reference cycles, so they can't be treated as simple trees (see Section 3.2.1 of [YAML]). An implementation that treats them as simple trees risks going into an infinite loop while traversing the YAML representation graph. This can happen:",
      "ja": "YAMLドキュメントは、根付き、接続、指示グラフであり、参照サイクルを含めることができるため、単純な木として扱うことはできません（[YAML]のセクション3.2.1を参照）。それらを単純なツリーとして扱う実装は、YAML表現グラフを横断しながら、無限のループにリスクがあります。これが起こる可能性があります："
    },
    {
      "indent": 3,
      "text": "* when trying to serialize it as JSON or",
      "ja": "* JSONまたは"
    },
    {
      "indent": 3,
      "text": "* when searching/identifying nodes using specifications based on the JSON data model (e.g., [JSON-POINTER]).",
      "ja": "* JSONデータモデルに基づいて仕様を使用してノードを検索/識別する場合（例：[JSON-Pointer]）。"
    },
    {
      "indent": 4,
      "text": "%YAML 1.2 --- x: &x y: *x",
      "ja": "％yaml 1.2 --- x：＆x y： *x"
    },
    {
      "indent": 24,
      "text": "Figure 4: A Cyclic Document",
      "ja": "図4：周期的なドキュメント"
    },
    {
      "indent": 3,
      "text": "Even if a representation graph is not cyclic, treating it as a simple tree could lead to improper behaviors, such as triggering an Exponential Data Expansion (e.g., a Billion Laughs Attack).",
      "ja": "表現グラフが周期的でない場合でも、それを単純なツリーとして扱うと、指数関数的なデータ拡張のトリガーなど、不適切な動作につながる可能性があります（たとえば、10億の笑い攻撃）。"
    },
    {
      "indent": 4,
      "text": "%YAML 1.2\n---\nx1: &a1 [\"a\", \"a\"]\nx2: &a2 [*a1, *a1]\nx3: &a3 [*a2, *a2]",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 5: A Billion Laughs Document",
      "ja": "図5：10億人の笑い文書"
    },
    {
      "indent": 3,
      "text": "This can be addressed using processors that limit the anchor recursion depth and validate the input before processing it; even in these cases, it is important to carefully test the implementation you are going to use. The same considerations apply when serializing a YAML representation graph in a format that does not support reference cycles (see Section 3.4).",
      "ja": "これは、アンカー再帰の深さを制限し、処理する前に入力を検証するプロセッサを使用して対処できます。これらの場合でも、使用する実装を慎重にテストすることが重要です。同じ考慮事項は、参照サイクルをサポートしない形式でYAML表現グラフをシリアル化する場合に適用されます（セクション3.4を参照）。"
    },
    {
      "indent": 0,
      "text": "4.3. YAML Streams",
      "section_title": true,
      "ja": "4.3. YAMLストリーム"
    },
    {
      "indent": 3,
      "text": "Incremental parsing and processing of a YAML stream can produce partial results and later indicate failure to parse the remainder of the stream; to prevent partial processing, implementers might prefer validating and processing all the documents in a stream at the same time.",
      "ja": "YAMLストリームの増分解析と処理は、部分的な結果を生成する可能性があり、後にストリームの残りの部分を解析できないことを示します。部分処理を防ぐために、実装者は、ストリーム内のすべてのドキュメントを同時に検証および処理することを好む場合があります。"
    },
    {
      "indent": 3,
      "text": "Repeated parsing and re-encoding of a YAML stream can result in the addition or removal of document delimiters (e.g., --- or ...) as well as the modification of anchor names and other serialization details that can break signature validation.",
      "ja": "YAMLストリームの繰り返しの解析と再エンコードにより、ドキュメントデリミター（例えば---または...）の追加または削除、および署名検証を破る可能性のあるアンカー名とその他のシリアル化の詳細の変更が生じる可能性があります。"
    },
    {
      "indent": 0,
      "text": "4.4. Expressing Booleans",
      "section_title": true,
      "ja": "4.4. ブレアを表現します"
    },
    {
      "indent": 3,
      "text": "Section 10.3.2 of [YAML] specifies that only the scalars matching the regular expression true|True|TRUE|false|False|FALSE are interpreted as booleans. Older YAML versions were more tolerant (e.g., interpreting NO and N as False and interpreting YES and Y as True). When the older syntax is used, a YAML implementation could then interpret {insecure: n} as {insecure: \"n\"} instead of {insecure: false}. Using the syntax defined in Section 10.3.2 of [YAML] prevents these issues.",
      "ja": "[YAML]のセクション10.3.2は、正規表現を一致させるスカラーのみがtrue | true | true | false | falseがブール人と解釈されることを指定します。古いYAMLバージョンはより寛容でした（たとえば、noとnをfalseと解釈し、yesとyを真実と解釈しました）。古い構文を使用すると、YAMLの実装は{{sincure： \"n\"}の代わりに{sencure： \"n\"}として{sencure： \"n\"}として解釈できます。[YAML]のセクション10.3.2で定義されている構文を使用すると、これらの問題が防止されます。"
    },
    {
      "indent": 0,
      "text": "5. IANA Considerations",
      "section_title": true,
      "ja": "5. IANAの考慮事項"
    },
    {
      "indent": 3,
      "text": "IANA has updated the \"Media Types\" registry (https://www.iana.org/assignments/media-types) with the registration information in Section 2.1 for the media type application/yaml.",
      "ja": "IANAは、メディアタイプアプリケーション/YAMLのセクション2.1の登録情報で、「メディアタイプ」レジストリ（https://www.iana.org/assignments/media-types）を更新しました。"
    },
    {
      "indent": 3,
      "text": "IANA has updated the \"Structured Syntax Suffixes\" registry (https://www.iana.org/assignments/media-type-structured-suffix) with the registration information in Section 2.2 for the structured syntax suffix +yaml.",
      "ja": "IANAは、構造化された構文サフィックスYamlのセクション2.2の登録情報で、「構造化された構文サフィックス」レジストリ（https://www.iana.org/assignments/media-type-structured-suffix）を更新しました。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6. 参考文献"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "ja": "6.1. 引用文献"
    },
    {
      "indent": 3,
      "text": "[HTTP] Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke, Ed., \"HTTP Semantics\", STD 97, RFC 9110, DOI 10.17487/RFC9110, June 2022, <https://www.rfc-editor.org/info/rfc9110>.",
      "ja": "[HTTP] Fielding、R.、Ed。、Nottingham、M.、Ed。、およびJ. Reschke、ed。、 \"HTTP Semantics\"、Std 97、RFC 9110、DOI 10.17487/RFC9110、2022年6月、<https：//www.rfc-editor.org/info/rfc9110>。"
    },
    {
      "indent": 3,
      "text": "[JSON] Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data Interchange Format\", STD 90, RFC 8259, DOI 10.17487/RFC8259, December 2017, <https://www.rfc-editor.org/info/rfc8259>.",
      "ja": "[JSON] Bray、T.、ed。、「JavaScriptオブジェクト表記（JSON）データインターチェンジ形式」、STD 90、RFC 8259、DOI 10.17487/RFC8259、2017年12月、<https://www.rfc-editor.org/info/rfc8259>。"
    },
    {
      "indent": 3,
      "text": "[JSON-POINTER] Bryan, P., Ed., Zyp, K., and M. Nottingham, Ed., \"JavaScript Object Notation (JSON) Pointer\", RFC 6901, DOI 10.17487/RFC6901, April 2013, <https://www.rfc-editor.org/info/rfc6901>.",
      "ja": "[Json-Pointer] Bryan、P.、ed。、Zyp、K。、およびM. Nottingham、ed。、「Javascriptオブジェクト表記（JSON）ポインター」、RFC 6901、DOI 10.17487/RFC6901、2013年4月、<https：//www.rfc-editor.org/info/rfc6901>。"
    },
    {
      "indent": 3,
      "text": "[MEDIATYPE] Freed, N., Klensin, J., and T. Hansen, \"Media Type Specifications and Registration Procedures\", BCP 13, RFC 6838, DOI 10.17487/RFC6838, January 2013, <https://www.rfc-editor.org/info/rfc6838>.",
      "ja": "[Mediatype] Freed、N.、Klensin、J。、およびT. Hansen、「メディアタイプの仕様と登録手順」、BCP 13、RFC 6838、DOI 10.17487/RFC6838、2013年1月、<https：//www.rfc-editor.org/info/rfc6838>。"
    },
    {
      "indent": 3,
      "text": "[OAS] Miller, D., Whitlock, J., Gardiner, M., Ralphson, M., Ratovsky, R., and U. Sarid, \"OpenAPI Specification\", v3.0.0, 26 July 2017.",
      "ja": "[OAS] Miller、D.、Whitlock、J.、Gardiner、M.、Ralphson、M.、Ratovsky、R。、およびU. Sarid、「Openapi仕様」、v3.0.0、2017年7月26日。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "ja": "[RFC2119] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、DOI 10.17487/RFC2119、1997年3月、<https://www.rfc-editor.org/info/RFC2119>。"
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "ja": "[RFC8174] Leiba、B。、「RFC 2119キーワードの大文字と小文字の曖昧さ」、BCP 14、RFC 8174、DOI 10.17487/RFC8174、2017年5月、<https：//www.rfc-editor.org/info/RFC8174>。"
    },
    {
      "indent": 3,
      "text": "[URI] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, DOI 10.17487/RFC3986, January 2005, <https://www.rfc-editor.org/info/rfc3986>.",
      "ja": "[URI] Berners-Lee、T.、Fielding、R。、およびL. Masinter、「Uniform Resource Identifier（URI）：Generic Syntax」、Std 66、RFC 3986、DOI 10.17487/RFC3986、2005年1月、<https：//www.rfc-editor.org/info/rfc3986>。"
    },
    {
      "indent": 3,
      "text": "[UTF-8] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, DOI 10.17487/RFC3629, November 2003, <https://www.rfc-editor.org/info/rfc3629>.",
      "ja": "[UTF-8] Yergeau、F。、「UTF-8、ISO 10646の変換形式」、STD 63、RFC 3629、DOI 10.17487/RFC3629、2003年11月、<https://www.rfc-editor.org/情報/RFC3629>。"
    },
    {
      "indent": 3,
      "text": "[YAML] Ben-Kiki, O., Evans, C., dot Net, I., Mller, T., Antoniou, P., Aro, E., and T. Smith, \"YAML Ain't Markup Language Version 1.2\", 1 October 2021, <https://yaml.org/spec/1.2.2/>.",
      "ja": "[Yaml] Ben-kiki、O.、Evans、C.、Dot Net、I.、Mller、T.、Antoniou、P.、Aro、E。、およびT. Smith、 \"yaml ai a n't markup Languageバージョン1.2\"、2021年10月1日、<https://yaml.org/spec/1.2.2/>。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "ja": "6.2. 参考引用"
    },
    {
      "indent": 3,
      "text": "[RFC7464] Williams, N., \"JavaScript Object Notation (JSON) Text Sequences\", RFC 7464, DOI 10.17487/RFC7464, February 2015, <https://www.rfc-editor.org/info/rfc7464>.",
      "ja": "[RFC7464]ウィリアムズ、N。、「JavaScriptオブジェクト表記（JSON）テキストシーケンス」、RFC 7464、DOI 10.17487/RFC7464、2015年2月、<https://www.rfc-editor.org/info/rfc7464>"
    },
    {
      "indent": 0,
      "text": "Appendix A. Examples Related to Fragment Identifier Interoperability",
      "section_title": true,
      "ja": "付録A. フラグメント識別子の相互運用性に関連する例"
    },
    {
      "indent": 0,
      "text": "A.1. Unreferenceable Nodes",
      "section_title": true,
      "ja": "A.1. 評判のないノード"
    },
    {
      "indent": 3,
      "text": "This example shows a couple of YAML nodes that cannot be referenced based on the JSON data model since their mapping keys are not strings.",
      "ja": "この例は、マッピングキーが文字列ではないため、JSONデータモデルに基づいて参照できないいくつかのYAMLノードを示しています。"
    },
    {
      "indent": 4,
      "text": "%YAML 1.2 --- a-map-cannot: ? {be: expressed} : with a JSON Pointer",
      "ja": "％yaml 1.2 --- A-Map-cannot：？{be：expressed}：jsonポインター付き"
    },
    {
      "indent": 4,
      "text": "0: no numeric mapping keys in JSON",
      "ja": "0：JSONに数値マッピングキーはありません"
    },
    {
      "indent": 6,
      "text": "Figure 6: Example of YAML Nodes That Are Not Referenceable Based on JSON Data Model",
      "ja": "図6：JSONデータモデルに基づいて参照できないYAMLノードの例"
    },
    {
      "indent": 0,
      "text": "A.2. Referencing a Missing Node",
      "section_title": true,
      "ja": "A.2. 欠落しているノードを参照します"
    },
    {
      "indent": 3,
      "text": "In this example, the fragment #/0 does not reference an existing node.",
      "ja": "この例では、フラグメント＃/0は既存のノードを参照しません。"
    },
    {
      "indent": 4,
      "text": "%YAML 1.2 --- 0: \"JSON Pointer `#/0` references a string mapping key.\"",
      "ja": "％yaml 1.2 --- 0： \"Json Pointer`＃/0`は文字列マッピングキーを参照しています。"
    },
    {
      "indent": 7,
      "text": "Figure 7: Example of a JSON Pointer That Does Not Reference an Existing Node",
      "ja": "図7：既存のノードを参照しないJSONポインターの例"
    },
    {
      "indent": 0,
      "text": "A.3. Representation Graph with Anchors and Cyclic References",
      "section_title": true,
      "ja": "A.3. アンカーと周期的な参照を備えた表現グラフ"
    },
    {
      "indent": 3,
      "text": "In this YAML document, the #/foo/bar/baz fragment identifier traverses the representation graph and references the string you. Moreover, the presence of a cyclic reference implies that there are infinite fragment identifiers #/foo/bat/../bat/bar referencing the &anchor node.",
      "ja": "このYAMLドキュメントでは、＃/foo/bar/bazフラグメント識別子が表現グラフを横断し、文字列を参照します。さらに、循環参照の存在は、＆アンカーノードを参照する無限のフラグメント識別子＃/foo/bat /../ bat/barがあることを意味します。"
    },
    {
      "indent": 4,
      "text": "%YAML 1.2 --- anchor: &anchor baz: you foo: &foo bar: *anchor bat: *foo",
      "ja": "％yaml 1.2 ---アンカー：＆アンカーBaz：you foo：＆foo bar： *anchor bat： *foo"
    },
    {
      "indent": 10,
      "text": "Figure 8: Example of a Cyclic Reference and Alias Nodes",
      "ja": "図8：循環参照とエイリアスノードの例"
    },
    {
      "indent": 3,
      "text": "Many YAML implementations will resolve the merge key \"<<:\" (https://yaml.org/type/merge.html) defined in YAML 1.1 in the representation graph. This means that the fragment #/book/author/ given_name references the string Federico and that the fragment #/book/<< will not reference any existing node.",
      "ja": "多くのYAML実装は、表現グラフのYAML 1.1で定義されているMerge Key \"<<：\"（https://yaml.org/type/merge.html）を解決します。これは、フラグメント＃/book/著者/sign_nameが文字列federicoを参照し、フラグメント＃/book/<<は既存のノードを参照しないことを意味します。"
    },
    {
      "indent": 4,
      "text": "%YAML 1.1 --- # Many implementations use merge keys. the-viceroys: &the-viceroys title: The Viceroys author: given_name: Federico family_name: De Roberto book: <<: *the-viceroys title: The Illusion",
      "ja": "％YAML 1.1 ---＃多くの実装はマージキーを使用しています。The-Viceroys：＆the-Viceroysタイトル：副王職の著者：与えられた_name：federico family_name：de roberto Book：<<： *The-Viceroysタイトル：The Illusion"
    },
    {
      "indent": 20,
      "text": "Figure 9: Example of YAML Merge Keys",
      "ja": "図9：YAMLマージキーの例"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to Erik Wilde and David Biesack for being the initial contributors to this specification and to Darrel Miller and Rich Salz for their support during the adoption phase.",
      "ja": "この仕様の最初の貢献者であり、養子縁組段階でのサポートについてダレル・ミラーとリッチ・サルツに感謝してくれたエリック・ワイルドとデビッド・ビーサックに感謝します。"
    },
    {
      "indent": 3,
      "text": "In addition, this document owes a lot to the extensive discussion inside and outside the HTTPAPI Working Group. The following contributors helped improve this specification by opening pull requests, reporting bugs, asking smart questions, drafting or reviewing text, and evaluating open issues: Tina (tinita) Mller, Ben Hutton, Carsten Bormann, Manu Sporny, and Jason Desrosiers.",
      "ja": "さらに、このドキュメントは、HTTPAPIワーキンググループの内外で広範な議論を担当しています。次の貢献者は、プルリクエストを開き、バグの報告、スマートな質問をし、テキストの起草またはレビュー、未解決の問題を評価することにより、この仕様の改善に役立ちました：ティナ（ティニタ）Mller、ベンハットン、カルステンボーマン、マヌースポルニー、ジェイソンデスロシエ。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "ja": "著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Roberto Polli Digital Transformation Department, Italian Government Italy Email: robipolli@gmail.com",
      "ja": "イタリア政府のイタリアのロベルトポーリデジタルトランスフォーメーション部門メール：robipolli@gmail.com"
    },
    {
      "indent": 3,
      "text": "Erik Wilde Axway Switzerland Email: erik.wilde@dret.net",
      "ja": "Erik Wilde Axway Switzerlandメール：erik.wilde@dret.net"
    },
    {
      "indent": 3,
      "text": "Eemeli Aro Mozilla Finland Email: eemeli@gmail.com",
      "ja": "eemeli aro mozillaフィンランドメール：eemeli@gmail.com"
    }
  ]
}