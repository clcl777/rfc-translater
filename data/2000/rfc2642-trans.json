{
  "title": {
    "text": "RFC 2642 - Cabletron's VLS Protocol Specification",
    "ja": "RFC 2642 - CabletronのVLSプロトコル仕様"
  },
  "number": 2642,
  "created_at": "2024-02-13 17:17:17.721630+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                            L. Kane\nRequest for Comments: 2642                Cabletron Systems Incorporated\nCategory: Informational                                      August 1999",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 17,
      "text": "Cabletron's VLS Protocol Specification",
      "ja": "CabletronのVLSプロトコル仕様"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（1999）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "The Virtual LAN Link State Protocol (VLSP) is part of the InterSwitch Message Protocol (ISMP) which provides interswitch communication between switches running Cabletron's SecureFast VLAN (SFVLAN) product. VLSP is used to determine and maintain a fully connected mesh topology graph of the switch fabric. Each switch maintains an identical database describing the topology. Call-originating switches use the topology database to determine the path over which to route a call connection.",
      "ja": "仮想LANリンク状態プロトコル（VLSP）は、CabletronのSecureFast VLAN（SFVLAN）製品を実行するスイッチ間のスイッチ間通信を提供するSwitchメッセージプロトコル（ISMP）の一部です。VLSPは、スイッチファブリックの完全に接続されたメッシュトポロジグラフを決定および維持するために使用されます。各スイッチは、トポロジを記述する同一のデータベースを維持します。コールオリジースイッチは、トポロジーデータベースを使用して、コール接続をルーティングするパスを決定します。"
    },
    {
      "indent": 3,
      "text": "VLSP provides support for equal-cost multipath routing, and recalculates routes quickly in the face of topological changes, utilizing a minimum of routing protocol traffic.",
      "ja": "VLSPは、等しいコストのマルチパスルーティングのサポートを提供し、トポロジーの変化に直面してルートを迅速に再計算し、最小限のルーティングプロトコルトラフィックを利用します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": " 1. Introduction............................................  3\n    1.1 Acknowledgments.....................................  3\n    1.2 Data Conventions....................................  3\n    1.3 ISMP Overview.......................................  4\n 2. VLS Protocol Overview...................................  5\n    2.1 Definitions of Commonly Used Terms..................  6\n    2.2 Differences Between VLSP and OSPF...................  7\n        2.2.1 Operation at the Physical Layer...............  8\n        2.2.2 All Links Treated as Point-to-Point...........  8\n        2.2.3 Routing Path Information......................  9\n        2.2.4 Configurable Parameters.......................  9\n        2.2.5 Features Not supported........................  9\n    2.3 Functional Summary.................................. 10\n    2.4 Protocol Packets.................................... 11\n       2.5 Protocol Data Structures............................ 12\n    2.6 Basic Implementation Requirements................... 12\n    2.7 Organization of the Remainder of This Document...... 13\n 3. Interface Data Structure................................ 14\n    3.1 Interface States.................................... 16\n    3.2 Events Causing Interface State Changes.............. 18\n    3.3 Interface State Machine............................. 21\n 4. Neighbor Data Structure................................. 23\n    4.1 Neighbor States..................................... 25\n    4.2 Events Causing Neighbor State Changes............... 27\n    4.3 Neighbor State Machine.............................. 29\n 5. Area Data Structure..................................... 33\n    5.1 Adding and Deleting Link State Advertisements....... 34\n    5.2 Accessing Link State Advertisements................. 35\n    5.3 Best Path Lookup.................................... 35\n 6. Discovery Process....................................... 35\n    6.1 Neighbor Discovery.................................. 36\n    6.2 Bidirectional Communication......................... 37\n    6.3 Designated Switch................................... 38\n        6.3.1 Selecting the Designated Switch............... 39\n    6.4 Adjacencies......................................... 41\n 7. Synchronizing the Databases............................. 42\n    7.1 Link State Advertisements........................... 43\n        7.1.1 Determining Which\n              Link State Advertisement Is Newer............. 44\n    7.2 Database Exchange Process........................... 44\n        7.2.1 Database Description Packets.................. 44\n        7.2.2 Negotiating the Master/Slave Relationship..... 45\n        7.2.3 Exchanging Database Description Packets....... 46\n    7.3 Updating the Database............................... 48\n    7.4 An Example.......................................... 49\n 8. Maintaining the Databases............................... 51\n    8.1 Originating Link State Advertisements............... 52\n        8.1.1 Switch Link Advertisements.................... 52\n        8.1.2 Network Link Advertisements................... 55\n    8.2 Distributing Link State Advertisements.............. 56\n        8.2.1 Overview...................................... 57\n        8.2.2 Processing an\n              Incoming Link State Update Packet............. 58\n        8.2.3 Forwarding Link State Advertisements.......... 60\n        8.2.4 Installing Link\n              State Advertisements in the Database.......... 62\n        8.2.5 Retransmitting Link State Advertisements...... 63\n        8.2.6 Acknowledging Link State Advertisements....... 64\n    8.3 Aging the Link State Database....................... 66\n        8.3.1 Premature Aging of Advertisements............. 66\n 9. Calculating the Best Paths.............................. 67\n10. Protocol Packets........................................ 67",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "    10.1 ISMP Packet Format................................. 68\n         10.1.1 Frame Header................................ 69\n         10.1.2 ISMP Packet Header.......................... 70\n         10.1.3 ISMP Message Body........................... 71\n    10.2 VLSP Packet Processing............................. 71\n    10.3 Network Layer Address Information.................. 72\n    10.4 VLSP Packet Header................................. 73\n    10.5 Options Field...................................... 75\n    10.6 Packet Formats..................................... 76\n         10.6.1 Hello Packets............................... 76\n         10.6.2 Database Description Packets................ 78\n         10.6.3 Link State Request Packets.................. 80\n         10.6.4 Link State Update Packets................... 82\n         10.6.5 Link State Acknowledgment Packets........... 83\n11. Link State Advertisement Formats........................ 84\n    11.1 Link State Advertisement Headers................... 84\n    11.2 Switch Link Advertisements......................... 86\n    11.3 Network Link Advertisements........................ 89\n12. Protocol Parameters..................................... 89\n    12.1 Architectural Constants............................ 90\n    12.2 Configurable Parameters............................ 91\n13. End Notes............................................... 93\n14. Security Considerations................................. 94\n15. References.............................................. 94\n16. Author's Address........................................ 94\n17. Full Copyright Statement................................ 95",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This memo is being distributed to members of the Internet community in order to solicit reactions to the proposals contained herein. While the specification discussed here may not be directly relevant to the research problems of the Internet, it may be of interest to researchers and implementers.",
      "ja": "このメモは、ここに含まれる提案に対する反応を求めるために、インターネットコミュニティのメンバーに配布されています。ここで説明する仕様は、インターネットの研究問題に直接関連していないかもしれませんが、研究者と実装者にとって興味深いものかもしれません。"
    },
    {
      "indent": 0,
      "text": "1.1 Acknowledgments",
      "section_title": true,
      "ja": "1.1 謝辞"
    },
    {
      "indent": 3,
      "text": "VLSP is derived from the OSPF link-state routing protocol described in [RFC2328], written by John Moy, formerly of Proteon, Inc., Westborough, Massachusetts. Much of the current memo has been drawn from [RFC2328]. Therefore, this author wishes to acknowledge the contribution Mr. Moy has (unknowingly) made to this document.",
      "ja": "VLSPは、かつてマサチューセッツ州ウェストボローのプロテオン社のジョン・モイによって書かれた[RFC2328]に記載されているOSPFリンク状態のルーティングプロトコルから派生しています。現在のメモの多くは[RFC2328]から描かれています。したがって、この著者は、モイ氏がこの文書に（知らないうちに）貢献したことを認めたいと考えています。"
    },
    {
      "indent": 0,
      "text": "1.2 Data Conventions",
      "section_title": true,
      "ja": "1.2 データ規則"
    },
    {
      "indent": 3,
      "text": "The methods used in this memo to describe and picture data adhere to the standards of Internet Protocol documentation [RFC1700]. In particular:",
      "ja": "このメモで使用されている方法は、データデータを記述し、絵のデータをインターネットプロトコルドキュメント[RFC1700]の標準に準拠しています。特に："
    },
    {
      "indent": 6,
      "text": "The convention in the documentation of Internet Protocols is to express numbers in decimal and to picture data in \"big-endian\" order. That is, fields are described left to right, with the most significant octet on the left and the least significant octet on the right. The order of transmission of the header and data described in this document is resolved to the octet level. Whenever a diagram shows a group of octets, the order of transmission of those octets is the normal order in which they are read in English.",
      "ja": "インターネットプロトコルのドキュメントの条約は、小数点で数字を表現し、「ビッグエンディアン」順序でデータを描くことです。つまり、フィールドは左から右に記述され、左側で最も重要なオクテットが、右側が最も重要でないオクテットが記載されています。このドキュメントで説明されているヘッダーとデータの送信の順序は、Octetレベルに解決されます。図がオクテットのグループを示すときはいつでも、それらのオクテットの伝送の順序は、それらが英語で読まれる通常の順序です。"
    },
    {
      "indent": 6,
      "text": "Whenever an octet represents a numeric quantity the left most bit in the diagram is the high order or most significant bit. That is, the bit labeled 0 is the most significant bit.",
      "ja": "オクテットが数値を表すときはいつでも、図の最も左の左は高次または最も重要なビットです。つまり、0とラベル付けされたビットは最も重要なビットです。"
    },
    {
      "indent": 6,
      "text": "Similarly, whenever a multi-octet field represents a numeric quantity the left most bit of the whole field is the most significant bit. When a multi-octet quantity is transmitted the most significant octet is transmitted first.",
      "ja": "同様に、マルチオクテットフィールドが数値を表す場合はいつでも、フィールド全体のほとんどのビットが最も重要なビットです。マルチオクテット数量が送信されると、最も重要なオクテットが最初に送信されます。"
    },
    {
      "indent": 0,
      "text": "1.3 ISMP Overview",
      "section_title": true,
      "ja": "1.3 ISMPの概要"
    },
    {
      "indent": 3,
      "text": "The InterSwitch Message Protocol (ISMP) provides a consistent method of encapsulating and transmitting control messages exchanged between switches running Cabletron's SecureFast VLAN (SFVLAN) product, as described in [IDsfvlan]. ISMP provides the following services:",
      "ja": "Interswitchメッセージプロトコル（ISMP）は、[idsfvlan]に記載されているように、CabletronのSecurefast VLAN（SFVLAN）製品を実行するスイッチ間で交換される制御メッセージをカプセル化および送信する一貫した方法を提供します。ISMPは次のサービスを提供します。"
    },
    {
      "indent": 3,
      "text": "o Topology services. Each switch maintains a distributed topology of the switch fabric by exchanging the following interswitch control messages with other switches:",
      "ja": "o トポロジーサービス。各スイッチは、以下のスイッチ間コントロールメッセージを他のスイッチと交換することにより、スイッチファブリックの分散トポロジを維持します。"
    },
    {
      "indent": 3,
      "text": "o Interswitch Keepalive messages are sent by each switch to announce its existence to its neighboring switches and to establish the topology of the switch fabric. (Interswitch Keepalive messages are exchanged in accordance with Cabletron's VlanHello protocol, described in [IDhello].)",
      "ja": "o Interswitch KeepAliveメッセージは、各スイッチによって送信され、その存在を隣接するスイッチに発表し、スイッチファブリックのトポロジを確立します。（Interswitch KeepAliveメッセージは、[idhello]に記載されているCabletronのVlanhelloプロトコルに従って交換されます。）"
    },
    {
      "indent": 3,
      "text": "o Interswitch Spanning Tree BPDU messages and Interswitch Remote Blocking messages are used to determine and maintain a loop-free flood path between all network switches in the fabric. This flood",
      "ja": "o インタースイッチスパニングツリーBPDUメッセージとインタースイッチリモートブロッキングメッセージは、ファブリックのすべてのネットワークスイッチ間のループフリーフラッドパスを決定および維持するために使用されます。この洪水"
    },
    {
      "indent": 6,
      "text": "path is used for all undirected interswitch messages -- that is, messages that are (potentially) sent to all switches in the switch fabric.",
      "ja": "パスは、すべての無向switchインタースイッチメッセージ、つまりスイッチファブリックのすべてのスイッチに（潜在的に）送信されるメッセージに使用されます。"
    },
    {
      "indent": 3,
      "text": "o Interswitch Link State messages (VLS protocol) are used to determine and maintain a fully connected mesh topology graph of the switch fabric. Call-originating switches use the topology graph to determine the path over which to route a call connection.",
      "ja": "o Interswitchリンク状態メッセージ（VLSプロトコル）は、スイッチファブリックの完全に接続されたメッシュトポロジグラフを決定および維持するために使用されます。コールオリジースイッチは、トポロジグラフを使用して、コール接続をルーティングするパスを決定します。"
    },
    {
      "indent": 3,
      "text": "o Address resolution services. Interswitch Resolve messages are used to resolve a packet destination address when the packet source and destination pair does not match a known connection. Interswitch New User messages are used to provide end-station address mobility between switches.",
      "ja": "o アドレス解決サービス。Interswitch Resolveメッセージは、パケットソースと宛先ペアが既知の接続と一致しない場合に、パケット宛先アドレスを解決するために使用されます。インタースイッチ新しいユーザーメッセージは、スイッチ間でエンドステーションアドレスのモビリティを提供するために使用されます。"
    },
    {
      "indent": 3,
      "text": "o Tag-based flooding. A tag-based broadcast method is used to restrict the broadcast of unresolved packets to only those ports within the fabric that belong to the same VLAN as the source.",
      "ja": "o タグベースの洪水。タグベースのブロードキャスト方法を使用して、ソースと同じVLANに属するファブリック内のポートのみに未解決のパケットのブロードキャストを制限します。"
    },
    {
      "indent": 3,
      "text": "o Call tapping services. Interswitch Tap messages are used to monitor traffic moving between two end stations. Traffic can be monitored in one or both directions along the connection path.",
      "ja": "o タッピングサービスに電話してください。Switch Interswitchタップメッセージは、2つのエンドステーション間を移動するトラフィックを監視するために使用されます。接続パスに沿った片方または両方の方向でトラフィックを監視できます。"
    },
    {
      "indent": 3,
      "text": "Note: Previous versions of VLSP treated all links as if they were broadcast (multi-access). Thus, if VLSP determines that a neighbor switch is running an older version of the protocol software (see Section 6.1), it will change the interface type to broadcast and begin exchanging Hello packets with the single neighbor switch.",
      "ja": "注：VLSPの以前のバージョンは、すべてのリンクを放送しているかのように扱いました（マルチアクセス）。したがって、VLSPが近隣のスイッチがプロトコルソフトウェアの古いバージョンを実行していると判断した場合（セクション6.1を参照）、インターフェイスタイプを変更してブロードキャストを変更し、単一のNeighborスイッチでハローパケットの交換を開始します。"
    },
    {
      "indent": 0,
      "text": "2. VLS Protocol Overview",
      "section_title": true,
      "ja": "2. VLSプロトコルの概要"
    },
    {
      "indent": 3,
      "text": "VLSP is a dynamic routing protocol. It quickly detects topological changes in the switch fabric (such as, switch interface failures) and calculates new loop-free routes after a period of convergence. This period of convergence is short and involves a minimum of routing traffic.",
      "ja": "VLSPは動的ルーティングプロトコルです。スイッチファブリック（スイッチインターフェイス障害など）のトポロジカルな変化を迅速に検出し、収束期間後に新しいループフリールートを計算します。この収束期間は短く、最小限のルーティングトラフィックが含まれます。"
    },
    {
      "indent": 3,
      "text": "All switches in the fabric run the same algorithm and maintain identical databases describing the switch fabric topology. This database contains each switch's local state, including its usable interfaces and reachable neighbors. Each switch distributes its local state throughout the switch fabric by flooding. From the topological database, each switch constructs a set of best path trees (using itself as the root) that specify routes to all other switches in the fabric.",
      "ja": "ファブリック内のすべてのスイッチは同じアルゴリズムを実行し、スイッチファブリックトポロジを説明する同一のデータベースを維持します。このデータベースには、使用可能なインターフェイスや到達可能な隣人など、各スイッチのローカル状態が含まれています。各スイッチは、洪水によりスイッチファブリック全体にローカル状態を分散します。トポロジーデータベースから、各スイッチは、ファブリック内の他のすべてのスイッチへのルートを指定する最高のパスツリー（ルートとして）のセットを構築します。"
    },
    {
      "indent": 0,
      "text": "2.1 Definitions of Commonly Used Terms",
      "section_title": true,
      "ja": "2.1 一般的に使用される用語の定義"
    },
    {
      "indent": 3,
      "text": "This section contains a collection of definitions for terms that have a specific meaning to the protocol and that are used throughout the text.",
      "ja": "このセクションには、プロトコルに特定の意味を持ち、テキスト全体で使用される用語の定義のコレクションが含まれています。"
    },
    {
      "indent": 3,
      "text": "Switch ID",
      "ja": "IDを切り替えます"
    },
    {
      "indent": 6,
      "text": "A 10-octet value that uniquely identifies the switch within the switch fabric. The value consists of the 6-octet base MAC address of the switch, followed by 4 octets of zeroes.",
      "ja": "スイッチファブリック内のスイッチを一意に識別する10オクテット値。この値は、スイッチの6オクテットのベースMACアドレスで構成され、その後4オクテットのゼロが続きます。"
    },
    {
      "indent": 3,
      "text": "Network link",
      "ja": "ネットワークリンク"
    },
    {
      "indent": 6,
      "text": "The physical connection between two switches. A link is associated with a switch interface.",
      "ja": "2つのスイッチ間の物理的な接続。リンクはスイッチインターフェイスに関連付けられています。"
    },
    {
      "indent": 6,
      "text": "There are two physical types of network links supported by VLSP:",
      "ja": "VLSPでサポートされているネットワークリンクには、2つの物理的タイプがあります。"
    },
    {
      "indent": 6,
      "text": "o Point-to-point links that join a single pair of switches. A serial line is an example of a point-to-point network link.",
      "ja": "o 単一のペアのスイッチを結合するポイントツーポイントリンク。シリアルラインは、ポイントツーポイントネットワークリンクの例です。"
    },
    {
      "indent": 6,
      "text": "o Multi-access broadcast links that support the attachment of multiple switches, along with the capability to address a single message to all the attached switches. An attached ethernet is an example of a multi-access broadcast network link.",
      "ja": "o 複数のスイッチの接続をサポートするマルチアクセスブロードキャストリンクと、すべての添付スイッチへの単一のメッセージに対処する機能。添付のイーサネットは、マルチアクセスブロードキャストネットワークリンクの例です。"
    },
    {
      "indent": 9,
      "text": "A single topology can contain both types of links. At startup, all links are assumed to be point-to-point. A link is determined to be multi-access when more than one neighboring switch is discovered on the link.",
      "ja": "単一のトポロジには、両方のタイプのリンクを含めることができます。スタートアップでは、すべてのリンクがポイントツーポイントであると想定されています。リンクで複数の隣接スイッチが発見された場合、リンクはマルチアクセスであると判断されます。"
    },
    {
      "indent": 3,
      "text": "Interface",
      "ja": "インターフェース"
    },
    {
      "indent": 6,
      "text": "The port over which a switch accesses one of its links. Interfaces are identified by their interface ID, a 10-octet value consisting of the 6-octet base MAC address of the switch, followed by the 4-octet local port number of the interface.",
      "ja": "スイッチがリンクの1つにアクセスするポート。インターフェイスは、インターフェイスIDによって識別されます。これは、スイッチの6オクテットベースMACアドレスで構成される10オクテット値、その後、インターフェイスの4オクテットローカルポート番号です。"
    },
    {
      "indent": 3,
      "text": "Neighboring switches",
      "ja": "隣接するスイッチ"
    },
    {
      "indent": 6,
      "text": "Two switches attached to a common link.",
      "ja": "共通リンクに接続された2つのスイッチ。"
    },
    {
      "indent": 3,
      "text": "Adjacency",
      "ja": "隣接"
    },
    {
      "indent": 6,
      "text": "A relationship formed between selected neighboring switches for the purpose of exchanging routing information. Not every pair of neighboring switches become adjacent.",
      "ja": "ルーティング情報を交換する目的で、選択された隣接スイッチの間に形成された関係。隣接するスイッチのすべてが隣接するわけではありません。"
    },
    {
      "indent": 3,
      "text": "Link state advertisement",
      "ja": "状態広告をリンクします"
    },
    {
      "indent": 6,
      "text": "Describes the local state of a switch or a link. Each link state advertisement is flooded throughout the switch fabric. The collected link state advertisements of all switches and links form the protocol's topological database.",
      "ja": "スイッチまたはリンクのローカル状態について説明します。各リンク状態広告は、スイッチファブリック全体にあふれています。すべてのスイッチとリンクの収集されたリンク状態広告は、プロトコルのトポロジデータベースを形成します。"
    },
    {
      "indent": 3,
      "text": "Designated switch",
      "ja": "指定されたスイッチ"
    },
    {
      "indent": 6,
      "text": "Each multi-access network link has a designated switch. The designated switch generates a link state advertisement for the link and has other special responsibilities in the running of the protocol.",
      "ja": "各マルチアクセスネットワークリンクには、指定されたスイッチがあります。指定されたスイッチは、リンクのリンク状態広告を生成し、プロトコルの実行に他の特別な責任があります。"
    },
    {
      "indent": 6,
      "text": "The use of a designated switch permits a reduction in the number of adjacencies required on multi-access links. This in turn reduces the amount of routing protocol traffic and the size of the topological database.",
      "ja": "指定されたスイッチを使用することで、マルチアクセスリンクで必要な隣接数の数を減らすことができます。これにより、ルーティングプロトコルトラフィックの量とトポロジカルデータベースのサイズが削減されます。"
    },
    {
      "indent": 6,
      "text": "The designated switch is selected during the discovery process. A designated switch is not selected for a point-to-point network link.",
      "ja": "指定されたスイッチは、発見プロセス中に選択されます。指定されたスイッチは、ポイントツーポイントネットワークリンク用に選択されていません。"
    },
    {
      "indent": 3,
      "text": "Backup designated switch",
      "ja": "バックアップ指定スイッチ"
    },
    {
      "indent": 6,
      "text": "Each multi-access network link has a backup designated switch. The backup designated switch maintains adjacencies with the same switches on the link as the designated switch. This optimizes the failover time when the backup designated switch must take over for the (failed) designated switch.",
      "ja": "各マルチアクセスネットワークリンクには、バックアップ指定スイッチがあります。バックアップ指定されたスイッチは、指定されたスイッチと同じスイッチがリンク上のスイッチを持つ隣接を維持します。これにより、バックアップ指定スイッチが（失敗した）指定されたスイッチを引き継ぐ必要がある場合、フェールオーバー時間を最適化します。"
    },
    {
      "indent": 6,
      "text": "The backup designated switch is selected during the Discovery process. A backup designated switch is not selected for a point-to-point network link.",
      "ja": "バックアップ指定スイッチは、発見プロセス中に選択されます。指定されたスイッチは、ポイントツーポイントネットワークリンク用に選択されていません。"
    },
    {
      "indent": 0,
      "text": "2.2 Differences Between VLSP and OSPF",
      "section_title": true,
      "ja": "2.2 VLSPとOSPFの違い"
    },
    {
      "indent": 3,
      "text": "The VLS protocol is derived from the OSPF link-state routing protocol described in [RFC2328].",
      "ja": "VLSプロトコルは、[RFC2328]で説明されているOSPFリンク状態ルーティングプロトコルから導出されます。"
    },
    {
      "indent": 0,
      "text": "2.2.1 Operation at the Physical Layer",
      "section_title": true,
      "ja": "2.2.1 物理層での操作"
    },
    {
      "indent": 3,
      "text": "The primary differences between the VLS and OSPF protocols stem from the fact that OSPF runs over the IP layer, while VLSP runs at the physical MAC layer. This difference has the following repercussions:",
      "ja": "VLSとOSPFプロトコルの主な違いは、OSPFがIPレイヤーを介して実行され、VLSPが物理MACレイヤーで実行されるという事実に起因しています。この違いには、次の影響があります。"
    },
    {
      "indent": 3,
      "text": "o VLSP does not support features (such as fragmentation) that are typically provided by network layer service providers.",
      "ja": "o VLSPは、通常、ネットワークレイヤーサービスプロバイダーによって提供される機能（断片化など）をサポートしていません。"
    },
    {
      "indent": 3,
      "text": "o Due to the unrelated nature of MAC address assignments, VLSP provides no summarization of the address space (such as, classical IP subnet information) or level 2 routing (such as,",
      "ja": "o MACアドレスの割り当ての無関係な性質により、VLSPはアドレス空間（古典的なIPサブネット情報など）またはレベル2ルーティングの要約を提供しません（、"
    },
    {
      "indent": 6,
      "text": "IS-IS Phase V DECnet). Thus, VLSP does not support grouping switches into areas. All switches exist in a single area. Since a single domain exists within any switch fabric, there is no need for VLSP to provide interdomain reachability.",
      "ja": "IS-ISフェーズv deCnet）。したがって、VLSPは、スイッチのグループ化がエリアへのグループ化をサポートしていません。すべてのスイッチは単一の領域に存在します。任意のスイッチファブリック内に単一のドメインが存在するため、VLSPがドメイン間の到達可能性を提供する必要はありません。"
    },
    {
      "indent": 3,
      "text": "o As mentioned in Section 10.1.1, ISMP uses a single well-known multicast address for all packets. However, parts of the VLS protocol (as derived from OSPF) are dependent on certain network layer addresses -- in particular, the AllSPFSwitches and AllDSwitches multicast addresses that drive the distribution of link state advertisements throughout the switch fabric. In order to facilitate the implementation of the protocol at the physical MAC layer, network layer address information is encapsulated in the protocol packets (see Section 10.3). This information is unbundled and packets are then processed as if they had been sent or received on that multicast address.",
      "ja": "o セクション10.1.1で述べたように、ISMPはすべてのパケットに1つのよく知られているマルチキャストアドレスを使用しています。ただし、VLSプロトコルの一部（OSPFから派生）は、特定のネットワークレイヤーアドレス、特にSwitch Fabric全体にリンク状態広告の分布を駆動するAllSpfSwitchesとAlldswitchesマルチキャストアドレスに依存しています。物理MACレイヤーでのプロトコルの実装を容易にするために、ネットワークレイヤーアドレス情報がプロトコルパケットにカプセル化されています（セクション10.3を参照）。この情報はバンドルされておらず、パケットはそのマルチキャストアドレスで送信または受信されたかのように処理されます。"
    },
    {
      "indent": 0,
      "text": "2.2.2 All Links Treated as Point-to-Point",
      "section_title": true,
      "ja": "2.2.2 すべてのリンクはポイントツーポイントとして扱われます"
    },
    {
      "indent": 3,
      "text": "When the switch first comes on line, VLSP assumes all network links are point-to-point and no more than one neighboring switch will be discovered on any one port. Therefore, at startup, VLSP does not send its own Hello packets over its network ports, but instead, relies on the VlanHello protocol [IDhello] for the discovery of its neighbor switches. If a second neighbor is detected on a link, the link is then deemed multi-access and the interface type is changed to broadcast. At that point, VLSP exchanges its own Hello packets with the switches on the link in order to select a designated switch and designated backup switch for the link.",
      "ja": "スイッチが最初にオンラインになると、VLSPはすべてのネットワークリンクがポイントツーポイントであり、1つのポートで1つの隣接スイッチが発見されると仮定します。したがって、スタートアップでは、VLSPはネットワークポート上に独自のハローパケットを送信するのではなく、隣接スイッチの発見のためにVlanhelloプロトコル[Idhello]に依存しています。2番目の隣人がリンクで検出された場合、リンクはマルチアクセスと見なされ、インターフェイスタイプはブロードキャストに変更されます。その時点で、VLSPは、リンクのスイッチとリンクの指定されたバックアップスイッチを選択するために、リンクのスイッチと独自のハローパケットを交換します。"
    },
    {
      "indent": 3,
      "text": "This method eliminates unnecessary duplication of message traffic and processing, thereby increasing the overall efficiency of the switch fabric.",
      "ja": "この方法により、メッセージトラフィックと処理の不必要な複製が排除され、スイッチファブリックの全体的な効率が向上します。"
    },
    {
      "indent": 3,
      "text": "Note: Previous versions of VLSP treated all links as if they were broadcast (multi-access). Thus, if VLSP determines that a neighbor switch is running an older version of the protocol software (see Section 6.1), it will change the interface type to broadcast and begin exchanging Hello packets with the single neighbor switch.",
      "ja": "注：VLSPの以前のバージョンは、すべてのリンクを放送しているかのように扱いました（マルチアクセス）。したがって、VLSPが近隣のスイッチがプロトコルソフトウェアの古いバージョンを実行していると判断した場合（セクション6.1を参照）、インターフェイスタイプを変更してブロードキャストを変更し、単一のNeighborスイッチでハローパケットの交換を開始します。"
    },
    {
      "indent": 0,
      "text": "2.2.3 Routing Path Information",
      "section_title": true,
      "ja": "2.2.3 ルーティングパス情報"
    },
    {
      "indent": 3,
      "text": "Instead of providing the next hop to a destination, VLSP calculates and maintains complete end-to-end path information. On request, a list of individual port identifiers is generated describing a complete path from the source switch to the destination switch. If multiple equal-cost routes exist to a destination switch, up to three paths are calculated and returned.",
      "ja": "次のホップを宛先に提供する代わりに、VLSPは完全なエンドツーエンドパス情報を計算および維持します。リクエストに応じて、個々のポート識別子のリストが生成され、ソーススイッチから宛先スイッチまでの完全なパスを説明します。宛先スイッチに複数の等しいコストルートが存在する場合、最大3つのパスが計算されて返されます。"
    },
    {
      "indent": 0,
      "text": "2.2.4 Configurable Parameters",
      "section_title": true,
      "ja": "2.2.4 構成可能なパラメーター"
    },
    {
      "indent": 3,
      "text": "OSPF supports (and requires) configurable parameters. In fact, even the default OSPF configuration requires that IP address assignments be specified. On the other hand, no configuration information is ever required for the VLS protocol. Switches are uniquely identified by their base MAC addresses and ports are uniquely identified by the base MAC address of the switch and a port number.",
      "ja": "OSPFは、構成可能なパラメーターをサポート（および必要とします）。実際、デフォルトのOSPF構成でさえ、IPアドレスの割り当てを指定する必要があります。一方、VLSプロトコルには構成情報は必要ありません。スイッチはベースMACアドレスによって一意に識別され、ポートはスイッチのベースMACアドレスとポート番号によって一意に識別されます。"
    },
    {
      "indent": 3,
      "text": "While a developer is free to implement configurable parameters for the VLS protocol, the current version of VLSP supports configurable path metrics only. Note that this has the following repercussions:",
      "ja": "開発者はVLSプロトコルの構成可能なパラメーターを無料で実装できますが、VLSPの現在のバージョンは構成可能なパスメトリックのみをサポートします。これには次の影響があることに注意してください。"
    },
    {
      "indent": 3,
      "text": "o All switches are assigned a switch priority of 1. This forces the selection of the designated switch to be based solely on base MAC address.",
      "ja": "o すべてのスイッチには、1のスイッチの優先度が割り当てられます。これにより、指定されたスイッチの選択は、ベースMACアドレスのみに基づいています。"
    },
    {
      "indent": 3,
      "text": "o Authentication is not supported.",
      "ja": "o 認証はサポートされていません。"
    },
    {
      "indent": 0,
      "text": "2.2.5 Features Not supported",
      "section_title": true,
      "ja": "2.2.5 サポートされていない機能"
    },
    {
      "indent": 3,
      "text": "In addition to those features mentioned in the previous sections, the following OSPF features are not supported by the current version of VLSP:",
      "ja": "前のセクションに記載されているこれらの機能に加えて、次のOSPF機能は、現在のVLSPのバージョンではサポートされていません。"
    },
    {
      "indent": 3,
      "text": "o Periodic refresh of link state advertisements. (This optimizes performance by eliminating unnecessary traffic between the switches.)",
      "ja": "o リンク状態広告の定期的な更新。（これにより、スイッチ間の不必要なトラフィックを排除することにより、パフォーマンスが最適化されます。）"
    },
    {
      "indent": 3,
      "text": "o Routing based on non-zero type of service (TOS).",
      "ja": "o ゼロ以外のタイプのサービス（TOS）に基づくルーティング。"
    },
    {
      "indent": 3,
      "text": "o Use of external routing information for destinations outside the switch fabric.",
      "ja": "o スイッチファブリックの外側の目的地の外部ルーティング情報の使用。"
    },
    {
      "indent": 0,
      "text": "2.3 Functional Summary",
      "section_title": true,
      "ja": "2.3 機能的要約"
    },
    {
      "indent": 3,
      "text": "There are essentially four operational stages of the VLS protocol.",
      "ja": "基本的にVLSプロトコルには4つの運用段階があります。"
    },
    {
      "indent": 3,
      "text": "o Discovery Process The discovery process involves two steps:",
      "ja": "o 発見プロセス発見プロセスには2つのステップが含まれます。"
    },
    {
      "indent": 6,
      "text": "o Neighboring switches are detected by the VlanHello protocol [IDhello] which then notifies VLSP of the neighbor.",
      "ja": "o 隣接するスイッチは、Vlanhelloプロトコル[Idhello]によって検出され、隣接のVLSPに通知されます。"
    },
    {
      "indent": 6,
      "text": "o If more than one neighbor switch is detected on a single port, the link is determined to be multi-access. VLSP then sends its own Hello packets over the link in order to discover the full set of neighbors on the link and select a designated switch and designated backup switch for the link. Note that this selection process is unnecessary on point-to-point links.",
      "ja": "o 単一のポートで複数の近隣スイッチが検出された場合、リンクはマルチアクセスであると判断されます。次に、VLSPはリンク上に独自のハローパケットをリンク上に送信し、リンクで近隣の完全なセットを発見し、リンクの指定されたスイッチと指定されたバックアップスイッチを選択します。この選択プロセスは、ポイントツーポイントリンクでは不要であることに注意してください。"
    },
    {
      "indent": 6,
      "text": "The discovery process is described in more detail in Section 6.",
      "ja": "発見プロセスについては、セクション6で詳しく説明します。"
    },
    {
      "indent": 3,
      "text": "o Synchronizing the Databases",
      "ja": "o データベースの同期"
    },
    {
      "indent": 6,
      "text": "Adjacencies are used to simplify and speed up the process of synchronizing the topological database (also known as the link state database) maintained by each switch in the fabric. Each switch is only required to synchronize its database with those neighbors to which it is adjacent. This reduces the amount of routing protocol traffic across the fabric, particularly for multi-access links with multiple switches.",
      "ja": "隣接は、ファブリックの各スイッチによって維持されるトポロジーデータベース（リンク状態データベースとも呼ばれる）を同期するプロセスを簡素化および高速化するために使用されます。各スイッチは、データベースを隣接する近隣のデータベースと同期するためにのみ必要です。これにより、特に複数のスイッチを使用したマルチアクセスリンクの場合、ファブリック全体のルーティングプロトコルトラフィックの量が減少します。"
    },
    {
      "indent": 6,
      "text": "The process of synchronizing the databases is described in more detail in Section 7.",
      "ja": "データベースを同期するプロセスについては、セクション7で詳しく説明します。"
    },
    {
      "indent": 3,
      "text": "o Maintaining the Databases",
      "ja": "o データベースの維持"
    },
    {
      "indent": 6,
      "text": "Each switch advertises its state (also known as its link state) any time its link state changes. Link state advertisements are distributed throughout the switch fabric using a reliable flooding algorithm that ensures that all switches in the fabric are notified of any link state changes.",
      "ja": "各スイッチは、リンク状態が変更されるたびに、状態（リンク状態とも呼ばれます）を宣伝します。リンク状態広告は、信頼できるフラッディングアルゴリズムを使用してスイッチファブリック全体に配布され、ファブリックのすべてのスイッチにリンク状態の変更が通知されるようにします。"
    },
    {
      "indent": 6,
      "text": "The process of maintaining the databases is described in more detail in Section 8.",
      "ja": "データベースを維持するプロセスについては、セクション8で詳しく説明します。"
    },
    {
      "indent": 3,
      "text": "o Calculating the Best Paths",
      "ja": "o 最適なパスを計算します"
    },
    {
      "indent": 6,
      "text": "The link state database consists of the collection of link state advertisements received from each switch. Each switch uses its link state database to calculate a set of best paths, using itself as root, to all other switches in the fabric.",
      "ja": "リンク状態データベースは、各スイッチから受信したリンク状態広告のコレクションで構成されています。各スイッチは、リンク状態データベースを使用して、生地内の他のすべてのスイッチに対して、ルートとして自分自身を使用して、最適なパスのセットを計算します。"
    },
    {
      "indent": 6,
      "text": "The process of recalculating the set of best paths is described in more detail in Section 9.",
      "ja": "最良のパスのセットを再計算するプロセスについては、セクション9で詳しく説明します。"
    },
    {
      "indent": 0,
      "text": "2.4 Protocol Packets",
      "section_title": true,
      "ja": "2.4 プロトコルパケット"
    },
    {
      "indent": 3,
      "text": "In addition to the frame header and the ISMP packet header described in Section 10.1, all VLS protocol packets share a common protocol header, described in Section 10.4.",
      "ja": "セクション10.1で説明したフレームヘッダーとISMPパケットヘッダーに加えて、すべてのVLSプロトコルパケットは、セクション10.4で説明されている共通のプロトコルヘッダーを共有します。"
    },
    {
      "indent": 3,
      "text": "The VLSP packet types are listed below in Table 1. Their formats are described in Section 10.6.",
      "ja": "VLSPパケットタイプは、表1の以下にリストされています。その形式については、セクション10.6で説明しています。"
    },
    {
      "indent": 6,
      "text": "Type Packet Name Protocol Function",
      "ja": "タイプパケット名プロトコル関数"
    },
    {
      "indent": 6,
      "text": "1 Hello Select DS and Backup DS 2 Database Description Summarize database contents 3 Link State Request Database download 4 Link State Update Database update 5 Link State Ack Flooding acknowledgment",
      "ja": "1 Hello Select ds and Backup DS 2データベース説明データベースのコンテンツの要約3リンク状態リクエストデータベース4リンク状態更新データベース5リンク状態ACKフラッディング承認"
    },
    {
      "indent": 18,
      "text": "Table 1: VLSP Packet Types",
      "ja": "表1：VLSPパケットタイプ"
    },
    {
      "indent": 3,
      "text": "The Hello packets are used to select the designated switch and the backup designated switch on multi-access links. The Database Description and Link State Request packets are used to form adjacencies. Link State Update and Link State Acknowledgment packets are used to update the topological database.",
      "ja": "ハローパケットは、指定されたスイッチとマルチアクセスリンクのバックアップ指定スイッチを選択するために使用されます。データベースの説明とリンク状態要求パケットは、隣接を形成するために使用されます。リンク状態更新およびリンク状態確認パケットは、トポロジーデータベースを更新するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Each Link State Update packet carries a set of link state advertisements. A single Link State Update packet may contain the link state advertisements of several switches. There are two different types of link state advertisement, as shown below in Table 2.",
      "ja": "各リンク状態更新パケットには、リンク状態広告のセットが搭載されています。単一のリンク状態更新パケットには、いくつかのスイッチのリンク状態広告が含まれる場合があります。表2に示すように、リンク状態広告には2つの異なるタイプがあります。"
    },
    {
      "indent": 9,
      "text": "LS Advertisement Advertisement Description Type Name",
      "ja": "LS広告広告説明タイプ名"
    },
    {
      "indent": 9,
      "text": "1 Switch link Originated by all switches. This advertisements advertisement describes the collected states of the switch's interfaces.",
      "ja": "1つのスイッチリンクは、すべてのスイッチから発信されます。この広告広告は、スイッチのインターフェイスの収集された状態について説明しています。"
    },
    {
      "indent": 9,
      "text": "2 Network link Originated by the designated switch. advertisements This advertisement contains the list of switches connected to the network link.",
      "ja": "2ネットワークリンクは、指定されたスイッチによって発生しました。広告この広告には、ネットワークリンクに接続されたスイッチのリストが含まれています。"
    },
    {
      "indent": 18,
      "text": "Table 2: VLSP Link State Advertisements",
      "ja": "表2：VLSPリンク状態広告"
    },
    {
      "indent": 0,
      "text": "2.5 Protocol Data Structures",
      "section_title": true,
      "ja": "2.5 プロトコルデータ構造"
    },
    {
      "indent": 3,
      "text": "The VLS protocol is described in this specification in terms of its operation on various protocol data structures. Table 3 lists the primary VLSP data structures, along with the section in which they are described in detail.",
      "ja": "VLSプロトコルは、さまざまなプロトコルデータ構造での操作の観点からこの仕様で説明されています。表3に、プライマリVLSPデータ構造と、それらが詳細に説明されているセクションを示します。"
    },
    {
      "indent": 9,
      "text": "Structure Name Description",
      "ja": "構造名の説明"
    },
    {
      "indent": 9,
      "text": "Interface Data Structure              Section 3\nNeighbor Data Structure               Section 4\nArea Data Structure                   Section 5",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Table 3: VLSP Data Structures",
      "ja": "表3：VLSPデータ構造"
    },
    {
      "indent": 0,
      "text": "2.6 Basic Implementation Requirements",
      "section_title": true,
      "ja": "2.6 基本的な実装要件"
    },
    {
      "indent": 3,
      "text": "An implementation of the VLS protocol requires the following pieces of system support:",
      "ja": "VLSプロトコルの実装には、次のシステムサポートが必要です。"
    },
    {
      "indent": 3,
      "text": "Timers",
      "ja": "タイマー"
    },
    {
      "indent": 6,
      "text": "Two types of timer are required. The first type, known as a one-shot timer, expires once and triggers an event. The second type, known as an interval timer, expires at preset intervals. Interval timers are used to trigger events at periodic intervals. The granularity of both types of timers is one second.",
      "ja": "2種類のタイマーが必要です。ワンショットタイマーと呼ばれる最初のタイプは、1回有効期限が切れ、イベントをトリガーします。インターバルタイマーと呼ばれる2番目のタイプは、プリセット間隔で有効期限が切れます。インターバルタイマーは、周期間隔でイベントをトリガーするために使用されます。両方のタイプのタイマーの粒度は1秒です。"
    },
    {
      "indent": 6,
      "text": "Interval timers should be implemented in such a way as to avoid drift. In some switch implementations, packet processing can affect timer execution. For example, on a multi-access link with multiple switches, regular broadcasts can lead to undesirable synchronization of routing packets unless the interval timers have been implemented to avoid drift. If it is not possible to implement drift-free timers, small random amounts of time should be added to or subtracted from the timer interval at each firing.",
      "ja": "インターバルタイマーは、ドリフトを避けるような方法で実装する必要があります。一部のスイッチ実装では、パケット処理はタイマーの実行に影響を与える可能性があります。たとえば、複数のスイッチを使用したマルチアクセスリンクでは、定期的なブロードキャストは、ドリフトを避けるためにインターバルタイマーが実装されていない限り、ルーティングパケットの望ましくない同期につながる可能性があります。ドリフトフリータイマーを実装できない場合は、各発火時にタイマー間隔から少量のランダムな時間を追加または差し引く必要があります。"
    },
    {
      "indent": 3,
      "text": "List manipulation primitives",
      "ja": "操作のプリミティブをリストします"
    },
    {
      "indent": 6,
      "text": "Much of the functionality of VLSP is described here in terms of its operation on lists of link state advertisements. Any particular advertisement may be on many such lists. Implementation of VLSP must be able to manipulate these lists, adding and deleting constituent advertisements as necessary.",
      "ja": "VLSPの機能の多くは、Link State Advertisementsのリストでの操作の観点からここで説明されています。特定の広告は、そのような多くのリストにある場合があります。VLSPの実装は、これらのリストを操作し、必要に応じて構成員の広告を追加および削除できる必要があります。"
    },
    {
      "indent": 3,
      "text": "Tasking support",
      "ja": "タスクサポート"
    },
    {
      "indent": 6,
      "text": "Certain procedures described in this specification invoke other procedures. At times, these other procedures should be executed in-line -- that is, before the current procedure has finished. This is indicated in the text by instructions to \"execute\" a procedure. At other times, the other procedures are to be executed only when the current procedure has finished. This is indicated by instructions to \"schedule\" a task. Implementation of VLSP must provide these two types of tasking support.",
      "ja": "この仕様で説明されている特定の手順は、他の手順を呼び出します。時には、これらの他の手順をインラインで実行する必要があります。つまり、現在の手順が終了する前です。これは、手順を「実行」するための指示によってテキストに示されています。それ以外の場合、他の手順は、現在の手順が終了した場合にのみ実行されます。これは、タスクを「スケジュール」するための指示によって示されます。VLSPの実装は、これら2つのタイプのタスクサポートを提供する必要があります。"
    },
    {
      "indent": 0,
      "text": "2.7 Organization of the Remainder of This Document",
      "section_title": true,
      "ja": "2.7 この文書の残りの組織"
    },
    {
      "indent": 3,
      "text": "The remainder of this document is organized as follows:",
      "ja": "このドキュメントの残りの部分は、次のように整理されています。"
    },
    {
      "indent": 3,
      "text": "o Section 3 through Section 5 describe the primary data structures used by the protocol. Note that this specification is presented in terms of these data structures in order to make explanations more precise. Implementations of the protocol must support the functionality described, but need not use the exact data structures that appear in this specification.",
      "ja": "o セクション3からセクション5から、プロトコルで使用される主要なデータ構造について説明します。この仕様は、説明をより正確にするために、これらのデータ構造の観点から提示されていることに注意してください。プロトコルの実装は、説明されている機能をサポートする必要がありますが、この仕様に表示される正確なデータ構造を使用する必要はありません。"
    },
    {
      "indent": 3,
      "text": "o Section 6 through Section 9 describe the four operational stages of the protocol: the discovery process, synchronizing the databases, maintaining the databases, and calculating the set of best paths.",
      "ja": "o セクション6からセクション9から、プロトコルの4つの運用段階について説明します。発見プロセス、データベースの同期、データベースの維持、最良のパスのセットの計算について説明します。"
    },
    {
      "indent": 3,
      "text": "o Section 10 describes the processing of VLSP packets and presents detailed descriptions of their formats.",
      "ja": "o セクション10では、VLSPパケットの処理について説明し、その形式の詳細な説明を示します。"
    },
    {
      "indent": 3,
      "text": "o Section 11 presents detailed descriptions of link state advertisements.",
      "ja": "o セクション11では、リンク状態広告の詳細な説明を示します。"
    },
    {
      "indent": 3,
      "text": "o Section 12 summarizes the protocol parameters.",
      "ja": "o セクション12には、プロトコルパラメーターをまとめます。"
    },
    {
      "indent": 0,
      "text": "3. Interface Data Structure",
      "section_title": true,
      "ja": "3. インターフェイスデータ構造"
    },
    {
      "indent": 3,
      "text": "The port over which a switch accesses a network link is known as the link interface. Each switch maintains a separate interface data structure for each network link.",
      "ja": "スイッチがネットワークリンクにアクセスするポートは、リンクインターフェイスとして知られています。各スイッチは、各ネットワークリンクの個別のインターフェイスデータ構造を維持します。"
    },
    {
      "indent": 3,
      "text": "The following data items are associated with each interface:",
      "ja": "次のデータ項目は、各インターフェイスに関連付けられています。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "The type of network to which the interface is attached -- point-to-point or broadcast (multi-access). This data item is initialized to point-to-point when the interface becomes operational. If a second neighbor is detected on the link after the first neighbor has been discovered, the link interface type is changed to broadcast. The type remains as broadcast until the interface is declared down, at which time the type reverts to point-to-point.",
      "ja": "インターフェイスが添付されているネットワークのタイプ - ポイントツーポイントまたはブロードキャスト（マルチアクセス）。このデータ項目は、インターフェイスが動作可能になったときにポイントツーポイントに初期化されます。最初の隣人が発見された後にリンクで2番目の隣人が検出された場合、リンクインターフェイスタイプが変更されてブロードキャストされます。このタイプは、インターフェイスが宣言されるまで放送として残り、その時点でタイプがポイントツーポイントに戻ります。"
    },
    {
      "indent": 3,
      "text": "Note: Previous versions of VLSP treated all links as if they were multi-access. Thus, if VLSP determines that a neighbor switch is running an older version of the protocol software (see Section 6.1), it will change the interface type to broadcast.",
      "ja": "注：VLSPの以前のバージョンは、すべてのリンクをマルチアクセスであるかのように扱いました。したがって、VLSPが近隣スイッチがプロトコルソフトウェアの古いバージョンを実行していると判断した場合（セクション6.1を参照）、インターフェイスタイプをブロードキャストに変更します。"
    },
    {
      "indent": 3,
      "text": "State",
      "ja": "州"
    },
    {
      "indent": 6,
      "text": "The functional level of the interface. The state of the interface is included in all switch link advertisements generated by the switch, and is also used to determine whether full adjacencies are allowed on the interface. See Section 3.1 for a complete description of interface states.",
      "ja": "インターフェイスの機能レベル。インターフェイスの状態は、スイッチによって生成されたすべてのスイッチリンク広告に含まれており、インターフェイスで完全な隣接が許可されているかどうかを判断するためにも使用されます。インターフェイス状態の完全な説明については、セクション3.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "Interface identifier",
      "ja": "インターフェイス識別子"
    },
    {
      "indent": 6,
      "text": "A 10-octet value that uniquely identifies the interface. This value consists of the 6-octet base MAC address of the neighbor switch, followed by the 4-octet local port number of the interface.",
      "ja": "インターフェイスを一意に識別する10オクテット値。この値は、近隣スイッチの6オクテットベースMACアドレスで構成されており、その後、インターフェイスの4-OCTETローカルポート番号が続きます。"
    },
    {
      "indent": 3,
      "text": "Area ID",
      "ja": "エリアID"
    },
    {
      "indent": 6,
      "text": "A 4-octet value identifying the area. Since VLSP does not support multiple areas, the value here is always zero.",
      "ja": "エリアを識別する4-OCTET値。VLSPは複数の領域をサポートしていないため、ここでの値は常にゼロです。"
    },
    {
      "indent": 3,
      "text": "HelloInterval",
      "ja": "hello interval"
    },
    {
      "indent": 6,
      "text": "The interval, in seconds, at which the switch sends VLSP Hello packets over the interface. This parameter is not used on point-to-point links.",
      "ja": "間隔、秒単位で、スイッチがインターフェイス上にVLSPハローパケットを送信します。このパラメーターは、ポイントツーポイントリンクでは使用されません。"
    },
    {
      "indent": 3,
      "text": "SwitchDeadInterval",
      "ja": "SwitchDeadInterval"
    },
    {
      "indent": 6,
      "text": "The length of time, in seconds, that neighboring switches will wait before declaring the local switch dNeighboring switches",
      "ja": "時間の長さ、数秒で、その隣接するスイッチは、ローカルスイッチがスイッチを宣言する前に待機します"
    },
    {
      "indent": 6,
      "text": "A list of the neighboring switches attached to this network link. This list is created during the discovery process. Adjacencies are formed to one or more of these neighbors. The set of adjacent neighbors can be determined by examining the states of the neighboring switches as shown in their link state advertisements.",
      "ja": "このネットワークリンクに接続されている隣接スイッチのリスト。このリストは、発見プロセス中に作成されます。これらの隣人の1つ以上に隣接が形成されます。隣接する隣人のセットは、リンク状態広告に示すように、隣接するスイッチの状態を調べることで決定できます。"
    },
    {
      "indent": 3,
      "text": "Designated switch",
      "ja": "指定されたスイッチ"
    },
    {
      "indent": 6,
      "text": "The designated switch selected for the multi-access network link. (A designated switch is not selected for a point-to-point link.) This data item is initialized to zero when the switch comes on-line, indicating that no designated switch has been chosen for the link.",
      "ja": "マルチアクセスネットワークリンク用に選択された指定されたスイッチ。（指定されたスイッチは、ポイントツーポイントリンクで選択されていません。）このデータ項目は、スイッチがオンラインになったときにゼロに初期化され、リンクに指定されたスイッチが選択されていないことを示します。"
    },
    {
      "indent": 3,
      "text": "Backup designated switch",
      "ja": "バックアップ指定スイッチ"
    },
    {
      "indent": 6,
      "text": "The backup designated switch selected for the multi-access network link. (A backup designated switch is not selected for a point-to-point link.) This data item is initialized to zero when the switch comes on-line, indicating that no backup designated switch has been chosen for the link.",
      "ja": "マルチアクセスネットワークリンク用に選択されたバックアップ指定スイッチ。（バックアップ指定スイッチは、ポイントツーポイントリンク用に選択されていません。）このデータ項目は、スイッチがオンラインになったときにゼロに初期化され、リンクにバックアップ指定スイッチが選択されていないことを示します。"
    },
    {
      "indent": 3,
      "text": "Interface output cost(s)",
      "ja": "インターフェイス出力コスト"
    },
    {
      "indent": 6,
      "text": "The cost of sending a packet over the interface. The link cost is expressed in the link state metric and must be greater than zero.",
      "ja": "インターフェイス上にパケットを送信するコスト。リンクコストはリンク状態メトリックで表され、ゼロより大きくなければなりません。"
    },
    {
      "indent": 3,
      "text": "RxmtInterval",
      "ja": "rxmtinterval"
    },
    {
      "indent": 6,
      "text": "The number of seconds between link state advertisement retransmissions, for adjacencies belonging to this interface. This value is also used to time the retransmission of Database Description and Link State Request packets.",
      "ja": "このインターフェイスに属する隣接の場合、リンク状態広告の再送信の間の秒数。この値は、データベースの説明の再送信とリンク状態要求パケットのタイミングにも使用されます。"
    },
    {
      "indent": 0,
      "text": "3.1 Interface States",
      "section_title": true,
      "ja": "3.1 インターフェイス状態"
    },
    {
      "indent": 3,
      "text": "This section describes the various states of a switch interface. The states are listed in order of progressing functionality. For example, the inoperative state is listed first, followed by a list of the intermediate states through which the interface passes before attaining the final, fully functional state. The specification makes use of this ordering by references such as \"those interfaces in state greater than X\".",
      "ja": "このセクションでは、スイッチインターフェイスのさまざまな状態について説明します。状態は機能性の順にリストされています。たとえば、動作不能な状態が最初にリストされ、その後、最終的な完全な機能状態を達成する前に、インターフェイスが通過する中間状態のリストが続きます。この仕様では、「xより大きい状態のインターフェイス」などの参照によるこの順序付けを使用します。"
    },
    {
      "indent": 3,
      "text": "Figure 1 represents the interface state machine, showing the progression of interface state changes. The arrows on the graph represent the events causing each state change. These events are described in Section 3.2. The interface state machine is described in detail in Section 3.3.",
      "ja": "図1は、インターフェイス状態マシンを表し、インターフェイス状態の変化の進行を示しています。グラフの矢印は、各状態の変化を引き起こすイベントを表しています。これらのイベントは、セクション3.2で説明されています。インターフェイス状態マシンについては、セクション3.3で詳しく説明しています。"
    },
    {
      "indent": 3,
      "text": "Down",
      "ja": "下"
    },
    {
      "indent": 6,
      "text": "This is the initial state of the interface. In this state, the interface is unusable, and no protocol traffic is sent or received on the interface. In this state, interface parameters are set to their initial values, all interface timers are disabled, and no adjacencies are associated with the interface.",
      "ja": "これがインターフェイスの初期状態です。この状態では、インターフェイスは使用できず、インターフェイスにプロトコルトラフィックが送信または受信されません。この状態では、インターフェイスパラメーターが初期値に設定され、すべてのインターフェイスタイマーが無効になり、インターフェイスに隣接するものはありません。"
    },
    {
      "indent": 6,
      "text": " +-------+\n |  any  |  Interface   +----------+  Unloop Ind  +----------+\n | state | -----------> |   Down   | <----------- | Loopback |\n +-------+    Down      +----------+              +----------+\n                             |                         ^\n                             | Interface Up            |\n     +-------+  [pt-to-pt]   |                         |\n     | Point |<------------type?              Loop Ind |\n     |  to   |               |                         |\n     | Point |               | [broadcast]             |\n     +-------+               V                     +-------+\n                       +-----------+               |  any  |\n                       |  Waiting  |               | state |\n                       +-----------+               +-------+\n                             |\n                 Backup Seen |\n                             | Wait Timer\n                             |\n                             |\n+----------+    Neighbor     V     Neighbor    +----------+\n|    DS    | <------------> [ ] <------------> | DS Other |\n+----------+     Change      ^      Change     +----------+\n                             |\n                             |\n             Neighbor Change |\n                             |\n                             V\n                        +----------+\n                        |  Backup  |\n                        +----------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "Figure 1: Interface State Machine",
      "ja": "図1：インターフェイス状態マシン"
    },
    {
      "indent": 3,
      "text": "Loopback",
      "ja": "ループバック"
    },
    {
      "indent": 6,
      "text": "In this state, the switch interface is looped back, either in hardware or in software. The interface is unavailable for regular data traffic.",
      "ja": "この状態では、スイッチインターフェイスがハードウェアまたはソフトウェアのいずれかでループされます。インターフェイスは、通常のデータトラフィックでは利用できません。"
    },
    {
      "indent": 3,
      "text": "Point-to-Point",
      "ja": "ポイントからポイントへ"
    },
    {
      "indent": 6,
      "text": "In this state, the interface is operational and is connected to a physical point-to-point link. On entering this state, the switch attempts to form an adjacency with the neighboring switch.",
      "ja": "この状態では、インターフェイスが動作し、物理的なポイントツーポイントリンクに接続されています。この状態に入ると、スイッチは隣接するスイッチで隣接を形成しようとします。"
    },
    {
      "indent": 3,
      "text": "Waiting",
      "ja": "待っている"
    },
    {
      "indent": 6,
      "text": "In this state, the switch is attempting to identify the backup designated switch for the link by monitoring the Hello packets it receives. The switch does not attempt to select a designated switch or a backup designated switch until it changes out of this state, thereby preventing unnecessary changes of the designated switch and its backup.",
      "ja": "この状態では、スイッチは、受信するハローパケットを監視することにより、リンクのバックアップ指定スイッチを識別しようとしています。スイッチは、指定されたスイッチまたはバックアップ指定されたスイッチをこの状態から変更するまで選択しようとはしないため、指定されたスイッチとそのバックアップの不必要な変更が防止されます。"
    },
    {
      "indent": 3,
      "text": "DS Other",
      "ja": "DSその他"
    },
    {
      "indent": 6,
      "text": "In this state, the interface is operational and is connected to a multi-access broadcast link on which other switches have been selected as the designated switch and the backup designated switch. On entering this state, the switch attempts to form adjacencies with both the designated switch and the backup designated switch.",
      "ja": "この状態では、インターフェイスが動作し、指定されたスイッチとバックアップ指定スイッチとして他のスイッチが選択されたマルチアクセスブロードキャストリンクに接続されています。この状態に入ると、スイッチは、指定されたスイッチとバックアップ指定スイッチの両方を使用して隣接を形成しようとします。"
    },
    {
      "indent": 3,
      "text": "Backup",
      "ja": "バックアップ"
    },
    {
      "indent": 6,
      "text": "In this state, the switch itself is the backup designated switch on the attached multi-access broadcast link. It will be promoted to designated switch if the current designated switch fails. The switch establishes adjacencies with all other switches attached to the link. (See Section 6.3 for more information on the functions performed by the backup designated switch.)",
      "ja": "この状態では、スイッチ自体は、添付のマルチアクセスブロードキャストリンクのバックアップ指定スイッチです。現在の指定されたスイッチが失敗した場合、指定されたスイッチに昇格します。このスイッチは、リンクに接続されている他のすべてのスイッチを備えた隣接を確立します。（バックアップ指定スイッチによって実行された関数の詳細については、セクション6.3を参照してください。）"
    },
    {
      "indent": 3,
      "text": "DS",
      "ja": "DS"
    },
    {
      "indent": 6,
      "text": "In this state, this switch itself is the designated switch on the attached multi-access broadcast link. The switch establishes adjacencies with all other switches attached to the link. The switch is responsible for originating network link advertisements for the link, containing link information for all switches attached to the link, including the designated switch itself. (See Section 6.3 for more information on the functions performed by the designated switch.)",
      "ja": "この状態では、このスイッチ自体は、添付のマルチアクセスブロードキャストリンクの指定されたスイッチです。このスイッチは、リンクに接続されている他のすべてのスイッチを備えた隣接を確立します。スイッチは、指定されたスイッチ自体を含むリンクに接続されたすべてのスイッチのリンク情報を含む、リンクのネットワークリンク広告の発信を担当します。（指定されたスイッチによって実行された関数の詳細については、セクション6.3を参照してください。）"
    },
    {
      "indent": 0,
      "text": "3.2 Events Causing Interface State Changes",
      "section_title": true,
      "ja": "3.2 インターフェイスの状態の変更を引き起こすイベント"
    },
    {
      "indent": 3,
      "text": "The state of an interface changes due to an interface event. This section describes these events.",
      "ja": "インターフェイスイベントにより、インターフェイスの状態が変更されます。このセクションでは、これらのイベントについて説明します。"
    },
    {
      "indent": 3,
      "text": "Interface events are shown as arrows in Figure 1, the graphic representation of the interface state machine. For more information on the interface state machine, see Section 3.3.",
      "ja": "インターフェイスイベントは、図1、インターフェイス状態マシンのグラフィック表現として表示されます。インターフェイス状態マシンの詳細については、セクション3.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "Interface Up",
      "ja": "インターフェイスアップ"
    },
    {
      "indent": 6,
      "text": "This event is generated by the VlanHello protocol [IDhello] when it discovers a neighbor switch on the interface. The interface is now operational. This event causes the interface to change out of the Down state. The state it enters is determined by the interface type. If the interface type is broadcast (multi-access), this event also causes the switch to begin sending periodic Hello packets out over the interface.",
      "ja": "このイベントは、インターフェイスの近隣スイッチを発見すると、Vlanhelloプロトコル[Idhello]によって生成されます。インターフェイスは現在動作しています。このイベントにより、インターフェイスがダウン状態から変更されます。それが入る状態は、インターフェイスタイプによって決定されます。インターフェイスタイプがブロードキャスト（マルチアクセス）の場合、このイベントにより、スイッチはインターフェイスに定期的なハローパケットの送信を開始します。"
    },
    {
      "indent": 3,
      "text": "Wait Timer",
      "ja": "待機タイマー"
    },
    {
      "indent": 6,
      "text": "This event is generated when the one-shot Wait timer expires, triggering the end of the required waiting period before the switch can begin the process of selecting a designated switch and a backup designated switch on a multi-access link.",
      "ja": "このイベントは、ワンショット待機タイマーの有効期限が切れたときに生成され、スイッチが指定されたスイッチを選択し、マルチアクセスリンクのバックアップ指定スイッチを選択するプロセスを開始する前に、必要な待機期間の終了をトリガーします。"
    },
    {
      "indent": 3,
      "text": "Backup Seen",
      "ja": "バックアップが見られました"
    },
    {
      "indent": 6,
      "text": "This event is generated when the switch has detected the existence or non-existence of a backup designated switch for the link, as determined in one of the following two ways:",
      "ja": "このイベントは、次の2つの方法のいずれかで決定されているように、スイッチがリンクのバックアップ指定スイッチの存在または非存在を検出したときに生成されます。"
    },
    {
      "indent": 6,
      "text": "o A Hello packet has been received from a neighbor that claims to be the backup designated switch.",
      "ja": "o ハローパケットは、バックアップ指定スイッチであると主張する隣人から受信されました。"
    },
    {
      "indent": 6,
      "text": "o A Hello packet has been received from a neighbor that claims to be the designated switch. In addition, the packet indicated that there is no backup.",
      "ja": "o Hello Packetは、指定されたスイッチであると主張する隣人から受信されました。さらに、パケットはバックアップがないことを示しました。"
    },
    {
      "indent": 3,
      "text": "In either case, the interface must have bidirectional communication with its neighbor -- that is, the local switch must be listed in the neighbor's Hello packet.",
      "ja": "どちらの場合でも、インターフェイスは隣人との双方向通信を持つ必要があります。つまり、ローカルスイッチは隣人のハローパケットにリストされなければなりません。"
    },
    {
      "indent": 3,
      "text": "This event signals the end of the Waiting state.",
      "ja": "このイベントは、待機状態の終わりを示しています。"
    },
    {
      "indent": 3,
      "text": "Neighbor change",
      "ja": "隣人の変化"
    },
    {
      "indent": 6,
      "text": "This event is generated when there has been one of the following changes in the set of bidirectional neighbors associated with the interface. (See Section 4.1 for information on neighbor states.)",
      "ja": "このイベントは、インターフェイスに関連する双方向隣接のセットに次の変更があった場合に生成されます。（近隣州の詳細については、セクション4.1を参照してください。）"
    },
    {
      "indent": 6,
      "text": "o Bidirectional communication has been established with a neighbor -- the state of the neighbor has changed to 2-Way or higher.",
      "ja": "o 隣人との双方向コミュニケーションが確立されました - 隣人の状態は2方向以上に変更されました。"
    },
    {
      "indent": 6,
      "text": "o Bidirectional communication with a neighbor has been lost -- the state of the neighbor has changed to Init or lower.",
      "ja": "o 隣人との双方向のコミュニケーションは失われました - 隣人の状態は初期に変わりました。"
    },
    {
      "indent": 6,
      "text": "o A bidirectional neighbor has just declared itself to be either the designated switch or the backup designated switch, as detected by examination of that neighbor's Hello packets.",
      "ja": "o 双方向の隣人は、その隣人のハローパケットの検査で検出されたように、指定されたスイッチまたはバックアップ指定スイッチのいずれかであると宣言しました。"
    },
    {
      "indent": 6,
      "text": "o A bidirectional neighbor is no longer declaring itself to be either the designated switch or the backup designated switch, as detected by examination of that neighbor's Hello packets.",
      "ja": "o 双方向の隣人は、その隣人のハローパケットの検査で検出されたように、指定されたスイッチまたはバックアップ指定スイッチのいずれかであると宣言しなくなりました。"
    },
    {
      "indent": 6,
      "text": "o The advertised switch priority of a bidirectional neighbor has changed, as detected by examination of that neighbor's Hello packets.",
      "ja": "o 隣人のハローパケットの検査によって検出されたように、双方向の隣人の広告の優先順位は変更されました。"
    },
    {
      "indent": 6,
      "text": "When this event occurs, the designated switch and the backup designated switch must be reselected.",
      "ja": "このイベントが発生した場合、指定されたスイッチとバックアップ指定スイッチを再選択する必要があります。"
    },
    {
      "indent": 6,
      "text": "Loop Ind",
      "ja": "ループind"
    },
    {
      "indent": 9,
      "text": "This event is generated when an interface enters the Loopback state. This event can be generated by either the network management service or by the lower-level protocols.",
      "ja": "このイベントは、インターフェイスがループバック状態に入ると生成されます。このイベントは、ネットワーク管理サービスまたは低レベルのプロトコルのいずれかによって生成できます。"
    },
    {
      "indent": 6,
      "text": "Unloop Ind",
      "ja": "Unloop Ind"
    },
    {
      "indent": 9,
      "text": "This event is generated when an interface leaves the Loopback state. This event can be generated by either the network management service or by the lower-level protocols.",
      "ja": "このイベントは、インターフェイスがループバック状態を離れると生成されます。このイベントは、ネットワーク管理サービスまたは低レベルのプロトコルのいずれかによって生成できます。"
    },
    {
      "indent": 6,
      "text": "Interface Down",
      "ja": "インターフェイスダウン"
    },
    {
      "indent": 9,
      "text": "This event is generated under the following two circumstances:",
      "ja": "このイベントは、次の2つの状況で生成されます。"
    },
    {
      "indent": 9,
      "text": "o The VlanHello [IDhello] protocol has determined that the interface is no longer functional.",
      "ja": "o Vlanhello [Idhello]プロトコルは、インターフェイスが機能しなくなったと判断しました。"
    },
    {
      "indent": 9,
      "text": "o The neighbor state machine has detected a second neighboring switch on a link presumed to be of type point-to-point. In addition to generating the Interface Down event, the neighbor state machine changes the interface type to broadcast.",
      "ja": "o 近隣の州のマシンは、タイプのポイントツーポイントであると推定されるリンクの2番目の隣接スイッチを検出しました。インターフェイスダウンイベントの生成に加えて、Neighbour Stateマシンはインターフェイスタイプを変更してブロードキャストします。"
    },
    {
      "indent": 6,
      "text": "In both instances, this event forces the interface state to Down. However, when the event is generated by the neighbor state machine, it is immediately followed by an Interface Up event. (See Section 4.3.)",
      "ja": "どちらの場合も、このイベントはインターフェイスの状態をダウンします。ただし、イベントがNeighber State Machineによって生成されると、すぐにインターフェイスアップイベントが続きます。（セクション4.3を参照してください。）"
    },
    {
      "indent": 0,
      "text": "3.3 Interface State Machine",
      "section_title": true,
      "ja": "3.3 インターフェイス状態マシン"
    },
    {
      "indent": 3,
      "text": "This section presents a detailed description of the interface state machine.",
      "ja": "このセクションでは、インターフェイス状態マシンの詳細な説明を示します。"
    },
    {
      "indent": 3,
      "text": "Interface states (see Section 3.1) change as the result of various events (see Section 3.2). However, the effect of each event can vary, depending on the current state of the interface. For this reason, the state machine described in this section is organized according to the current interface state and the occurring event. For each state/event pair, the new interface state is listed, along with a description of the required processing.",
      "ja": "インターフェイス状態（セクション3.1を参照）は、さまざまなイベントの結果として変更されます（セクション3.2を参照）。ただし、各イベントの効果は、インターフェイスの現在の状態によって異なります。このため、このセクションで説明する状態マシンは、現在のインターフェイス状態と発生するイベントに従って編成されています。各状態/イベントペアについて、必要な処理の説明とともに、新しいインターフェイス状態がリストされています。"
    },
    {
      "indent": 3,
      "text": "Note that when the state of an interface changes, it may be necessary to originate a new switch link advertisement. See Section 8.1 for more information.",
      "ja": "インターフェイスの状態が変更された場合、新しいスイッチリンク広告を発信する必要がある場合があることに注意してください。詳細については、セクション8.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "Some of the processing described here includes generating events for the neighbor state machine. For example, when an interface becomes inoperative, all neighbor connections associated with the interface must be destroyed. For more information on the neighbor state machine, see Section 4.3.",
      "ja": "ここで説明する処理には、近隣の州のマシンのイベントの生成が含まれます。たとえば、インターフェイスが動作不能になった場合、インターフェイスに関連付けられたすべての隣接接続を破壊する必要があります。近隣のマシンの詳細については、セクション4.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "State(s): Down Event: Interface Up New state: Depends on action routine Action: If the interface is a point-to-point link, set the interface state to Point-to-Point. Otherwise, start the Hello interval timer, enabling the periodic sending of Hello packets over the interface. If the switch is not eligible to become the designated switch, change the interface state to DS Other. Otherwise, set the interface state to Waiting and start the one-shot wait timer. Create a new neighbor data structure for the neighbor switch, initialize all neighbor parameters and set the stateof the neighbor to Down.",
      "ja": "状態：ダウンイベント：インターフェイスアップ新しい状態：アクションルーチンアクションに依存します：インターフェイスがポイントツーポイントリンクの場合、インターフェイスの状態をポイントツーポイントに設定します。それ以外の場合は、ハローインターバルタイマーを起動して、インターフェイス上にハローパケットを定期的に送信できるようにします。スイッチが指定されたスイッチになる資格がない場合は、インターフェイスの状態をDSその他に変更します。それ以外の場合は、インターフェイスの状態を待機に設定し、ワンショット待機タイマーを開始します。Neighborスイッチの新しいNeighborデータ構造を作成し、すべての隣接パラメーターを初期化し、近隣の状態を下に設定します。"
    },
    {
      "indent": 3,
      "text": "State(s): Waiting Event: Backup Seen New state: Depends on action routine Action: Select the designated switch and backup designated switch for the attached link, as described in Section 6.3.1. As a result of this selection, set the new state of the interface to either DS Other, Backup or DS.",
      "ja": "状態：待機イベント：バックアップ見られた新しい状態：アクションルーチンアクションに依存します：セクション6.3.1で説明するように、添付リンクの指定されたスイッチとバックアップ指定スイッチを選択します。この選択の結果として、インターフェイスの新しい状態を他のDS、バックアップ、またはDSのいずれかに設定します。"
    },
    {
      "indent": 3,
      "text": "State(s): Waiting Event: Wait Timer New state: Depends on action routine Action: Select the designated switch and backup designated switch for the attached link, as described in Section 6.3.1. As a result of this selection, set the new state of the interface to either DS Other, Backup or DS.",
      "ja": "状態：待機イベント：待機タイマー新しい状態：アクションルーチンアクションに依存：セクション6.3.1で説明されているように、添付リンクの指定されたスイッチとバックアップ指定スイッチを選択します。この選択の結果として、インターフェイスの新しい状態を他のDS、バックアップ、またはDSのいずれかに設定します。"
    },
    {
      "indent": 3,
      "text": "State(s): DS Other, Backup or DS Event: Neighbor Change New state: Depends on action routine Action: Reselect the designated switch and backup designated switch for the attached link, as described in Section 6.3.1. As a result of this selection, set the new state of the interface to either DS Other, Backup or DS.",
      "ja": "状態：DSその他、バックアップまたはDSイベント：Neighbor Change新しい状態：アクションルーチンアクションに依存します。この選択の結果として、インターフェイスの新しい状態を他のDS、バックアップ、またはDSのいずれかに設定します。"
    },
    {
      "indent": 3,
      "text": "State(s): Any State Event: Interface Down New state: Down Action: Reset all variables in the interface data structure and disable all timers. In addition, destroy all neighbor connections associated with the interface by generating the KillNbr event on all neighbors listed in the interface data structure.",
      "ja": "状態：任意の状態イベント：インターフェイスダウン新しい状態：ダウンアクション：インターフェイスデータ構造のすべての変数をリセットし、すべてのタイマーを無効にします。さらに、インターフェイスデータ構造にリストされているすべての隣人にKillnbrイベントを生成することにより、インターフェイスに関連付けられたすべての隣接接続を破壊します。"
    },
    {
      "indent": 3,
      "text": "State(s): Any State Event: Loop Ind New state: Loopback Action: Reset all variables in the interface data structure and disable all timers. In addition, destroy all neighbor connections associated with the interface by generating the KillNbr event on all neighbors listed in the interface data structure.",
      "ja": "状態：任意の状態イベント：ループIND新しい状態：ループバックアクション：インターフェイスデータ構造のすべての変数をリセットし、すべてのタイマーを無効にします。さらに、インターフェイスデータ構造にリストされているすべての隣人にKillnbrイベントを生成することにより、インターフェイスに関連付けられたすべての隣接接続を破壊します。"
    },
    {
      "indent": 3,
      "text": "State(s): Loopback Event: Unloop Ind New state: Down Action: No action is necessary beyond changing the interface state to Down because the interface was reset on entering the Loopback state.",
      "ja": "状態：ループバックイベント：Unloop Ind New State：ダウンアクション：ループバック状態に入るとインターフェイスがリセットされたため、インターフェイス状態をダウンに変更する以外にアクションは必要ありません。"
    },
    {
      "indent": 0,
      "text": "4. Neighbor Data Structure",
      "section_title": true,
      "ja": "4. 隣接データ構造"
    },
    {
      "indent": 3,
      "text": "Each switch conducts a conversation with its neighboring switches and each conversation is described by a neighbor data structure. A conversation is associated with a switch interface, and is identified by the neighboring switch ID.",
      "ja": "各スイッチは、隣接するスイッチとの会話を実施し、各会話は隣接データ構造によって説明されます。会話はスイッチインターフェイスに関連付けられており、隣接するスイッチIDによって識別されます。"
    },
    {
      "indent": 3,
      "text": "Note that if two switches have multiple attached links in common, multiple conversations ensue, each described by a unique neighbor data structure. Each separate conversation is treated as a separate neighbor.",
      "ja": "2つのスイッチに共通の複数の添付リンクがある場合、それぞれが一意の隣接データ構造で記述されている複数の会話が続くことに注意してください。それぞれの別々の会話は、別の隣人として扱われます。"
    },
    {
      "indent": 3,
      "text": "The neighbor data structure contains all information relevant to any adjacency formed between the two neighbors. Remember, however, that not all neighbors become adjacent. An adjacency can be thought of as a highly developed conversation between two switches.",
      "ja": "近隣のデータ構造には、2人の隣人の間で形成された隣接に関連するすべての情報が含まれています。ただし、すべての隣人が隣接するわけではないことを忘れないでください。隣接は、2つのスイッチ間の高度に開発された会話と考えることができます。"
    },
    {
      "indent": 3,
      "text": "State",
      "ja": "州"
    },
    {
      "indent": 6,
      "text": "The functional level of the neighbor conversation. See Section 4.1 for a complete description of neighbor states.",
      "ja": "隣人の会話の機能レベル。隣国の完全な説明については、セクション4.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "Inactivity timer",
      "ja": "非アクティブタイマー"
    },
    {
      "indent": 6,
      "text": "A one-shot timer used to determine when to declare the neighbor down if no Hello packet is received from this (multi-access) neighbor. The length of the timer is SwitchDeadInterval seconds, as contained in the neighbor's Hello packet. This timer is not used on point-to-point links.",
      "ja": "この（マルチアクセス）隣人からハローパケットが受信されない場合、いつ隣人を宣言するかを決定するために使用されるワンショットタイマー。タイマーの長さは、隣のハローパケットに含まれるように、スイッチインテーバル秒です。このタイマーは、ポイントツーポイントリンクでは使用されません。"
    },
    {
      "indent": 3,
      "text": "Master/slave flag",
      "ja": "マスター/スレーブフラグ"
    },
    {
      "indent": 6,
      "text": "A flag indicating whether the local switch is to act as the master or the slave in the database exchange process (see Section 7.2). The master/slave relationship is negotiated when the conversation changes to the ExStart state.",
      "ja": "ローカルスイッチがデータベース交換プロセスでマスターまたはスレーブとして機能するかどうかを示すフラグ（セクション7.2を参照）。会話がExstart状態に変わると、マスター/スレーブの関係は交渉されます。"
    },
    {
      "indent": 3,
      "text": "Sequence number",
      "ja": "シーケンス番号"
    },
    {
      "indent": 6,
      "text": "A 4-octet number identifying individual Database Description packets. When the neighbor state ExStart is entered and the database exchange process is started, the sequence number is set to a value not previously seen by the neighboring switch. (One possible scheme is to use the switch's time of day counter.) The sequence number is then incremented by the master with each new Database Description packet sent. See Section 7.2 for more information on the database exchange process.",
      "ja": "個々のデータベース説明パケットを識別する4-OCTET番号。近隣状態のExstartが入力され、データベース交換プロセスが開始されると、シーケンス番号は隣接するスイッチで以前に見られない値に設定されます。（考えられるスキームの1つは、スイッチの時刻カウンターを使用することです。）次に、新しいデータベースの説明パケットが送信されるたびに、シーケンス番号がマスターによって増加します。データベース交換プロセスの詳細については、セクション7.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "Neighbor ID",
      "ja": "ネイバーID"
    },
    {
      "indent": 6,
      "text": "The switch ID of the neighboring switch, as discovered by the VlanHello protocol [IDhello] or contained in the neighbor's Hello packets.",
      "ja": "Vlanhelloプロトコル[Idhello]によって発見された、または隣のハローパケットに含まれる隣接スイッチのスイッチID。"
    },
    {
      "indent": 3,
      "text": "Neighbor priority",
      "ja": "隣人の優先事項"
    },
    {
      "indent": 6,
      "text": "The switch priority of the neighboring switch, as contained in the neighbor's Hello packets. Switch priorities are used when selecting the designated switch for the attached multi-access link. Priority is not used on point-to-point links.",
      "ja": "隣人のハローパケットに含まれる隣接スイッチのスイッチの優先順位。添付されたマルチアクセスリンクの指定されたスイッチを選択するときに、スイッチの優先順位が使用されます。優先度は、ポイントツーポイントリンクでは使用されません。"
    },
    {
      "indent": 3,
      "text": "Interface identifier",
      "ja": "インターフェイス識別子"
    },
    {
      "indent": 6,
      "text": "A 10-octet value that uniquely identifies the interface over which this conversation is being held. This value consists of the 6- octet base MAC address of the neighbor switch, followed by the 4- octet local port number of the interface.",
      "ja": "この会話が開催されているインターフェイスを一意に識別する10オクテット値。この値は、近隣スイッチの6-オクテットベースMACアドレスで構成され、その後、インターフェイスの4オクテットのローカルポート番号が続きます。"
    },
    {
      "indent": 3,
      "text": "Neighbor's designated switch",
      "ja": "隣人の指定されたスイッチ"
    },
    {
      "indent": 6,
      "text": "The switch ID identifying the neighbor's idea of the designated switch, as contained in the neighbor's Hello packets. This value is used in the local selection of the designated switch. It is not used on point-to-point links.",
      "ja": "隣人のハローパケットに含まれるように、指定されたスイッチの隣人のアイデアを識別するスイッチID。この値は、指定されたスイッチのローカル選択で使用されます。ポイントツーポイントリンクでは使用されません。"
    },
    {
      "indent": 3,
      "text": "Neighbor's backup designated switch",
      "ja": "隣人のバックアップ指定スイッチ"
    },
    {
      "indent": 6,
      "text": "The switch ID identifying the neighbor's idea of the backup designated switch, as contained in the neighbor's Hello packets. This value is used in the local selection of the backup designated switch. It is not used on point-to-point links.",
      "ja": "スイッチIDは、近隣のハローパケットに含まれるバックアップ指定スイッチの隣人のアイデアを識別します。この値は、バックアップ指定スイッチのローカル選択で使用されます。ポイントツーポイントリンクでは使用されません。"
    },
    {
      "indent": 3,
      "text": "Link state retransmission list",
      "ja": "リンク状態再送信リスト"
    },
    {
      "indent": 6,
      "text": "The list of link state advertisements that have been forwarded over but not acknowledged on this adjacency. The local switch retransmits these link state advertisements at periodic intervals until they are acknowledged or until the adjacency is destroyed. (For more information on retransmitting link state advertisements, see Section 8.2.5.)",
      "ja": "この隣接には転送されたが認められていないリンク状態広告のリスト。ローカルスイッチは、これらのリンク状態広告を定期的な間隔で再送信して、承認されるまで、または隣接が破壊されるまでです。（リンク状態広告の再送信の詳細については、セクション8.2.5を参照してください。）"
    },
    {
      "indent": 3,
      "text": "Database summary list",
      "ja": "データベースの概要リスト"
    },
    {
      "indent": 6,
      "text": "The set of link state advertisement headers that summarize the local link state database. When the conversation changes to the Exchange state, this list is sent to the neighbor via Database Description packets. (For more information on the synchronization of databases, see Section 7.)",
      "ja": "ローカルリンク状態データベースを要約するリンク状態広告ヘッダーのセット。会話がExchange状態に変更されると、このリストはデータベースの説明パケットを介して近隣に送信されます。（データベースの同期の詳細については、セクション7を参照してください。）"
    },
    {
      "indent": 3,
      "text": "Link state request list",
      "ja": "リンク状態リクエストリスト"
    },
    {
      "indent": 6,
      "text": "The list of link state advertisements that must be received in order to synchronize with the neighbor switch's link state database. This list is created as Database Description packets are received, and is then sent to the neighbor in Link State Request packets. (For more information on the synchronization of databases, see Section 7.)",
      "ja": "Neighbor Switchのリンク状態データベースと同期するために受信する必要があるリンク状態広告のリスト。このリストは、データベースの説明パケットが受信され、リンク状態リクエストパケットのネイバーに送信されると作成されます。（データベースの同期の詳細については、セクション7を参照してください。）"
    },
    {
      "indent": 0,
      "text": "4.1 Neighbor States",
      "section_title": true,
      "ja": "4.1 隣国"
    },
    {
      "indent": 3,
      "text": "This section describes the various states of a conversation with a neighbor switch. The states are listed in order of progressing functionality. For example, the inoperative state is listed first, followed by a list of the intermediate states through which the conversation passes before attaining the final, fully functional state. The specification makes use of this ordering by references such as \"those neighbors/adjacencies in state greater than X\".",
      "ja": "このセクションでは、近隣のスイッチとの会話のさまざまな状態について説明します。状態は機能性の順にリストされています。たとえば、動作不能な状態が最初にリストされ、その後、最終的な完全な機能状態を達成する前に、会話が通過する中間状態のリストが続きます。この仕様では、「Xより大きい状態の隣人/隣接」などの参照によるこの順序付けを使用しています。"
    },
    {
      "indent": 3,
      "text": "Figure 2 represents the neighbor state machine. The arrows on the graph represent the events causing each state change. These events are described in Section 4.2. The neighbor state machine is described in detail in Section 4.3.",
      "ja": "図2は、近隣の状態マシンを表しています。グラフの矢印は、各状態の変化を引き起こすイベントを表しています。これらのイベントは、セクション4.2で説明されています。近隣の状態マシンについては、セクション4.3で詳しく説明しています。"
    },
    {
      "indent": 3,
      "text": "Down",
      "ja": "下"
    },
    {
      "indent": 6,
      "text": "This is the initial state of a neighbor conversation.",
      "ja": "これが隣人の会話の最初の状態です。"
    },
    {
      "indent": 3,
      "text": "Init",
      "ja": "初期化"
    },
    {
      "indent": 6,
      "text": "In this state, the neighbor has been discovered, but bidirectional communication has not yet been established. All neighbors in this state or higher are listed in the VLS Hello packets sent by the local switch over the associated (multi-access) interface.",
      "ja": "この状態では、隣人が発見されましたが、双方向のコミュニケーションはまだ確立されていません。この状態以上のすべての隣人は、関連する（マルチアクセス）インターフェイス上にローカルスイッチによって送信されたVLSハローパケットにリストされています。"
    },
    {
      "indent": 3,
      "text": "       +----------+     KillNbr, LLDown,   +-----------+\n       |   Down   | <--------------------- | any state |\n       +----------+   or Inactivity Timer  +-----------+\n            |\n      Hello |\n       Rcvd |\n            |\n            V\n+-----< [pt-to-pt?]\n| yes       |\n|           | no\n|           V\n|      +----------+   1-Way   +----------+\n|      |   Init   | <-------- | >= 2-way |\n|      +----------+           +----------+\n|           |\n|     2-Way |\n|      Rcvd |                  +-------+   AdjOK? +------------+\n|           +----------------> | 2-Way | <------- | >= ExStart |\n|           | (no adjacency)   +-------+     no   +------------+\n|           |\n|           V\n|      +---------+   Seq Number Mismatch  +-------------+\n+----> | ExStart | <--------------------- | >= Exchange |\n       +---------+       or BadLSReq      +-------------+\n            |\nNegotiation |\n    Done    |\n            V\n       +----------+\n       | Exchange |\n       +----------+\n            |\n   Exchange |                        +--------+\n     Done   +----------------------> |  Full  |\n            | (request list empty)   +--------+\n            |                             ^\n            V                             |\n       +---------+      Loading Done      |\n       | Loading | ----------------------->\n       +---------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 18,
      "text": "Figure 2: Neighbor State Machine",
      "ja": "図2：近隣の状態マシン"
    },
    {
      "indent": 3,
      "text": "2-Way",
      "ja": "2ウェイ"
    },
    {
      "indent": 6,
      "text": "In this state, communication between the two switches is bidirectional. This is the most advanced state short of beginning to establish an adjacency. On a multi-access link, the designated switch and the backup designated switch are selected from the set of neighbors in state 2-Way or greater.",
      "ja": "この状態では、2つのスイッチ間の通信は双方向です。これは、隣接を確立することを開始することに至って、最も先進的な状態です。マルチアクセスリンクでは、指定されたスイッチとバックアップ指定スイッチが、州の2ウェイ以上の近隣のセットから選択されます。"
    },
    {
      "indent": 3,
      "text": "ExStart",
      "ja": "exstart"
    },
    {
      "indent": 6,
      "text": "This state indicates that the two switches have begun to establish an adjacency by determining which switch is the master, as well as the initial sequence number for Database Descriptor packets. Neighbor conversations in this state or greater are called adjacencies.",
      "ja": "この状態は、2つのスイッチがマスターであるスイッチとデータベース記述子パケットの初期シーケンス番号を決定することにより、隣接を確立し始めたことを示しています。この状態以上の隣人の会話は、隣接と呼ばれます。"
    },
    {
      "indent": 3,
      "text": "Exchange",
      "ja": "交換"
    },
    {
      "indent": 6,
      "text": "In this state, the switches are exchanging Database Description packets. (See Section 7.2 for a complete description of this process.) All adjacencies in the Exchange state or greater are used by the distribution procedure (see Section 8.2), and are capable of transmitting and receiving all types of VLSP routing packets.",
      "ja": "この状態では、スイッチはデータベースの説明パケットを交換しています。（このプロセスの完全な説明については、セクション7.2を参照してください。）交換状態以上のすべての隣接は、配布手順で使用され（セクション8.2を参照）、あらゆる種類のVLSPルーティングパケットを送信および受信できます。"
    },
    {
      "indent": 3,
      "text": "Loading",
      "ja": "読み込み"
    },
    {
      "indent": 6,
      "text": "In this state, the local switch is sending Link State Request packets to the neighbor asking for the more recent advertisements that were discovered in the Exchange state.",
      "ja": "この状態では、ローカルスイッチは、交換状態で発見されたより最近の広告を求めて、リンク状態要求パケットを隣人に送信しています。"
    },
    {
      "indent": 3,
      "text": "Full",
      "ja": "満杯"
    },
    {
      "indent": 6,
      "text": "In this state, the two switches are fully adjacent. These adjacencies will now appear in switch link and network link advertisements generated for the link.",
      "ja": "この状態では、2つのスイッチが完全に隣接しています。これらの隣接は、リンク用に生成されたスイッチリンクおよびネットワークリンク広告に表示されます。"
    },
    {
      "indent": 0,
      "text": "4.2 Events Causing Neighbor State Changes",
      "section_title": true,
      "ja": "4.2 近隣の状態の変更を引き起こすイベント"
    },
    {
      "indent": 3,
      "text": "The state of a neighbor conversation changes due to neighbor events. This section describes these events.",
      "ja": "隣人の会話の状態は、隣人のイベントにより変化します。このセクションでは、これらのイベントについて説明します。"
    },
    {
      "indent": 3,
      "text": "Neighbor events are shown as arrows in Figure 2, the graphic representation of the neighbor state machine. For more information on the neighbor state machine, see Section 4.3.",
      "ja": "隣接イベントは、図2に矢印として表示されます。これは、近隣の状態マシンのグラフィック表現です。近隣のマシンの詳細については、セクション4.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "Hello Received",
      "ja": "こんにちは受け取った"
    },
    {
      "indent": 6,
      "text": "This event is generated when a Hello packet has been received from a neighbor.",
      "ja": "このイベントは、隣人からハローパケットを受け取ったときに生成されます。"
    },
    {
      "indent": 3,
      "text": "2-Way Received",
      "ja": "2ウェイ受信"
    },
    {
      "indent": 6,
      "text": "This event is generated when the local switch sees its own switch ID listed in the neighbor's Hello packet, indicating that bidirectional communication has been established between the two switches.",
      "ja": "このイベントは、ローカルスイッチが近隣のハローパケットにリストされている独自のスイッチIDを見ると生成され、2つのスイッチ間で双方向通信が確立されていることを示しています。"
    },
    {
      "indent": 3,
      "text": "Negotiation Done",
      "ja": "交渉が行われました"
    },
    {
      "indent": 6,
      "text": "This event is generated when the master/slave relationship has been successfully negotiated and initial packet sequence numbers have been exchanged. This event signals the start of the database exchange process (see Section 7.2).",
      "ja": "このイベントは、マスター/スレーブの関係が正常に交渉され、初期パケットシーケンス番号が交換されたときに生成されます。このイベントは、データベース交換プロセスの開始を示しています（セクション7.2を参照）。"
    },
    {
      "indent": 3,
      "text": "Exchange Done",
      "ja": "交換が行われました"
    },
    {
      "indent": 6,
      "text": "This event is generated when the database exchange process is complete and both switches have successfully transmitted a full sequence of Database Description packets. (For more information on the database exchange process, see Section 7.2.)",
      "ja": "このイベントは、データベース交換プロセスが完了し、両方のスイッチがデータベース説明パケットの完全なシーケンスを正常に送信したときに生成されます。（データベース交換プロセスの詳細については、セクション7.2を参照してください。）"
    },
    {
      "indent": 3,
      "text": "BadLSReq",
      "ja": "badlsreq"
    },
    {
      "indent": 6,
      "text": "This event is generated when a Link State Request has been received for a link state advertisement that is not contained in the database. This event indicates an error in the synchronization process.",
      "ja": "このイベントは、データベースに含まれていないリンク状態広告に対してリンク状態要求を受信したときに生成されます。このイベントは、同期プロセスのエラーを示しています。"
    },
    {
      "indent": 3,
      "text": "Loading Done",
      "ja": "読み込みが完了しました"
    },
    {
      "indent": 6,
      "text": "This event is generated when all Link State Updates have been received for all out-of-date portions of the database. (See Section 7.3.)",
      "ja": "このイベントは、データベースのすべての時代遅れの部分に対してすべてのリンク状態の更新が受信されたときに生成されます。（セクション7.3を参照してください。）"
    },
    {
      "indent": 3,
      "text": "AdjOK?",
      "ja": "adjok？"
    },
    {
      "indent": 6,
      "text": "This event is generated when a decision must be made as to whether an adjacency will be established or maintained with the neighbor. This event will initiate some adjacencies and destroy others.",
      "ja": "このイベントは、隣人と隣接するか維持されるかについて決定を下す必要がある場合に生成されます。このイベントは、いくつかの隣接を開始し、他のイベントを破壊します。"
    },
    {
      "indent": 3,
      "text": "Seq Number Mismatch",
      "ja": "seq数の不一致"
    },
    {
      "indent": 6,
      "text": "This event is generated when a Database Description packet has been received with any of the following conditions:",
      "ja": "このイベントは、データベースの説明パケットが次のいずれかの条件で受信されたときに生成されます。"
    },
    {
      "indent": 6,
      "text": "o The packet contains an unexpected sequence number. o The packet (unexpectedly) has the Init bit set. o The packet has a different Options field than was previously seen.",
      "ja": "o パケットには、予期しないシーケンス番号が含まれています。oパケットには（予期せず）initビットが設定されています。oパケットには、以前に見たものとは異なるオプションフィールドがあります。"
    },
    {
      "indent": 6,
      "text": "These conditions all indicate that an error has occurred during the establishment of the adjacency.",
      "ja": "これらの条件はすべて、隣接の確立中にエラーが発生したことを示しています。"
    },
    {
      "indent": 3,
      "text": "1-Way",
      "ja": "1方向"
    },
    {
      "indent": 6,
      "text": "This event is generated when bidirectional communication with the neighbor has been lost. That is, a Hello packet has been received from the neighbor in which the local switch is not listed.",
      "ja": "このイベントは、隣人との双方向通信が失われたときに生成されます。つまり、ローカルスイッチがリストされていない隣人からハローパケットが受信されました。"
    },
    {
      "indent": 3,
      "text": "KillNbr",
      "ja": "Killnbr"
    },
    {
      "indent": 6,
      "text": "This event is generated when further communication with the neighbor is impossible.",
      "ja": "このイベントは、隣人とのさらなる通信が不可能である場合に生成されます。"
    },
    {
      "indent": 3,
      "text": "Inactivity Timer",
      "ja": "非アクティブタイマー"
    },
    {
      "indent": 6,
      "text": "This event is generated when the inactivity timer has expired, indicating that no Hello packets have been received from the neighbor in SwitchDeadInterval seconds. This timer is used only on broadcast (multi-access) links.",
      "ja": "このイベントは、非アクティブタイマーの有効期限が切れたときに生成され、SwitchDeadIntervalの秒で近隣からハローパケットが受信されていないことを示しています。このタイマーは、ブロードキャスト（マルチアクセス）リンクでのみ使用されます。"
    },
    {
      "indent": 3,
      "text": "LLDown",
      "ja": "lldown"
    },
    {
      "indent": 6,
      "text": "This event is generated by the lower-level switch discovery protocols and indicates that the neighbor is now unreachable.",
      "ja": "このイベントは、低レベルのスイッチディスカバリープロトコルによって生成され、近隣が現在到達できないことを示しています。"
    },
    {
      "indent": 0,
      "text": "4.3 Neighbor State Machine",
      "section_title": true,
      "ja": "4.3 近隣の州のマシン"
    },
    {
      "indent": 3,
      "text": "This section presents a detailed description of the neighbor state machine.",
      "ja": "このセクションでは、近隣の状態マシンの詳細な説明を示します。"
    },
    {
      "indent": 3,
      "text": "Neighbor states (see Section 4.1) change as the result of various events (see Section 4.2). However, the effect of each event can vary, depending on the current state of the conversation with the neighbor. For this reason, the state machine described in this section is organized according to the current neighbor state and the occurring event. For each state/event pair, the new neighbor state is listed, along with a description of the required processing.",
      "ja": "隣国（セクション4.1を参照）は、さまざまなイベントの結果として変更されます（セクション4.2を参照）。ただし、各イベントの効果は、隣人との会話の現在の状態によって異なります。このため、このセクションで説明した状態マシンは、現在の隣国と発生するイベントに従って編成されています。各状態/イベントペアについて、必要な処理の説明とともに、新しい隣接状態がリストされています。"
    },
    {
      "indent": 3,
      "text": "Note that when the neighbor state changes as a result of an interface Neighbor Change event (see Section 3.2), it may be necessary to rerun the designated switch selection algorithm. In addition, if the interface associated with the neighbor conversation is in the DS state (that is, the local switch is the designated switch), changes in the neighbor state may cause a new network link advertisement to be originated (see Section 8.1).",
      "ja": "インターフェイスNeighbor Changeイベントの結果として近隣状態が変更された場合（セクション3.2を参照）、指定されたスイッチ選択アルゴリズムを再実行する必要がある場合があることに注意してください。さらに、近隣の会話に関連付けられているインターフェイスがDS状態（つまり、ローカルスイッチは指定されたスイッチ）にある場合、近隣状態の変更により、新しいネットワークリンク広告が発生する可能性があります（セクション8.1を参照）。"
    },
    {
      "indent": 3,
      "text": "When the neighbor state machine must invoke the interface state machine, it is invoked as a scheduled task. This simplifies processing, by ensuring that neither state machine executes recursively.",
      "ja": "近隣の状態マシンがインターフェイス状態マシンを呼び出す必要がある場合、スケジュールされたタスクとして呼び出されます。これにより、どちらの状態マシンも再帰的に実行されないようにすることにより、処理が簡素化されます。"
    },
    {
      "indent": 3,
      "text": "State(s): Down Event: Hello Received New state: Depends on the interface type Action: If the interface type of the associated link is point-to-point, change the neighbor state to ExStart. Otherwise, change the neighbor state to Init and start the inactivity timer for the neighbor. If the timer expires before another Hello packet is received, the neighbor switch is declared dead.",
      "ja": "状態：ダウンイベント：ハローを受け取った新しい状態：インターフェイスタイプのアクションに依存します：関連するリンクのインターフェイスタイプがポイントツーポイントの場合、近隣状態をエクススタートして変更します。それ以外の場合は、近隣状態をinitに変更し、隣人の非アクティブタイマーを開始します。別のハローパケットを受信する前にタイマーが期限切れになった場合、Neighbor Switchは死亡します。"
    },
    {
      "indent": 3,
      "text": "State(s): Init or greater Event: Hello Received New state: No state change Action: If the interface type of the associated link is point-to-point, determine whether this notification is for a different neighbor than the one previously seen. If so, generate an Interface Down event for the associated interface, reset the interface type to broadcast and generate an Interface Up event.",
      "ja": "状態：初期イベントまたはイベント：こんにちは、新しい状態：状態変更アクションなし：関連するリンクのインターフェイスタイプがポイントツーポイントである場合、この通知が以前に見たものとは異なる隣人向けであるかどうかを判断します。その場合、関連するインターフェイスのインターフェイスダウンイベントを生成し、インターフェイスタイプをリセットしてブロードキャストを発生させ、インターフェイスアップイベントを生成します。"
    },
    {
      "indent": 3,
      "text": "Note: This procedure of generating an Interface Down event and changing the interface type to broadcast is also executed if the neighbor for whom the notification was received is running an older version of the protocol software (see Section 6.1). In previous versions of the protocol, all interfaces were treated as if they were broadcast.",
      "ja": "注：インターフェイスダウンイベントを生成し、インターフェイスタイプをブロードキャストに変更するこの手順は、通知が受け取った近隣がプロトコルソフトウェアの古いバージョンを実行している場合にも実行されます（セクション6.1を参照）。プロトコルの以前のバージョンでは、すべてのインターフェイスが放送されているかのように扱われました。"
    },
    {
      "indent": 6,
      "text": "If the interface type is broadcast, reset the inactivity timer for the neighbor.",
      "ja": "インターフェイスタイプがブロードキャストされている場合、隣接の非アクティブタイマーをリセットします。"
    },
    {
      "indent": 3,
      "text": "State(s): Init Event: 2-Way Received New state: Depends on action routine Action: Determine whether an adjacency will be formed with the neighbor (see Section 6.4). If no adjacency is to be formed, change the neighbor state to 2-Way.",
      "ja": "状態：initイベント：2ウェイ受信新しい状態：アクションルーチンアクションに依存します：隣人と隣接するかどうかを判断します（セクション6.4を参照）。隣接が形成されない場合は、近隣の状態を2ウェイに変更します。"
    },
    {
      "indent": 6,
      "text": "Otherwise, change the neighbor state to ExStart. Initialize the sequence number for this neighbor and declare the local switch to be master for the database exchange process. (See Section 7.2.)",
      "ja": "それ以外の場合は、隣人を変更してスタートします。このネイバーのシーケンス番号を初期化し、データベース交換プロセスのマスターであるとローカルスイッチを宣言します。（セクション7.2を参照してください。）"
    },
    {
      "indent": 3,
      "text": "State(s): ExStart Event: Negotiation Done New state: Exchange Action: The Negotiation Done event signals the start of the database exchange process. See Section 7.2 for a detailed description of this process.",
      "ja": "状態：EXSTARTイベント：交渉完了新しい状態：交換アクション：交渉行為イベントは、データベース交換プロセスの開始を示します。このプロセスの詳細な説明については、セクション7.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "State(s): Exchange Event: Exchange Done New state: Depends on action routine Action: If the neighbor Link state request list is empty, change the neighbor state to Full. This is the adjacency's final state.",
      "ja": "状態：Exchangeイベント：Exchange完了新しい状態：アクションルーチンアクションに依存します。これが隣接の最終状態です。"
    },
    {
      "indent": 6,
      "text": "Otherwise, change the neighbor state to Loading. Begin sending Link State Request packets to the neighbor requesting the most recent link state advertisements, as discovered during the database exchange process. (See Section 7.2.) These advertisements are listed in the link state request list associated with the neighbor.",
      "ja": "それ以外の場合は、隣人を積み込みに変更します。データベース交換プロセス中に発見されたように、最新のリンク状態広告を要求するリンク状態要求パケットの送信をネイバーに開始します。（セクション7.2を参照してください。）これらの広告は、近隣に関連付けられたリンク状態要求リストにリストされています。"
    },
    {
      "indent": 3,
      "text": "State(s): Loading Event: Loading Done New state: Full Action: No action is required beyond changing the neighbor state to Full. This is the adjacency's final state.",
      "ja": "状態：イベントの読み込み：ロードされた新しい状態：完全なアクション：近隣状態を完全に変更する以外にアクションは必要ありません。これが隣接の最終状態です。"
    },
    {
      "indent": 3,
      "text": "State(s): 2-Way Event: AdjOK? New state: Depends on action routine Action: If no adjacency is to be formed with the neighboring switch (see Section 6.4), retain the neighbor state at 2-Way. Otherwise, change the neighbor state to ExStart. Initialize the sequence number for this neighbor and declare the local switch to be master for the database exchange process. (See Section 7.2.)",
      "ja": "状態：2ウェイイベント：adjok？新しい状態：アクションルーチンアクションに依存します：隣接するスイッチ（セクション6.4を参照）に隣接を形成する場合（セクション6.4を参照）、隣人状態を2ウェイで保持します。それ以外の場合は、隣人を変更してスタートします。このネイバーのシーケンス番号を初期化し、データベース交換プロセスのマスターであるとローカルスイッチを宣言します。（セクション7.2を参照してください。）"
    },
    {
      "indent": 3,
      "text": "State(s): ExStart or greater Event: AdjOK? New state: Depends on action routine Action: If an adjacency should still be formed with the neighboring switch (see Section 6.4), no state change and no further action is necessary. Otherwise, tear down the (possibly partially formed) adjacency. Clear the link state retransmission list, database summary list and link state request list and change the neighbor state to 2-Way.",
      "ja": "状態：ExstartまたはGreater Event：Adjok？新しい状態：アクションルーチンアクションに依存します：隣接するスイッチ（セクション6.4を参照）で隣接を形成する必要がある場合（セクション6.4を参照）、状態の変更はなく、それ以上のアクションは必要ありません。それ以外の場合は、（おそらく部分的に形成された）隣接を取り壊します。リンク状態の再送信リスト、データベースの概要リスト、リンク状態要求リストをクリアし、近隣状態を2ウェイに変更します。"
    },
    {
      "indent": 3,
      "text": "State(s): Exchange or greater Event: Seq Number Mismatch New state: ExStart Action: Tear down the (possibly partially formed) adjacency. Clear the link state retransmission list, database summary list and link state request list. Change the neighbor state to ExStart and make another attempt to establish the adjacency.",
      "ja": "状態：交換またはより大きなイベント：seq数の不一致新しい状態：exstartアクション：（おそらく部分的に形成された）隣接を取り壊します。リンク状態再送信リスト、データベースの概要リスト、およびリンク状態リクエストリストをクリアします。近隣の状態を変更して、隣接する別の試みを行います。"
    },
    {
      "indent": 3,
      "text": "State(s): Exchange or greater Event: BadLSReq New state: ExStart Action: Tear down the (possibly partially formed) adjacency. Clear the link state retransmission list, database summary list and link state request list. Change the neighbor state to ExStart and make another attempt to establish the adjacency.",
      "ja": "状態：交換またはより大きなイベント：BADLSREQ NEW STATE：EXSTARTアクション：（おそらく部分的に形成された）隣接を取り壊します。リンク状態再送信リスト、データベースの概要リスト、およびリンク状態リクエストリストをクリアします。近隣の状態を変更して、隣接する別の試みを行います。"
    },
    {
      "indent": 3,
      "text": "State(s): Any state Event: KillNbr New state: Down Action: Terminate the neighbor conversation. Disable the inactivity timer and clear the link state retransmission list, database summary list and link state request list.",
      "ja": "状態：任意の州のイベント：Killnbr New State：Down Action：隣人の会話を終了します。非アクティブタイマーを無効にし、リンク状態再送信リスト、データベースの概要リスト、リンク状態リクエストリストをクリアします。"
    },
    {
      "indent": 3,
      "text": "State(s): Any state Event: LLDown New state: Down Action: Terminate the neighbor conversation. Disable the inactivity timer and clear the link state retransmission list, database summary list and link state request list.",
      "ja": "状態：任意の状態イベント：Lldown New State：Down Action：隣人の会話を終了します。非アクティブタイマーを無効にし、リンク状態再送信リスト、データベースの概要リスト、リンク状態リクエストリストをクリアします。"
    },
    {
      "indent": 3,
      "text": "State(s): Any state Event: Inactivity Timer New state: Down Action: Terminate the neighbor conversation. Disable the inactivity timer and clear the link state retransmission list, database summary list and link state request list.",
      "ja": "状態：任意の状態イベント：非アクティブタイマー新しい状態：ダウンアクション：近隣の会話を終了します。非アクティブタイマーを無効にし、リンク状態再送信リスト、データベースの概要リスト、リンク状態リクエストリストをクリアします。"
    },
    {
      "indent": 3,
      "text": "State(s): 2-Way or greater Event: 1-Way Received New state: Init Action: Tear down the adjacency between the switches, if any. Clear the link state retransmission list, database summary list and link state request list.",
      "ja": "状態：2ウェイ以上のイベント：1ウェイ受信新しい状態：イニシアクション：スイッチ間の隣接を取り壊します（もしあれば）。リンク状態再送信リスト、データベースの概要リスト、およびリンク状態リクエストリストをクリアします。"
    },
    {
      "indent": 3,
      "text": "State(s): 2-Way or greater Event: 2-Way received New state: No state change Action: No action required.",
      "ja": "状態：2ウェイまたは大規模なイベント：2ウェイは新しい状態を受け取りました：状態変更アクションなし：アクションは不要です。"
    },
    {
      "indent": 3,
      "text": "State(s): Init Event: 1-Way received New state: No state change Action: No action required.",
      "ja": "状態：INITイベント：1ウェイ受信新しい状態：状態変更アクションなし：アクションは不要です。"
    },
    {
      "indent": 0,
      "text": "5. Area Data Structure",
      "section_title": true,
      "ja": "5. エリアデータ構造"
    },
    {
      "indent": 3,
      "text": "The area data structure contains all the information needed to run the basic routing algorithm. One of its components is the link state database -- the collection of all switch link and network link advertisements generated by the switches.",
      "ja": "エリアデータ構造には、基本的なルーティングアルゴリズムを実行するために必要なすべての情報が含まれています。そのコンポーネントの1つは、リンク状態データベースです。スイッチによって生成されたすべてのスイッチリンクとネットワークリンク広告のコレクションです。"
    },
    {
      "indent": 3,
      "text": "The area data structure contains the following items: Area ID",
      "ja": "エリアデータ構造には、次の項目が含まれています。エリアID"
    },
    {
      "indent": 6,
      "text": "A 4-octet value identifying the area. Since VLSP does not support multiple areas, the value here is always zero.",
      "ja": "エリアを識別する4-OCTET値。VLSPは複数の領域をサポートしていないため、ここでの値は常にゼロです。"
    },
    {
      "indent": 3,
      "text": "Associated switch interfaces",
      "ja": "関連するスイッチインターフェイス"
    },
    {
      "indent": 6,
      "text": "A list of interface IDs of the local switch interfaces connected to network links.",
      "ja": "ネットワークリンクに接続されたローカルスイッチインターフェイスのインターフェイスIDのリスト。"
    },
    {
      "indent": 3,
      "text": "Link state database",
      "ja": "リンク状態データベース"
    },
    {
      "indent": 6,
      "text": "The collection of all current link state advertisements for the switch fabric. This collection consists of the following:",
      "ja": "スイッチファブリックのすべての現在のリンク状態広告のコレクション。このコレクションは、次のもので構成されています。"
    },
    {
      "indent": 3,
      "text": "Switch link advertisements",
      "ja": "リンク広告を切り替えます"
    },
    {
      "indent": 6,
      "text": "A list of the switch link advertisements for all switches in the fabric. Switch link advertisements describe the state of each switch's interfaces.",
      "ja": "生地内のすべてのスイッチのスイッチリンク広告のリスト。スイッチリンク広告各スイッチのインターフェイスの状態を説明します。"
    },
    {
      "indent": 3,
      "text": "Network link advertisements",
      "ja": "ネットワークリンク広告"
    },
    {
      "indent": 6,
      "text": "A list of the network link advertisements for all multi-access network links in the switch fabric. Network link advertisements describe the set of switches currently connected to each link.",
      "ja": "スイッチファブリックのすべてのマルチアクセスネットワークリンクのネットワークリンク広告のリスト。ネットワークリンク広告は、現在各リンクに接続されているスイッチのセットを説明しています。"
    },
    {
      "indent": 3,
      "text": "Best path(s)",
      "ja": "最高の道"
    },
    {
      "indent": 6,
      "text": "A set of end-to-end hop descriptions for all equal-cost best paths from the local switch to every other switch in the fabric. Each hop is specified by the interface ID of the next link in the path. Best paths are derived from the collected switch link and network link advertisements using the Dijkstra algorithm. [Perlman]",
      "ja": "ローカルスイッチから生地内の他のすべてのスイッチまでのすべての等しいコストのベストパスのエンドツーエンドホップ説明のセット。各ホップは、パスの次のリンクのインターフェイスIDによって指定されます。最適なパスは、Dijkstraアルゴリズムを使用して、収集されたスイッチリンクおよびネットワークリンク広告から派生しています。[Perlman]"
    },
    {
      "indent": 0,
      "text": "5.1 Adding and Deleting Link State Advertisements",
      "section_title": true,
      "ja": "5.1 リンク状態広告の追加と削除"
    },
    {
      "indent": 3,
      "text": "The link state database within the area data structure must contain, at most, a single instance of each link state advertisement. To keep the database current, a switch adds link state advertisements to the database under the following conditions:",
      "ja": "エリアデータ構造内のリンク状態データベースには、せいぜい各リンク状態広告の単一のインスタンスが含まれている必要があります。データベースを最新の状態に保つために、スイッチは次の条件下でリンク状態広告をデータベースに追加します。"
    },
    {
      "indent": 3,
      "text": "o When a link state advertisement is received during the distribution process",
      "ja": "o 配布プロセス中にリンク状態広告が受信されたとき"
    },
    {
      "indent": 6,
      "text": "o When the switch itself generates a link state advertisement",
      "ja": "o スイッチ自体がリンク状態広告を生成するとき"
    },
    {
      "indent": 3,
      "text": "(See Section 8.2.4 for information on installing link state advertisements.)",
      "ja": "（リンク状態広告のインストールについては、セクション8.2.4を参照してください。）"
    },
    {
      "indent": 3,
      "text": "Likewise, a switch deletes link state advertisements from the database under the following conditions:",
      "ja": "同様に、スイッチは、次の条件下でデータベースから状態広告をリンクします。"
    },
    {
      "indent": 3,
      "text": "o When a link state advertisement has been superseded by a newer instance during the flooding process",
      "ja": "o 洪水プロセス中にリンク状態広告が新しいインスタンスに取って代わられたとき"
    },
    {
      "indent": 3,
      "text": "o When the switch generates a newer instance of one of its self-originated advertisements",
      "ja": "o スイッチが自己編成された広告の1つの新しいインスタンスを生成するとき"
    },
    {
      "indent": 3,
      "text": "Note that when an advertisement is deleted from the link state database, it must also be removed from the link state retransmission list of all neighboring switches.",
      "ja": "Link Stateデータベースから広告が削除されている場合、すべての隣接するスイッチのLink State再送信リストからも削除する必要があることに注意してください。"
    },
    {
      "indent": 0,
      "text": "5.2 Accessing Link State Advertisements",
      "section_title": true,
      "ja": "5.2 リンク状態広告へのアクセス"
    },
    {
      "indent": 3,
      "text": "An implementation of the VLS protocol must provide access to individual link state advertisements, based on the advertisement's type, link state identifier, and advertising switch [1]. This lookup function is invoked during the link state distribution procedure and during calculation of the set of best paths. In addition, a switch can use the function to determine whether it has originated a particular link state advertisement, and if so, with what sequence number.",
      "ja": "VLSプロトコルの実装は、広告のタイプ、リンク状態識別子、および広告スイッチ[1]に基づいて、個々のリンク状態広告へのアクセスを提供する必要があります。このルックアップ関数は、リンク状態分布手順と最適なパスのセットの計算中に呼び出されます。さらに、スイッチは関数を使用して、特定のリンク状態広告を発信したかどうかを判断できます。"
    },
    {
      "indent": 0,
      "text": "5.3 Best Path Lookup",
      "section_title": true,
      "ja": "5.3 最高のパスルックアップ"
    },
    {
      "indent": 3,
      "text": "An implementation of the VLS protocol must provide access to multiple equal-cost best paths, based on the base MAC addresses of the source and destination switches. This lookup function should return up to three equal-cost paths. Paths should be returned as lists of end-to-end hop information, with each hop specified as a interface ID of the next link in the path -- the 6-octet base MAC address of the next switch and the 4-octet local port number of the link interface.",
      "ja": "VLSプロトコルの実装は、ソーススイッチと宛先スイッチのベースMACアドレスに基づいて、複数の等コストの最適なパスへのアクセスを提供する必要があります。このルックアップ関数は、最大3つの等しいコストパスを返す必要があります。パスはエンドツーエンドホップ情報のリストとして返され、各ホップはパスの次のリンクのインターフェイスIDとして指定されています - 次のスイッチの6オクテットベースMACアドレスと4-OCTETローカルポートリンクインターフェイスの数。"
    },
    {
      "indent": 0,
      "text": "6. Discovery Process",
      "section_title": true,
      "ja": "6. 発見プロセス"
    },
    {
      "indent": 3,
      "text": "The first operational stage of the VLS protocol is the discovery process. During this stage, each switch dynamically detects its neighboring switches and establishes a relationship with each of these neighbors. This process has the following component steps: o Neighboring switches are detected on each functioning network interface.",
      "ja": "VLSプロトコルの最初の運用段階は、発見プロセスです。この段階では、各スイッチは隣接するスイッチを動的に検出し、これらの各隣人との関係を確立します。このプロセスには、次のコンポーネント手順があります。O各機能ネットワークインターフェイスで隣接するスイッチが検出されます。"
    },
    {
      "indent": 3,
      "text": "o Bidirectional communication is established with each neighbor switch.",
      "ja": "o 双方向通信は、各隣接スイッチで確立されます。"
    },
    {
      "indent": 3,
      "text": "o A designated switch and backup designated switch are selected for each multi-access network link.",
      "ja": "o 指定されたスイッチとバックアップ指定スイッチは、マルチアクセスネットワークリンクごとに選択されます。"
    },
    {
      "indent": 3,
      "text": "o An adjacent relationship is established with selected neighbors on each link.",
      "ja": "o 各リンクの選択された隣人とともに隣接する関係が確立されます。"
    },
    {
      "indent": 0,
      "text": "6.1 Neighbor Discovery",
      "section_title": true,
      "ja": "6.1 隣人の発見"
    },
    {
      "indent": 3,
      "text": "When the switch first comes on line, VLSP assumes all network links are point-to-point and no more than one neighboring switch will be discovered on any one port. Therefore, at startup, VLSP relies on the VlanHello protocol [IDhello] for the discovery of its neighbor switches.",
      "ja": "スイッチが最初にオンラインになると、VLSPはすべてのネットワークリンクがポイントツーポイントであり、1つのポートで1つの隣接スイッチが発見されると仮定します。したがって、スタートアップでは、VLSPは隣接スイッチの発見のためにVlanhelloプロトコル[Idhello]に依存しています。"
    },
    {
      "indent": 3,
      "text": "As each neighbor is detected, VlanHello triggers a Found Neighbor event, notifying VLSP that a new neighbor has been discovered. (See [IDhello] for a description of the Found Neighbor event and the information passed.) VLSP enters the neighbor switch ID in the list of known neighbors and creates a new neighbor data structure with a neighbor status of Down. A Hello Received neighbor event is then generated, which changes the neighbor state to ExStart.",
      "ja": "各隣人が検出されると、Vlanhelloは発見された隣人イベントをトリガーし、新しい隣人が発見されたことをVLSPに通知します。（見つかった隣人イベントと渡された情報の説明については、[idhello]を参照してください。）VLSPは、既知の隣人のリストに近隣のスイッチIDに入り、隣のステータスを備えた新しい近隣データ構造を作成します。その後、ハロー受信した隣人イベントが生成され、隣人状態を変更してスタートします。"
    },
    {
      "indent": 3,
      "text": "There are two circumstances under which VLSP will change the type of an interface to broadcast:",
      "ja": "VLSPがブロードキャストするインターフェイスのタイプを変更する2つの状況があります。"
    },
    {
      "indent": 3,
      "text": "o If VLSP receives a subsequent notification from VlanHello, specifying a second (different) neighbor switch on the port., the interface is then known to be multi-access. VLSP generates an Interface Down event for the interface, resets the interface type to broadcast, and then generates an Interface Up event.",
      "ja": "o VLSPがVlanhelloからその後の通知を受け取っている場合、ポートの2番目の（異なる）隣接スイッチを指定すると、インターフェイスはマルチアクセスであることが知られています。VLSPは、インターフェイスのインターフェイスダウンイベントを生成し、インターフェイスタイプをリセットしてブロードキャストし、インターフェイスアップイベントを生成します。"
    },
    {
      "indent": 3,
      "text": "o If the functional level of the neighbor switch is less than 2, the neighbor is running a previous version of the VLSP software in which all links were treated as broadcast links. VLSP immediately changes the interface type to broadcast and generates an Interface Up event.",
      "ja": "o 近隣スイッチの関数レベルが2未満の場合、近隣はすべてのリンクがブロードキャストリンクとして扱われたVLSPソフトウェアの以前のバージョンを実行しています。VLSPはすぐにインターフェイスタイプを変更してブロードキャストし、インターフェイスアップイベントを生成します。"
    },
    {
      "indent": 6,
      "text": "In both cases, VLSP assumes control of communication over the interface by exchanging its own VLSP Hello packets with the neighbors on the link.",
      "ja": "どちらの場合も、VLSPは、リンク上の近隣のVLSPハローパケットを交換することにより、インターフェイス上の通信の制御を想定しています。"
    },
    {
      "indent": 3,
      "text": "Note: These Hello packets are in addition to the Interswitch Keepalive messages sent by VlanHello. VlanHello still continues to monitor the condition of the interface and notifies VLSP of any change.",
      "ja": "注：これらのハローパケットは、Vlanhelloが送信したスイッチInterswitch Keepaliveメッセージに追加されています。Vlanhelloは依然としてインターフェイスの状態を監視し続けており、VLSPに変化を通知しています。"
    },
    {
      "indent": 3,
      "text": "Each Hello packet contains the following data used during the discovery process on multi-access links:",
      "ja": "各ハローパケットには、マルチアクセスリンクの発見プロセスで使用される次のデータが含まれています。"
    },
    {
      "indent": 3,
      "text": "o The switch ID and priority of the sending switch",
      "ja": "o スイッチIDと送信スイッチの優先度"
    },
    {
      "indent": 3,
      "text": "o Values specifying the interval timers to be used for sending Hello packets and deciding whether to declare a neighbor switch Down.",
      "ja": "o ハローパケットを送信し、近隣のスイッチを宣言するかどうかを決定するために使用されるインターバルタイマーを指定する値。"
    },
    {
      "indent": 3,
      "text": "o The switch ID of the designated switch and the backup designated switch for the link, as understood by the sending switch",
      "ja": "o 送信スイッチで理解されるように、指定されたスイッチのスイッチIDとリンクのバックアップ指定スイッチ"
    },
    {
      "indent": 3,
      "text": "o A list of switch IDs of all neighboring switches seen so far on the link",
      "ja": "o これまでにリンクに見られるすべての隣接するスイッチのスイッチIDのリスト"
    },
    {
      "indent": 3,
      "text": "For a detailed description of the Hello packet format, see Section 10.6.1.",
      "ja": "ハローパケット形式の詳細な説明については、セクション10.6.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "When VLSP receives a Hello packet (on a broadcast link), it first attempts to identify the sending switch by matching its switch ID to one of the known neighbors listed in the interface data structure. If this is the first Hello packet received from the switch, the switch ID is entered in the list of known neighbors and a new neighbor data structure is created with a neighbor status of Down.",
      "ja": "VLSPがハローパケット（ブロードキャストリンクで）を受信すると、最初にスイッチIDをインターフェイスデータ構造にリストされている既知の近隣の1つに一致させることにより、送信スイッチを識別しようとします。これがスイッチから受信した最初のハローパケットである場合、スイッチIDは既知の隣人のリストに入力され、新しい隣接データ構造が[ダウン]のステータスで作成されます。"
    },
    {
      "indent": 3,
      "text": "At this point, the remainder of the Hello packet is examined and the appropriate interface and neighbor events are generated. In all cases, a neighbor Hello Received event is generated. Other events may also be generated, triggering further steps in the discovery process or other actions, as appropriate.",
      "ja": "この時点で、ハローパケットの残りの部分が調べられ、適切なインターフェイスと隣接イベントが生成されます。すべての場合において、隣人のhello受信イベントが生成されます。他のイベントも生成される場合があり、必要に応じて、発見プロセスまたは他のアクションのさらなるステップをトリガーします。"
    },
    {
      "indent": 3,
      "text": "For a detailed description of the interface state machine, see Section 3.3. For a detailed description of the neighbor state machine, see Section 4.3.",
      "ja": "インターフェイス状態マシンの詳細な説明については、セクション3.3を参照してください。近隣の状態マシンの詳細な説明については、セクション4.3を参照してください。"
    },
    {
      "indent": 0,
      "text": "6.2 Bidirectional Communication",
      "section_title": true,
      "ja": "6.2 双方向コミュニケーション"
    },
    {
      "indent": 3,
      "text": "Before a conversation can proceed with a neighbor switch, bidirectional communication must be established with that neighbor. Bidirectional communication is detected in one of two ways: o On a point-to-point link, the VlanHello protocol sees its own switch ID listed in an Interswitch Keepalive message it has received from the neighbor.",
      "ja": "会話が隣のスイッチを使用する前に、その隣人との双方向のコミュニケーションを確立する必要があります。双方向通信は、2つの方法のいずれかで検出されます。oポイントツーポイントリンクで、Vlanhelloプロトコルは、隣人から受け取ったスイッチのキープライブメッセージにリストされている独自のスイッチIDを見ます。"
    },
    {
      "indent": 3,
      "text": "o On a multi-access link, VLSP sees its own switch ID listed in a VLSP Hello packet it has received from the neighbor.",
      "ja": "o マルチアクセスリンクで、VLSPは、隣人から受け取ったVLSPハローパケットにリストされている独自のスイッチIDを見ます。"
    },
    {
      "indent": 3,
      "text": "In either case, a neighbor 2-Way Received neighbor event is generated.",
      "ja": "いずれの場合も、隣の2ウェイが隣接したイベントが生成されます。"
    },
    {
      "indent": 3,
      "text": "Once bidirectional communication has been established with a neighbor, the local switch determines whether an adjacency will be formed with the neighbor. However, if the link is a multi-access link, a designated switch and a backup designated switch must first be selected for the link. The next section contains a description of the designated switch, the backup designated switch, and the selection process.",
      "ja": "隣人との双方向通信が確立されると、ローカルスイッチは隣人と隣接するかどうかを決定します。ただし、リンクがマルチアクセスリンクである場合、指定されたスイッチとバックアップ指定スイッチを最初にリンク用に選択する必要があります。次のセクションには、指定されたスイッチ、バックアップ指定スイッチ、および選択プロセスの説明が含まれています。"
    },
    {
      "indent": 0,
      "text": "6.3 Designated Switch",
      "section_title": true,
      "ja": "6.3 指定されたスイッチ"
    },
    {
      "indent": 3,
      "text": "Every multi-access network link has a designated switch. The designated switch performs the following functions for the routing protocol:",
      "ja": "すべてのマルチアクセスネットワークリンクには、指定されたスイッチがあります。指定されたスイッチは、ルーティングプロトコルの次の機能を実行します。"
    },
    {
      "indent": 3,
      "text": "o The designated switch originates a network link advertisement on behalf of the link, listing the set of switches (including the designated switch itself) currently attached to the link. For a detailed description of network link advertisements, see Section 11.3.",
      "ja": "o 指定されたスイッチは、リンクに代わってネットワークリンク広告を発信し、現在リンクに添付されているスイッチのセット（指定されたスイッチ自体を含む）をリストします。ネットワークリンク広告の詳細な説明については、セクション11.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "o The designated switch becomes adjacent to all other switches on the link. Since the link state databases are synchronized across adjacencies, the designated switch plays a central part in the synchronization process. For a description of the synchronization process, see Section 7.",
      "ja": "o 指定されたスイッチは、リンク上の他のすべてのスイッチに隣接します。リンク状態データベースは隣接全体で同期されるため、指定されたスイッチは同期プロセスの中心的な部分を再生します。同期プロセスの説明については、セクション7を参照してください。"
    },
    {
      "indent": 3,
      "text": "Each multi-access network link also has a backup designated switch. The primary function of the backup designated switch is to act as a standby for the designated switch. If the current designated switch fails, the backup designated switch becomes the designated switch.",
      "ja": "各マルチアクセスネットワークリンクには、バックアップ指定スイッチもあります。バックアップ指定スイッチの主な機能は、指定されたスイッチのスタンバイとして機能することです。現在の指定されたスイッチが失敗した場合、バックアップ指定スイッチが指定されたスイッチになります。"
    },
    {
      "indent": 3,
      "text": "To facilitate this transition, the backup designated switch forms an adjacency with every other switch on the link. Thus, when the backup designated switch must take over for the designated switch, its link state database is already synchronized with the databases of all other switches on the link.",
      "ja": "この遷移を容易にするために、バックアップ指定スイッチは、リンク上の他のすべてのスイッチとともに隣接を形成します。したがって、指定されたスイッチが指定されたスイッチを引き継ぐ必要がある場合、そのリンク状態データベースは、リンク上の他のすべてのスイッチのデータベースと既に同期されています。"
    },
    {
      "indent": 3,
      "text": "Note: Point-to-point network links have neither a designated switch or a backup designated switch.",
      "ja": "注：ポイントツーポイントネットワークリンクには、指定されたスイッチもバックアップ指定スイッチもありません。"
    },
    {
      "indent": 0,
      "text": "6.3.1 Selecting the Designated Switch",
      "section_title": true,
      "ja": "6.3.1 指定されたスイッチの選択"
    },
    {
      "indent": 3,
      "text": "When a multi-access link interface first becomes functional, the switch sets a one-shot Wait timer (with a value of SwitchDeadInterval seconds) for the interface. The purpose of this timer is to ensure that all switches attached to the link have a chance to establish bidirectional communication before the designated switch and backup designated switch are selected for the link.",
      "ja": "マルチアクセスリンクインターフェイスが最初に機能すると、スイッチはインターフェイスのワンショット待機タイマー（スイッチインターバル秒の値）を設定します。このタイマーの目的は、リンクに接続されているすべてのスイッチが、指定されたスイッチとバックアップ指定スイッチがリンク用に選択される前に双方向通信を確立する機会があることを確認することです。"
    },
    {
      "indent": 3,
      "text": "When the Wait timer is set, the interface enters the Waiting state. During this state, the switch exchanges Hello packets with its neighbors attempting to establish bidirectional communication. The interface leaves the Waiting state under one of the following conditions:",
      "ja": "待機タイマーが設定されると、インターフェイスは待機状態に入ります。この状態では、スイッチは隣人と双方向のコミュニケーションを確立しようとするハローパケットを交換します。インターフェイスは、次の条件のいずれかで待機状態を離れます。"
    },
    {
      "indent": 3,
      "text": "o The Wait timer expires.",
      "ja": "o 待機タイマーの有効期限が切れます。"
    },
    {
      "indent": 3,
      "text": "o A Hello packet is received indicating that a designated switch or a backup designated switch has already been specified for the interface.",
      "ja": "o ハローパケットが受信され、指定されたスイッチまたはバックアップ指定スイッチが既にインターフェイスに指定されていることを示しています。"
    },
    {
      "indent": 3,
      "text": "At this point, if the switch sees that a designated switch has already been selected for the link, the switch accepts that designated switch, regardless of its own switch priority and MAC address. This situation typically means the switch has come up late on a fully functioning link. Although this makes it harder to predict the identity of the designated switch on a particular link, it ensures that the designated switch does not change needlessly, necessitating a resynchronization of the databases.",
      "ja": "この時点で、スイッチがリンクに対して指定されたスイッチが既に選択されていることを確認する場合、スイッチは、独自のスイッチの優先度とMACアドレスに関係なく、指定されたスイッチを受け入れます。この状況は通常、完全に機能するリンクでスイッチが遅れていることを意味します。これにより、特定のリンクの指定されたスイッチのIDを予測することが難しくなりますが、指定されたスイッチが不必要に変化しないことを保証し、データベースの再同期を必要とします。"
    },
    {
      "indent": 3,
      "text": "If no designated switch is currently specified for the link, the switch begins the actual selection process. Note that this selection algorithm operates only on a list of neighbor switches that are eligible to become the designated switch. A neighbor is eligible to be the designated switch if it has a switch priority greater than zero and its neighbor state is 2-Way or greater. The local switch includes itself on the list of eligible switches as long as it has a switch priority greater than zero.",
      "ja": "現在、リンクに指定されたスイッチが指定されていない場合、スイッチは実際の選択プロセスを開始します。この選択アルゴリズムは、指定されたスイッチになる資格があるネイバースイッチのリストでのみ動作することに注意してください。隣人は、ゼロより大きいスイッチの優先順位があり、その近隣状態が2方向以上である場合、指定されたスイッチになる資格があります。ローカルスイッチには、ゼロを超えるスイッチの優先度がある限り、対象となるスイッチのリストにそれ自体が含まれています。"
    },
    {
      "indent": 3,
      "text": "The selection process includes the following steps:",
      "ja": "選択プロセスには、次の手順が含まれています。"
    },
    {
      "indent": 3,
      "text": "1. The current values of the link's designated switch and backup designated switch are saved for use in step 6.",
      "ja": "1. リンクの指定されたスイッチとバックアップ指定スイッチの現在の値は、ステップ6で使用するために保存されます。"
    },
    {
      "indent": 3,
      "text": "2. The new backup designated switch is selected as follows:",
      "ja": "2. 新しいバックアップ指定スイッチは、次のように選択されます。"
    },
    {
      "indent": 6,
      "text": "a) Eliminate from consideration those switches that have declared themselves to be the designated switch.",
      "ja": "a) 指定されたスイッチであると宣言したスイッチを考慮して排除します。"
    },
    {
      "indent": 6,
      "text": "b) If one or more of the remaining switches have declared themselves to be the backup designated switch, eliminate from consideration all other switches.",
      "ja": "b) 残りのスイッチの1つ以上が、自分自身がバックアップ指定スイッチであると宣言されている場合、他のすべてのスイッチを考慮することから排除します。"
    },
    {
      "indent": 6,
      "text": "c) From the remaining list of eligible switches, select the switch having the highest switch priority as the backup designated switch. If multiple switches have the same (highest) priority, select the switch with the highest switch ID as the backup designated switch.",
      "ja": "c) 対象となるスイッチの残りのリストから、バックアップ指定スイッチとしてスイッチの優先度が最も高いスイッチを選択します。複数のスイッチが同じ（最高の）優先度がある場合、バックアップ指定スイッチとして最高のスイッチIDを持つスイッチを選択します。"
    },
    {
      "indent": 3,
      "text": "3. The new designated switch is selected as follows:",
      "ja": "3. 新しい指定されたスイッチは次のように選択されます。"
    },
    {
      "indent": 6,
      "text": "a) If one or more of the switches have declared themselves to be the designated switch, eliminate from consideration all other switches.",
      "ja": "a) 1つまたは複数のスイッチが指定されたスイッチであると宣言されている場合、他のすべてのスイッチを考慮することから排除します。"
    },
    {
      "indent": 6,
      "text": "b) From the remaining list of eligible switches, select the switch having the highest switch priority as the designated switch. If multiple switches have the same (highest) priority, select the switch with the highest switch ID as the designated switch.",
      "ja": "b) 対象となるスイッチの残りのリストから、指定されたスイッチとして最高のスイッチの優先度を持つスイッチを選択します。複数のスイッチに同じ（最高の）優先度がある場合は、指定されたスイッチとして最高のスイッチIDを持つスイッチを選択します。"
    },
    {
      "indent": 3,
      "text": "4. If the local switch has been newly selected as either the designated switch or the backup designated switch, or is now no longer the designated switch or the backup designated switch, repeat steps 2 and 3, above, and then proceed to step 5.",
      "ja": "4. ローカルスイッチが指定されたスイッチまたはバックアップ指定スイッチのいずれかとして新たに選択されている場合、または指定されたスイッチまたはバックアップ指定スイッチではなく、上記の手順2と3を繰り返して、ステップ5に進みます。"
    },
    {
      "indent": 6,
      "text": "If the local switch is now the designated switch, it will eliminate itself from consideration at step 2a when the selection of the backup designated switch is repeated. Likewise, if the local switch is now the backup designated switch, it will eliminate itself from consideration at step 3a when the selection of the designated switch is repeated. This ensures that no switch will select itself as both backup designated switch and designated switch [2].",
      "ja": "ローカルスイッチが指定されたスイッチになった場合、バックアップ指定スイッチの選択が繰り返されると、ステップ2Aでの考慮からそれが排除されます。同様に、ローカルスイッチがバックアップ指定スイッチになると、指定されたスイッチの選択が繰り返されると、ステップ3Aでの検討からそれ自体が排除されます。これにより、バックアップ指定スイッチと指定されたスイッチ[2]の両方として、スイッチなしがそれ自体を選択することが保証されます。"
    },
    {
      "indent": 3,
      "text": "5. Set the interface state to the appropriate value, as follows:",
      "ja": "5. 次のように、インターフェイスの状態を適切な値に設定します。"
    },
    {
      "indent": 3,
      "text": "o If the local switch is now the designated switch, set the interface state to DS.",
      "ja": "o ローカルスイッチが指定されたスイッチになる場合、インターフェイス状態をDSに設定します。"
    },
    {
      "indent": 3,
      "text": "o If the local switch is now the backup designated switch, set the interface state to Backup.",
      "ja": "o ローカルスイッチがバックアップ指定スイッチになった場合、インターフェイスの状態をバックアップに設定します。"
    },
    {
      "indent": 3,
      "text": "o Otherwise, set the interface state to DS Other.",
      "ja": "o それ以外の場合は、インターフェイス状態を他のDSに設定します。"
    },
    {
      "indent": 3,
      "text": "6. If either the designated switch or backup designated switch has now changed, the set of adjacencies associated with this link must be modified. Some adjacencies may need to be formed, while others may need to be broken. Generate the neighbor AdjOK? event for all neighbors with a state of 2-Way or higher to trigger a reexamination of adjacency eligibility.",
      "ja": "6. 指定されたスイッチまたはバックアップ指定スイッチのいずれかが変更された場合、このリンクに関連付けられた隣接セットを変更する必要があります。いくつかの隣接を形成する必要がある場合がありますが、他の隣接を壊す必要がある場合があります。ネイバーアジックを生成しますか？隣接する適格性の再審査をトリガーするために、2方向以上の状態を持つすべての隣人のイベント。"
    },
    {
      "indent": 3,
      "text": "Caution: If VLSP is implemented with configurable parameters, care must be exercised in specifying the switch priorities. Note that if the local switch is not itself eligible to become the designated switch (i.e., it has a switch priority of 0), it is possible that neither a backup designated switch nor a designated switch will be selected by the above procedure. Note also that if the local switch is the only attached switch that is eligible to become the designated switch, it will select itself as designated switch and there will be no backup designated switch for the link. For this reason, it is advisable to specify a default switch priority of 1 for all switches.",
      "ja": "注意：VLSPが設定可能なパラメーターで実装されている場合、スイッチの優先順位を指定する際に注意する必要があります。ローカルスイッチ自体が指定されたスイッチになる資格がない場合（つまり、スイッチの優先度が0の場合）、上記の手順で指定されたスイッチも指定されたスイッチも選択されない可能性があることに注意してください。また、ローカルスイッチが指定されたスイッチになる資格がある唯一の接続されたスイッチである場合、指定されたスイッチとしてそれ自体を選択し、リンクのバックアップ指定スイッチはありません。このため、すべてのスイッチに対してデフォルトのスイッチの優先度を1の優先度を指定することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "6.4 Adjacencies",
      "section_title": true,
      "ja": "6.4 隣接"
    },
    {
      "indent": 3,
      "text": "VLSP creates adjacencies between neighboring switches for the purpose of exchanging routing information. Not every two neighboring switches will become adjacent. On a multi-access link, an adjacency is only formed between two switches if one of them is either the designated switch or the backup designated switch.",
      "ja": "VLSPは、ルーティング情報を交換する目的で、隣接するスイッチ間の隣接を作成します。2つの隣接するスイッチごとに隣接するわけではありません。マルチアクセスリンクでは、2つのスイッチが指定されたスイッチまたはバックアップ指定スイッチのいずれかである場合、2つのスイッチの間に隣接性が形成されます。"
    },
    {
      "indent": 3,
      "text": "Note that an adjacency is bound to the network link that the two switches have in common. Therefore, if two switches have multiple links in common, they may also have multiple adjacencies between them.",
      "ja": "隣接は、2つのスイッチの共通点があるネットワークリンクに拘束されることに注意してください。したがって、2つのスイッチに共通の複数のリンクがある場合、それらの間に複数の隣接がある場合があります。"
    },
    {
      "indent": 3,
      "text": "The decision to form an adjacency occurs in two places in the neighbor state machine:",
      "ja": "隣接を形成するという決定は、近隣の州のマシンの2つの場所で発生します。"
    },
    {
      "indent": 3,
      "text": "o When bidirectional communication is initially established with the neighbor.",
      "ja": "o 隣人との双方向コミュニケーションが最初に確立されたとき。"
    },
    {
      "indent": 3,
      "text": "o When the designated switch or backup designated switch on the attached link changes.",
      "ja": "o 指定されたスイッチまたはバックアップが添付されたリンクのスイッチを指定したとき。"
    },
    {
      "indent": 3,
      "text": "The rules for establishing an adjacency between two neighboring switches are as follows:",
      "ja": "2つの隣接するスイッチ間で隣接を確立するためのルールは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o On a point-to-point link, the two neighboring switches always establish an adjacency.",
      "ja": "o ポイントツーポイントリンクでは、2つの隣接するスイッチが常に隣接を確立します。"
    },
    {
      "indent": 3,
      "text": "o On a multi-access link, an adjacency is established with the neighboring switch under one of the following conditions: o The local switch itself is the designated switch. o The local switch itself is the backup designated switch. o The neighboring switch is the designated switch. o The neighboring switch is the backup designated switch.",
      "ja": "o マルチアクセスリンクでは、次の条件のいずれかで隣接するスイッチを使用して隣接する隣接が確立されます。oローカルスイッチ自体は指定されたスイッチです。oローカルスイッチ自体は、バックアップ指定スイッチです。o隣接するスイッチは指定されたスイッチです。o隣接するスイッチは、バックアップ指定スイッチです。"
    },
    {
      "indent": 3,
      "text": "If no adjacency is formed between two neighboring switches, the state of the neighbor conversation remains set to 2-Way.",
      "ja": "2つの隣接するスイッチの間に隣接が形成されていない場合、隣人の会話の状態は2ウェイに設定されたままです。"
    },
    {
      "indent": 0,
      "text": "7. Synchronizing the Databases",
      "section_title": true,
      "ja": "7. データベースの同期"
    },
    {
      "indent": 3,
      "text": "In an SPF-based routing algorithm, it is important for the link state databases of all switches to stay synchronized. VLSP simplifies this process by requiring only adjacent switches to remain synchronized.",
      "ja": "SPFベースのルーティングアルゴリズムでは、すべてのスイッチのリンク状態データベースが同期したままになることが重要です。VLSPは、隣接するスイッチのみが同期したままにすることを要求することにより、このプロセスを簡素化します。"
    },
    {
      "indent": 3,
      "text": "The synchronization process begins when the switches attempt to bring up the adjacency. Each switch in the adjacency describes its database by sending a sequence of Database Description packets to its neighbor. Each Database Description packet describes a set of link state advertisements belonging to the database. When the neighbor sees a link state advertisement that is more recent than its own database copy, it makes a note to request this newer advertisement.",
      "ja": "同期プロセスは、スイッチが隣接を引き上げようとすると始まります。隣接する各スイッチは、データベースの説明パケットのシーケンスをネイバーに送信することにより、データベースを説明します。各データベースの説明パケットは、データベースに属する一連のリンク状態広告を記述します。隣人が独自のデータベースコピーよりも最近のリンク状態広告を見ると、この新しい広告を要求するメモを作成します。"
    },
    {
      "indent": 3,
      "text": "During this exchange of Database Description packets (known as the database exchange process), the two switches form a master/slave relationship. Database Description packets sent by the master are known as polls, and each poll contains a sequence number. Polls are acknowledged by the slave by echoing the sequence number in the Database Description response packet.",
      "ja": "このデータベース説明パケットの交換（データベース交換プロセスと呼ばれる）の間、2つのスイッチはマスター/スレーブ関係を形成します。マスターによって送信されたデータベースの説明パケットは投票と呼ばれ、各投票にはシーケンス番号が含まれています。投票は、データベース説明応答パケットのシーケンス番号をエコーすることにより、スレーブによって認められます。"
    },
    {
      "indent": 3,
      "text": "When all Database Description packets have been sent and acknowledged, the database exchange process is completed. At this point, each switch in the exchange has a list of link state advertisements for which its neighbor has more recent instances. These advertisements are requested using Link State Request packets.",
      "ja": "すべてのデータベースの説明パケットが送信および承認された場合、データベース交換プロセスが完了します。この時点で、Exchangeの各スイッチには、隣人がより最近のインスタンスを持っているリンク状態広告のリストがあります。これらの広告は、リンク状態要求パケットを使用して要求されます。"
    },
    {
      "indent": 3,
      "text": "Once the database exchange process has completed and all Link State Requests have been satisfied, the databases are deemed synchronized and the neighbor states of the two switches are set to Full, indicating that the adjacency is fully functional. Fully functional adjacencies are advertised in the link state advertisements of the two switches [3].",
      "ja": "データベース交換プロセスが完了し、すべてのリンク状態要求が満たされると、データベースは同期され、2つのスイッチの隣接状態が完全に設定され、隣接が完全に機能していることを示します。完全に機能的な隣接は、2つのスイッチのリンク状態広告で宣伝されています[3]。"
    },
    {
      "indent": 0,
      "text": "7.1 Link State Advertisements",
      "section_title": true,
      "ja": "7.1 状態広告をリンクします"
    },
    {
      "indent": 3,
      "text": "Link state advertisements form the core of the database from which a switch calculates the set of best paths to the other switches in the fabric.",
      "ja": "リンク状態広告は、スイッチがファブリックの他のスイッチへの最適なパスのセットを計算するデータベースのコアを形成します。"
    },
    {
      "indent": 3,
      "text": "Each link state advertisement begins with a standard header. This header contains three data items that uniquely identify the link state advertisement.",
      "ja": "各リンク状態広告は、標準ヘッダーから始まります。このヘッダーには、リンク状態広告を一意に識別する3つのデータ項目が含まれています。"
    },
    {
      "indent": 3,
      "text": "o The link state type. Possible values are as follows:",
      "ja": "o リンク状態タイプ。考えられる値は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "1 Switch link advertisement -- describes the collected states of the switch's interfaces.",
      "ja": "1スイッチリンク広告 - スイッチのインターフェイスの収集された状態について説明します。"
    },
    {
      "indent": 6,
      "text": "2 Network link advertisement -- describes the set of switches attached to the network link.",
      "ja": "2ネットワークリンク広告 - ネットワークリンクに接続されたスイッチのセットについて説明します。"
    },
    {
      "indent": 3,
      "text": "o The link state ID, defined as follows:",
      "ja": "o 次のように定義されたリンク状態ID："
    },
    {
      "indent": 6,
      "text": "o For a switch link advertisement -- the switch ID of the originating switch",
      "ja": "o スイッチリンク広告の場合 - 発信スイッチのスイッチID"
    },
    {
      "indent": 6,
      "text": "o For a network link advertisement -- the switch ID of the designated switch for the link",
      "ja": "o ネットワークリンク広告の場合 - リンクの指定されたスイッチのスイッチID"
    },
    {
      "indent": 3,
      "text": "o The switch ID of the advertising switch -- the switch that generated the advertisement",
      "ja": "o 広告スイッチのスイッチID-広告を生成したスイッチ"
    },
    {
      "indent": 3,
      "text": "The link state advertisement header also contains three data items that are used to determine which instance of a particular link state advertisement is the most current. (See Section 7.1.1 for a description of how to determine which instance of a link state advertisement is the most current.)",
      "ja": "Link State Advertisementヘッダーには、特定のリンク状態広告のインスタンスが最新のインスタンスを決定するために使用される3つのデータ項目も含まれています。（リンク状態広告のどのインスタンスが最新のものであるかを判断する方法の説明については、セクション7.1.1を参照してください。）"
    },
    {
      "indent": 3,
      "text": "o The link state sequence number",
      "ja": "o リンク状態シーケンス番号"
    },
    {
      "indent": 3,
      "text": "o The link state age, stored in seconds",
      "ja": "o 数秒で保存されているリンク状態年齢"
    },
    {
      "indent": 3,
      "text": "o The link state checksum, a 16-bit unsigned value calculated for the entire contents of the link state advertisement, with the exception of the age field",
      "ja": "o リンク状態チェックサム、年齢フィールドを除き、リンク状態広告の内容全体に対して計算された16ビットの符号なし値"
    },
    {
      "indent": 3,
      "text": "The remainder of each link state advertisement contains data specific to the type of the advertisement. See Section 11 for a detailed description of the link state header, as well as the format of a switch link or network link advertisement.",
      "ja": "各リンク状態広告の残りの部分には、広告のタイプに固有のデータが含まれています。リンク状態ヘッダーの詳細な説明と、スイッチリンクまたはネットワークリンク広告の形式については、セクション11を参照してください。"
    },
    {
      "indent": 0,
      "text": "7.1.1 Determining Which Link State Advertisement Is Newer",
      "section_title": true,
      "ja": "7.1.1 どのリンク状態広告を決定するかを決定します"
    },
    {
      "indent": 3,
      "text": "At various times while synchronizing or updating the link state database, a switch must determine which instance of a particular link state advertisement is the most current. This decision is made as follows:",
      "ja": "リンク状態データベースの同期または更新中にさまざまな時期に、スイッチは特定のリンク状態広告のインスタンスが最新のインスタンスを決定する必要があります。この決定は次のように行われます。"
    },
    {
      "indent": 3,
      "text": "o The advertisement having the greater sequence number is the most current.",
      "ja": "o シーケンス番号が大きい広告は最新です。"
    },
    {
      "indent": 3,
      "text": "o If both instances have the same sequence number, then:",
      "ja": "o 両方のインスタンスが同じシーケンス番号を持っている場合、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "o If the two instances have different checksum values, then the instance having the larger checksum is considered the most current [4].",
      "ja": "o 2つのインスタンスが異なるチェックサム値を持っている場合、より大きなチェックサムを持つインスタンスは最新のものと見なされます[4]。"
    },
    {
      "indent": 3,
      "text": "o If both instances have the same sequence number and the same checksum value, then:",
      "ja": "o 両方のインスタンスが同じシーケンス番号と同じチェックサム値を持っている場合、次のとおりです。"
    },
    {
      "indent": 6,
      "text": "o If one (and only one) of the instances is of age MaxAge, then the instance of age MaxAge is considered the most current [5].",
      "ja": "o インスタンスの1つ（および1つのみ）が年齢の最大値である場合、年齢のマックスのインスタンスは最新のものと見なされます[5]。"
    },
    {
      "indent": 6,
      "text": "o Else, if the ages of the two instances differ by more than MaxAgeDiff, the instance having the smaller (younger) age is considered the most current [6].",
      "ja": "o それ以外の場合、2つのインスタンスの年齢が最大の場合よりも大きく異なる場合、より少ない（若い）年齢を持つインスタンスは最新のものと見なされます[6]。"
    },
    {
      "indent": 6,
      "text": "o Else, the two instances are considered identical.",
      "ja": "o それ以外の場合、2つのインスタンスは同一と見なされます。"
    },
    {
      "indent": 0,
      "text": "7.2 Database Exchange Process",
      "section_title": true,
      "ja": "7.2 データベース交換プロセス"
    },
    {
      "indent": 3,
      "text": "There are two stages to the database exchange process:",
      "ja": "データベース交換プロセスには2つの段階があります。"
    },
    {
      "indent": 3,
      "text": "o Negotiating the master/slave relationship o Exchanging database summary information",
      "ja": "o マスター/スレーブ関係の交渉oデータベースの概要情報を交換する"
    },
    {
      "indent": 0,
      "text": "7.2.1 Database Description Packets",
      "section_title": true,
      "ja": "7.2.1 データベースの説明パケット"
    },
    {
      "indent": 3,
      "text": "Database Description packets are used to describe a switch's link state database during the database exchange process. Each Database Description packet contains a list of headers of the link state advertisements currently stored in the sending switch's database. (See Section 11.1 for a description of a link state advertisement header.)",
      "ja": "データベースの説明パケットは、データベース交換プロセス中にスイッチのリンク状態データベースを説明するために使用されます。各データベースの説明パケットには、現在送信スイッチのデータベースに保存されているリンク状態広告のヘッダーのリストが含まれています。（リンク状態広告ヘッダーの説明については、セクション11.1を参照してください。）"
    },
    {
      "indent": 3,
      "text": "In addition to the link state headers, each Database Description packet contains the following data items: o A flag (the M-bit) indicating whether or not more packets are to follow. Depending on the size of the local database and the maximum size of the packet, the list of headers in any particular Database Description packet may be only a partial list of the total database. When the M-bit is set, the list of headers is only a partial list and more headers are to follow in subsequent packets.",
      "ja": "リンク状態ヘッダーに加えて、各データベースの説明パケットには、次のデータ項目が含まれています。Oフラグ（Mビット）がパケットをフォローするかどうかを示す。ローカルデータベースのサイズとパケットの最大サイズに応じて、特定のデータベース説明パケットのヘッダーのリストは、合計データベースの部分的なリストにすぎない場合があります。Mビットが設定されている場合、ヘッダーのリストは部分的なリストのみであり、その後のパケットでより多くのヘッダーが従うことになります。"
    },
    {
      "indent": 3,
      "text": "o A flag (the I-bit) indicating whether or not this is the first Database Description packet sent for this execution of the database exchange process.",
      "ja": "o これがデータベース交換プロセスのこの実行のために送信された最初のデータベース説明パケットであるかどうかを示すフラグ（iビット）。"
    },
    {
      "indent": 3,
      "text": "o A flag (the MS-bit) indicating whether the sending switch thinks it is the master or the slave in the database exchange process. If the flag is set, the switch thinks it is the master.",
      "ja": "o 送信スイッチがデータベース交換プロセスのマスターまたはスレーブであると考えるかどうかを示すフラグ（MS-BIT）。フラグが設定されている場合、スイッチはそれがマスターだと考えています。"
    },
    {
      "indent": 3,
      "text": "o A 4-octet sequence number for the packet.",
      "ja": "o パケットの4-OCTETシーケンス番号。"
    },
    {
      "indent": 3,
      "text": "While the switches are negotiating the master/slave relationship, they exchange \"empty\" Database Description packets. That is, packets that contain no link summary information. Instead, the flags and sequence number constitute the information required for the negotiation process.",
      "ja": "スイッチがマスター/スレーブの関係を交渉している間、「空の」データベースの説明パケットを交換します。つまり、リンクの要約情報が含まれていないパケット。代わりに、フラグとシーケンス番号は、交渉プロセスに必要な情報を構成します。"
    },
    {
      "indent": 3,
      "text": "See Section 10.6.2 for a more detailed description of a Database Description packet.",
      "ja": "データベースの説明パケットの詳細については、セクション10.6.2を参照してください。"
    },
    {
      "indent": 0,
      "text": "7.2.2 Negotiating the Master/Slave Relationship",
      "section_title": true,
      "ja": "7.2.2 マスター/スレーブ関係の交渉"
    },
    {
      "indent": 3,
      "text": "Before two switches can begin the actual exchange of database information, they must decide between themselves who will be the master in the exchange process and who will be the slave. They must also agree on the starting sequence number for the Database Description packets.",
      "ja": "2つのスイッチがデータベース情報の実際の交換を開始する前に、交換プロセスのマスターと奴隷になる人の間で自分自身を決定する必要があります。また、データベースの説明パケットの開始シーケンス番号にも同意する必要があります。"
    },
    {
      "indent": 3,
      "text": "Once a switch has decided to form an adjacency with a neighboring switch, it sets the neighbor state to ExStart and begins sending empty Database Description packets to its neighbor. These packets contain the starting sequence number the switch plans to use in the exchange process. Also, the I-bit and M-bit flags are set, as well as the MS-bit. Thus, each switch in the exchange begins by believing it will be the master.",
      "ja": "スイッチが隣接するスイッチを使用して隣接を形成することを決定すると、近隣状態を設定して、空のデータベースの説明パケットの送信を隣接にし始めます。これらのパケットには、スイッチが交換プロセスで使用する予定の開始シーケンス番号が含まれています。また、MSビットと同様に、iビットフラグとMビットフラグが設定されています。したがって、交換の各スイッチは、それがマスターになると信じることから始まります。"
    },
    {
      "indent": 3,
      "text": "Empty Database Description packets are retransmitted every RxmtInterval seconds until the neighbor responds.",
      "ja": "空のデータベース説明パケットは、隣人が応答するまでrxmtinterval秒ごとに再送信されます。"
    },
    {
      "indent": 3,
      "text": "When a switch receives an empty Database Description packet from its neighbor, it determines which switch will be the master by comparing the switch IDs. The switch with the highest switch ID becomes the master of the exchange. Based on this determination, the switch proceeds as follows:",
      "ja": "スイッチが近隣から空のデータベース説明パケットを受信すると、スイッチIDを比較することにより、どのスイッチがマスターになるかを決定します。最高のスイッチIDを備えたスイッチは、Exchangeのマスターになります。この決定に基づいて、スイッチは次のように進行します。"
    },
    {
      "indent": 3,
      "text": "o If the switch is to be the slave of the database exchange process, it acknowledges that it is the slave by sending another empty Database Description packet to the master. This packet contains the master's sequence number and has the MS-bit and the I-bit cleared.",
      "ja": "o スイッチがデータベース交換プロセスの奴隷である場合、別の空のデータベース説明パケットをマスターに送信することにより、それがスレーブであることを認めます。このパケットには、マスターのシーケンス番号が含まれており、MSビットとiビットがクリアされています。"
    },
    {
      "indent": 3,
      "text": "o The switch then generates a neighbor event of Negotiation Done to change its neighbor state to Exchange and waits for the first non-empty Database Description packet from the master.",
      "ja": "o その後、このスイッチは、近隣の状態を交換に変更するために行われたネゴシエーションの近隣イベントを生成し、マスターからの最初の非空白のデータベース説明パケットを待ちます。"
    },
    {
      "indent": 3,
      "text": "o If the switch is to be the master of the database exchange, it waits to receive an acknowledgment from its neighbor -- that is, an empty Database Description packet with the MS-bit and I-bit cleared and containing the sequence number it (the master) previously sent.",
      "ja": "o スイッチがデータベース交換のマスターになる場合、隣人から確認を受信するのを待ちます。つまり、MSビットとIビットを備えた空のデータベース説明パケットがクリアされ、シーケンス番号が含まれています（マスター）以前に送信されました。"
    },
    {
      "indent": 3,
      "text": "o When it receives the acknowledgment, it generates a neighbor event of Negotiation Done to change its neighbor state to Exchange and begin the actual exchange of Database Description packets.",
      "ja": "o 謝辞を受け取ると、近隣の状態を交換してデータベース説明パケットの実際の交換を開始するために行われるネゴシエーションの近隣イベントが生成されます。"
    },
    {
      "indent": 3,
      "text": "Note that during the negotiation process, the receipt of an inconsistent packet will result in a neighbor event of Seq Number Mismatch, terminating the process. See Section 4.3 for more information.",
      "ja": "交渉プロセス中に、一貫性のないパケットの受領により、隣接イベントが配列数の不一致のイベントが発生し、プロセスが終了することに注意してください。詳細については、セクション4.3を参照してください。"
    },
    {
      "indent": 0,
      "text": "7.2.3 Exchanging Database Description Packets",
      "section_title": true,
      "ja": "7.2.3 データベースの説明パケットの交換"
    },
    {
      "indent": 3,
      "text": "Once the neighbor state changes to Exchange, the switches begin the exchange of Database Description packets containing link state summary data. The process proceeds as follows:",
      "ja": "近隣状態が交換に変更されると、スイッチはリンク状態の概要データを含むデータベース説明パケットの交換を開始します。プロセスは次のように進行します。"
    },
    {
      "indent": 3,
      "text": "1. The master sends a packet containing a list of link state headers. If the packet contains only a portion of the unexchanged database -- that is, more Database Description packets are to follow -- the packet has the M-bit set. The MS-bit is set and the I-bit is clear.",
      "ja": "1. マスターは、リンク状態ヘッダーのリストを含むパケットを送信します。パケットに変更されていないデータベースの一部のみ、つまり、より多くのデータベースの説明パケットをフォローする必要がある場合、パケットにはMビットセットがあります。MS-BITが設定されており、iビットは明確です。"
    },
    {
      "indent": 6,
      "text": "If the slave does not acknowledge the packet within RxmtInterval seconds, the master retransmits the packet.",
      "ja": "スレーブがrxmtinterval秒以内のパケットを認めない場合、マスターはパケットを再送信します。"
    },
    {
      "indent": 3,
      "text": "2. When the slave receives a packet, it first checks the sequence number to see if the packet is a duplicate. If so, it simply acknowledges the packet by clearing the MS-bit and returning the packet to the master. (Note that the slave acknowledges all Database Description packets that it receives, even those that are duplicates.)",
      "ja": "2. スレーブがパケットを受け取ると、最初にシーケンス番号をチェックして、パケットが複製かどうかを確認します。もしそうなら、それは単にMSビットをクリアしてマスターにパケットを返すことにより、単にパケットを認めます。（奴隷は、受信したすべてのデータベースの説明パケット、さらには複製しているものでも認めていることに注意してください。）"
    },
    {
      "indent": 6,
      "text": "Otherwise, the slave processes the packet by doing the following:",
      "ja": "それ以外の場合、スレーブは以下を実行してパケットを処理します。"
    },
    {
      "indent": 6,
      "text": "o For each link state header listed in the packet, the slave searches its own link state database to determine whether it has an instance of the advertisement.",
      "ja": "o パケットにリストされている各リンク状態ヘッダーについて、スレーブは独自のリンク状態データベースを検索して、広告のインスタンスがあるかどうかを判断します。"
    },
    {
      "indent": 6,
      "text": "o If the slave does not have an instance of the link state advertisement, or if the instance it does have is older than the instance listed in the packet, it creates an entry in its link state request list in the neighbor data structure. See Section 7.1.1 for a description of how to determine which instance of a link state advertisement is the newest.",
      "ja": "o スレーブにリンク状態広告のインスタンスがない場合、または持っているインスタンスがパケットにリストされているインスタンスよりも古い場合、ネイバーデータ構造のリンク状態リクエストリストにエントリを作成します。リンク状態広告のどのインスタンスが最新かを判断する方法の説明については、セクション7.1.1を参照してください。"
    },
    {
      "indent": 6,
      "text": "o When the slave has examined all headers, it acknowledges the packet by turning the MS-bit off and returning the packet to the master.",
      "ja": "o スレーブがすべてのヘッダーを調べたとき、MSビットをオフにしてパケットをマスターに戻すことにより、パケットを認めます。"
    },
    {
      "indent": 3,
      "text": "3. When the master receives the first acknowledgment for a particular Database Description packet, it processes the acknowledgment as follows:",
      "ja": "3. マスターが特定のデータベースの説明パケットの最初の承認を受信すると、次のように確認を処理します。"
    },
    {
      "indent": 6,
      "text": "o For each link state header listed in the packet, the master checks to see if the slave has indicated it has an instance of the link state advertisement that is newer than the instance the master has in its own database. If so, the master creates an entry in its link state request list in the neighbor data structure.",
      "ja": "o パケットにリストされている各リンク状態ヘッダーについて、マスターはスレーブがマスターが独自のデータベースにあるインスタンスよりも新しいリンク状態広告のインスタンスを示していることを示しているかどうかを確認します。その場合、マスターは、Neighborデータ構造のリンク状態リクエストリストにエントリを作成します。"
    },
    {
      "indent": 6,
      "text": "o The master then increments the sequence number and sends another packet containing the next set of link state summary information, if any.",
      "ja": "o 次に、マスターはシーケンス番号を増分し、次のリンク状態概要情報を含む別のパケットを送信します。"
    },
    {
      "indent": 6,
      "text": "Subsequent acknowledgments for the Database Description packet (those with the same sequence number) are discarded.",
      "ja": "データベースの説明パケット（同じシーケンス番号があるもの）の後続の承認が破棄されます。"
    },
    {
      "indent": 6,
      "text": "When the master sends the last portion of its database summary information, it clears the M-bit in the packet to indicate that no more packets are to be sent.",
      "ja": "マスターがデータベースの要約情報の最後の部分を送信すると、パケットのMビットをクリアして、これ以上のパケットを送信しないことを示します。"
    },
    {
      "indent": 3,
      "text": "4. When the slave receives a Database Description packet with the M-bit clear, it processes the packet, as described above in step 2. After it has completed processing and has acknowledged the packet to the master, it generates an Exchange Done neighbor event and its neighbor state changes to Loading.",
      "ja": "4. スレーブがMBIT Clearでデータベースの説明パケットを受信すると、ステップ2で上記のようにパケットを処理します。処理が完了し、マスターへのパケットを認めた後、Exchange Doneのイベントとその近隣の状態の荷重の変更。"
    },
    {
      "indent": 6,
      "text": "The database exchange process is now complete for the slave, and it begins the process of requesting those link state advertisements for which the master has more current instances (see Section 7.3).",
      "ja": "データベース交換プロセスは奴隷のために完了し、マスターがより多くの現在のインスタンスを持っているリンク状態広告を要求するプロセスを開始します（セクション7.3を参照）。"
    },
    {
      "indent": 3,
      "text": "5. When the master receives an acknowledgment for the final Database Description packet, it processes the acknowledgment as described above in step 3. Then it generates an Exchange Done neighbor event and its neighbor state changes to Loading.",
      "ja": "5. マスターが最終的なデータベース説明パケットの承認を受信すると、ステップ3で上記のように確認を処理します。その後、Exchange Done neighborイベントとその近隣状態のロードの変更を生成します。"
    },
    {
      "indent": 6,
      "text": "The database exchange process is now complete for the master, and it begins the process of requesting those link state advertisements for which the slave has more current instances (see Section 7.3).",
      "ja": "マスターのデータベース交換プロセスが完了するようになり、スレーブがより多くの現在のインスタンスを持っているリンク状態広告を要求するプロセスを開始します（セクション7.3を参照）。"
    },
    {
      "indent": 3,
      "text": "Note that during this exchange, the receipt of an inconsistent packet will result in a neighbor event of Seq Number Mismatch, terminating the process. See Section 4.3 for more information.",
      "ja": "この交換中に、一貫性のないパケットの受領により、隣接イベントの1つのシート数の不一致が発生し、プロセスが終了することに注意してください。詳細については、セクション4.3を参照してください。"
    },
    {
      "indent": 0,
      "text": "7.3 Updating the Database",
      "section_title": true,
      "ja": "7.3 データベースの更新"
    },
    {
      "indent": 3,
      "text": "When either switch completes the database exchange process and its neighbor state changes to Loading, it has a list of link state advertisements for which the neighboring switch has a more recent instance. This list is stored in the neighbor data structure as the link state request list.",
      "ja": "いずれかのスイッチがデータベース交換プロセスを完了し、その近隣状態が読み込みに変更されると、隣接するスイッチに最近のインスタンスがあるリンク状態広告のリストがあります。このリストは、リンク状態リクエストリストとしてNeighbor Data構造に保存されます。"
    },
    {
      "indent": 3,
      "text": "To complete the synchronization of its database with that of its neighbor, the switch must obtain the most current instances of those link state advertisements.",
      "ja": "データベースの同期を隣接するデータベースの同期を完了するには、スイッチはこれらのリンク状態広告の最新のインスタンスを取得する必要があります。"
    },
    {
      "indent": 3,
      "text": "The switch requests these advertisements by sending its neighbor a Link State Request packet containing the description of one or more link state advertisement, as defined by the advertisement's type, link state ID, and advertising switch. (For a detailed description of the Link State Request packet, see Section 10.6.3.) The switch continues to retransmit this packet every RxmtInterval seconds until it receives a reply from the neighbor.",
      "ja": "Switchは、広告のタイプ、リンク状態ID、および広告スイッチで定義されているように、1つ以上のリンク状態広告の説明を含むLink State Request PacketをNeighborに送信することにより、これらの広告を要求します。（リンク状態リクエストパケットの詳細な説明については、セクション10.6.3を参照してください。）スイッチは、隣人から返信を受信するまで、rxmtmtinterval秒ごとにこのパケットを再送信し続けます。"
    },
    {
      "indent": 3,
      "text": "When the neighbor switch receives the Link State Request packet, it responds with a Link State Update packet containing its most current instance of each of the requested advertisements. (Note that the neighboring switch can be in any of the Exchange, Loading or Full neighbor states when it responds to a Link State Request packet.)",
      "ja": "ネイバースイッチがリンク状態要求パケットを受信すると、リクエストされた各広告の最新のインスタンスを含むリンク状態更新パケットで応答します。（隣接するスイッチは、リンク状態のリクエストパケットに応答する場合、交換、ロード、または完全な隣接状態のいずれかにあることに注意してください。）"
    },
    {
      "indent": 3,
      "text": "If the neighbor cannot locate a particular link state advertisement in its database, something has gone wrong with the synchronization process. The switch generates a BadLSReq neighbor event and the partially formed adjacency is torn down. See Section 4.3 for more information.",
      "ja": "近隣がデータベースに特定のリンク状態広告を見つけることができない場合、同期プロセスに何かが問題になりました。スイッチはBADLSREQ Neighborイベントを生成し、部分的に形成された隣接性が取り壊されます。詳細については、セクション4.3を参照してください。"
    },
    {
      "indent": 3,
      "text": "Depending on the size of the link state request list, it may take more than one Link State Request packet to obtain all the necessary advertisements. Note, however, that there must at most one Link State Request packet outstanding at any one time.",
      "ja": "リンク状態リクエストリストのサイズに応じて、必要なすべての広告を取得するには、複数のリンク状態リクエストパケットが必要になる場合があります。ただし、一度に最大で1つのリンク状態要求パケットパケットが発行されなければならないことに注意してください。"
    },
    {
      "indent": 0,
      "text": "7.4 An Example",
      "section_title": true,
      "ja": "7.4 例"
    },
    {
      "indent": 3,
      "text": "Figure 3 shows an example of an adjacency being formed between two switches -- S1 and S2 -- connected to a network link. S2 is the designated switch for the link and has a higher switch ID than S1.",
      "ja": "図3は、ネットワークリンクに接続されている2つのスイッチ（S1とS2）の間に形成されている隣接性の例を示しています。S2はリンクの指定されたスイッチであり、S1よりも高いスイッチIDを持っています。"
    },
    {
      "indent": 3,
      "text": "The neighbor state changes that each switch goes through are listed on the sides of the figure.",
      "ja": "各スイッチが通過する隣国の状態の変更は、図の側面にリストされています。"
    },
    {
      "indent": 3,
      "text": "+--------+                                     +--------+\n| Switch |                                     | Switch |\n|   S1   |                                     |   S2   |\n+--------+                                     +--------+\n   Down                                           Down\n                  Hello (DS=0, seen=0)\n         ------------------------------------->\n                                                  Init\n               Hello (DS=S2, seen=...,S1)\n         <-------------------------------------\nExStart\n          DB Description (Seq=x, I, M, Master)\n         ------------------------------------->\n                                                  ExStart\n          DB Description (Seq=y, I, M, Master)\n         <-------------------------------------\nxchange\n            DB Description (Seq=y, M, Slave)\n         ------------------------------------->\n                                                  Exchange\n          DB Description (Seq=y+1, M, Master)\n         <-------------------------------------\n           DB Description (Seq=y+1, M, Slave)\n         ------------------------------------->\n                           .\n                           .\n                           .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "            DB Description (Seq=y+n, Master)\n         <-------------------------------------\n             DB Description (Seq=y+n, Slave)\n         ------------------------------------->\nLoading                                           Full\n                    Link State Request\n         <-------------------------------------\n                    Link State Update\n         ------------------------------------->\n                           .\n                           .\n                           .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "                   Link State Request\n        <-------------------------------------\n                   Link State Update\n        ------------------------------------->\nFull",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "Figure 3: An Example of Bringing Up an Adjacency",
      "ja": "図3：隣接を育てる例"
    },
    {
      "indent": 3,
      "text": "At the top of Figure 3, S1's interface to the link becomes operational, and S1 begins sending Hello packets over the interface. At this point, S1 does not yet know the identity of the designated switch or of any other neighboring switches. S2 receives the Hello packet from S1 and changes its neighbor state to Init. In its next Hello packet, S2 indicates that it is itself the designated switch and that it has received a Hello packet from S1. S1 receives the Hello packet and changes its state to ExStart, starting the process of bringing up the adjacency.",
      "ja": "図3の上部では、リンクへのS1のインターフェイスが動作可能になり、S1はインターフェイス上でハローパケットの送信を開始します。この時点で、S1は、指定されたスイッチまたは他の隣接するスイッチのIDをまだ把握していません。S2はS1からHello Packetを受け取り、その近隣状態をinitに変更します。次のハローパケットでは、S2はそれ自体が指定されたスイッチであり、S1からハローパケットを受け取ったことを示します。S1はHello Packetを受け取り、その状態を変更してExstartに変更し、隣接するプロセスを開始します。"
    },
    {
      "indent": 3,
      "text": "S1 begins by asserting itself as the master. When it sees that S2 is indeed the master (because of S2's higher switch ID), S1 changes to slave and adopts S2's sequence number. Database Description packets are then exchanged, with polls coming from the master (S2) and acknowledgments from the slave (S1). This sequence of Database Description packets ends when both the poll and associated acknowledgment have the M-bit off.",
      "ja": "S1は、マスターとして自分自身を主張することから始めます。S2が実際にマスターであることがわかった場合（S2のスイッチIDが高いため）、S1はスレーブに変更され、S2のシーケンス番号を採用します。その後、データベースの説明パケットが交換され、マスター（S2）からの世論調査とスレーブ（S1）からの謝辞が掲載されます。この一連のデータベース説明パケットは、投票と関連する承認の両方がMビットをオフにしたときに終了します。"
    },
    {
      "indent": 3,
      "text": "In this example, it is assumed that S2 has a completely up-to-date database and immediately changes to the Full state. S1 will change to the Full state after updating its database by sending Link State Request packets and receiving Link State Update packets in response.",
      "ja": "この例では、S2には完全に最新のデータベースがあり、すぐに完全な状態に変更されていると想定されています。S1は、リンク状態要求パケットを送信し、それに応じてリンク状態更新パケットを受信することにより、データベースを更新した後、完全な状態に変更します。"
    },
    {
      "indent": 3,
      "text": "Note that in this example, S1 has waited until all Database Description packets have been received from S2 before sending any Link State Request packets. However, this need not be the case. S1 could interleave the sending of Link State Request packets with the reception of Database Description packets.",
      "ja": "この例では、S1は、リンク状態要求パケットを送信する前に、すべてのデータベース説明パケットがS2から受信されるまで待機しています。ただし、そうである必要はありません。S1は、データベースの説明パケットの受信とともに、リンク状態要求パケットの送信をインターリーブできます。"
    },
    {
      "indent": 0,
      "text": "8. Maintaining the Databases",
      "section_title": true,
      "ja": "8. データベースの維持"
    },
    {
      "indent": 3,
      "text": "Each switch advertises its state (also known as its link state) by originating switch link advertisements. In addition, the designated switch on each network link advertises the state of the link by originating network link advertisements.",
      "ja": "各スイッチは、Switch Link Advertisementsを発信することにより、状態（リンク状態とも呼ばれます）を宣伝します。さらに、各ネットワークリンクの指定されたスイッチは、Networkリンクの発信された広告によってリンクの状態を広告します。"
    },
    {
      "indent": 3,
      "text": "As described in Section 7.1, link state advertisements are uniquely identified by their type, link state ID, and advertising switch.",
      "ja": "セクション7.1で説明されているように、リンク状態広告は、タイプ、リンク状態ID、および広告スイッチによって一意に識別されます。"
    },
    {
      "indent": 3,
      "text": "Link state advertisements are distributed throughout the switch fabric using a reliable flooding algorithm that ensures that all switches in the fabric are notified of any link state changes.",
      "ja": "リンク状態広告は、信頼できるフラッディングアルゴリズムを使用してスイッチファブリック全体に配布され、ファブリックのすべてのスイッチにリンク状態の変更が通知されるようにします。"
    },
    {
      "indent": 0,
      "text": "8.1 Originating Link State Advertisements",
      "section_title": true,
      "ja": "8.1 リンク状態広告の発生"
    },
    {
      "indent": 3,
      "text": "A new instance of each link state advertisement is originated any time the state of the switch or link changes. When a new instance of a link state advertisement is originated, its sequence number is incremented, its age is set to zero, and its checksum is calculated. The advertisement is then installed into the local link state database and forwarded out all fully operational interfaces (that is, those interfaces with a state greater than Waiting) for distribution throughout the switch fabric. See Section 8.2.4 for a description of the installation of the advertisement into the link state database and Section 8.2.5 for a description of how advertisements are forwarded.",
      "ja": "各リンク状態広告の新しいインスタンスは、スイッチまたはリンクの状態が変更されるたびに発信されます。リンク状態広告の新しいインスタンスが発信されると、そのシーケンス数が増加し、年齢がゼロに設定され、チェックサムが計算されます。次に、広告はローカルリンク状態データベースにインストールされ、スイッチファブリック全体に配布のために、完全に動作するすべてのインターフェイス（つまり、待機していない状態のインターフェイス）をすべて転送します。広告の転送方法の説明については、リンク状態データベースへの広告のインストールの説明については、セクション8.2.4とセクション8.2.5を参照してください。"
    },
    {
      "indent": 3,
      "text": "A switch originates a new instance of a link state advertisement as a result of the following events:",
      "ja": "スイッチは、次のイベントの結果として、リンク状態広告の新しいインスタンスを発信します。"
    },
    {
      "indent": 3,
      "text": "o The state of one of the switch's interfaces changes such that the contents of the associated switch link advertisement changes.",
      "ja": "o スイッチのインターフェイスの1つの状態は、関連するスイッチリンク広告の内容が変更されるように変更されます。"
    },
    {
      "indent": 3,
      "text": "o The designated switch on any of the switch's attached network links changes. The switch originates a new switch link advertisement. Also, if the switch itself is now the designated switch, it originates a new network link advertisement for the link.",
      "ja": "o スイッチに添付されたネットワークリンクのいずれかの指定されたスイッチが変更されます。スイッチは、新しいスイッチリンク広告を産みます。また、スイッチ自体が指定されたスイッチになった場合、リンクの新しいネットワークリンク広告が発生します。"
    },
    {
      "indent": 3,
      "text": "o One of the switch's neighbor states changes to or from Full. If this changes the contents of the associated switch link advertisement, a new instance is generated. Also, if the switch is the designated switch for the attached network link, it originates a new network link advertisement for the link.",
      "ja": "o スイッチの隣人の1つは、フルとの間で変更されます。これにより、関連するスイッチリンク広告の内容が変更された場合、新しいインスタンスが生成されます。また、スイッチが添付のネットワークリンクの指定されたスイッチである場合、リンクの新しいネットワークリンク広告が発信されます。"
    },
    {
      "indent": 3,
      "text": "Two instances of the same link state advertisement must not be originated within the time period MinLSInterval. Note that this may require that the generation of the second instance to be delayed up to MinLSInterval seconds.",
      "ja": "同じリンク状態広告の2つのインスタンスは、minlsintervalの期間内に発信するべきではありません。これには、2番目のインスタンスの生成がminlsinterval秒まで遅れていることに注意してください。"
    },
    {
      "indent": 0,
      "text": "8.1.1 Switch Link Advertisements",
      "section_title": true,
      "ja": "8.1.1 リンク広告を切り替えます"
    },
    {
      "indent": 3,
      "text": "A switch link advertisement describes the collected states of all functioning links attached to the originating switch -- that is, all attached links with an interface state greater than Down. A switch originates an empty switch link advertisement when it first becomes functional. It then generates a new instance of the advertisement each time one of its interfaces reaches a fully functioning state (Point-to-Point or better).",
      "ja": "スイッチリンク広告は、発信元のスイッチに接続されているすべての機能リンクの収集された状態、つまり、ダウンよりも大きいインターフェイス状態のすべての添付リンクを記述します。スイッチは、最初に機能するときに空のスイッチリンク広告を発信します。次に、インターフェイスの1つが完全に機能する状態（ポイントツーポイント以上）に達するたびに、広告の新しいインスタンスを生成します。"
    },
    {
      "indent": 3,
      "text": "Each link in the advertisement is assigned a type, based on the state of interface, as shown in Table 4.",
      "ja": "表4に示すように、広告内の各リンクには、インターフェイスの状態に基づいてタイプが割り当てられます。"
    },
    {
      "indent": 12,
      "text": "Interface state Link type Description",
      "ja": "インターフェイス状態リンクタイプ説明"
    },
    {
      "indent": 12,
      "text": "Point-to-Point      1             Point-to-point link\nDS Other*           2             Multi-access link\nBackup*             2             Multi-access link\nDS**                2             Multi-access link",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 14,
      "text": "*If a full adjacency has been formed with the designated switch.",
      "ja": "*指定されたスイッチで完全な隣接が形成されている場合。"
    },
    {
      "indent": 13,
      "text": "**If a full adjacency has been formed with at least one other switch on the link.",
      "ja": "**リンクに少なくとも1つの他のスイッチを使用して完全な隣接が形成されている場合。"
    },
    {
      "indent": 15,
      "text": "Table 4: Link Types in a Switch Link Advertisement",
      "ja": "表4：スイッチリンク広告のリンクタイプ"
    },
    {
      "indent": 3,
      "text": "Each link in the advertisement is also assigned a link identifier based on its link type. In general, this value identifies another switch that also originates advertisements for the link, thereby providing a key for accessing other link state advertisements for the link. The relationship between link type and ID is shown in Table 5.",
      "ja": "広告内の各リンクには、リンクタイプに基づいてリンク識別子も割り当てられます。一般に、この値は、リンクの広告を発信する別のスイッチを識別し、それによりリンクの他のリンク状態広告にアクセスするためのキーを提供します。リンクタイプとIDの関係を表5に示します。"
    },
    {
      "indent": 13,
      "text": "Type Description Link ID",
      "ja": "タイプ説明リンクID"
    },
    {
      "indent": 12,
      "text": "1 Point-to-point link Switch ID of neighbor switch 2 Multi-access link Switch ID of designated switch",
      "ja": "1つのポイントツーポイントリンクスイッチIDネイバースイッチ2指定されたスイッチのマルチアクセスリンクスイッチID"
    },
    {
      "indent": 15,
      "text": "Table 5: Link IDs in a Switch Link Advertisement",
      "ja": "表5：スイッチリンク広告のリンクID"
    },
    {
      "indent": 3,
      "text": "In addition to a type and an identifier, the description of each link specifies the interface ID of the associated network link.",
      "ja": "タイプと識別子に加えて、各リンクの説明は、関連するネットワークリンクのインターフェイスIDを指定します。"
    },
    {
      "indent": 3,
      "text": "Finally, each link description includes the cost of sending a packet over the link. This output cost is expressed in the link state metric and must be greater than zero.",
      "ja": "最後に、各リンクの説明には、リンク上にパケットを送信するコストが含まれています。この出力コストは、リンク状態メトリックで表され、ゼロより大きくなければなりません。"
    },
    {
      "indent": 3,
      "text": "To illustrate the format of a switch link advertisement, consider the switch fabric shown in Figure 4.",
      "ja": "スイッチリンク広告の形式を説明するには、図4に示すスイッチファブリックを検討してください。"
    },
    {
      "indent": 3,
      "text": "In this example, switch SW1 has 5 neighboring switches (shown as boxes) distributed over 3 network links (shown as lines). The base MAC address of each switch is also shown adjacent to each box. On switch SW1, ports 01 and 02 attach to point-to-point network links, while port 03 attaches to a multi-access network link with three attached switches. The interface state of each port is shown next to the line representing the corresponding link.",
      "ja": "この例では、Switch SW1には、3つのネットワークリンク（行として表示）に分布した5つの隣接スイッチ（ボックスとして表示）があります。各スイッチのベースMACアドレスも各ボックスに隣接して表示されます。スイッチSW1、ポート01および02はポイントツーポイントネットワークリンクに接続し、ポート03は3つの接続されたスイッチを備えたマルチアクセスネットワークリンクに接続します。各ポートのインターフェイス状態は、対応するリンクを表す行の横に表示されます。"
    },
    {
      "indent": 3,
      "text": "                         00-00-1d-22-23-c5\n                             +-------+\n                             |  SW2  |\n                             +-------+\n                                 |\n                                 | Point-to-Point\n                                 |\n                                 | 01\n    +-------+    Loopback    +-------+\n    |  SW3  |----------------|  SW1  | 00-00-1d-1f-05-81\n    +-------+             02 +-------+\n00-00-1d-17-35-a4                | 03\n                                 |\n                                 | DS Other\n                                 |\n            +--------------------+--------------------+\n            |                    |                    |\n            | DS Other           | Backup             | DS\n            |                    |                    |\n        +-------+            +-------+            +-------+\n        |  SW4  |            |  SW5  |            |  SW6  |\n        +-------+            +-------+            +-------+\n     00-00-1d-4a-26-b3    00-00-1d-4a-27-1c    00-00-1d-7e-84-2e",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 20,
      "text": "Figure 4: Sample Switch Fabric",
      "ja": "図4：サンプルスイッチファブリック"
    },
    {
      "indent": 3,
      "text": "The switch link advertisement generated by switch SW1 would contain the following data items:",
      "ja": "Switch SW1によって生成されたSwitchリンク広告には、次のデータ項目が含まれます。"
    },
    {
      "indent": 6,
      "text": "; switch link advertisement for switch SW1",
      "ja": ";スイッチSW1のスイッチリンク広告"
    },
    {
      "indent": 6,
      "text": "LS age = 0               ; always true on origination\nOptions = (T-bit|E-bit)  ; options\nLS type = 1              ; this is a switch link advert",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": " ; SW1's switch ID Link State ID = 00-00-1d-1f-05-81-00-00-00-00 Advertising switch = 00-00-1d-1f-05-81-00-00-00-00 # links = 2",
      "ja": ";SW1のスイッチIDリンク状態ID = 00-00-1D-1F-05-81-00-00-00-00広告スイッチ= 00-00-1D-1F-05-81-00-00-00-00＃リンク= 2"
    },
    {
      "indent": 9,
      "text": "; link on interface port 1 Link ID = 00-00-1d-22-23-c5-00-00-00-00 ; switch ID",
      "ja": ";インターフェイスポート1のリンクリンクID = 00-00-1D-22-23-C5-00-00-00-00;IDを切り替えます"
    },
    {
      "indent": 9,
      "text": "Link Data = 00-00-1d-1f-05-81-00-00-00-01  ; interface ID\nType = 1                                   ; pt-to-pt link\n# other metrics = 0                        ; TOS 0 only\nTOS 0 metric = 1",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 9,
      "text": "; link on interface port 2 is not fully functional",
      "ja": ";インターフェイスポート2のリンクは完全に機能していません"
    },
    {
      "indent": 9,
      "text": "; link on interface port 3\nLink ID = 00-00-1d-7e-84-2e-00-00-00-00    ; switch ID of DS\nLink Data = 00-00-1d-1f-05-81-00-00-00-03  ; interface ID\nType = 2                                   ; multi-access\n# other metrics = 0                        ; TOS 0 only\nTOS 0 metric = 2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "(See Section 11.2 for a detailed description of the format of a switch link advertisement.)",
      "ja": "（スイッチリンク広告の形式の詳細な説明については、セクション11.2を参照してください。）"
    },
    {
      "indent": 0,
      "text": "8.1.2 Network Link Advertisements",
      "section_title": true,
      "ja": "8.1.2 ネットワークリンク広告"
    },
    {
      "indent": 3,
      "text": "Network link advertisements are used to describe the switches attached to each multi-access network link.",
      "ja": "ネットワークリンク広告は、各マルチアクセスネットワークリンクに接続されたスイッチを記述するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Note: Network link advertisements are not generated for point-to-point links.",
      "ja": "注：ネットワークリンク広告は、ポイントツーポイントリンクに対して生成されません。"
    },
    {
      "indent": 3,
      "text": "A network link advertisement is originated by the designated switch for the associated multi-access link once the switch has established a full adjacency with at least one other switch on the link. Each advertisement lists the switch IDs of those switches that are fully adjacent to the designated switch. The designated switch includes itself in this list.",
      "ja": "ネットワークリンク広告は、リンクに少なくとも1つの他のスイッチを使用して、スイッチが完全な隣接を確立すると、関連するマルチアクセスリンクの指定されたスイッチによって発信されます。各広告には、指定されたスイッチに完全に隣接するスイッチのスイッチIDがリストされています。指定されたスイッチには、このリストにそれ自体が含まれています。"
    },
    {
      "indent": 3,
      "text": "To illustrate the format of a network link advertisement, consider again the switch fabric shown in Figure 4. In this example, network link advertisements will be generated only by switch SW6, the designated switch of the multi-access network link between switches SW1 and switches SW4, SW5, and SW6.",
      "ja": "ネットワークリンク広告の形式を説明するには、図4に示すスイッチファブリックをもう一度検討してください。この例では、ネットワークリンク広告は、スイッチSW1とスイッチ間のマルチアクセスネットワークリンクの指定されたスイッチであるSwitch SW6によってのみ生成されます。SW4、SW5、およびSW6。"
    },
    {
      "indent": 3,
      "text": "The network link advertisement generated by switch SW6 would contain the following data items:",
      "ja": "Switch SW6によって生成されたネットワークリンク広告には、次のデータ項目が含まれます。"
    },
    {
      "indent": 6,
      "text": "; network link advertisement for switch SW6",
      "ja": ";スイッチSW6のネットワークリンク広告"
    },
    {
      "indent": 6,
      "text": "LS age = 0               ; always true on origination\nOptions = (T-bit|E-bit)  ; options\nLS type = 2              ; this is a network link advert",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": " ; SW6's switch ID Link State ID = 00-00-1d-73-84-2e-00-00-00-00 Advertising switch = 00-00-1d-73-84-2e-00-00-00-00",
      "ja": ";SW6のスイッチIDリンク状態ID = 00-00-1D-73-84-2E-00-00-00-00広告スイッチ= 00-00-1D-73-84-2E-00-00-00-00"
    },
    {
      "indent": 9,
      "text": "Attached switch = 00-00-1d-7e-84-2e-00-00-00-00 Attached switch = 00-00-1d-4a-26-b3-00-00-00-00 Attached switch = 00-00-1d-1f-05-81-00-00-00-00 Attached switch = 00-00-1d-4a-27-1c-00-00-00-00",
      "ja": "添付のスイッチ= 00-00-1D-7E-84-2E-00-00-00-00添付スイッチ= 00-00-1D-4A-26-B3-00-00-00添付スイッチ= 00-00-1D-1F-05-81-00-00-00-00添付されたスイッチ= 00-00-1D-4A-27-1C-00-00-00-00"
    },
    {
      "indent": 6,
      "text": "(See Section 11.3 for a detailed description of the format of a network link advertisement.)",
      "ja": "（ネットワークリンク広告の形式の詳細な説明については、セクション11.3を参照してください。）"
    },
    {
      "indent": 0,
      "text": "8.2 Distributing Link State Advertisements",
      "section_title": true,
      "ja": "8.2 リンク状態広告の配布"
    },
    {
      "indent": 3,
      "text": "Link state advertisements are distributed throughout the switch fabric encapsulated within Link State Update packets. A single Link State Update packet may contain several distinct advertisements.",
      "ja": "リンク状態広告は、リンク状態更新パケット内でカプセル化されたスイッチファブリック全体に配布されます。単一のリンク状態更新パケットには、いくつかの異なる広告が含まれる場合があります。"
    },
    {
      "indent": 3,
      "text": "To make the distribution process reliable, each advertisement must be explicitly acknowledged in a Link State Acknowledgment packet. Note, however, that multiple acknowledgments can be grouped together into a single Link State Acknowledgment packet. A sending switch retransmits unacknowledged Link State Update packets at regular intervals until they are acknowledged.",
      "ja": "配布プロセスを信頼できるようにするには、各広告をリンク状態の確認パケットで明示的に認める必要があります。ただし、複数の謝辞を単一のリンク状態確認パケットにグループ化できることに注意してください。送信スイッチは、確認されていないリンク状態更新パケットを確認するまで、定期的に再送信されます。"
    },
    {
      "indent": 3,
      "text": "The remainder of this section is structured as follows:",
      "ja": "このセクションの残りは次のように構成されています。"
    },
    {
      "indent": 3,
      "text": "o Section 8.2.1 presents an overview of the distribution process.",
      "ja": "o セクション8.2.1は、分布プロセスの概要を示します。"
    },
    {
      "indent": 3,
      "text": "o Section 8.2.2 describes how an incoming Link State Update packet is processed.",
      "ja": "o セクション8.2.2では、着信リンク状態更新パケットがどのように処理されるかについて説明します。"
    },
    {
      "indent": 3,
      "text": "o Section 8.2.3 describes how a Link State Packet is forwarded -- both by the originating switch and an intermediate receiving switch.",
      "ja": "o セクション8.2.3では、リンク状態パケットがどのように転送されるかについて説明します - 元のスイッチと中間受信スイッチの両方によって。"
    },
    {
      "indent": 3,
      "text": "o Section 8.2.4 describes how advertisements are installed into the local database.",
      "ja": "o セクション8.2.4では、広告がローカルデータベースにどのようにインストールされるかについて説明します。"
    },
    {
      "indent": 3,
      "text": "o Section 8.2.5 describes the retransmission of unacknowledged advertisements.",
      "ja": "o セクション8.2.5では、未承認の広告の再送信について説明します。"
    },
    {
      "indent": 4,
      "text": "o Section 8.2.6 describes how advertisements are acknowledged.",
      "ja": "o セクション8.2.6では、広告がどのように認められているかについて説明します。"
    },
    {
      "indent": 0,
      "text": "8.2.1 Overview",
      "section_title": true,
      "ja": "8.2.1 概要"
    },
    {
      "indent": 3,
      "text": "The philosophy behind the distribution of link state advertisements is based on the concept of adjacencies -- that is, each switch is only required to remain synchronized with its adjacent neighbors.",
      "ja": "リンク状態広告の配布の背後にある哲学は、隣接の概念に基づいています。つまり、各スイッチは、隣接する隣人と同期し続けるためにのみ必要です。"
    },
    {
      "indent": 3,
      "text": "When a switch originates a new instance of a link state advertisement, it formats the advertisement into a Link State Update packet and floods the packet out each fully operational interface -- that is, each interface with a state greater than Waiting. However, only those neighbors that are adjacent to the sending switch need to process the packet.",
      "ja": "スイッチがリンク状態広告の新しいインスタンスを発信する場合、広告をリンク状態更新パケットにフォームし、パケットを完全に動作する各インターフェイス、つまり、各インターフェイスが待機するよりも大きい状態にフラッシュします。ただし、送信スイッチに隣接している隣人のみがパケットを処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "The sending switch indicates which of its neighbor switches should process the advertisement by specifying a particular multicast destination in the network layer address information (see Section 10.3). The sending switch sets the value of the network layer destination switch ID field according to the state of the interface over which the packet is sent:",
      "ja": "送信スイッチは、ネットワークレイヤーアドレス情報に特定のマルチキャスト宛先を指定して、近隣スイッチが広告を処理するかを示します（セクション10.3を参照）。送信スイッチは、パケットが送信されるインターフェイスの状態に応じて、ネットワークレイヤー宛先スイッチIDフィールドの値を設定します。"
    },
    {
      "indent": 3,
      "text": "o If the interface state is Point-to-Point, DS, or Backup, the switch is adjacent to all other switches on the link and all neighboring switches must process the packet. Therefore, the destination field is set to the multicast switch ID AllSPFSwitches.",
      "ja": "o インターフェイスの状態がポイントツーポイント、DS、またはバックアップの場合、スイッチはリンク上の他のすべてのスイッチに隣接しており、すべての隣接スイッチはパケットを処理する必要があります。したがって、宛先フィールドは、マルチキャストスイッチID AllSPFSwitchesに設定されます。"
    },
    {
      "indent": 3,
      "text": "o If the interface state is DS Other, the switch is only adjacent to the designated switch and the backup designated switch and only those two neighboring switches must process the packet. Therefore, the destination field is set to the multicast switch ID AllDSwitches.",
      "ja": "o インターフェイスの状態がDS他の場合、スイッチは指定されたスイッチとバックアップ指定スイッチに隣接しており、それらの2つの隣接スイッチのみがパケットを処理する必要があります。したがって、宛先フィールドは、マルチキャストスイッチID alldswitchesに設定されます。"
    },
    {
      "indent": 3,
      "text": "A similar logic is used when a switch receives a Link State Update packet containing a new instance of a link state advertisement. After processing and acknowledging the packet, the receiving switch forwards the Link State Update packet as",
      "ja": "スイッチがリンク状態広告の新しいインスタンスを含むリンク状態更新パケットを受信すると、同様のロジックが使用されます。パケットを処理して確認した後、受信スイッチはリンク状態更新パケットを次のように転送します"
    },
    {
      "indent": 3,
      "text": "o On the interface over which the original Link State Update packet was received: o If the receiving switch is the designated switch for the attached network link, the packet is forwarded to all other switches on the link. (The destination field is set to AllSPFSwitches.) The originating switch will recognize that it was the advertisement originator and discard the packet.",
      "ja": "o 元のリンク状態更新パケットが受信されたインターフェイスで：o受信スイッチが添付ネットワークリンクの指定されたスイッチである場合、パケットはリンクの他のすべてのスイッチに転送されます。（宛先フィールドはAllSpfswitchesに設定されています。）発信元のスイッチは、それが広告のオリジネーターであることを認識し、パケットを破棄します。"
    },
    {
      "indent": 6,
      "text": "o If the receiving switch is not the designated switch for the attached network link, the packet is not sent back out the interface over which it was received.",
      "ja": "o 受信スイッチが添付のネットワークリンクの指定されたスイッチではない場合、パケットは受信されたインターフェイスから送信されません。"
    },
    {
      "indent": 3,
      "text": "o On all other interfaces:",
      "ja": "o 他のすべてのインターフェイスで："
    },
    {
      "indent": 6,
      "text": "o If the receiving switch is the designated switch for the attached network link, the packet is forwarded to all switches on the link. (The destination field is set to AllSPFSwitches.)",
      "ja": "o 受信スイッチが添付のネットワークリンクの指定されたスイッチである場合、パケットはリンクのすべてのスイッチに転送されます。（宛先フィールドはallspfswitchesに設定されています。）"
    },
    {
      "indent": 6,
      "text": "o If the receiving switch is neither the designated switch or the backup designated switch for the attached network link, the packet is forwarded only to the designated switch and the backup designated switch. (The destination field is set to AllDSwitches.)",
      "ja": "o 受信スイッチが、添付のネットワークリンクの指定されたスイッチまたはバックアップ指定スイッチではない場合、パケットは指定されたスイッチとバックアップ指定スイッチにのみ転送されます。（宛先フィールドはalldswitchesに設定されています。）"
    },
    {
      "indent": 3,
      "text": "Each Link State Update packet is forwarded and processed in this fashion until all switches in the fabric have received notification of the new instance of the link state advertisement.",
      "ja": "各リンク状態更新パケットは、ファブリックのすべてのスイッチがリンク状態広告の新しいインスタンスの通知を受け取るまで、この方法で転送および処理されます。"
    },
    {
      "indent": 0,
      "text": "8.2.2 Processing an Incoming Link State Update Packet",
      "section_title": true,
      "ja": "8.2.2 着信リンク状態更新パケットの処理"
    },
    {
      "indent": 3,
      "text": "When the a Link State Update packet is received, it is first subjected to a number of consistency checks. In particular, the Link State Update packet is associated with a specific neighbor. If the state of that neighbor is less than Exchange, the entire Link State Update packet is discarded.",
      "ja": "リンク状態更新パケットを受信すると、最初に多くの一貫性チェックが行われます。特に、Link State Updateパケットは特定の隣接に関連付けられています。その隣人の状態がExchangeよりも少ない場合、リンク状態更新パケット全体が破棄されます。"
    },
    {
      "indent": 3,
      "text": "Each link state advertisement contained in the packet is processed as follows:",
      "ja": "パケットに含まれる各リンク状態広告は、次のように処理されます。"
    },
    {
      "indent": 3,
      "text": "1. Validate the advertisement's link state checksum and type. If the checksum is invalid or the type is unknown, discard the advertisement without acknowledging it.",
      "ja": "1. 広告のリンク状態チェックサムとタイプを検証します。チェックサムが無効である場合、またはタイプが不明な場合は、認めずに広告を破棄します。"
    },
    {
      "indent": 3,
      "text": "2. If the advertisement's age is equal to MaxAge and there is currently no instance of the advertisement in the local link state database, then do the following: a) Acknowledge the advertisement by sending a Link State Acknowledgment packet to the sending neighbor (see Section 8.2.6).",
      "ja": "2. 広告の年齢がMaxageに等しく、現在ローカルリンク状態データベースに広告のインスタンスがない場合は、次のことを行います。a）送信中の近隣にリンク状態の確認パケットを送信して広告を確認します（セクション8.2を参照してください。6）。"
    },
    {
      "indent": 6,
      "text": "b) Purge all outstanding requests for equal or previous instances of the advertisement from the sending neighbor's Link State Request list.",
      "ja": "b) 送信中の近隣のリンク状態リクエストリストから広告の等または以前のインスタンスのすべての未解決のリクエストをパージします。"
    },
    {
      "indent": 6,
      "text": "c) If the neighbor is Exchange or Loading, install the advertisement in the link state database (see Section 8.2.4). Otherwise, discard the advertisement.",
      "ja": "c) 隣人が交換または読み込みの場合は、Link Stateデータベースに広告をインストールします（セクション8.2.4を参照）。それ以外の場合は、広告を破棄します。"
    },
    {
      "indent": 3,
      "text": "3. If the advertisement's age is equal to MaxAge and there is an instance of the advertisement in the local link state database, then do the following:",
      "ja": "3. 広告の年齢がMaxageに等しく、ローカルリンク状態データベースに広告のインスタンスがある場合は、次のことを行います。"
    },
    {
      "indent": 6,
      "text": "a) If the advertisement is listed in the link state retransmission list of any neighbor, remove the advertisement from the retransmission list(s) and delete the database copy of the advertisement.",
      "ja": "a) 広告が近隣のリンク状態再送信リストにリストされている場合は、再送信リストから広告を削除し、広告のデータベースコピーを削除します。"
    },
    {
      "indent": 6,
      "text": "b) Discard the received (MaxAge) advertisement without acknowledging it.",
      "ja": "b) 受け取った（最大）広告を認めずに廃棄します。"
    },
    {
      "indent": 3,
      "text": "4. If the advertisement's age is less than MaxAge, attempt to locate an instance of the advertisement in the local link state database. If there is no database copy of this advertisement, or the received advertisement is more recent than the database copy (see Section 7.1.1), do the following:",
      "ja": "4. 広告の年齢が最大よりも少ない場合は、ローカルリンク状態データベースに広告のインスタンスを見つけようとします。この広告のデータベースコピーがない場合、または受信した広告がデータベースコピーよりも最近である場合（セクション7.1.1を参照）、次を実行します。"
    },
    {
      "indent": 6,
      "text": "a) If there is already a database copy, and if the database copy was installed less than MinLSInterval seconds ago, discard the new advertisement without acknowledging it.",
      "ja": "a) すでにデータベースのコピーがあり、数秒前にデータベースのコピーがminlsinterval未満でインストールされている場合は、認めずに新しい広告を破棄します。"
    },
    {
      "indent": 6,
      "text": "b) Otherwise, forward the new advertisement out some subset of the local interfaces (see Section 8.2.3). Note whether the advertisement was sent back out the receiving interface for later use by the acknowledgment process.",
      "ja": "b) それ以外の場合は、新しい広告をローカルインターフェイスの一部のサブセットに転送します（セクション8.2.3を参照）。Advertisementが後で承認プロセスで使用するために受信インターフェイスから送信されたかどうかに注意してください。"
    },
    {
      "indent": 6,
      "text": "c) Remove the current database copy from the Link state retransmission lists of all neighbors.",
      "ja": "c) すべての近隣のリンク状態再送信リストから現在のデータベースコピーを削除します。"
    },
    {
      "indent": 6,
      "text": "d) Install the new advertisement in the link state database, replacing the current database copy. (Note that this may cause the calculation of the set of best paths to be scheduled. See Section 9.) Timestamp the new advertisement with the time that it was received to prevent installation of another instance within MinLSInterval seconds.",
      "ja": "d) 現在のデータベースコピーを置き換えるリンク状態データベースに新しい広告をインストールします。 （これにより、最適なパスのセットの計算がスケジュールされる可能性があることに注意してください。セクション9を参照してください。）タイムスタンプMinlsinterval秒以内の別のインスタンスのインストールを防ぐために受信した新しい広告。"
    },
    {
      "indent": 6,
      "text": "e) Acknowledge the advertisement, if necessary, by sending a Link State Acknowledgment packet back out the receiving interface. (See Section 8.2.6.)",
      "ja": "e) 必要に応じて、レシーブインターフェイスからリンク状態の確認パケットを送信することにより、広告を確認します。（セクション8.2.6を参照してください。）"
    },
    {
      "indent": 6,
      "text": "f) If the link state advertisement was initially advertised by the local switch itself, advance the advertisement sequence number and issue a new instance of the advertisement. (Receipt of a newer instance of an advertisement means that the local copy of the advertisement is left over from before the last time the switch was restarted.)",
      "ja": "f) リンク状態広告が最初にローカルスイッチ自体によって広告された場合、広告シーケンス番号を進めて、広告の新しいインスタンスを発行します。（広告の新しいインスタンスの受領は、スイッチが最後に再起動される前に、広告のローカルコピーが残されていることを意味します。）"
    },
    {
      "indent": 3,
      "text": "5. If the received advertisement is the same instance as the database copy (as determined by the algorithm described in Section 7.1.1), do the following:",
      "ja": "5. 受信した広告がデータベースコピーと同じインスタンスである場合（セクション7.1.1で説明されているアルゴリズムで決定されているように）、次を実行します。"
    },
    {
      "indent": 6,
      "text": "a) If the advertisement is listed in the neighbor's link state retransmission list, the local switch is expecting an acknowledgment for this advertisement. Treat the received advertisement as an implied acknowledgment, and remove the advertisement from the link state retransmission list. Note this implied acknowledgment for later use by the acknowledgment process (Section 8.2.6).",
      "ja": "a) 広告が近隣のリンク状態再送信リストにリストされている場合、ローカルスイッチはこの広告の承認を期待しています。受け取った広告を暗黙の承認として扱い、Link Stateの再送信リストから広告を削除します。これは、後で謝辞プロセス（セクション8.2.6）で使用するための暗黙の謝辞に注意してください。"
    },
    {
      "indent": 6,
      "text": "b) Acknowledge the advertisement, if necessary, by sending a Link State Acknowledgment packet back out the receiving interface. (See Section 8.2.6.)",
      "ja": "b) 必要に応じて、レシーブインターフェイスからリンク状態の確認パケットを送信することにより、広告を確認します。（セクション8.2.6を参照してください。）"
    },
    {
      "indent": 3,
      "text": "If the database copy of the advertisement is more recent than the instance just received, do the following:",
      "ja": "広告のデータベースコピーが受け取ったばかりのインスタンスよりも最近の場合は、次のことを行います。"
    },
    {
      "indent": 6,
      "text": "a) Determine whether the instance is listed in the neighbor link state request list. If so, an error has occurred in the database exchange process. Restart the database exchange process by generating a neighbor BadLSReq event for the sending neighbor and terminate processing of the Link State Update packet.",
      "ja": "a) インスタンスが近隣リンク状態リクエストリストにリストされているかどうかを判断します。その場合、データベース交換プロセスでエラーが発生しました。近隣の隣人のために近隣のbadlsreqイベントを生成してデータベース交換プロセスを再起動し、リンク状態更新パケットの処理を終了します。"
    },
    {
      "indent": 6,
      "text": "b) Otherwise, generate an unusual event to network management and discard the advertisement.",
      "ja": "b) それ以外の場合は、ネットワーク管理と広告を破棄するための異常なイベントを生成します。"
    },
    {
      "indent": 0,
      "text": "8.2.3 Forwarding Link State Advertisements",
      "section_title": true,
      "ja": "8.2.3 リンク状態広告を転送します"
    },
    {
      "indent": 3,
      "text": "When a new instance of an advertisement is originated or after an incoming advertisement has been processed, the switch must decide over which interfaces and to which neighbors the advertisement will be forwarded. In some instances, the switch may decide not to forward the advertisement over a particular interface because it is able to determine that the neighbors on that attached link have or will receive the advertisement from another switch on the link.",
      "ja": "広告の新しいインスタンスが発信される場合、または着信広告が処理された後、スイッチはどのインターフェイスとどの隣人がどの隣人が転送されるかを決定する必要があります。場合によっては、スイッチは、特定のインターフェイスに広告を転送しないことを決定する場合があります。これは、その添付のリンクの近隣がリンクの別のスイッチから広告を受け取っている、または受信することを判断できるためです。"
    },
    {
      "indent": 3,
      "text": "The decision of whether to forward an advertisement over each of the switch's interfaces is made as follows:",
      "ja": "各スイッチのインターフェイスに広告を転送するかどうかの決定は、次のように行われます。"
    },
    {
      "indent": 3,
      "text": "1. Each neighboring switch attached to the interface is examined to determine whether it should receive and process the new advertisement. For each neighbor, the following steps are executed:",
      "ja": "1. インターフェイスに接続された各隣接スイッチを調べて、新しい広告を受信して処理するかどうかを判断します。隣人ごとに、次の手順が実行されます。"
    },
    {
      "indent": 6,
      "text": "a) If the neighbor state is less than Exchange, the neighbor need not receive or process the new advertisement.",
      "ja": "a) 隣国の状態が交換よりも少ない場合、隣人は新しい広告を受け取ったり処理したりする必要はありません。"
    },
    {
      "indent": 6,
      "text": "b) If the neighbor state is Exchange or Loading, examine the link state request list associated with the neighbor. If an instance of the new advertisement is on the list, the neighboring switch already has an instance of the advertisement. Compare the new advertisement to the neighbor's copy:",
      "ja": "b) 近隣の状態が交換または読み込みである場合、隣人に関連付けられたリンク状態要求リストを調べます。新しい広告のインスタンスがリストに載っている場合、隣接するスイッチにはすでに広告のインスタンスがあります。新しい広告を隣人のコピーと比較してください。"
    },
    {
      "indent": 9,
      "text": "o If the new advertisement is less recent, the neighbor need not receive or process the new advertisement.",
      "ja": "o 新しい広告が最近ではない場合、隣人は新しい広告を受信または処理する必要はありません。"
    },
    {
      "indent": 9,
      "text": "o If the two copies are the same instance, delete the advertisement from the link state request list. The neighbor need not receive or process the new advertisement [7].",
      "ja": "o 2つのコピーが同じインスタンスである場合、Link Stateリクエストリストから広告を削除します。隣人は、新しい広告を受け取ったり処理したりする必要はありません[7]。"
    },
    {
      "indent": 9,
      "text": "o Otherwise, the new advertisement is more recent. Delete the advertisement from the link state request list. The neighbor may need to receive and process the new advertisement.",
      "ja": "o それ以外の場合、新しい広告はより最近です。Link Stateリクエストリストから広告を削除します。隣人は、新しい広告を受け取り、処理する必要がある場合があります。"
    },
    {
      "indent": 6,
      "text": "c) If the new advertisement was received from this neighbor, the neighbor need not receive or process the advertisement.",
      "ja": "c) この隣人から新しい広告が受信された場合、隣人は広告を受け取ったり処理したりする必要はありません。"
    },
    {
      "indent": 6,
      "text": "d) Add the new advertisement to the link state retransmission list for the neighbor.",
      "ja": "d) 近隣のリンク状態再送信リストに新しい広告を追加します。"
    },
    {
      "indent": 3,
      "text": "2. The switch must now decide whether to forward the new advertisement out the interface.",
      "ja": "2. スイッチは、新しい広告をインターフェイスに転送するかどうかを決定する必要があります。"
    },
    {
      "indent": 6,
      "text": "a) If the link state advertisement was not added to any of the link state retransmission lists for neighbors attached to the interface, there is no need to forward the advertisement out the interface.",
      "ja": "a) リンク状態広告がインターフェイスに接続されているネイバーのリンク状態再送信リストのいずれにも追加されなかった場合、インターフェイスを広告に転送する必要はありません。"
    },
    {
      "indent": 6,
      "text": "b) If the new advertisement was received on this interface, and it was received from either the designated switch or the backup designated switch, there is no need to forward the advertisement out the interface. Chances are all neighbors on the attached network link have also received the advertisement already.",
      "ja": "b) このインターフェイスで新しい広告が受信され、指定されたスイッチまたはバックアップ指定スイッチのいずれかから受信された場合、インターフェイスを広告に転送する必要はありません。添付のネットワークリンクのすべての隣人もすでに広告を受け取っている可能性があります。"
    },
    {
      "indent": 6,
      "text": "c) If the new advertisement was received on this interface and the state of the interface is Point-to-Point, there is no need to forward the advertisement since the received advertisement was originated by the neighbor switch.",
      "ja": "c) このインターフェイスで新しい広告が受信され、インターフェイスの状態がポイントツーポイントである場合、受信した広告がNeighbor Switchによって発信されたため、広告を転送する必要はありません。"
    },
    {
      "indent": 6,
      "text": "d) If the new advertisement was received on this interface, and the interface state is Backup -- that is, the switch itself is the backup designated switch -- there is no need to forward the advertisement out the interface. The designated switch will distribute advertisements on the attached network link.",
      "ja": "d) このインターフェイスで新しい広告が受信され、インターフェイス状態がバックアップである場合、つまりスイッチ自体がバックアップ指定スイッチです。インターフェイスを広告に転送する必要はありません。指定されたスイッチは、添付のネットワークリンクに広告を配布します。"
    },
    {
      "indent": 6,
      "text": "e) Otherwise, the advertisement must be forwarded out the interface.",
      "ja": "e) それ以外の場合、広告はインターフェイスを転送する必要があります。"
    },
    {
      "indent": 6,
      "text": "To forward a link state advertisement, the switch first increments the advertisement's age by InfTransDelay seconds to account for the transmission time over the link. The switch then copies the advertisement into a Link State Update packet",
      "ja": "リンク状態広告を転送するために、スイッチは最初に広告の年齢をインフレンスデレイ秒単位で増分して、リンク上の送信時間を考慮します。スイッチは、広告をリンク状態更新パケットにコピーします"
    },
    {
      "indent": 6,
      "text": "Forwarded advertisements are sent to all adjacent switches associated with the interface. If the interface state is Point-to-Point, DS, or Backup, the destination switch ID field of the network layer address information is set to the multicast switch ID AllSPFSwitches. If the interface state is DS Other, the destination switch ID field is set to the multicast switch ID AllDSwitches.",
      "ja": "転送された広告は、インターフェイスに関連付けられたすべての隣接するスイッチに送信されます。インターフェイス状態がポイントツーポイント、DS、またはバックアップの場合、ネットワークレイヤーアドレス情報の宛先スイッチIDフィールドがマルチキャストスイッチID AllSPFSwitchesに設定されます。インターフェイス状態がDS他の場合、宛先スイッチIDフィールドはマルチキャストスイッチID alldswitchesに設定されます。"
    },
    {
      "indent": 0,
      "text": "8.2.4 Installing Link State Advertisements in the Database",
      "section_title": true,
      "ja": "8.2.4 データベースにリンク状態広告をインストールします"
    },
    {
      "indent": 3,
      "text": "When a new link state advertisement is installed into the link state database, as the result of either originating or receiving a new instance of an advertisement, the switch must determine whether the best paths need to be recalculated. To make this determination, do the following:",
      "ja": "新しいリンク状態広告がリンク状態データベースにインストールされている場合、広告の新しいインスタンスを発信または受信した結果として、スイッチは最適なパスを再計算する必要があるかどうかを判断する必要があります。この決定を下すには、次のことを行います。"
    },
    {
      "indent": 3,
      "text": "1. Compare the contents of the new instance with the contents of the old instance (assuming the older instance is available). Note that this comparison does not include any data from the link state header. Differences in fields within the header (such as the sequence number and checksum, which are guaranteed to be different in different instances of an advertisement) are of no consequence when deciding whether or not to recalculate the set of best paths.",
      "ja": "1. 新しいインスタンスの内容を古いインスタンスの内容と比較します（古いインスタンスが利用可能であると仮定します）。この比較には、リンク状態ヘッダーのデータは含まれていないことに注意してください。ヘッダー内のフィールドの違い（広告のさまざまなインスタンスで異なることが保証されているシーケンス番号やチェックサムなど）は、最良のパスのセットを再計算するかどうかを決定する際に結果はありません。"
    },
    {
      "indent": 3,
      "text": "2. If there are no differences in the contents of the two advertisement instances, there is no need to recalculate the set of best paths.",
      "ja": "2. 2つの広告インスタンスの内容に違いがない場合、最良のパスのセットを再計算する必要はありません。"
    },
    {
      "indent": 3,
      "text": "3. Otherwise, the set of best paths must be recalculated.",
      "ja": "3. それ以外の場合、最適なパスのセットを再計算する必要があります。"
    },
    {
      "indent": 3,
      "text": "Note also that the older instance of the advertisement must be removed from the link state database when the new advertisement is installed. The older instance must also be removed from the link state retransmission lists of all neighbors.",
      "ja": "また、新しい広告がインストールされているときに、広告の古いインスタンスをリンク状態データベースから削除する必要があることに注意してください。古いインスタンスも、すべての隣人のリンク状態再送信リストから削除する必要があります。"
    },
    {
      "indent": 0,
      "text": "8.2.5 Retransmitting Link State Advertisements",
      "section_title": true,
      "ja": "8.2.5 リンク状態広告を再送信します"
    },
    {
      "indent": 3,
      "text": "When a switch sends a link state advertisement to an adjacent neighbor, it records the advertisement in the neighbor's link state retransmission list. To ensure the reliability of the distribution process, the switch continues to periodically retransmit the advertisements specified in the list until they are acknowledged.",
      "ja": "スイッチが隣接する隣人にリンク状態広告を送信すると、近隣のリンク状態再送信リストに広告を記録します。配布プロセスの信頼性を確保するために、スイッチは、認められるまでリストで指定された広告を定期的に再送信し続けます。"
    },
    {
      "indent": 3,
      "text": "The interval timer used to trigger retransmission of the advertisements is set to RxmtInterval seconds, as found in the interface data structure. Note that if this value is too low, needless retransmissions will ensue. If the value is too high, the speed with which the databases synchronize across adjacencies may be affected if there are lost packets.",
      "ja": "広告の再送信をトリガーするために使用されるインターバルタイマーは、インターフェイスデータ構造に見られるように、rxmtinterval秒に設定されます。この値が低すぎると、不必要な再送信が続くことに注意してください。値が高すぎる場合、紛失したパケットがある場合、データベースが隣接を越えて同期する速度が影響を受ける可能性があります。"
    },
    {
      "indent": 3,
      "text": "When the interval timer expires, entries in the retransmission list are formatted into one or more Link State Update packets. (Remember that multiple advertisements can fit into a single Link State Update packet.) The age field of each advertisement is incremented by InfTransDelay, as found in the interface data structure, before the advertisement is copied into the outgoing packet.",
      "ja": "インターバルタイマーの有効期限が切れると、再送信リストのエントリが1つ以上のリンク状態更新パケットにフォーマットされます。（複数の広告が単一のリンク状態更新パケットに収まることに注意してください。）各広告の年齢フィールドは、広告が発信パケットにコピーされる前に、インターフェイスデータ構造にあるように、Inftransdelayによって増加します。"
    },
    {
      "indent": 3,
      "text": "Link State Update packets containing retransmitted advertisements are always sent directly to the adjacent switch. That is, the destination field of the network layer addressing information is set to the switch ID of the neighboring switch.",
      "ja": "再送信された広告を含むリンク状態更新パケットは、常に隣接するスイッチに直接送信されます。つまり、ネットワークレイヤーアドレス指定情報の宛先フィールドは、隣接スイッチのスイッチIDに設定されます。"
    },
    {
      "indent": 3,
      "text": "If the adjacent switch goes down, retransmissions will continue until the switch failure is detected and the adjacency is torn down by the VLSP discovery process. When the adjacency is torn down, the link state retransmission list is cleared.",
      "ja": "隣接するスイッチがダウンすると、Switchの障害が検出され、VLSP発見プロセスによって隣接が取り壊されるまで再送信が続きます。隣接が取り壊されると、リンク状態の再送信リストがクリアされます。"
    },
    {
      "indent": 0,
      "text": "8.2.6 Acknowledging Link State Advertisements",
      "section_title": true,
      "ja": "8.2.6 リンク状態広告の確認"
    },
    {
      "indent": 3,
      "text": "Each link state advertisement received by a switch must be acknowledged. In most cases, this is done by sending a Link State Acknowledgment packet. However, acknowledgments can also be done implicitly by sending Link State Update packets (see step 4a of Section 8.2.2).",
      "ja": "スイッチで受信した各リンク状態広告を確認する必要があります。ほとんどの場合、これはリンク状態の確認パケットを送信することによって行われます。ただし、謝辞は、リンク状態更新パケットを送信することで暗黙的に実行することもできます（セクション8.2.2のステップ4Aを参照）。"
    },
    {
      "indent": 3,
      "text": "Multiple acknowledgments can be grouped together into a single Link State Acknowledgment packet.",
      "ja": "複数の確認をグループ化することは、単一のリンク状態確認パケットにグループ化できます。"
    },
    {
      "indent": 3,
      "text": "Sending an acknowledgment",
      "ja": "謝辞を送信します"
    },
    {
      "indent": 6,
      "text": "Link State Acknowledgment packets are sent back out the interface over which the advertisement was received. The packet can be sent immediately to the sending neighbor, or it can be delayed and sent when an interval timer expires.",
      "ja": "リンク状態の確認パケットは、広告が受信されたインターフェイスから送信されます。パケットはすぐに送信中の隣人に送信できます。または、インターバルタイマーが期限切れになったときに遅延して送信することができます。"
    },
    {
      "indent": 6,
      "text": "o Sending delayed acknowledgments facilitates the formatting of multiple acknowledgments into a single packet. This enables a single packet to send acknowledgments to several neighbors at once by using a multicast switch ID in the destination field of the network layer addressing information (see below). Delaying acknowledgments also randomizes the acknowledgment packets sent by the multiple switches attached to a multi-access network link.",
      "ja": "o 遅延承認を送信すると、複数の謝辞が単一のパケットにフォーマットされます。これにより、単一のパケットがネットワークレイヤーアドレス指定情報の宛先フィールドにマルチキャストスイッチIDを使用して、複数の近隣に謝辞を送信できます（以下を参照）。謝辞の遅延は、マルチアクセスネットワークリンクに接続された複数のスイッチによって送信された確認パケットをランダム化します。"
    },
    {
      "indent": 9,
      "text": "Note that the interval used to time delayed acknowledgments must be short (less than RxmtInterval) or needless retransmissions will ensue.",
      "ja": "時間遅延の承認に使用される間隔は、短く（rxmtinterval未満）、または不必要な再送信が続く必要があることに注意してください。"
    },
    {
      "indent": 9,
      "text": "Delayed acknowledgments are sent to all adjacent switches associated with the interface. If the interface state is Point-to-Point, DS, or Backup, the destination field of the network layer addressing information is set to the multicast switch ID AllSPFSwitches. If the interface state is DS Other, the destination field is set to the multicast switch ID AllDSwitches.",
      "ja": "遅延承認は、インターフェイスに関連付けられたすべての隣接するスイッチに送信されます。インターフェイス状態がポイントツーポイント、DS、またはバックアップの場合、ネットワークレイヤーアドレス指定情報の宛先フィールドがマルチキャストスイッチID AllSPFSwitchesに設定されます。インターフェイス状態がDSの場合、宛先フィールドはマルチキャストスイッチID AlldSwitchesに設定されます。"
    },
    {
      "indent": 6,
      "text": "o Immediate acknowledgments are sent directly to a specific neighbor in response to the receipt of duplicate link state advertisements. These acknowledgments are sent immediately when the duplicate is received.",
      "ja": "o 即時の謝辞は、重複するリンク状態広告の受領に応じて、特定の隣人に直接送信されます。これらの謝辞は、複製が受信されるとすぐに送信されます。"
    },
    {
      "indent": 6,
      "text": "The method used to send a Link State Acknowledgment packet -- either delayed or immediate -- depends on the circumstances surrounding the receipt of the advertisement, as shown in Table 6. Note that switches with an interface state of Backup send acknowledgments differently than other switches because they play a slightly different role in the distribution process (see Section 8.2.3).",
      "ja": "表6に示すように、リンク状態確認パケットを遅延または即時に送信するために使用される方法は、広告の受領を取り巻く状況に依存します。分布プロセスでわずかに異なる役割を果たすため（セクション8.2.3を参照）。"
    },
    {
      "indent": 6,
      "text": "                            Action taken in state\nCircumstances           Backup               Other states",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Advertisement was No ack sent No ack sent forwarded back out receiving interface",
      "ja": "広告が送信されなかったACKは送信されません"
    },
    {
      "indent": 6,
      "text": "Advertisement is Delayed ack sent Delayed ack more recent than if advertisement sent database copy, but received from DS, was not forwarded else do nothing back out receiving interface",
      "ja": "広告が遅延しているACK送信されたACKは、広告がデータベースコピーを送信したがDSから受信された場合よりも最近遅れたACKを送信しました。"
    },
    {
      "indent": 6,
      "text": "Advertisement was a Delayed ack sent No ack sent duplicate treated if advertisement as an implied acknow- received from DS, ledgment (step 4a of else do nothing Section 8.2.2)",
      "ja": "広告は、DS、LEDGEGNから受け取った暗黙の確認として広告が送信されたACK送信されたACKが送信されませんでした（その他のステップ4Aはセクション8.2.2を行いません）"
    },
    {
      "indent": 6,
      "text": "Advertisement was a Immediate ack Immediate ack duplicate not treated sent sent as an implied acknow-ledgment",
      "ja": "広告は即時のACK即時ACKの重複していない処理されていない送信されました。"
    },
    {
      "indent": 6,
      "text": "Advertisement age Immediate ack Immediate ack equal to MaxAge and sent sent no current instance found in database",
      "ja": "Advertisement Age即時ACKはMaxageに等しい即時ACKと送信"
    },
    {
      "indent": 15,
      "text": "Table 6: Sending Link State Acknowledgments",
      "ja": "表6：リンク状態の謝辞の送信"
    },
    {
      "indent": 3,
      "text": "Receiving an acknowledgment",
      "ja": "謝辞を受け取ります"
    },
    {
      "indent": 6,
      "text": "When the a Link State Acknowledgment packet is received, it is first subjected to a number of consistency checks. In particular, the packet is associated with a specific neighbor. If the state of that neighbor is less than Exchange, the entire Link State Acknowledgment packet is discarded.",
      "ja": "リンク状態の確認パケットを受信すると、最初に多くの一貫性チェックが行われます。特に、パケットは特定の隣人に関連付けられています。その隣人の状態が交換よりも少ない場合、リンク状態の確認パケット全体が破棄されます。"
    },
    {
      "indent": 6,
      "text": "Each acknowledgment contained in the packet is processed as follows: o If the advertisement being acknowledged has an instance in the link state retransmission list for the sending neighbor, do the following:",
      "ja": "パケットに含まれる各承認は次のように処理されます。O承認されている広告に、送信中の隣人のリンク状態再送信リストにインスタンスがある場合、次のことを行います。"
    },
    {
      "indent": 9,
      "text": "o If the acknowledgment is for the same instance as that specified in the list (as determined by the procedure described in Section 7.1.1), remove the instance from the retransmission list.",
      "ja": "o 謝辞がリストで指定されているものと同じインスタンスの場合（セクション7.1.1で説明されている手順で決定されているように）、再送信リストからインスタンスを削除します。"
    },
    {
      "indent": 9,
      "text": "o Otherwise, log the acknowledgment as questionable.",
      "ja": "o それ以外の場合は、承認を疑わしいものとして記録します。"
    },
    {
      "indent": 0,
      "text": "8.3 Aging the Link State Database",
      "section_title": true,
      "ja": "8.3 リンク状態データベースの老化"
    },
    {
      "indent": 3,
      "text": "Each link state advertisement has an age field, containing the advertisement's age, expressed in seconds. When the advertisement is copied into a Link State Update packet for forwarding out a particular interface, the age is incremented by InfTransDelay seconds to account for the transmission time over the link. An advertisement's age is never incremented past the value MaxAge. Advertisements with an age of MaxAge are not used to calculate best paths.",
      "ja": "各リンク状態広告には、広告の年齢を含む年齢分野が数秒で表現されています。特定のインターフェイスを転送するために広告がリンク状態アップデートパケットにコピーされると、年齢はインフレンスデレイ秒単位で増加し、リンク上の送信時間を考慮します。広告の年齢は、値の最大値を超えて増加することはありません。最大年齢の広告は、最良のパスを計算するために使用されません。"
    },
    {
      "indent": 3,
      "text": "If a link state advertisement's age reaches MaxAge, the switch flushes the advertisement from the switch fabric by doing the following:",
      "ja": "Link State Advertisementの年齢が最大に達すると、スイッチは次のことを行うことでスイッチファブリックから広告をフラッシュします。"
    },
    {
      "indent": 3,
      "text": "o Originate a new instance of the advertisement with the age field set to MaxAge. The distribution process will eventually result in the advertisement being removed from the retransmission lists of all switches in the fabric.",
      "ja": "o 広告の新しいインスタンスを作成し、年齢フィールドに最大に設定されています。配布プロセスにより、最終的には、ファブリック内のすべてのスイッチの再送信リストから広告が削除されます。"
    },
    {
      "indent": 3,
      "text": "o Once the advertisement is no longer contained in the link state retransmission list of any neighbor and no neighbor is in a state of Exchange or Loading, remove the advertisement from the local link state database.",
      "ja": "o 隣人のリンク状態再送信リストに広告が含まれなくなり、隣人が交換または読み込みの状態にない場合は、ローカルリンク状態データベースから広告を削除します。"
    },
    {
      "indent": 0,
      "text": "8.3.1 Premature Aging of Advertisements",
      "section_title": true,
      "ja": "8.3.1 広告の時期尚早の老化"
    },
    {
      "indent": 3,
      "text": "A link state advertisement can be prematurely flushed from the switch fabric by forcing its age to MaxAge and redistributing the advertisement.",
      "ja": "リンク状態広告は、年齢を最大に強制し、広告を再配布することにより、スイッチファブリックから時期尚早に洗い流すことができます。"
    },
    {
      "indent": 3,
      "text": "A switch that was previously the designated switch for a multi-access network link but has lost that status due to a failover to the backup designated switch prematurely ages the network link advertisements it originated for the link.",
      "ja": "以前はマルチアクセスネットワークリンクの指定されたスイッチであったが、バックアップ指定スイッチへのフェイルオーバーがリンク用に発信されたネットワークリンク広告を早期に老化させるため、そのステータスを失ったスイッチ。"
    },
    {
      "indent": 3,
      "text": "Premature aging also occurs when an advertisement's sequence number must wrap -- that is, when the current advertisement instance has a sequence number of 0x7fffffff. In this circumstance, the advertisement is prematurely aged so that the next instance of the advertisement can be originated with a sequence number of 0x80000001 and be recognized as the most recent instance.",
      "ja": "また、広告のシーケンス番号が包む必要がある場合、つまり現在の広告インスタンスにシーケンス番号0x7fffffffがある場合にも、早期に発生します。この状況では、広告は時期尚早であるため、広告の次のインスタンスは0x80000001のシーケンス番号で発信され、最新のインスタンスとして認識されます。"
    },
    {
      "indent": 3,
      "text": "A switch may only prematurely age those link state advertisements for which it is the advertising switch.",
      "ja": "スイッチは、広告スイッチであるリンク状態広告を時期尚早に老化させる場合があります。"
    },
    {
      "indent": 0,
      "text": "9. Calculating the Best Paths",
      "section_title": true,
      "ja": "9. 最適なパスを計算します"
    },
    {
      "indent": 3,
      "text": "Once an adjacency has been formed and the two switches have synchronized their databases, each switch in the adjacency calculates the best path(s) to all other switches in the fabric, using itself as the root of each path. In this context, \"best\" path means that path with the lowest total cost metric across all hops. If there are multiple paths with the same (lowest) total cost metric, they are all calculated. Best paths are stored in the area data structure.",
      "ja": "隣接性が形成され、2つのスイッチがデータベースを同期すると、隣接する各スイッチは、各パスのルートとしてそれ自体を使用して、ファブリックの他のすべてのスイッチへの最適なパスを計算します。この文脈では、「最良の」パスとは、すべてのホップで最も低い総コストメトリックを持つパスを意味します。同じ（最も低い）総コストメトリックを持つ複数のパスがある場合、それらはすべて計算されます。最適なパスは、エリアデータ構造に保存されます。"
    },
    {
      "indent": 3,
      "text": "Paths are calculated using the well-known Dijkstra algorithm. For a detailed description of this algorithm, the reader is referred to [Perlman], or any of a number of standard textbooks dealing with network routing.",
      "ja": "パスは、よく知られているDijkstraアルゴリズムを使用して計算されます。このアルゴリズムの詳細な説明については、読者は[Perlman]、またはネットワークルーティングを扱う多くの標準的な教科書を参照されます。"
    },
    {
      "indent": 3,
      "text": "Note that whenever there is a change in an adjacency relationship, or any change that alters the topology of the switch fabric, the set of best paths must be recalculated.",
      "ja": "隣接関係に変更がある場合、またはスイッチファブリックのトポロジを変更する変更がある場合は、最適なパスのセットを再計算する必要があることに注意してください。"
    },
    {
      "indent": 0,
      "text": "10. Protocol Packets",
      "section_title": true,
      "ja": "10. プロトコルパケット"
    },
    {
      "indent": 3,
      "text": "This section describes VLS protocol packets and link state advertisements.",
      "ja": "このセクションでは、VLSプロトコルパケットと状態広告をリンクします。"
    },
    {
      "indent": 3,
      "text": "There are five distinct VLSP packet types, as listed in Table 7.",
      "ja": "表7にリストされているように、5つの異なるVLSPパケットタイプがあります。"
    },
    {
      "indent": 5,
      "text": "Type Packet Name Function Description",
      "ja": "入力パケット名関数の説明"
    },
    {
      "indent": 5,
      "text": "1     Hello             Select DS/Backup DS   Section 10.6.1\n2     Database          Summarize database\n        Description     contents              Section 10.6.2\n3     LS Request        Database download     Section 10.6.3\n4     LS Update         Database update       Section 10.6.4\n5     LS Ack            Flooding acknow-\n                        ledgment              Section 10.6.5",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 22,
      "text": "Table 7: VLSP Packet Types",
      "ja": "表7：VLSPパケットタイプ"
    },
    {
      "indent": 3,
      "text": "All VLSP packets are encapsulated within a standard ISMP packet, with the VLS packet carried in the ISMP message body. The ISMP packet is described in Section 10.1.",
      "ja": "すべてのVLSPパケットは、標準のISMPパケット内にカプセル化されており、VLSパケットはISMPメッセージ本文に持ち込まれています。ISMPパケットはセクション10.1で説明されています。"
    },
    {
      "indent": 3,
      "text": "Since it is important that the link state databases remain synchronized throughout the switch fabric, processing of both incoming and outgoing routing protocol packets should take priority over ordinary data packets. Section 10.2 describes packet processing.",
      "ja": "リンク状態データベースはスイッチファブリック全体で同期したままであることが重要であるため、着信および発信ルーティングプロトコルパケットの両方の処理は、通常のデータパケットよりも優先されるはずです。セクション10.2では、パケット処理について説明します。"
    },
    {
      "indent": 3,
      "text": "All VLSP packets begin with network layer addressing information, described in Section 10.3, followed by a standard header, described in Section 10.4.",
      "ja": "すべてのVLSPパケットは、セクション10.3で説明されている情報に対処するネットワークレイヤーで始まり、セクション10.4で説明されている標準ヘッダーが続きます。"
    },
    {
      "indent": 3,
      "text": "With the exception of Hello packets, all VLSP packets deal with lists of link state advertisements. The format of a link state advertisement is described in Section 11.",
      "ja": "ハローパケットを除き、すべてのVLSPパケットは、リンク状態広告のリストを扱います。リンク状態広告の形式については、セクション11で説明します。"
    },
    {
      "indent": 0,
      "text": "10.1 ISMP Packet Format",
      "section_title": true,
      "ja": "10.1 ISMPパケット形式"
    },
    {
      "indent": 3,
      "text": "All VLSP packets are encapsulated within a standard ISMP packet. ISMP packets are of variable length and have the following general structure:",
      "ja": "すべてのVLSPパケットは、標準のISMPパケット内でカプセル化されています。ISMPパケットの長さは可変で、次の一般構造があります。"
    },
    {
      "indent": 3,
      "text": "o Frame header o ISMP packet header o ISMP message body",
      "ja": "o フレームヘッダーo ISMPパケットヘッダーo ISMPメッセージボディ"
    },
    {
      "indent": 0,
      "text": "10.1.1 Frame Header",
      "section_title": true,
      "ja": "10.1.1 フレームヘッダー"
    },
    {
      "indent": 3,
      "text": "ISMP packets are encapsulated within an IEEE 802-compliant frame using a standard header as shown below:",
      "ja": "ISMPパケットは、以下に示すように標準ヘッダーを使用してIEEE 802準拠フレーム内にカプセル化されます。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |                                                               |\n   +      Destination address      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n04 |                               |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+        Source address         +\n08 |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n12 |             Type              |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n16 |                                                               |\n   +                                                               +\n   :                                                               :",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Destination address",
      "ja": "宛先アドレス"
    },
    {
      "indent": 6,
      "text": "This 6-octet field contains the Media Access Control (MAC) address of the multicast channel over which all switches in the fabric receive ISMP packets. The destination address of all ISMP packets contain a value of 01-00-1D-00-00-00.",
      "ja": "この6-OCTETフィールドには、ファブリックのすべてのスイッチがISMPパケットを受信するマルチキャストチャネルのメディアアクセス制御（MAC）アドレスが含まれています。すべてのISMPパケットの宛先アドレスには、01-00-1D-00-00-00の値が含まれています。"
    },
    {
      "indent": 3,
      "text": "Source address",
      "ja": "ソースアドレス"
    },
    {
      "indent": 6,
      "text": "This 6-octet field contains the physical (MAC) address of the switch originating the ISMP packet.",
      "ja": "この6-OCTETフィールドには、ISMPパケットを発信するスイッチの物理（MAC）アドレスが含まれています。"
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "This 2-octet field identifies the type of data carried within the frame. The type field of ISMP packets contains the value 0x81FD.",
      "ja": "この2-OCTETフィールドは、フレーム内に運ばれるデータのタイプを識別します。ISMPパケットのタイプフィールドには、値0x81FDが含まれています。"
    },
    {
      "indent": 0,
      "text": "10.1.2 ISMP Packet Header",
      "section_title": true,
      "ja": "10.1.2 ISMPパケットヘッダー"
    },
    {
      "indent": 3,
      "text": "The ISMP packet header consists of 6 octets, as shown below:",
      "ja": "ISMPパケットヘッダーは、以下に示すように、6オクテットで構成されています。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |///////////////////////////////////////////////////////////////|\n   ://////// Frame header /////////////////////////////////////////:\n   +//////// (14 octets)  /////////+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n12 |///////////////////////////////|            Version            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n16 |       ISMP message type       |        Sequence number        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n20 |                                                               |\n   +                                                               +\n   :                                                               :",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Frame header",
      "ja": "フレームヘッダー"
    },
    {
      "indent": 6,
      "text": "This 14-octet field contains the frame header.",
      "ja": "この14オクテットフィールドには、フレームヘッダーが含まれています。"
    },
    {
      "indent": 6,
      "text": "Version",
      "ja": "バージョン"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains the version number of the InterSwitch Message Protocol to which this ISMP packet adheres. This document describes ISMP Version 2.0. ISMP message type",
      "ja": "この2-OCTETフィールドには、このISMPパケットが接着するスイッチInterswitchメッセージプロトコルのバージョン番号が含まれています。このドキュメントでは、ISMPバージョン2.0について説明しています。ISMPメッセージタイプ"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains a value indicating which type of ISMP message is contained within the message body. Valid values are as follows:",
      "ja": "この2-OCTETフィールドには、メッセージ本文内にどのタイプのISMPメッセージが含まれているかを示す値が含まれています。有効な値は次のとおりです。"
    },
    {
      "indent": 9,
      "text": "1 (reserved) 2 Interswitch Keepalive messages 3 Interswitch Link State messages 4 Interswitch Spanning Tree BPDU messages and Interswitch Remote Blocking messages 5 Interswitch Resolve and New User messages 6 (reserved) 7 Tag-Based Flood messages 8 Interswitch Tap messages",
      "ja": "1（予約済み）2インタースイッチKeepaliveメッセージ3インタースイッチリンク状態メッセージ4インタースイッチスパンニングツリーBPDUメッセージとインタースイッチリモートブロッキングメッセージ"
    },
    {
      "indent": 6,
      "text": "All VLS protocol messages have an ISMP message type of 3.",
      "ja": "すべてのVLSプロトコルメッセージには、3のISMPメッセージタイプがあります。"
    },
    {
      "indent": 3,
      "text": "Sequence number",
      "ja": "シーケンス番号"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains an internally generated sequence number used by the various protocol handlers for internal synchronization of messages.",
      "ja": "この2-OCTETフィールドには、メッセージの内部同期のためにさまざまなプロトコルハンドラーが使用する内部生成されたシーケンス番号が含まれています。"
    },
    {
      "indent": 0,
      "text": "10.1.3 ISMP Message Body",
      "section_title": true,
      "ja": "10.1.3 ISMPメッセージ本文"
    },
    {
      "indent": 3,
      "text": "The ISMP message body is a variable-length field containing the actual data of the ISMP message. The length and content of this field are determined by the value found in the message type field. VLSP packets are contained in the ISMP message body.",
      "ja": "ISMPメッセージ本文は、ISMPメッセージの実際のデータを含む可変長フィールドです。このフィールドの長さと内容は、メッセージタイプフィールドにある値によって決まります。VLSPパケットは、ISMPメッセージ本文に含まれています。"
    },
    {
      "indent": 0,
      "text": "10.2 VLSP Packet Processing",
      "section_title": true,
      "ja": "10.2 VLSPパケット処理"
    },
    {
      "indent": 3,
      "text": "Note that with the exception of Hello packets, VLSP packets are sent only between adjacent neighbors. Therefore, all packets travel a single hop.",
      "ja": "ハローパケットを除き、VLSPパケットは隣接する隣人の間でのみ送信されることに注意してください。したがって、すべてのパケットは1回のホップを移動します。"
    },
    {
      "indent": 3,
      "text": "VLSP does not support fragmentation and reassembly of packets. Therefore, packets containing lists of link state advertisements or advertisement headers must be formatted such that they contain only as many advertisements or headers as will fit within the size constraints of a standard ethernet frame.",
      "ja": "VLSPは、パケットの断片化と再組み立てをサポートしていません。したがって、リンク状態広告または広告ヘッダーのリストを含むパケットは、標準のイーサネットフレームのサイズ制約内に収まる限り多くの広告またはヘッダーのみを含むようにフォーマットする必要があります。"
    },
    {
      "indent": 3,
      "text": "When a protocol packet is received by a switch, it must first pass the following criteria before being accepted for further processing:",
      "ja": "プロトコルパケットがスイッチによって受信される場合、さらに処理するために受け入れられる前に、最初に次の基準を渡す必要があります。"
    },
    {
      "indent": 3,
      "text": "o The checksum number must be correct.",
      "ja": "o チェックサム番号は正しい必要があります。"
    },
    {
      "indent": 3,
      "text": "o The destination switch ID (as found in the network layer address information) must be the switch ID of the receiving switch, or one of the multicast switch IDs AllSPFSwitches or AllDSwitches.",
      "ja": "o 宛先スイッチID（ネットワークレイヤーアドレス情報にあります）は、受信スイッチのスイッチID、またはマルチキャストスイッチIDの1つである必要があります。"
    },
    {
      "indent": 6,
      "text": "If the destination switch ID is the multicast switch ID AllDSwitches, the state of the receiving interface must be Point-to-Point, DS, or Backup.",
      "ja": "宛先スイッチIDがマルチキャストスイッチID AlldSwitchesである場合、受信インターフェイスの状態はポイントツーポイント、DS、またはバックアップでなければなりません。"
    },
    {
      "indent": 3,
      "text": "o The source switch ID (as found in the network layer address information) must not be that of the receiving switch. (That is, locally originated packets should be discarded.)",
      "ja": "o ソーススイッチID（ネットワークレイヤーアドレス情報に見られるように）は、受信スイッチのものではありません。（つまり、局所的に発信されたパケットを破棄する必要があります。）"
    },
    {
      "indent": 3,
      "text": "At this point, if the packet is a Hello packet, it is accepted for further processing.",
      "ja": "この時点で、パケットがハローパケットの場合、さらに処理するために受け入れられます。"
    },
    {
      "indent": 3,
      "text": "Since all other packet types are only sent between adjacent neighbors, the packet must have been sent by one of the switch's active neighbors. If the source switch ID matches the switch ID of one of the receiving switch's active neighbors (as stored in the interface data structure associated with the inport interface), the packet is accepted for further processing. Otherwise, the packet is discarded.",
      "ja": "他のすべてのパケットタイプは隣接する隣人の間でのみ送信されるため、パケットはスイッチのアクティブネイバーの1つによって送信されている必要があります。ソーススイッチIDが、受信スイッチのアクティブネイバーの1つのスイッチIDと一致する場合（Inportインターフェイスに関連付けられたインターフェイスデータ構造に保存されているように）、パケットはさらなる処理のために受け入れられます。それ以外の場合、パケットは破棄されます。"
    },
    {
      "indent": 0,
      "text": "10.3 Network Layer Address Information",
      "section_title": true,
      "ja": "10.3 ネットワークレイヤーアドレス情報"
    },
    {
      "indent": 3,
      "text": "As mentioned in Section 2.2.1, portions of the VLS protocol (as derived from OSPF) are dependent on certain network layer addresses -- in particular, the AllSPFSwitches and AllDSwitches multicast addresses that drive the distribution of link state advertisements throughout the switch fabric. In order to facilitate the implementation of the protocol at the physical MAC layer, network layer address information is encapsulated in the VSLP packets. This information immediately follows the ISMP frame and packet header and immediately precedes the VLSP packet header, as shown below:",
      "ja": "セクション2.2.1で述べたように、VLSプロトコルの一部（OSPFから派生）は、特定のネットワークレイヤーアドレス、特にAllSPFSwitchesとAlldswitchesマルチキャストアドレスに依存しています。物理MACレイヤーでのプロトコルの実装を容易にするために、ネットワークレイヤーアドレス情報がVSLPパケットにカプセル化されます。この情報は、ISMPフレームとパケットヘッダーの直後に続き、以下に示すように、VLSPパケットヘッダーの直前になります。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                                                               |\n   :                  frame header / ISMP header                   :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |                                                               |\n   :                      Unused (20 octets)                       :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n20 |                                                               |\n   +                       Source switch ID                        +\n24 |                                                               |\n   +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n28 |                               |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n32 |                                                               |\n   +                     Destination switch ID                     +\n36 |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n40 |                                                               |\n   :                          VLSP header                          :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Source switch ID",
      "ja": "ソーススイッチID"
    },
    {
      "indent": 6,
      "text": "This 10-octet field contains the switch ID of the sending switch.",
      "ja": "この10-OCTETフィールドには、送信スイッチのスイッチIDが含まれています。"
    },
    {
      "indent": 3,
      "text": "Destination switch ID",
      "ja": "宛先スイッチID"
    },
    {
      "indent": 6,
      "text": "This 10-octet field contains the switch ID of the packet destination. The value here is set as follows:",
      "ja": "この10-OCTETフィールドには、パケット宛先のスイッチIDが含まれています。ここの値は次のように設定されています。"
    },
    {
      "indent": 6,
      "text": "o Hello packets are addressed to the multicast switch ID AllSPFSwitches.",
      "ja": "o こんにちはパケットは、マルチキャストスイッチID AllSpfswitchesに宛てられています。"
    },
    {
      "indent": 6,
      "text": "o The designated switch and the backup designated switch address initial Link State Update packets and Link State Acknowledgment packets to the multicast switch ID AllSPFSwitches.",
      "ja": "o 指定されたスイッチとバックアップ指定されたスイッチアドレス初期リンク状態更新パケットとマルチキャストスイッチID ALLSPFSWITCHESに状態確認パケットをリンクします。"
    },
    {
      "indent": 6,
      "text": "o All other switches address initial Link State Update packets and Link State Acknowledgment packets to the multicast switch ID AllDSwitches.",
      "ja": "o 他のすべてのスイッチは、初期リンク状態更新パケットをアドレス指定し、マルチキャストスイッチID alldswitchesに状態確認パケットをリンクします。"
    },
    {
      "indent": 6,
      "text": "o Retransmissions of Link State Update packets are always addressed directly to the nonresponding switch.",
      "ja": "o リンク状態アップデートパケットの再送信は、常に非応答スイッチに直接対処されます。"
    },
    {
      "indent": 6,
      "text": "o Database Description packets and Link State Request are always addressed directly to the other switch participating in the database exchange process.",
      "ja": "o データベースの説明パケットとリンク状態要求は、常にデータベース交換プロセスに参加する他のスイッチに直接対処されます。"
    },
    {
      "indent": 3,
      "text": "VLSP header",
      "ja": "VLSPヘッダー"
    },
    {
      "indent": 6,
      "text": "This 30-octet field contains the VLSP standard header. See Section 10.4.",
      "ja": "この30オクテットフィールドには、VLSP標準ヘッダーが含まれています。セクション10.4を参照してください。"
    },
    {
      "indent": 0,
      "text": "10.4 VLSP Packet Header",
      "section_title": true,
      "ja": "10.4 VLSPパケットヘッダー"
    },
    {
      "indent": 3,
      "text": "Every VLSP packet starts with a common 30-octet header. This header, along with the data found in the network layer address information, contains all the data necessary to determine whether the packet should be accepted for further processing. (See Section 10.1.)",
      "ja": "すべてのVLSPパケットは、一般的な30オクテットヘッダーから始まります。このヘッダーは、ネットワークレイヤーアドレス情報にあるデータとともに、パケットをさらに処理するために受け入れるべきかどうかを判断するために必要なすべてのデータが含まれています。（セクション10.1を参照してください。）"
    },
    {
      "indent": 3,
      "text": "The format of the VLSP header is shown below. Note that the header starts at offset 36 of the ISMP message body, following the network layer address information.",
      "ja": "VLSPヘッダーの形式を以下に示します。ヘッダーは、ネットワークレイヤーアドレス情報に従って、ISMPメッセージ本文のオフセット36から始まることに注意してください。"
    },
    {
      "indent": 3,
      "text": "     0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                                                               |\n   :                  frame header / ISMP header                   :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |                                                               |\n   :               Network layer address information               :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n40 |    (unused)   |     Type      |         Packet length         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n44 |                                                               |\n   +                       Source switch ID                        +\n48 |                                                               |\n   +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n52 |                               |         Area ID . . .         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n56 |         Area ID . . .         |           Checksum            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n60 |            Autype             |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+        Authentication         +\n64 |                                                               |\n   +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n68 |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Type",
      "ja": "タイプ"
    },
    {
      "indent": 6,
      "text": "This 1-octet field contains the packet type. Possible values are as follows:",
      "ja": "この1-OCTETフィールドには、パケットタイプが含まれています。考えられる値は次のとおりです。"
    },
    {
      "indent": 9,
      "text": "1 Hello 2 Database Description 3 Link State Request 4 Link State Update 5 Link State Acknowledgment",
      "ja": "1 Hello 2データベース説明3リンク状態リクエスト4リンク状態更新5リンク状態の確認"
    },
    {
      "indent": 3,
      "text": "Packet length",
      "ja": "パケット長"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains the length of the protocol packet, in bytes, calculated from the start of the VLSP header, at offset 20 of the ISMP message body. If the packet length is not an integral number of 16-bit words, the packet is padded with an octet of zero (see the description of the checksum field, below).",
      "ja": "この2-OCTETフィールドには、ISMPメッセージ本文のオフセット20で、VLSPヘッダーの開始から計算されたバイト単位のプロトコルパケットの長さが含まれています。パケットの長さが16ビットの単語の積分数でない場合、パケットにはゼロのオクテットが詰め込まれています（以下のチェックサムフィールドの説明を参照）。"
    },
    {
      "indent": 3,
      "text": "Switch ID",
      "ja": "IDを切り替えます"
    },
    {
      "indent": 6,
      "text": "This 10-octet field contains the switch ID of the sending switch.",
      "ja": "この10-OCTETフィールドには、送信スイッチのスイッチIDが含まれています。"
    },
    {
      "indent": 3,
      "text": "Area ID",
      "ja": "エリアID"
    },
    {
      "indent": 6,
      "text": "This 4-octet field contains the area identifier. Since VLSP does not support multiple areas, the value here is always zero.",
      "ja": "この4-OCTETフィールドには、領域識別子が含まれています。VLSPは複数の領域をサポートしていないため、ここでの値は常にゼロです。"
    },
    {
      "indent": 3,
      "text": "Checksum",
      "ja": "チェックサム"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains the packet checksum value. The checksum is calculated as the 16-bit one's complement of the one's complement sum of all the 16-bit words in the packet, beginning with the VLSP header, excluding the authentication field. If the packet length is not an integral number of 16-bit words, the packet is padded with an octet of zero before calculating the checksum.",
      "ja": "この2-OCTETフィールドには、パケットチェックサム値が含まれています。チェックサムは、認証フィールドを除くVLSPヘッダーから始まる16ビットのすべての単語の16ビットの補数の補数として計算されます。パケットの長さが16ビットの単語の積分数でない場合、チェックサムを計算する前に、パケットにゼロのオクテットが詰め込まれています。"
    },
    {
      "indent": 3,
      "text": "AuType",
      "ja": "自己型"
    },
    {
      "indent": 6,
      "text": "This 2-octet field identifies the authentication scheme to be used for the packet. Since authentication is not supported by this version of VLSP, this field contains zero.",
      "ja": "この2-OCTETフィールドは、パケットに使用される認証スキームを識別します。認証はVLSPのこのバージョンではサポートされていないため、このフィールドにはゼロが含まれています。"
    },
    {
      "indent": 3,
      "text": "Authentication",
      "ja": "認証"
    },
    {
      "indent": 6,
      "text": "This 8-octet field is reserved for use by the authentication scheme. Since authentication is not supported by this version of VLSP, this field contains zeroes.",
      "ja": "この8オクテットのフィールドは、認証スキームで使用するために予約されています。認証はVLSPのこのバージョンではサポートされていないため、このフィールドにはゼロが含まれています。"
    },
    {
      "indent": 0,
      "text": "10.5 Options Field",
      "section_title": true,
      "ja": "10.5 オプションフィールド"
    },
    {
      "indent": 3,
      "text": "Hello packets and Database Description packets, as well as link state advertisements, contain a 1-octet options field. Using this field, a switch can communicate its optional capabilities to other VLSP switches. The receiving switch can then choose whether or not to support those optional capabilities. Thus, switches of differing capabilities potentially can be mixed within a single VLSP routing domain.",
      "ja": "こんにちはパケットとデータベースの説明パケット、およびリンク状態広告には、1-OCTETオプションフィールドが含まれています。このフィールドを使用すると、スイッチはオプションの機能を他のVLSPスイッチに通信できます。受信スイッチは、これらのオプションの機能をサポートするかどうかを選択できます。したがって、潜在的に異なる機能のスイッチは、単一のVLSPルーティングドメイン内で混合できます。"
    },
    {
      "indent": 3,
      "text": "Two optional capabilities are currently defined in the options field: routing based on Type of Service (TOS) and support for external routing beyond the local switch fabric. These two capabilities are specified in the options field as shown below.",
      "ja": "現在、2つのオプション機能がオプションフィールドで定義されています。これは、サービスの種類（TOS）に基づくルーティングと、ローカルスイッチファブリックを超えた外部ルーティングのサポートです。これらの2つの機能は、以下に示すようにオプションフィールドで指定されています。"
    },
    {
      "indent": 29,
      "text": "+-+-+-+-+-+-+-+-+\n|0|0|0|0|0|0|E|T|\n+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 29,
      "text": "The options field",
      "ja": "オプションフィールド"
    },
    {
      "indent": 3,
      "text": "T-bit",
      "ja": "tビット"
    },
    {
      "indent": 6,
      "text": "The T-bit specifies the switch's Type of Service (TOS) capability. If the T-bit is set, the switch supports routing based on nonzero types of service.",
      "ja": "Tビットは、スイッチのタイプのサービス（TOS）機能を指定します。Tビットが設定されている場合、スイッチはゼロ以外のサービスに基づいてルーティングをサポートします。"
    },
    {
      "indent": 3,
      "text": "E-bit",
      "ja": "e-bit"
    },
    {
      "indent": 6,
      "text": "The E-bit specifies the switch's external routing capability. If the E-bit is set, the switch supports external routing.",
      "ja": "eビットは、スイッチの外部ルーティング機能を指定します。e-bitが設定されている場合、スイッチは外部ルーティングをサポートします。"
    },
    {
      "indent": 3,
      "text": "Note: The current version of VLSP supports neither of these capabilities. Therefore, both the T-bit and the E-bit are clear and the options field contains a value of zero.",
      "ja": "注：VLSPの現在のバージョンは、これらの機能のどちらもサポートしていません。したがって、Tビットとeビットの両方が明確であり、オプションフィールドにはゼロの値が含まれています。"
    },
    {
      "indent": 0,
      "text": "10.6 Packet Formats",
      "section_title": true,
      "ja": "10.6 パケット形式"
    },
    {
      "indent": 3,
      "text": "This section contains detailed descriptions of the five VLS protocol packets.",
      "ja": "このセクションには、5つのVLSプロトコルパケットの詳細な説明が含まれています。"
    },
    {
      "indent": 0,
      "text": "10.6.1 Hello Packets",
      "section_title": true,
      "ja": "10.6.1 こんにちはパケット"
    },
    {
      "indent": 3,
      "text": "Hello packets are sent periodically over multi-access switch interfaces in order to discover and maintain neighbor relationships.",
      "ja": "ハローパケットは、近隣の関係を発見および維持するために、マルチアクセススイッチインターフェイスの上に定期的に送信されます。"
    },
    {
      "indent": 3,
      "text": "Note: Hello packets are not sent over point-to-point network links. For point-to-point links, the VLS protocol relies on the VlanHello protocol [IDhello] to notify it of neighboring switches.",
      "ja": "注：ハローパケットは、ポイントツーポイントネットワークリンクを介して送信されません。ポイントツーポイントリンクの場合、VLSプロトコルはVlanhelloプロトコル[Idhello]に依存して、隣接するスイッチを通知します。"
    },
    {
      "indent": 3,
      "text": "Since all switches connected to a common network link must agree on certain interface parameters, these parameters are included in each Hello packet. A switch receiving a Hello packet that contains parameters inconsistent with its own view of the interface will not establish a neighbor relationship with the sending switch.",
      "ja": "一般的なネットワークリンクに接続されているすべてのスイッチは、特定のインターフェイスパラメーターに同意する必要があるため、これらのパラメーターは各ハローパケットに含まれています。インターフェイスの独自のビューと矛盾するパラメーターを含むハローパケットを受信するスイッチは、送信スイッチとの隣接関係を確立しません。"
    },
    {
      "indent": 3,
      "text": "The format of a Hello packet is shown below.",
      "ja": "ハローパケットの形式を以下に示します。"
    },
    {
      "indent": 3,
      "text": "     0                   1                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n 00 |                                                               |\n    :              Network layer addressing / VLSP header           :\n    |                                                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n 70 |                      (unused -- must be 0)                    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n 74 |         HelloInt              |    Options    |   Priority    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n 78 |                            DeadInt                            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n 82 |                                                               |\n    +                      Designated switch ID                     +\n 86 |                                                               |\n    +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n 90 |                               |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n 94 |                                                               |\n    +                   Backup designated switch ID                 +\n 98 |                                                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n102 |                                                               |\n    +                                                               +\n    :                          Neighbor list                        :\n    +                                                               +\n    |                                                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Network layer addressing / VLSP header",
      "ja": "ネットワークレイヤーアドレス指定 / VLSPヘッダー"
    },
    {
      "indent": 6,
      "text": "This 70-octet field contains the network layer addressing information and the standard VLS protocol packet header. The packet header type field contains a value of 1.",
      "ja": "この70-OCTETフィールドには、ネットワークレイヤーアドレス指定情報と標準のVLSプロトコルパケットヘッダーが含まれています。パケットヘッダータイプフィールドには1の値が含まれています。"
    },
    {
      "indent": 3,
      "text": "HelloInt",
      "ja": "Helloint"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains the interval, in seconds, at which this switch sends Hello packets.",
      "ja": "この2-OCTETフィールドには、このスイッチがHelloパケットを送信する間隔が秒単位で含まれています。"
    },
    {
      "indent": 3,
      "text": "Options",
      "ja": "オプション"
    },
    {
      "indent": 6,
      "text": "This 1-octet field contains the optional capabilities supported by the switch, as described in Section 10.5.",
      "ja": "この1-OCTETフィールドには、セクション10.5で説明されているように、スイッチでサポートされるオプションの機能が含まれています。"
    },
    {
      "indent": 3,
      "text": "Priority",
      "ja": "優先度"
    },
    {
      "indent": 6,
      "text": "This 1-octet field contains the switch priority used in selecting the designated switch and backup designated switch (see Section 6.3.1). If the value here is zero, the switch is ineligible to become the designated switch or the backup designated switch.",
      "ja": "この1-OCTETフィールドには、指定されたスイッチとバックアップ指定スイッチの選択に使用されるスイッチの優先度が含まれています（セクション6.3.1を参照）。ここの値がゼロの場合、スイッチは指定されたスイッチまたはバックアップ指定スイッチになることができません。"
    },
    {
      "indent": 3,
      "text": "DeadInt",
      "ja": "Deadint"
    },
    {
      "indent": 6,
      "text": "This 4-octet field contains the length of time, in seconds, that neighboring switches will wait before declaring the interface down once they stop receiving Hello packets over the interface. The value here is equal to the value of SwitchDeadInterval, as found in the interface data structure.",
      "ja": "この4-OCTETフィールドには、秒単位での時間の長さが含まれています。隣接するスイッチは、インターフェイス上のハローパケットの受信を停止したら、インターフェイスを宣言する前に待機します。ここでの値は、インターフェイスデータ構造に見られるように、SwitchDeadIntervalの値に等しくなります。"
    },
    {
      "indent": 3,
      "text": "Designated switch",
      "ja": "指定されたスイッチ"
    },
    {
      "indent": 6,
      "text": "This 10-octet field contains the switch ID of the designated switch for this network link, as currently understood by the sending switch. This value is set to zero if the designated switch selection process has not yet begun.",
      "ja": "この10-OCTETフィールドには、送信スイッチが現在理解しているように、このネットワークリンクの指定されたスイッチのスイッチIDが含まれています。指定されたスイッチ選択プロセスがまだ開始されていない場合、この値はゼロに設定されます。"
    },
    {
      "indent": 3,
      "text": "Backup designated switch",
      "ja": "バックアップ指定スイッチ"
    },
    {
      "indent": 6,
      "text": "This 10-octet field contains the switch ID of the backup designated switch for the network link, as currently understood by the sending switch. This value is set to zero if the backup designated switch selection process has not yet begun.",
      "ja": "この10-OCTETフィールドには、現在送信スイッチで理解されているように、ネットワークリンクのバックアップ指定スイッチのスイッチIDが含まれています。バックアップ指定スイッチ選択プロセスがまだ開始されていない場合、この値はゼロに設定されています。"
    },
    {
      "indent": 3,
      "text": "Neighbor list",
      "ja": "ネイバーリスト"
    },
    {
      "indent": 6,
      "text": "This variable-length field contains a list of switch IDs of each switch from which the sending switch has received a valid Hello packet within the last SwitchDeadInterval seconds.",
      "ja": "この変数長さフィールドには、送信スイッチが最後のSwitchDeadInterval秒以内に有効なハローパケットを受信した各スイッチのスイッチIDのリストが含まれています。"
    },
    {
      "indent": 0,
      "text": "10.6.2 Database Description Packets",
      "section_title": true,
      "ja": "10.6.2 データベースの説明パケット"
    },
    {
      "indent": 3,
      "text": "Database Description packets are exchanged while an adjacency is being formed between two neighboring switches and are used to describe the contents of the topological database. For a complete description of the database exchange process, see Section 7.2.",
      "ja": "データベースの説明パケットは、2つの隣接するスイッチの間に隣接能力が形成されている間に交換され、トポロジデータベースの内容を説明するために使用されます。データベース交換プロセスの完全な説明については、セクション7.2を参照してください。"
    },
    {
      "indent": 3,
      "text": "The format of a Database Description packet is shown below.",
      "ja": "データベース説明パケットの形式を以下に示します。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |                                                               |\n   :              Network layer addressing / VLSP header           :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n70 |     (unused -- must be 0)     |    Options    |     Flags     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n74 |                        Sequence number                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n78 |                                                               |\n   +                                                               +\n   :                 Link state advertisement headers              :\n   +                                                               +\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Network layer addressing / VLSP header",
      "ja": "ネットワークレイヤーアドレス指定 / VLSPヘッダー"
    },
    {
      "indent": 6,
      "text": "This 70-octet field contains the network layer addressing information and the standard VLS protocol packet header. The packet header type field contains a value of 2.",
      "ja": "この70-OCTETフィールドには、ネットワークレイヤーアドレス指定情報と標準のVLSプロトコルパケットヘッダーが含まれています。パケットヘッダータイプフィールドには2の値が含まれています。"
    },
    {
      "indent": 3,
      "text": "Options",
      "ja": "オプション"
    },
    {
      "indent": 6,
      "text": "This 1-octet field contains the optional capabilities supported by the switch, as described in Section 10.5.",
      "ja": "この1-OCTETフィールドには、セクション10.5で説明されているように、スイッチでサポートされるオプションの機能が含まれています。"
    },
    {
      "indent": 3,
      "text": "Flags",
      "ja": "フラグ"
    },
    {
      "indent": 6,
      "text": "This 1-octet field contains a set of bit flags that are used to coordinate the database exchange process. The format of this octet is as follows:",
      "ja": "この1-OCTETフィールドには、データベース交換プロセスの調整に使用されるビットフラグのセットが含まれています。このオクテットの形式は次のとおりです。"
    },
    {
      "indent": 26,
      "text": "+-+-+-+-+-+-+-+-+\n|0|0|0|0|0|I|M|MS\n+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "I-bit (Init)",
      "ja": "i-bit（init）"
    },
    {
      "indent": 6,
      "text": "The I-bit is used to signal the start of the exchange. It is set while the two switches negotiate the master/slave relationship and the starting sequence number.",
      "ja": "i-bitは、交換の開始を通知するために使用されます。2つのスイッチがマスター/スレーブの関係と開始シーケンス番号をネゴシエートするときに設定されます。"
    },
    {
      "indent": 3,
      "text": "M-bit (More)",
      "ja": "m-bit（もっと）"
    },
    {
      "indent": 6,
      "text": "The M-bit is set to indicate that more Database Description packets to follow.",
      "ja": "Mビットは、より多くのデータベース説明パケットをフォローすることを示すように設定されています。"
    },
    {
      "indent": 3,
      "text": "MS-bit (Master/Slave)",
      "ja": "ms-bit（マスター/スレーブ）"
    },
    {
      "indent": 6,
      "text": "The MS-bit is used to indicate which switch is the master of the exchange. If the bit is set, the sending switch is the master during the database exchange process. If the bit is clear, the switch is the slave.",
      "ja": "MS-BITは、どのスイッチがExchangeのマスターであるかを示すために使用されます。ビットが設定されている場合、送信スイッチはデータベース交換プロセス中にマスターです。ビットがクリアされている場合、スイッチはスレーブです。"
    },
    {
      "indent": 3,
      "text": "Sequence number",
      "ja": "シーケンス番号"
    },
    {
      "indent": 6,
      "text": "This 4-octet field is used to sequence the Database Description packets during the database exchange process. The two switches involved in the exchange process agree on the initial value of the sequence number during the master/slave negotiation. The number is then incremented for each Database Description packet in the exchange.",
      "ja": "この4-OCTETフィールドは、データベース交換プロセス中にデータベースの説明パケットをシーケンスするために使用されます。交換プロセスに関与する2つのスイッチは、マスター/スレーブ交渉中のシーケンス番号の初期値に同意します。次に、交換内のデータベース説明パケットごとに数値が増加します。"
    },
    {
      "indent": 6,
      "text": "To acknowledge each Database Description packet sent by the master, the slave sends a Database Description packet that echoes the sequence number of the packet being acknowledged.",
      "ja": "マスターが送信した各データベースの説明パケットを確認するために、スレーブは、確認されているパケットのシーケンス番号をエコーするデータベース説明パケットを送信します。"
    },
    {
      "indent": 3,
      "text": "Link state advertisement headers",
      "ja": "リンク状態広告ヘッダー"
    },
    {
      "indent": 6,
      "text": "This variable-length field contains a list of link state headers that describe a portion of the master's topological database. Each header uniquely identifies a link state advertisement and its current instance. (See Section 11.1 for a detailed description of a link state advertisement header.) The number of headers included in the list is calculated implicitly from the length of the packet, as stored in the VLSP packet header (see Section 10.4).",
      "ja": "この可変長さのフィールドには、マスターのトポロジデータベースの一部を記述するリンク状態ヘッダーのリストが含まれています。各ヘッダーは、リンク状態広告とその現在のインスタンスを一意に識別します。（リンク状態広告ヘッダーの詳細な説明については、セクション11.1を参照してください。）リストに含まれるヘッダーの数は、VLSPパケットヘッダーに保存されているパケットの長さから暗黙的に計算されます（セクション10.4を参照）。"
    },
    {
      "indent": 0,
      "text": "10.6.3 Link State Request Packets",
      "section_title": true,
      "ja": "10.6.3 リンク状態リクエストパケット"
    },
    {
      "indent": 3,
      "text": "Link State Request packets are used to request those pieces of the neighbor's database that the sending switch has discovered (during the database exchange process) are more up-to-date than instances in its own database. Link State Request packets are sent as the last step in bringing up an adjacency. (See Section 7.3.)",
      "ja": "リンク状態リクエストパケットは、送信スイッチが（データベース交換プロセス中に）発見した近隣のデータベースのピースを要求するために使用されます。リンク状態リクエストパケットは、隣接する最後のステップとして送信されます。（セクション7.3を参照してください。）"
    },
    {
      "indent": 3,
      "text": "The format of a Link State Request packet is shown below.",
      "ja": "リンク状態リクエストパケットの形式を以下に示します。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |                                                               |\n   :              Network layer addressing / VLSP header           :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n70 |                        Link state type                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n74 |                                                               |\n   +                         Link state ID                         +\n88 |                                                               |\n   +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n82 |                               |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n86 |                                                               |\n   +                      Advertising switch ID                    +\n90 |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n94 |                                                               |\n   :                            . . .                              :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Network layer addressing / VLSP header",
      "ja": "ネットワークレイヤーアドレス指定 / VLSPヘッダー"
    },
    {
      "indent": 6,
      "text": "This 70-octet field contains the network layer addressing information and the standard VLS protocol packet header. The packet header type field contains a value of 3.",
      "ja": "この70-OCTETフィールドには、ネットワークレイヤーアドレス指定情報と標準のVLSプロトコルパケットヘッダーが含まれています。パケットヘッダータイプフィールドには3の値が含まれています。"
    },
    {
      "indent": 3,
      "text": "Link state type",
      "ja": "リンク状態タイプ"
    },
    {
      "indent": 6,
      "text": "This 4-octet field contains the link state type of the requested link state advertisement, as stored in the advertisement header.",
      "ja": "この4-OCTETフィールドには、広告ヘッダーに保存されているように、要求されたリンク状態広告のリンク状態タイプが含まれています。"
    },
    {
      "indent": 3,
      "text": "Link state ID",
      "ja": "リンク状態ID"
    },
    {
      "indent": 6,
      "text": "This 10-octet field contains the link state ID of the requested link state advertisement, as stored in the advertisement header.",
      "ja": "この10-OCTETフィールドには、広告ヘッダーに保存されている要求されたリンク状態広告のリンク状態IDが含まれています。"
    },
    {
      "indent": 3,
      "text": "Advertising switch",
      "ja": "広告スイッチ"
    },
    {
      "indent": 6,
      "text": "This 10-octet field contains the switch ID of advertising switch for the requested link state advertisement, as stored in the advertisement header.",
      "ja": "この10-OCTETフィールドには、広告ヘッダーに保存されている要求されたリンク状態広告の広告スイッチのスイッチIDが含まれています。"
    },
    {
      "indent": 6,
      "text": "Note that the last three fields uniquely identify the advertisement, but not its instance. The receiving switch will respond with its most recent instance of the specified advertisement.",
      "ja": "最後の3つのフィールドは、そのインスタンスではなく広告を一意に識別していることに注意してください。受信スイッチは、指定された広告の最新のインスタンスで応答します。"
    },
    {
      "indent": 6,
      "text": "Multiple link state advertisements can be requested in a single Link State Request packet by repeating the link state type, ID, and advertising switch for each requested advertisement. The number of advertisements requested is calculated implicitly from the length of the packet, as stored in the VLSP packet header.",
      "ja": "要求された広告ごとにリンク状態のタイプ、ID、および広告スイッチを繰り返すことにより、単一のリンク状態要求パケットで複数のリンク状態広告を要求できます。要求された広告の数は、VLSPパケットヘッダーに保存されているように、パケットの長さから暗黙的に計算されます。"
    },
    {
      "indent": 0,
      "text": "10.6.4 Link State Update Packets",
      "section_title": true,
      "ja": "10.6.4 リンク状態更新パケット"
    },
    {
      "indent": 3,
      "text": "Link State Update packets are used to respond to a Link State Request packet or to advertise a new instance of one or more link state advertisements. Link State Update packets are acknowledged with Link State Acknowledgment packets. For more information on the use of Link State Update packets, see Section 7 and Section 8.",
      "ja": "リンク状態更新パケットは、リンク状態要求パケットに応答するか、1つ以上のリンク状態広告の新しいインスタンスを宣伝するために使用されます。リンク状態更新パケットは、リンク状態の確認パケットで確認されます。リンク状態更新パケットの使用の詳細については、セクション7およびセクション8を参照してください。"
    },
    {
      "indent": 3,
      "text": "The format of a Link State Update packet is shown below.",
      "ja": "リンク状態更新パケットの形式を以下に示します。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |                                                               |\n   :              Network layer addressing / VLSP header           :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n70 |                        # advertisements                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n74 |                                                               |\n   +                                                               +\n   :                    Link state advertisements                  :\n   +                                                               +\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Network layer addressing / VLSP header",
      "ja": "ネットワークレイヤーアドレス指定 / VLSPヘッダー"
    },
    {
      "indent": 6,
      "text": "This 70-octet field contains the network layer addressing information and the standard VLS protocol packet header. The packet header type field contains a value of 4.",
      "ja": "この70-OCTETフィールドには、ネットワークレイヤーアドレス指定情報と標準のVLSプロトコルパケットヘッダーが含まれています。パケットヘッダータイプフィールドには4の値が含まれています。"
    },
    {
      "indent": 3,
      "text": "# advertisements",
      "ja": "＃広告"
    },
    {
      "indent": 6,
      "text": "This 4-octet field contains the number of link state advertisements included in the packet.",
      "ja": "この4-OCTETフィールドには、パケットに含まれるリンク状態広告の数が含まれています。"
    },
    {
      "indent": 3,
      "text": "Link state advertisements",
      "ja": "状態広告をリンクします"
    },
    {
      "indent": 6,
      "text": "This variable-length field contains a list of link state advertisements. For a detailed description of the different types of link state advertisements, see Section 11.",
      "ja": "この可変長さのフィールドには、リンク状態広告のリストが含まれています。さまざまな種類のリンク状態広告の詳細な説明については、セクション11を参照してください。"
    },
    {
      "indent": 0,
      "text": "10.6.5 Link State Acknowledgment Packets",
      "section_title": true,
      "ja": "10.6.5 リンク状態確認パケット"
    },
    {
      "indent": 3,
      "text": "Link State Acknowledgment Packets are used to explicitly acknowledge one or more Link State Update packets, thereby making the distribution of link state advertisements reliable. (See Section 8.2.6.)",
      "ja": "Link State Aumponed Packetは、1つ以上のリンク状態更新パケットを明示的に確認するために使用され、それによりリンク状態広告の配布を信頼できます。（セクション8.2.6を参照してください。）"
    },
    {
      "indent": 3,
      "text": "The format of a Link State Acknowledgment packet is shown below.",
      "ja": "リンク状態の確認パケットの形式を以下に示します。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |                                                               |\n   :              Network layer addressing / VLSP header           :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n70 |                                                               |\n   +                                                               +\n   :                 Link state advertisement headers              :\n   +                                                               +\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Network layer addressing / VLSP header",
      "ja": "ネットワークレイヤーアドレス指定 / VLSPヘッダー"
    },
    {
      "indent": 6,
      "text": "This 70-octet field contains the network layer addressing information and the standard VLS protocol packet header. The packet header type field contains a value of 5.",
      "ja": "この70-OCTETフィールドには、ネットワークレイヤーアドレス指定情報と標準のVLSプロトコルパケットヘッダーが含まれています。パケットヘッダータイプフィールドには5の値が含まれています。"
    },
    {
      "indent": 3,
      "text": "Link state advertisement headers",
      "ja": "リンク状態広告ヘッダー"
    },
    {
      "indent": 6,
      "text": "This variable-length field contains a list of link state headers that are being acknowledged by this packet. Each header uniquely identifies a link state advertisement and its current instance. (See Section 11.1 for a detailed description of a link state advertisement header.) The number of headers included in the list is calculated implicitly from the length of the packet, as stored in the VLSP packet header (see Section 10.4).",
      "ja": "この可変長さフィールドには、このパケットによって認められているリンク状態ヘッダーのリストが含まれています。各ヘッダーは、リンク状態広告とその現在のインスタンスを一意に識別します。（リンク状態広告ヘッダーの詳細な説明については、セクション11.1を参照してください。）リストに含まれるヘッダーの数は、VLSPパケットヘッダーに保存されているパケットの長さから暗黙的に計算されます（セクション10.4を参照）。"
    },
    {
      "indent": 0,
      "text": "11. Link State Advertisement Formats",
      "section_title": true,
      "ja": "11. 状態広告形式をリンクします"
    },
    {
      "indent": 3,
      "text": "Link state advertisements are used to describe various pieces of the routing topology within the switch fabric. Each switch in the fabric maintains a complete set of all link state advertisements generated throughout the fabric. (Section 8.1 describes the circumstances under which a link state advertisement is originated. Section 8.2 describes how advertisements are distributed throughout the switch fabric.) This collection of advertisements, known as the link state (or topological) database, is used to calculate a set of best paths to all other switches in the fabric.",
      "ja": "リンク状態広告は、スイッチファブリック内のルーティングトポロジのさまざまな部分を説明するために使用されます。ファブリックの各スイッチは、生地全体に生成されるすべてのリンク状態広告の完全なセットを維持します。（セクション8.1では、リンク状態広告が発信される状況について説明します。セクション8.2では、広告がスイッチファブリック全体にどのように配信されるかについて説明します。）リンク状態（またはトポロジー）データベースとして知られるこの広告のコレクションは、セットを計算するために使用されます。ファブリック内の他のすべてのスイッチへの最適なパス。"
    },
    {
      "indent": 3,
      "text": "There are two types of link state advertisement, as listed in Table 8.",
      "ja": "表8にリストされているように、リンク状態広告には2つのタイプがあります。"
    },
    {
      "indent": 8,
      "text": "Type   Name            Function             Description",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 8,
      "text": "1 Switch link Lists all network Section 11.2 advertisement linksattached to a switch",
      "ja": "1スイッチリンクリストすべてのネットワークセクション11.2広告リンクはスイッチに渡されます"
    },
    {
      "indent": 8,
      "text": "2 Network link Lists all adjacen- Section 11.3 advertisement cies on a network link",
      "ja": "2ネットワークリンクのすべてのネットワークリンクリスト11.3ネットワークリンク上の広告CIE"
    },
    {
      "indent": 16,
      "text": "Table 8: Link State Advertisement Types",
      "ja": "表8：リンク状態広告タイプ"
    },
    {
      "indent": 3,
      "text": "Each link state advertisement begins with a standard header, described in Section 11.1.",
      "ja": "各リンク状態広告は、セクション11.1で説明されている標準ヘッダーから始まります。"
    },
    {
      "indent": 0,
      "text": "11.1 Link State Advertisement Headers",
      "section_title": true,
      "ja": "11.1 リンク状態広告ヘッダー"
    },
    {
      "indent": 3,
      "text": "All link state advertisements begin with a common 32-octet header. This header contains information that uniquely identifies the advertisement -- its type, link state ID, and the switch ID of its advertising switch. Also, since multiple instances of a link state advertisement can exist concurrently in the switch fabric, the header contains information that permits a switch to determine which instance is the most recent -- the age, sequence number and checksum.",
      "ja": "すべてのリンク状態広告は、一般的な32-OCTETヘッダーから始まります。このヘッダーには、広告を一意に識別する情報（そのタイプ、リンク状態ID、および広告スイッチのスイッチIDが含まれています。また、リンク状態広告の複数のインスタンスがスイッチファブリックに同時に存在する可能性があるため、ヘッダーには、スイッチが最新のインスタンス（年齢、シーケンス番号、チェックサム）を決定できるようにする情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "The format of the link state advertisement header is shown below.",
      "ja": "リンク状態広告ヘッダーの形式を以下に示します。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |              Age              |    Options    |    LS Type    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n04 |                                                               |\n   +                         Link state ID                         +\n08 |                                                               |\n   +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n12 |                               |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n16 |                                                               |\n   +                      Advertising switch ID                    +\n20 |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n24 |                         Sequence number                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n28 |           Checksum            |             Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Age",
      "ja": "年"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains the time, in seconds, since this instance of the link state advertisement was originated.",
      "ja": "この2-OCTETフィールドには、リンク状態広告のこのインスタンスが発信されたため、数秒で時間が含まれています。"
    },
    {
      "indent": 3,
      "text": "Options",
      "ja": "オプション"
    },
    {
      "indent": 6,
      "text": "This 1-octet field contains the optional capabilities supported by the advertising switch, as described in Section 10.5.",
      "ja": "この1-OCTETフィールドには、セクション10.5で説明されているように、広告スイッチでサポートされるオプションの機能が含まれています。"
    },
    {
      "indent": 3,
      "text": "LS type",
      "ja": "LSタイプ"
    },
    {
      "indent": 6,
      "text": "This 1-octet field contains the type of the link state advertisement. Possible values are:",
      "ja": "この1-OCTETフィールドには、リンク状態広告のタイプが含まれています。考えられる値は次のとおりです。"
    },
    {
      "indent": 9,
      "text": "1 Switch link advertisement 2 Network link advertisement",
      "ja": "1スイッチリンク広告2ネットワークリンク広告"
    },
    {
      "indent": 3,
      "text": "Link state ID",
      "ja": "リンク状態ID"
    },
    {
      "indent": 6,
      "text": "This 10-octet field identifies the switch that originates advertisements for the link. The content of this field depends on the advertisement's type.",
      "ja": "この10-OCTETフィールドは、リンクの広告を発信するスイッチを識別します。このフィールドのコンテンツは、広告のタイプに依存します。"
    },
    {
      "indent": 6,
      "text": "o For a switch link advertisement, this field contains the switch ID of the originating switch o For a network link advertisement, this field contains the switch ID of the designated switch for the link",
      "ja": "o スイッチリンク広告の場合、このフィールドには、ネットワークリンク広告の発信スイッチoのスイッチIDが含まれています。このフィールドには、リンクの指定されたスイッチのスイッチIDが含まれています"
    },
    {
      "indent": 3,
      "text": "Note: In VLSP, the link state ID of an advertisement is always the same as the advertising switch. This level of redundancy results from the fact that OSPF uses additional types of link state advertisements for which the originating switch is not the advertising switch.",
      "ja": "注：VLSPでは、広告のリンク状態IDは常に広告スイッチと同じです。このレベルの冗長性は、OSPFが追加の種類のリンク状態広告を使用しているという事実に起因します。"
    },
    {
      "indent": 3,
      "text": "Advertising switch",
      "ja": "広告スイッチ"
    },
    {
      "indent": 6,
      "text": "This 10-octet field contains the switch ID of the switch that originated the link state advertisement.",
      "ja": "この10-OCTETフィールドには、リンク状態広告を発信したスイッチのスイッチIDが含まれています。"
    },
    {
      "indent": 3,
      "text": "Sequence number",
      "ja": "シーケンス番号"
    },
    {
      "indent": 6,
      "text": "This 4-octet field is used to sequence the instances of a particular link state advertisement. The number is incremented for each new instance.",
      "ja": "この4-OCTETフィールドは、特定のリンク状態広告のインスタンスをシーケンスするために使用されます。新しいインスタンスごとに数値が増加します。"
    },
    {
      "indent": 3,
      "text": "Checksum",
      "ja": "チェックサム"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains the checksum of the complete contents of the link state advertisement, excluding the age field. The checksum used is commonly referred to as the Fletcher checksum and is documented in [RFC905]. Note that since this checksum is calculated for each separate advertisement, a protocol packet containing lists of advertisements or advertisement headers will contain multiple checksum values.",
      "ja": "この2オクセットフィールドには、年齢フィールドを除くリンク状態広告の完全な内容のチェックサムが含まれています。使用されるチェックサムは一般にフレッチャーチェックサムと呼ばれ、[RFC905]に文書化されています。このチェックサムは個別の広告ごとに計算されるため、広告または広告ヘッダーのリストを含むプロトコルパケットには複数のチェックサム値が含まれていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "Length",
      "ja": "長さ"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains the total length, in octets, of the link state advertisement, including the header.",
      "ja": "この2オクセットフィールドには、ヘッダーを含むリンク状態広告のオクテットの全長が含まれています。"
    },
    {
      "indent": 0,
      "text": "11.2 Switch Link Advertisements",
      "section_title": true,
      "ja": "11.2 リンク広告を切り替えます"
    },
    {
      "indent": 3,
      "text": "A switch link advertisement is used to describe all functioning network links of a switch, including the cost of using each link.",
      "ja": "スイッチリンク広告は、各リンクを使用するコストを含む、スイッチのすべての機能するネットワークリンクを記述するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Each functioning switch in the fabric originates one, and only one, switch link advertisement -- all of the switch's links must be described in a single advertisement. A switch originates its first switch link advertisement (containing no links) when it first becomes functional. It then originates a new instance of the advertisement each time any of its neighbor states changes such that the contents of the advertisement changes. See Section 8.1 for details on originating a switch link advertisement.",
      "ja": "ファブリックの各機能スイッチは、1つだけのスイッチリンク広告を1つだけ開始します。すべてのスイッチのリンクは、単一の広告で説明する必要があります。スイッチは、最初に機能するときに最初のスイッチリンク広告（リンクを含む）を発信します。次に、広告の内容が変更されるように隣人が変更するたびに、広告の新しいインスタンスを発信します。スイッチリンク広告の発信の詳細については、セクション8.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "The format of a switch link advertisement is shown below.",
      "ja": "スイッチリンク広告の形式を以下に示します。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |                                                               |\n   :                       Link state header                       :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n32 |      (unused -- must be 0)    |            # links            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n36 |                                                               |\n   +                            Link ID                            +\n40 |                                                               |\n   +                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n44 |                               |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +\n48 |                                                               |\n   +                           Link data                           +\n52 |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n56 |   Link type   |     # TOS     |         TOS 0 metric          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n60 |                                                               |\n   :                            . . .                              :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Link state header",
      "ja": "リンク状態ヘッダー"
    },
    {
      "indent": 6,
      "text": "This 32-octet field contains the standard link state advertisement header. The type field contains a 1, and the link state ID field contains the switch ID of the advertising switch.",
      "ja": "この32-OCTETフィールドには、標準のリンク状態広告ヘッダーが含まれています。タイプフィールドには1が含まれ、リンク状態IDフィールドには広告スイッチのスイッチIDが含まれています。"
    },
    {
      "indent": 3,
      "text": "# links",
      "ja": "＃リンク"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains the number of links described by this advertisement. This value must be equal to the total number of functioning network links attached to the switch.",
      "ja": "この2-OCTETフィールドには、この広告で説明されているリンクの数が含まれています。この値は、スイッチに接続された機能するネットワークリンクの総数に等しくなければなりません。"
    },
    {
      "indent": 3,
      "text": "Link ID",
      "ja": "リンクID"
    },
    {
      "indent": 6,
      "text": "This 10-octet field identifies the other switch that originates link state advertisements for the link, providing a key for accessing other link state advertisements for the link. The value here is based on the link type, as follows:",
      "ja": "この10-OCTETフィールドは、リンクのリンク状態広告を作成する他のスイッチを識別し、リンクの他のリンク状態広告にアクセスするためのキーを提供します。ここの値は、次のようにリンクタイプに基づいています。"
    },
    {
      "indent": 6,
      "text": "o For point-to-point links, this field contains the switch ID of the neighbor switch connected to the other end of the link.",
      "ja": "o ポイントツーポイントリンクの場合、このフィールドには、リンクのもう一方の端に接続されたNeighbor SwitchのスイッチIDが含まれています。"
    },
    {
      "indent": 6,
      "text": "o For multi-access links, this field contains the switch ID of the designated switch for the link.",
      "ja": "o マルチアクセスリンクの場合、このフィールドには、リンクの指定されたスイッチのスイッチIDが含まれています。"
    },
    {
      "indent": 3,
      "text": "Link data",
      "ja": "リンクデータ"
    },
    {
      "indent": 6,
      "text": "This 10-octet field contains additional data necessary to calculate the set of best paths. Typically, this field contains the interface ID of the link.",
      "ja": "この10-OCTETフィールドには、最適なパスのセットを計算するために必要な追加データが含まれています。通常、このフィールドには、リンクのインターフェイスIDが含まれています。"
    },
    {
      "indent": 3,
      "text": "Link type",
      "ja": "リンクタイプ"
    },
    {
      "indent": 6,
      "text": "This 1-octet field contains the type of link being described. Possible values are as follows:",
      "ja": "この1-OCTETフィールドには、説明されているリンクのタイプが含まれています。考えられる値は次のとおりです。"
    },
    {
      "indent": 9,
      "text": "1 Point-to-point link 2 Multi-access link",
      "ja": "1ポイントツーポイントリンク2マルチアクセスリンク"
    },
    {
      "indent": 3,
      "text": "# TOS",
      "ja": "＃TOS"
    },
    {
      "indent": 6,
      "text": "This 1-octet field contains the number of nonzero type of service metrics specified for the link. Since the current version of VLSP does not support routing based on nonzero types of service, this field contains a value of zero.",
      "ja": "この1-OCTETフィールドには、リンクに指定されたサービスメトリックのゼロ以外のタイプの数が含まれています。VLSPの現在のバージョンは、ゼロ以外の種類のサービスに基づいてルーティングをサポートしていないため、このフィールドにはゼロの値が含まれています。"
    },
    {
      "indent": 3,
      "text": "TOS 0 metric",
      "ja": "TOS 0メトリック"
    },
    {
      "indent": 6,
      "text": "This 2-octet field contains the cost of using this link for the zero TOS. This value is expressed in the link state metric and must be greater than zero.",
      "ja": "この2-OCTETフィールドには、ゼロTOSにこのリンクを使用するコストが含まれています。この値はリンク状態メトリックで表され、ゼロより大きくなければなりません。"
    },
    {
      "indent": 3,
      "text": "Note that the last five fields are repeated for all functioning network links attached to the advertising switch. If the interface state of attached link changes, the switch must originate a new instance of the switch link advertisement.",
      "ja": "最後の5つのフィールドは、広告スイッチに添付されているすべての機能するネットワークリンクに対して繰り返されることに注意してください。添付のリンクのインターフェイス状態が変更された場合、スイッチはスイッチリンク広告の新しいインスタンスを発信する必要があります。"
    },
    {
      "indent": 0,
      "text": "11.3 Network Link Advertisements",
      "section_title": true,
      "ja": "11.3 ネットワークリンク広告"
    },
    {
      "indent": 3,
      "text": "A network link advertisement is originated by the designated switch of each multi-access network link. The advertisement describes all switches attached to the link that are currently fully adjacent to the designated switch, including the designated switch itself. See Section 8.1 for details on originating a switch link advertisement.",
      "ja": "ネットワークリンク広告は、各マルチアクセスネットワークリンクの指定されたスイッチによって発信されます。広告では、指定されたスイッチ自体を含む、指定されたスイッチに現在完全に隣接しているリンクに接続されているすべてのスイッチについて説明します。スイッチリンク広告の発信の詳細については、セクション8.1を参照してください。"
    },
    {
      "indent": 3,
      "text": "Network link advertisements are not generated for point-to-point network links.",
      "ja": "ネットワークリンク広告は、ポイントツーポイントネットワークリンク用に生成されません。"
    },
    {
      "indent": 3,
      "text": "The format of a network link advertisement is show below.",
      "ja": "ネットワークリンク広告の形式を以下に示します。"
    },
    {
      "indent": 3,
      "text": "    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n00 |                                                               |\n   :                       Link state header                       :\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n32 |                           (unused)                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n36 |                                                               |\n   +                                                               +\n   :                          Switch list                          :\n   +                                                               +\n   |                                                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Link state header",
      "ja": "リンク状態ヘッダー"
    },
    {
      "indent": 6,
      "text": "This 32-octet field contains the standard link state advertisement header. The type field contains a 2, and the link state ID field contains the switch ID of the designated switch.",
      "ja": "この32-OCTETフィールドには、標準のリンク状態広告ヘッダーが含まれています。タイプフィールドには2が含まれ、リンク状態IDフィールドには指定されたスイッチのスイッチIDが含まれます。"
    },
    {
      "indent": 3,
      "text": "Switch list",
      "ja": "スイッチリスト"
    },
    {
      "indent": 6,
      "text": "The switch IDs of all switches attached to the network link that are currently fully adjacent to the designated switch. The designated switch includes itself in this list.",
      "ja": "現在指定されたスイッチに完全に隣接しているネットワークリンクに接続されているすべてのスイッチのスイッチID。指定されたスイッチには、このリストにそれ自体が含まれています。"
    },
    {
      "indent": 0,
      "text": "12. Protocol Parameters",
      "section_title": true,
      "ja": "12. プロトコルパラメーター"
    },
    {
      "indent": 3,
      "text": "This section contains a compendium of the parameters used in the VLS protocol.",
      "ja": "このセクションには、VLSプロトコルで使用されるパラメーターの大要が含まれています。"
    },
    {
      "indent": 0,
      "text": "12.1 Architectural Constants",
      "section_title": true,
      "ja": "12.1 建築定数"
    },
    {
      "indent": 3,
      "text": "Several VLS protocol parameters have fixed architectural values. The name of each architectural constant follows, together with its value and a short description of its function.",
      "ja": "いくつかのVLSプロトコルパラメーターには、固定されたアーキテクチャ値があります。各アーキテクチャの定数の名前は、その価値とその機能の短い説明とともに続きます。"
    },
    {
      "indent": 3,
      "text": "AllSPFSwitches",
      "ja": "allspfswitches"
    },
    {
      "indent": 6,
      "text": "The multicast switch ID to which Hello packets and certain other protocol packets are addressed, as specified in the destination switch ID field of the network layer address information (see Section 10.3). The value of AllSPFSwitches is E0-00-00-05-00-00- 00-00.",
      "ja": "ネットワークレイヤーアドレス情報の宛先スイッチIDフィールドで指定されているように、ハローパケットおよびその他の特定のプロトコルパケットがアドレス指定されるマルチキャストスイッチID（セクション10.3を参照）。AllSpfswitchesの値はE0-00-00-05-00-00-00-00です。"
    },
    {
      "indent": 3,
      "text": "AllDSwitches",
      "ja": "alldswitches"
    },
    {
      "indent": 6,
      "text": "The multicast switch ID to which Link State Update packets and Link State Acknowledgment packets are addressed, as specified in the destination switch ID field of the network layer address information (see Section 10.3), when they are destined for the designated switch or the backup designated switch of a network link. The value of AllDSwitches is E0-00-00-06-00-00-00-00.",
      "ja": "リンク状態更新パケットとリンク状態確認パケットがアドレス指定されます。これは、ネットワークレイヤーアドレス情報の宛先スイッチIDフィールド（セクション10.3を参照）に指定されている場合、指定されたスイッチまたは指定されたバックアップに運命づけられている場合（セクション10.3を参照）。ネットワークリンクのスイッチ。Alldswitchesの価値はE0-00-00-06-00-00-00-00です。"
    },
    {
      "indent": 3,
      "text": "LSRefreshTime",
      "ja": "lsrefreshtime"
    },
    {
      "indent": 6,
      "text": "The interval at which the set of best paths recalculated if no other state changes have forced a recalculation. The value of LSRefreshTime is set to 1800 seconds (30 minutes).",
      "ja": "他の状態の変更が再計算を強制されていない場合、最良のパスのセットが再計算される間隔。LSREFRESHTIMEの値は1800秒（30分）に設定されています。"
    },
    {
      "indent": 3,
      "text": "MinLSInterval",
      "ja": "minlsinterval"
    },
    {
      "indent": 6,
      "text": "The minimum time between distinct originations of any particular link state advertisement. The value of MinLSInterval is set to 5 seconds.",
      "ja": "特定のリンク状態広告の明確なオリジネーション間の最小時間。Minlsintervalの値は5秒に設定されています。"
    },
    {
      "indent": 3,
      "text": "MaxAge",
      "ja": "最大"
    },
    {
      "indent": 6,
      "text": "The maximum age that a link state advertisement can attain. When an advertisement's age reaches MaxAge, it is redistributed throughout the switch fabric. When the originating switch receives an acknowledgment for the advertisement, indicating that the advertisement has been removed from all neighbor Link state retransmission lists, the advertisement is removed from the originating switch's database. Advertisements having age MaxAge are not used to calculate the set of best paths. The value of MaxAge must be greater than LSRefreshTime. The value of MaxAge is set to 3600 seconds (1 hour).",
      "ja": "リンク状態広告が達成できる最大年齢。広告の年齢が最大に達すると、スイッチファブリック全体に再配布されます。発信元のスイッチが広告の謝辞を受け取ると、AdvertisementがすべてのNeighbor Link State再送信リストから削除されたことを示した場合、広告は発信元のスイッチのデータベースから削除されます。年齢の最大値を持つ広告は、最良のパスのセットを計算するために使用されません。最大値はlsrefreshtimeよりも大きくなければなりません。最大値は3600秒（1時間）に設定されています。"
    },
    {
      "indent": 3,
      "text": "MaxAgeDiff",
      "ja": "マキセデフ"
    },
    {
      "indent": 6,
      "text": "The maximum time disparity in ages that can occur for a single link state instance as it is distributed throughout the switch fabric. Most of this time is accounted for by the time the advertisement sits on switch output queues (and therefore not aging) during the distribution process. The value of MaxAgeDiff is set to 900 seconds (15 minutes).",
      "ja": "スイッチファブリック全体に分布しているため、単一のリンク状態インスタンスで発生する可能性のある年齢の最大時間格差。この時間のほとんどは、配布プロセス中に広告がスイッチ出力キュー（したがって老化していない）にあるまでに説明されます。Maxagediffの価値は900秒（15分）に設定されています。"
    },
    {
      "indent": 3,
      "text": "LSInfinity",
      "ja": "lsinfinity"
    },
    {
      "indent": 6,
      "text": "The link state metric value indicating that the destination is unreachable. It is defined to be a binary value of all ones.",
      "ja": "宛先が到達不可能であることを示すリンク状態のメトリック値。これは、すべてのバイナリ値であると定義されています。"
    },
    {
      "indent": 0,
      "text": "12.2 Configurable Parameters",
      "section_title": true,
      "ja": "12.2 構成可能なパラメーター"
    },
    {
      "indent": 3,
      "text": "Many of the switch interface parameters used by VLSP may be made configurable if the implementer so desires. These parameters are listed below. Sample default values are given for some of the parameters.",
      "ja": "VLSPで使用されるスイッチインターフェイスパラメーターの多くは、実装者が望む場合に構成可能にすることができます。これらのパラメーターを以下に示します。サンプルのデフォルト値は、一部のパラメーターに対して与えられます。"
    },
    {
      "indent": 3,
      "text": "Note that some of these parameters specify properties of the individual interfaces and their attached network links. These parameters must be consistent across all the switches attached to that link.",
      "ja": "これらのパラメーターの一部は、個々のインターフェイスと添付のネットワークリンクのプロパティを指定することに注意してください。これらのパラメーターは、そのリンクに接続されたすべてのスイッチにわたって一貫している必要があります。"
    },
    {
      "indent": 3,
      "text": "Interface output cost(s)",
      "ja": "インターフェイス出力コスト"
    },
    {
      "indent": 6,
      "text": "The cost of sending a packet over the interface, expressed in the link state metric. This is advertised as the link cost for this interface in the switch's switch link advertisement. The interface output cost must always be greater than zero.",
      "ja": "リンク状態メトリックで表されるインターフェイスにパケットを送信するコスト。これは、スイッチのスイッチリンク広告のこのインターフェイスのリンクコストとして宣伝されています。インターフェイスの出力コストは、常にゼロより大きくなければなりません。"
    },
    {
      "indent": 3,
      "text": "RxmtInterval",
      "ja": "rxmtinterval"
    },
    {
      "indent": 6,
      "text": "The number of seconds between link state advertisement retransmissions for adjacencies established on this interface. This value is also used when retransmitting Database Description packets and Link State Request packets. This value must be greater than the expected round-trip delay between any two switches on the attached link. However, the value should be conservative or needless retransmissions will result. A typical value for a local area network would be 5 seconds.",
      "ja": "このインターフェイスで確立された隣接のリンク状態広告再送信間の秒数。この値は、データベースの説明パケットを再送信し、状態要求パケットをリンクするときにも使用されます。この値は、添付のリンクの任意の2つのスイッチ間の予想される往復遅延よりも大きくなければなりません。ただし、価値は保守的であるか、不必要な再送信が生じる必要があります。ローカルエリアネットワークの典型的な値は5秒です。"
    },
    {
      "indent": 3,
      "text": "InfTransDelay",
      "ja": "Inftransdelay"
    },
    {
      "indent": 6,
      "text": "The estimated number of seconds it takes to transmit a Link State Update packet over this interface. Link state advertisements contained in the Link State Update packet must have their age incremented by this amount before transmission. This value must take into account the transmission and propagation delays for the interface and must be greater than zero. A typical value for a local area network would be 1 second.",
      "ja": "このインターフェイスにリンク状態更新パケットを送信するのにかかる秒数の推定数。Link State State Updateパケットに含まれるリンク状態広告は、送信前にこの金額によって年齢を増加させる必要があります。この値は、インターフェイスの送信と伝播の遅延を考慮に入れなければならず、ゼロより大きくなければなりません。ローカルエリアネットワークの典型的な値は1秒になります。"
    },
    {
      "indent": 3,
      "text": "Switch priority",
      "ja": "スイッチの優先順位"
    },
    {
      "indent": 6,
      "text": "An 8-bit unsigned integer. When two switches attached to the same network link contend for selection as the designated switch, the switch with the highest priority takes precedence. If both switches have the same priority, the switch with the highest base MAC address becomes the designated switch. A switch whose switch priority is set to zero is ineligible to become the designated switch on the attached link.",
      "ja": "8ビットの符号なし整数。同じネットワークリンクに接続された2つのスイッチが指定されたスイッチとして選択のために競合すると、最優先度の高いスイッチが優先されます。両方のスイッチに同じ優先度がある場合、ベースMACアドレスが最も高いスイッチが指定されたスイッチになります。スイッチの優先度がゼロに設定されているスイッチは、添付のリンクの指定されたスイッチになるためには不可能です。"
    },
    {
      "indent": 3,
      "text": "HelloInterval",
      "ja": "hello interval"
    },
    {
      "indent": 6,
      "text": "The length of time, in seconds, between the Hello packets that the switch sends over the interface. This value is advertised in the switch's Hello packets. It must be the same for all switches attached to a common network link. The smaller this value is set, the faster topological changes will be detected. However, a smaller interval will also generate more routing traffic. A typical value for a local area network would be 10 seconds.",
      "ja": "スイッチがインターフェイス上に送信するハローパケット間の時間の長さ。この値は、スイッチのハローパケットに宣伝されています。一般的なネットワークリンクに接続されているすべてのスイッチで同じでなければなりません。この値が小さいほど、より速いトポロジーの変化が検出されます。ただし、間隔が小さくなると、より多くのルーティングトラフィックが生成されます。ローカルエリアネットワークの典型的な値は10秒です。"
    },
    {
      "indent": 3,
      "text": "SwitchDeadInterval",
      "ja": "SwitchDeadInterval"
    },
    {
      "indent": 6,
      "text": "The length of time, in seconds, that neighboring switches will wait before declaring the interface down once they stop receiving Hello packets over the interface. This value is advertised in the switch's Hello packets. It must be the same for all switches attached to a common network link and should be some multiple of the HelloInterval parameter. A typical value would be 4 times HelloInterval.",
      "ja": "時間の長さ、秒単位では、隣接するスイッチは、インターフェイス上のハローパケットの受信を停止したら、インターフェイスを宣言する前に待機します。この値は、スイッチのハローパケットに宣伝されています。一般的なネットワークリンクに接続されたすべてのスイッチで同じでなければならず、HelloIntervalパラメーターの複数である必要があります。典型的な値は、hellointervalの4倍になります。"
    },
    {
      "indent": 0,
      "text": "13. End Notes",
      "section_title": true,
      "ja": "13. エンドノート"
    },
    {
      "indent": 3,
      "text": "[1] During calculation of the set of best paths, a network link advertisement must be located based solely on its link state ID. Note, however, that the lookup in this case is still well defined, since no two network advertisements can have the same link state ID.",
      "ja": "[1] 最良のパスのセットの計算中、ネットワークリンク広告は、リンク状態IDのみに基づいて配置する必要があります。ただし、2つのネットワーク広告に同じリンク状態IDを持つことができるため、この場合の検索はまだ明確に定義されていることに注意してください。"
    },
    {
      "indent": 3,
      "text": "[2] It is instructive to see what happens when the designated switch for a network link fails. Call the designated switch for the link S1 and the backup designated switch S2. If switch S1 fails (or its interface to the link goes down), the other switches on the link will detect S1's absence within SwitchDeadInterval seconds. All switches may not detect this condition at precisely the same time. The switches that detect S1's absence before S2 does will temporarily select S2 as both designated switch and backup designated switch. When S2 detects that S1 is down, it will move itself to designated switch. At this time, the remaining switch with the highest switch priority will be selected as the backup designated switch.",
      "ja": "[2] ネットワークリンクの指定されたスイッチが失敗したときに何が起こるかを確認することは有益です。リンクS1とバックアップ指定スイッチS2の指定されたスイッチを呼び出します。Switch S1が故障した場合（またはリンクへのインターフェイスがダウン）、リンクの他のスイッチは、SwitchDeadInterval秒以内のS1の不在を検出します。すべてのスイッチは、まったく同時にこの状態を検出できない場合があります。S2が行う前にS1の不在を検出するスイッチは、指定されたスイッチとバックアップ指定スイッチの両方として一時的にS2を選択します。S2がS1がダウンしていることを検出すると、指定されたスイッチに移動します。この時点で、最優先度の高いスイッチを持つ残りのスイッチがバックアップ指定スイッチとして選択されます。"
    },
    {
      "indent": 3,
      "text": "[3] Note that it is possible for a switch to resynchronize any of its fully established adjacencies by setting the neighbor state back to ExStart. This causes the switch on the other end of the adjacency to process a SeqNumberMismatch event and also revert to the ExStart state.",
      "ja": "[3] 近隣状態を元に戻すことにより、完全に確立された隣接のいずれかを再同期させることが可能であることに注意してください。これにより、隣接のもう一方の端にスイッチがあり、seqnumbermismatchイベントを処理し、exstart状態に戻ります。"
    },
    {
      "indent": 3,
      "text": "[4] When two advertisements have different checksum values, they are assumed to be separate instances. This can occur when a switch restarts and loses track of its previous sequence number. In this case, since the two advertisements have the same sequence number, it is not possible to determine which advertisement is actually newer. If the wrong advertisement is accepted as newer, the originating switch will originate another instance.",
      "ja": "[4] 2つの広告が異なるチェックサム値を持っている場合、それらは個別のインスタンスであると想定されます。これは、スイッチが再起動して以前のシーケンス番号を追跡すると発生する可能性があります。この場合、2つの広告には同じシーケンス番号があるため、実際にどの広告が新しいかを決定することはできません。間違った広告がより新しいものとして受け入れられている場合、発信元のスイッチは別のインスタンスを発生します。"
    },
    {
      "indent": 3,
      "text": "[5] An instance of an advertisement is originated with an age of MaxAge only when it is to be flushed from the database. This is done either when the advertisement has naturally aged to MaxAge, or (more typically) when the sequence number must wrap. Therefore, a received instance with an age of MaxAge must be processed as the most recent in order to flush it properly from the database.",
      "ja": "[5] 広告のインスタンスは、データベースから洗い流される場合にのみ、上限の時代から生じます。これは、広告が自然に最大に老化した場合、または（より一般的に）シーケンス番号を包む必要がある場合に行われます。したがって、データベースから適切に洗い流すために、最新の年齢で受信したインスタンスを最新のインスタンスとして処理する必要があります。"
    },
    {
      "indent": 3,
      "text": "[6] MaxAgeDiff is an architectural constant that defines the maximum disparity in ages, in seconds, that can occur for a single link state instance as it is distributed throughout the switch fabric. If two advertisements differ by more than this amount, they are assumed to be different instances of the same advertisement. This can occur when a switch restarts and loses track of its previous sequence number.",
      "ja": "[6] Maxagediffは、Switch Fabric全体に分布しているため、単一のリンク状態インスタンスで発生する可能性のある年齢の最大格差を数秒で定義する建築定数です。2つの広告がこの金額よりも大きく異なる場合、それらは同じ広告の異なるインスタンスであると想定されます。これは、スイッチが再起動して以前のシーケンス番号を追跡すると発生する可能性があります。"
    },
    {
      "indent": 3,
      "text": "[7] This is how the link state request list is emptied, causing the neighbor state to change to Full.",
      "ja": "[7] これは、リンク状態要求リストが空になる方法であり、近隣状態が完全に変更されるようになります。"
    },
    {
      "indent": 0,
      "text": "14. Security Considerations",
      "section_title": true,
      "ja": "14. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Security concerns are not addressed in this document.",
      "ja": "このドキュメントでは、セキュリティの懸念は扱われていません。"
    },
    {
      "indent": 0,
      "text": "15. References",
      "section_title": true,
      "ja": "15. 参考文献"
    },
    {
      "indent": 3,
      "text": "[Perlman] Perlman, R., Interconnections: Bridges and Routers. Addison-Wesley Publishing Company. 1992.",
      "ja": "[Perlman] Perlman、R.、Interconnections：橋とルーター。Addison-Wesley出版社。1992年。"
    },
    {
      "indent": 3,
      "text": "[RFC905] McKenzie, A., \"ISO Transport Protocol specification ISO DP 8073\", RFC 905, April 1984.",
      "ja": "[RFC905] McKenzie、A。、「ISO輸送プロトコル仕様ISO DP 8073」、RFC 905、1984年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2328] Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April 1998.",
      "ja": "[RFC2328] Moy、J。、「OSPFバージョン2」、STD 54、RFC 2328、1998年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC1700] Reynolds, J. and J. Postel, \"Assigned Numbers\", STD 2, RFC 1700, October 1994.",
      "ja": "[RFC1700] Reynolds、J。およびJ. Postel、「割り当てられた番号」、STD 2、RFC 1700、1994年10月。"
    },
    {
      "indent": 3,
      "text": "[IDsfvlan] Ruffen, D., Len, T. and J. Yanacek, \"Cabletron's SecureFast VLAN Operational Model\", RFC 2643, August 1999.",
      "ja": "[Idsfvlan] Ruffen、D.、Len、T。、およびJ. Yanacek、「CabletronのSecurefast VLAN Operational Model」、RFC 2643、1999年8月。"
    },
    {
      "indent": 3,
      "text": "[IDhello] Hamilton, D. and D. Ruffen, \"Cabletron's VlanHello Protocol Specification\", RFC 2641, August 1999.",
      "ja": "[Idhello] Hamilton、D。およびD. Ruffen、「CabletronのVlanhelloプロトコル仕様」、RFC 2641、1999年8月。"
    },
    {
      "indent": 0,
      "text": "16. Author's Address",
      "section_title": true,
      "ja": "16. 著者の連絡先"
    },
    {
      "indent": 3,
      "text": "Laura Kane Cabletron Systems, Inc. Post Office Box 5005 Rochester, NH 03866-5005",
      "ja": "Laura Kane Cabletron Systems、Inc。Post Office Box 5005 Rochester、NH 03866-5005"
    },
    {
      "indent": 3,
      "text": "Phone:(603) 332-9400 EMail: lkane@ctron.com",
      "ja": "電話：（603）332-9400メール：lkane@ctron.com"
    },
    {
      "indent": 0,
      "text": "17. Full Copyright Statement",
      "section_title": true,
      "ja": "17. 完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（1999）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があります。また、それについてコメントまたは説明する派生作品、またはその実装を支援することは、いかなる種類の制限なしに、準備、コピー、公開、および部分的に配布される場合があります。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書と本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}