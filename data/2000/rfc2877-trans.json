{
  "title": {
    "text": "RFC 2877 - 5250 Telnet Enhancements",
    "ja": "RFC 2877 - 5250 Telnet拡張"
  },
  "number": 2877,
  "created_at": "2024-01-18 09:17:52.550913+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                     T. Murphy, Jr.\nRequest for Comments: 2877                                      P. Rieth\nCategory: Informational                                       J. Stevens\nUpdates: 1205                                            IBM Corporation\n                                                               July 2000",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 24,
      "text": "5250 Telnet Enhancements",
      "ja": "5250 Telnet拡張"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2000）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This memo describes the interface to the IBM 5250 Telnet server that allows client Telnet to request a Telnet terminal or printer session using a specific device name. If a requested device name is not available, a method to retry the request using a new device name is described. Methods to request specific Telnet session settings and auto-signon function are also described.",
      "ja": "このメモは、特定のデバイス名を使用してクライアントテルネットがTelnet端子またはプリンターセッションを要求できるようにするIBM 5250 Telnetサーバーへのインターフェイスについて説明しています。要求されたデバイス名が利用できない場合、新しいデバイス名を使用してリクエストを再試行する方法について説明します。特定のTelnetセッションの設定と自動標識関数を要求する方法についても説明します。"
    },
    {
      "indent": 3,
      "text": "By allowing a Telnet client to select the device name, the 5250 Telnet server opens the door for applications to set and/or extract useful information about the Telnet client. Some possibilities are 1) selecting a customized device name associated with a particular user profile name for National Language Support or subsystem routing, 2) connecting PC and network printers as clients and 3) auto-signon using clear-text or DES-encrypted password exchange.",
      "ja": "Telnetクライアントがデバイス名を選択できるようにすることにより、5250 Telnetサーバーは、アプリケーションがTelnetクライアントに関する有用な情報を設定および/または抽出するためのドアを開きます。いくつかの可能性は、1）国語サポートまたはサブシステムルーティングの特定のユーザープロファイル名に関連付けられたカスタマイズされたデバイス名を選択します。。"
    },
    {
      "indent": 3,
      "text": "Applications may need to use system API's on the AS/400 in order to extract Telnet session settings from the device name description. Refer to the Retrieve Device Description (QDCRDEVD) API described in the AS/400 System API book [3] on how to extract information using the DEVD0600 and DEVD1100 templates.",
      "ja": "アプリケーションは、デバイス名の説明からTelnetセッションの設定を抽出するために、AS/400でシステムAPIを使用する必要がある場合があります。DEVD0600およびDEVD1100テンプレートを使用して情報を抽出する方法について、AS/400 System API Book [3]に記載されているDevice Deviction説明（QDCRDEVD）APIを参照してください。"
    },
    {
      "indent": 3,
      "text": "This memo describes how the IBM 5250 Telnet server supports Work Station Function (WSF) printers using 5250 Display Station Pass-Through. A response code is returned by the Telnet server to indicate success or failure of the WSF printer session.",
      "ja": "このメモは、5250ディスプレイステーションのパススルーを使用して、IBM 5250 Telnetサーバーがワークステーション機能（WSF）プリンターをサポートする方法について説明します。WSFプリンターセッションの成功または失敗を示すために、Telnetサーバーによって応答コードが返されます。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": " 1.  Enhancing Telnet Negotiations......................   3\n 2.  Standard Telnet Option Negotiation.................   3\n 3.  Enhanced Telnet Option Negotiation.................   4\n 4.  Enhanced Display Emulation Support.................   7\n 5.  Enhanced Display Auto-Signon and Password\n     Encryption.........................................   8\n     5.1   Password Substitutes Processing..............  12\n     5.2   Handling passwords of length 9 and 10........  14\n     5.3   Example Password Substitute Calculation......  15\n 6.  Device Name Collision Processing...................  15\n 7.  Enhanced Printer Emulation Support.................  16\n 8.  Telnet Printer Terminal Types......................  18\n 9.  Telnet Printer Startup Response Record for Printer\n     Emulators..........................................  20\n     9.1  Example of a Success Response Record.........   20\n     9.2  Example of an Error Response Record..........   21\n     9.3  Response Codes...............................   22\n10.  Printer Steady-State Pass-Through Interface........  23\n     10.1  Example of a Print Record....................  25\n     10.2  Example of a Print Complete Record...........  27\n     10.3  Example of a Null Print Record...............  27\n11.  End-to-End Print Example...........................  28\n12.  Authors' Note......................................  33\n13.  References.........................................  33\n14.  Security Considerations............................  35\n15.  Authors' Addresses.................................  35\n16.  Relation to Other RFC's............................  35\n17.  Full Copyright Statement...........................  36",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "LIST OF FIGURES",
      "ja": "図のリスト"
    },
    {
      "indent": 3,
      "text": "Figure 1.  Example of a success status response\n           record.......................................  20\nFigure 2.  Example of an error response record..........  21\nFigure 3.  Layout of the printer pass-through\n           header.......................................  23\nFigure 4.  Server sending client data with a print\n           record.......................................  26\nFigure 5.  Client sending server a print complete\n           record.......................................  27\nFigure 6.  Server sending client a null print\n           record.......................................  28",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Enhancing Telnet Negotiations",
      "section_title": true,
      "ja": "1. Telnet交渉の強化"
    },
    {
      "indent": 3,
      "text": "The 5250 Telnet server enables clients to negotiate both terminal and printer device names through Telnet Environment Options Negotiations, defined in the Standards Track RFC 1572 [13].",
      "ja": "5250 Telnetサーバーにより、クライアントは、RFC 1572 [13]で定義されている標準トラックで定義されているTelnet環境オプションのネゴシエーションを通じて、ターミナルとプリンターの両方のデバイス名をネゴシエートできます。"
    },
    {
      "indent": 3,
      "text": "The purpose of RFC 1572 is to exchange environment information using a set of standard or custom variables. By using a combination of both standard VAR's and custom USERVAR's, the 5250 Telnet server allows client Telnet to request a pre-defined specific device by name.",
      "ja": "RFC 1572の目的は、一連の標準変数またはカスタム変数を使用して環境情報を交換することです。標準VARとカスタムUSERVARの両方の組み合わせを使用することにより、5250 Telnetサーバーを使用すると、クライアントTelnetが名前で事前に定義された特定のデバイスを要求できます。"
    },
    {
      "indent": 3,
      "text": "If no pre-defined device exists then the device will be created, with client Telnet having the option to negotiate device attributes, such as the code page, character set, keyboard type, etc.",
      "ja": "事前に定義されたデバイスが存在しない場合、デバイスが作成され、クライアントテルネットには、コードページ、文字セット、キーボードタイプなどのデバイス属性をネゴシエートするオプションがあります。"
    },
    {
      "indent": 3,
      "text": "Since printers can now be negotiated as a device name, new terminal types have been defined to request printers. For example, you can now negotiate \"IBM-3812-1\" and \"IBM-5553-B01\" as valid TERMINAL-TYPE options [11].",
      "ja": "プリンターをデバイス名としてネゴシエートできるようになったため、プリンターをリクエストするために新しい端末タイプが定義されています。たとえば、「IBM-3812-1」と「IBM-5553-B01」を有効なターミナルタイプのオプションと交渉できるようになりました[11]。"
    },
    {
      "indent": 3,
      "text": "Finally, the 5250 Telnet server will allow exchange of user profile and password information, where the password may be in either clear-text or encrypted form. If a valid combination of profile and password is received, then the client is allowed to bypass the sign-on panel. The setting of the QRMTSIGN system value must be either *VERIFY or *SAMEPRF for the bypass of the sign-on panel to succeed.",
      "ja": "最後に、5250 Telnetサーバーは、パスワードがクリアテキストまたは暗号化されたフォームのいずれかにある場合があるユーザープロファイルとパスワード情報の交換を許可します。プロファイルとパスワードの有効な組み合わせが受信された場合、クライアントはサインオンパネルをバイパスすることができます。QRMTSIGNシステム値の設定は、サインオンパネルのバイパスを成功させるために *検証または *SAMEPRFのいずれかでなければなりません。"
    },
    {
      "indent": 0,
      "text": "2. Standard Telnet Option Negotiation",
      "section_title": true,
      "ja": "2. 標準のTelnetオプションのネゴシエーション"
    },
    {
      "indent": 3,
      "text": "Telnet server option negotiation typically begins with the issuance,\nby the server, of an invitation to engage in terminal type\nnegotiation with the Telnet client (DO TERMINAL-TYPE) [11].  The\nclient and server then enter into a series of sub-negotiations to\ndetermine the level of terminal support that will be used.  After the\nterminal type is agreed upon, the client and server will normally\nnegotiate a required set of additional options (EOR [12], BINARY\n[10], SGA [15]) that are required to support \"transparent mode\" or\nfull screen 5250/3270 block mode support.  As soon as the required\noptions have been negotiated, the server will suspend further\nnegotiations, and begin with initializing the actual virtual device\non the AS/400.  A typical exchange might start like the following:\n   AS/400 Telnet server              Enhanced Telnet client\n--------------------------        -------------------------\nIAC DO TERMINAL-TYPE        -->\n                            <--   IAC WILL TERMINAL-TYPE\nIAC SB TERMINAL-TYPE SEND\nIAC SE                      -->\n                                  IAC SB TERMINAL-TYPE IS\n                            <--   IBM-5555-C01 IAC SE\nIAC DO EOR                  -->\n                            <--   IAC WILL EOR\n                            <--   IAC DO EOR\nIAC WILL EOR                -->\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信された実際のバイトは、以下の16進数に示されています。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server              Enhanced Telnet client\n--------------------------        -------------------------\nFF FD 18                    -->\n                            <--   FF FB 18\nFF FA 18 01 FF F0           -->\n                                  FF FA 18 00 49 42 4D 2D\n                                  35 35 35 35 2D 43 30 31\n                            <--   FF F0\nFF FD 19                    -->\n                            <--   FF FB 19\n                            <--   FF FD 19\nFF FB 19                    -->\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Some negotiations are symmetrical between client and server and some are negotiated in one direction only. Also, it is permissible and common practice to bundle more than one response or request, or combine a request with a response, so the actual exchange may look different in practice to what is shown above.",
      "ja": "一部の交渉はクライアントとサーバーの間で対称であり、一部は一方向のみで交渉されます。また、複数の応答またはリクエストをバンドルするか、リクエストを応答と組み合わせることが許容され、一般的な慣行であるため、実際の交換は、上記のものと実際に異なるように見える場合があります。"
    },
    {
      "indent": 0,
      "text": "3. Enhanced Telnet Option Negotiation",
      "section_title": true,
      "ja": "3. 強化されたTelnetオプションのネゴシエーション"
    },
    {
      "indent": 3,
      "text": "In order to accommodate the new environment option negotiations, the server will bundle an environment option invitation along with the standard terminal type invitation request to the client.",
      "ja": "新しい環境オプションのネゴシエーションに対応するために、サーバーは環境オプションの招待状とクライアントへの標準のターミナルタイプの招待状リクエストをバンドルします。"
    },
    {
      "indent": 3,
      "text": "A client should either send a negative acknowledgment (WONT NEW-ENVIRON), or at some point after completing terminal-type negotiations, but before completing the full set of negotiations required for 5250 transparent mode, engage in environment option sub-negotiation with the server. A maximum of 1024 bytes of environment strings may be sent to the server. A recommended sequence might look like the following:",
      "ja": "クライアントは、否定的な承認（new-environを使用する）を送信するか、ターミナルタイプの交渉を完了した後のある時点で、5250透明モードに必要な交渉の完全なセットを完了する前に、サーバーとの環境オプションのサブネゴシエーションに従事する必要があります。。環境文字列の最大1024バイトをサーバーに送信できます。推奨されるシーケンスは、次のように見える場合があります。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server              Enhanced Telnet client\n--------------------------        -------------------------\nIAC DO NEW-ENVIRON\nIAC DO TERMINAL-TYPE        -->\n(2 requests bundled)\n                            <--   IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nVAR IAC SE                  -->\n                                  IAC SB NEW-ENVIRON IS\n                                  VAR \"USER\" VALUE \"JONES\"\n                                  USERVAR \"DEVNAME\"\n                                  VALUE \"MYDEVICE07\"\n                            <--   IAC SE\n                            <--   IAC WILL TERMINAL-TYPE\n                                  (do the terminal type\n                                  sequence first)\nIAC SB TERMINAL-TYPE SEND\nIAC SE                      -->\n                                  IAC SB TERMINAL-TYPE IS\n                            <--   IBM-5555-C01 IAC SE\n                                  (terminal type negotiations\n                                  completed)\nIAC DO EOR                  -->\n(server will continue\nwith normal transparent\nmode negotiations)\n                            <--   IAC WILL EOR\n                             .\n                             .\n  (other negotiations)       .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信された実際のバイトは、以下の16進数に示されています。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server              Enhanced Telnet client\n--------------------------        -------------------------\nFF FD 27\nFF FD 18                    -->\n(2 requests bundled)\n                            <--   FF FB 27\nFF FA 27 01 00 FF F0        -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "                                  FF FA 27 00 00 55 53 45\n                                  52 01 4A 4F 4E 45 53 03\n                                  44 45 56 4E 41 4D 45 01\n                                  4D 59 44 45 56 49 43 45\n                            <--   30 37 FF F0\n                            <--   FF FB 18\n                                  (do the terminal type\n                                  sequence first)\nFF FA 18 01 FF F0           -->\n                                  FF FA 18 00 49 42 4D 2D\n                                  35 35 35 35 2D 43 30 31\n                            <--   FF F0\nFF FD 19                    -->\n(server will continue\nwith normal transparent\nmode negotiations)\n                            <--   FF FB 19\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "RFC 1572 defines 6 standard VAR's: USER, JOB, ACCT, PRINTER, SYSTEMTYPE, and DISPLAY. The USER standard VAR will hold the value of the AS/400 user profile name to be used in auto-signon requests. The Telnet server will make no direct use of the additional 5 VAR's, nor are any of them required to be sent. All standard VAR's and their values that are received by the Telnet server will be placed in a buffer, along with any USERVAR's received (described below), and made available to a registered initialization exit program to be used for any purpose desired.",
      "ja": "RFC 1572は、6つの標準VARを定義します。ユーザー、ジョブ、ACCT、プリンター、SystemType、およびディスプレイ。ユーザー標準VARは、AS/400ユーザープロファイル名の値を保持します。Telnetサーバーは、追加の5つのVARを直接使用しません。また、それらを送信する必要はありません。Telnetサーバーによって受信されるすべての標準VARとその値は、バッファーに配置され、受信したUSERVAR（以下に説明）され、必要な目的で使用される登録初期化出口プログラムが利用可能になります。"
    },
    {
      "indent": 3,
      "text": "There are some reasons you may want to send NEW-ENVIRON negotiations prior to TERMINAL-TYPE negotiations. With AS/400 TELNET server, several virtual device modes can be negotiated: 1) VTxxx device 2) 3270 device 3) 5250 device (includes Network Station). The virtual device mode selected depends on the TERMINAL-TYPE negotiated plus any other TELNET option negotiations necessary to support those modes. The AS/400 TELNET server will create the desired virtual device at the first opportunity it thinks it has all the requested attributes needed to create the device. This can be as early as completion of the TERMINAL-TYPE negotiations.",
      "ja": "ターミナルタイプの交渉の前に、新しい環境の交渉を送りたいと思うかもしれないいくつかの理由があります。AS/400 Telnetサーバーを使用すると、いくつかの仮想デバイスモードをネゴシエートできます。1）VTXXXデバイス2）3270デバイス3）5250デバイス（ネットワークステーションを含む）。選択された仮想デバイスモードは、これらのモードをサポートするために必要なターミナルタイプのネゴシエートされた交渉に依存します。AS/400 Telnetサーバーは、デバイスの作成に必要なすべての要求された属性があると考える最初の機会に目的の仮想デバイスを作成します。これは、ターミナルタイプの交渉の完了時には早くできます。"
    },
    {
      "indent": 3,
      "text": "For the case of Transparent mode (5250 device), then the moment TERMINAL-TYPE, BINARY, and EOR options are negotiated the TELNET server will go create the virtual device. Receiving any NEW-ENVIRON negotiations after these option negotiations are complete will result in the NEW-ENVIRON negotiations having no effect on device attributes, as the virtual device will have already been created.",
      "ja": "透明モード（5250デバイス）の場合、モーメントターミナルタイプ、バイナリ、およびEORオプションがネゴシエートされると、Telnetサーバーが仮想デバイスを作成します。これらのオプションの交渉が完了した後に新しい環境の交渉を受けると、仮想デバイスがすでに作成されているため、デバイス属性に影響を与えない新しい環境交渉が行われます。"
    },
    {
      "indent": 3,
      "text": "So, for Transparent mode, NEW-ENVIRON negotiations are effectively closed once EOR is negotiated, since EOR is generally the last option done.",
      "ja": "したがって、透明モードの場合、EORが一般的に行われたオプションであるため、EORが交渉されると、新しい環境の交渉は効果的に閉じられます。"
    },
    {
      "indent": 3,
      "text": "For other devices modes (such as VTxxx or 3270), you cannot be sure when the AS/400 TELNET server thinks it has all the attributes to create the device. Recall that NEW-ENVIRON negotiations are optional, and therefore the AS/400 TELNET server need not wait for any NEW-ENVIRON options prior to creating the virtual device. It is in the clients best interest to send NEW-ENVIRON negotiations as soon as possible, preferably before TERMINAL-TYPE is negotiated. That way, the client can be sure the requested attributes were received before the virtual device is created.",
      "ja": "他のデバイスモード（VTXXXや3270など）の場合、AS/400 Telnetサーバーがデバイスを作成するためのすべての属性があると考えていることを確認することはできません。New-Environの交渉はオプションであることを思い出してください。したがって、AS/400 Telnetサーバーは、仮想デバイスを作成する前に新しいEnvironオプションを待つ必要はありません。クライアントには、ターミナルタイプが交渉される前に、できるだけ早く新しい環境交渉を送信することが最善の利益です。そうすれば、仮想デバイスが作成される前に、クライアントは要求された属性が受信されたことを確認できます。"
    },
    {
      "indent": 0,
      "text": "4. Enhanced Display Emulation Support",
      "section_title": true,
      "ja": "4. 拡張ディスプレイエミュレーションサポート"
    },
    {
      "indent": 3,
      "text": "RFC 1572 style USERVAR variables have been defined to allow a compliant Telnet client more control over the Telnet server virtual device on the AS/400. These USERVAR's allow the client Telnet to create or select a previously created virtual device. If the virtual device does not exist and must be created, then the USERVAR variables are used to create and initialize the device attributes. If the virtual device already exists, the device attributes are modified.",
      "ja": "RFC 1572スタイルのUSERVAR変数は、AS/400のTelnetサーバー仮想デバイスをコンプライアントなTelnetクライアントがより制御できるように定義されています。これらのUSERVARにより、クライアントテルネットは以前に作成された仮想デバイスを作成または選択できます。仮想デバイスが存在せず、作成する必要がある場合、USERVAR変数を使用してデバイス属性を作成および初期化します。仮想デバイスが既に存在する場合、デバイス属性が変更されます。"
    },
    {
      "indent": 3,
      "text": "The USERVAR's defined to accomplish this are:",
      "ja": "これを達成するために定義されているUservarが次のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR    VALUE              EXAMPLE           DESCRIPTION\n--------   ----------------   ----------------  -------------------\nDEVNAME    us-ascii char(x)   MYDEVICE07        Display device name\nKBDTYPE    us-ascii char(3)   USB               Keyboard type\nCODEPAGE   us-ascii char(y)   437               Code page\nCHARSET    us-ascii char(y)   1212              Character set",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters y - up to a maximum of 5 characters",
      "ja": "X-最大10文字Y-最大5文字まで"
    },
    {
      "indent": 3,
      "text": "For a description of the KBDTYPE, CODEPAGE and CHARSET parameters and their permissible values, refer to Chapter 8 in the Communications Configuration Reference [5] and also to Appendix C in National Language Support [16].",
      "ja": "KBDType、CodePage、charsetパラメーター、およびそれらの許容値の説明については、通信構成参照[5]の第8章と、国語サポート[16]の付録Cを参照してください。"
    },
    {
      "indent": 3,
      "text": "The CODEPAGE and CHARSET USERVAR's must be associated with a KBDTYPE USERVAR. If either CODEPAGE or CHARSET are sent without KBDTYPE, they will default to system values. A default value for KBDTYPE can be sent to force CODEPAGE and CHARSET values to be used.",
      "ja": "CODEPAGEとCHARSET USERVARは、KBDTYPE USERVARに関連付けられている必要があります。CODEPAGEまたはCHARSETがKBDTypeなしで送信される場合、それらはデフォルトのシステム値になります。KBDTypeのデフォルト値を送信して、使用するCODEPAGEおよびCHARSET値を強制することができます。"
    },
    {
      "indent": 3,
      "text": "AS/400 system objects such as device names, user profiles, clear-text passwords, programs, libraries, etc. are required to be specified in English Upper Case (EUC). This includes:",
      "ja": "デバイス名、ユーザープロファイル、クリアテキストパスワード、プログラム、ライブラリなどのAS/400システムオブジェクトは、英語の大文字（EUC）で指定する必要があります。これも："
    },
    {
      "indent": 5,
      "text": "Any letter (A-Z), any number (0-9), special characters (# $ _ @)",
      "ja": "任意の文字（A-Z）、任意の数（0-9）、特殊文字（＃$ _ @）"
    },
    {
      "indent": 3,
      "text": "Therefore, where us-ascii is specified for VAR or USERVAR values, it is recommended that upper-cased ASCII values be sent, which will be converted to EBCDIC by the Telnet server.",
      "ja": "したがって、VARまたはUSERVAR値に対してUS-ASCIIが指定されている場合、上限型ASCII値を送信することをお勧めします。これはTelnetサーバーによってEBCDICに変換されます。"
    },
    {
      "indent": 3,
      "text": "A special case occurs for encrypted passwords (described in the next section), where both the initial password and user profile used to build the encrypted password must be EBCDIC English Upper Case, in order to be properly authenticated by the Telnet server.",
      "ja": "暗号化されたパスワード（次のセクションで説明）に対して特別なケースが発生します。これは、暗号化されたパスワードの構築に使用される最初のパスワードとユーザープロファイルの両方が、Telnetサーバーによって適切に認証されるためにEBCDIC英語の大文字でなければなりません。"
    },
    {
      "indent": 0,
      "text": "5. Enhanced Display Auto-Signon and Password Encryption",
      "section_title": true,
      "ja": "5. 拡張されたディスプレイオートサニョンとパスワード暗号化"
    },
    {
      "indent": 3,
      "text": "Several 5250 Telnet server specific USERVAR's will be defined. One will carry a random seed to be used in Data Encryption Standard (DES) password encryption, and another will carry the encrypted copy of the password. This would use the same 7-step DES-based password substitution scheme as APPC and Client Access. For a description of DES encryption, refer to Federal Information Processing Standards Publications (FIPS) 46-2 [17] and 81 [18], which can be found at the Federal Information Processing Standards Publications link:",
      "ja": "いくつかの5250 Telnet Server固有のUservarが定義されます。1つはデータ暗号化標準（DES）パスワード暗号化で使用されるランダムシードを持ち、もう1つはパスワードの暗号化されたコピーを運びます。これにより、APPCおよびクライアントアクセスと同じ7段階のDESベースのパスワード代替スキームが使用されます。暗号化の説明については、連邦情報処理標準出版物（FIPS）46-2 [17]および81 [18]を参照してください。これらは連邦情報処理標準出版物リンクにあります。"
    },
    {
      "indent": 3,
      "text": "http://www.itl.nist.gov/div897/pubs/by-num.htm",
      "ja": "http://www.itl.nist.gov/div897/pubs/by-num.htm"
    },
    {
      "indent": 3,
      "text": "For a description of the 7-step password substitution scheme, refer to these IBM Customer Support FTP Server links:",
      "ja": "7段階のパスワード代替スキームの説明については、これらのIBMカスタマーサポートFTPサーバーリンクを参照してください。"
    },
    {
      "indent": 3,
      "text": "ftp://ftp.networking.ibm.com/pub/standards/ciw/sig/sec/pwsubciw.ps ftp://ftp.networking.ibm.com/pub/standards/ciw/sig/sec/pwsubciw.ps.Z ftp://ftp.networking.ibm.com/pub/standards/ciw/sig/sec/pwsubciw.zip",
      "ja": "ftp://ftp.networking.ibm.com/pub/standards/ciw/sig/sec/pwsubciw.ps ftp://ftp.networking.ibm.com/pub/standards/ciw/sig/sec/pwsubciw.ps.Z ftp://ftp.networking.ibm.com/pub/standards/ciw/sig/sec/pwsubciw.zip"
    },
    {
      "indent": 3,
      "text": "If encrypted password exchange is not required, clear-text password exchange is permitted using the same USERVAR's defined for encryption. For this case, the random client seed should be set to either an empty value (RFC 1572 preferred method) or to hexadecimal zeros to indicate the password is not encrypted, but is clear-text.",
      "ja": "暗号化されたパスワード交換が不要な場合、暗号化のために同じUServarの定義されたUSERVARを使用して、クリアテキストパスワード交換が許可されます。この場合、ランダムクライアントシードは、パスワードが暗号化されていないがクリアテキストであることを示すために、空の値（RFC 1572優先メソッド）または16進数のゼロに設定する必要があります。"
    },
    {
      "indent": 3,
      "text": "It should be noted that security of clear-text password exchange cannot be guaranteed unless the network is physically protected or a trusted network (such as an intranet). If your network is vulnerable to IP address spoofing or directly connected to the Internet, you should engage in encrypted password exchange to validate a clients identity.",
      "ja": "ネットワークが物理的に保護されている場合、または信頼できるネットワーク（イントラネットなど）がない限り、クリアテキストパスワード交換のセキュリティは保証できないことに注意してください。ネットワークがIPアドレスのスプーフィングに対して脆弱であるか、インターネットに直接接続されている場合は、暗号化されたパスワード交換に参加してクライアントのIDを検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "Additional VAR's and USERVAR's have also been defined to allow an auto-signon user greater control over their startup environment, similar to what is supported using the Open Virtual Terminal (QTVOPNVT) API [3].",
      "ja": "追加のVARとUSERVARは、オープン仮想端子（QTVOPNVT）API [3]を使用してサポートされるものと同様に、オートサニョンユーザーがスタートアップ環境をより強力に制御できるように定義されています。"
    },
    {
      "indent": 3,
      "text": "The standard VAR's supported to accomplish this are:",
      "ja": "これを達成するためにサポートされている標準のvarは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "VAR        VALUE              EXAMPLE           DESCRIPTION\n--------   ----------------   ----------------  -------------------\nUSER       us-ascii char(x)   USERXYZ           User profile name",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X-最大10文字まで"
    },
    {
      "indent": 3,
      "text": "The custom USERVAR's defined to accomplish this are:",
      "ja": "これを達成するために定義されているカスタムUservarは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR       VALUE              EXAMPLE           DESCRIPTION\n--------      ----------------   ----------------  -------------------\nIBMRSEED      binary(8)          8-byte hex field  Random client seed\nIBMSUBSPW     binary(10)         10-byte hex field Substitute password\nIBMCURLIB     us-ascii char(x)   QGPL              Current library\nIBMIMENU      us-ascii char(x)   MAIN              Initial menu\nIBMPROGRAM    us-ascii char(x)   QCMD              Program to call",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X-最大10文字まで"
    },
    {
      "indent": 3,
      "text": "In order to communicate the server random seed value to the client, the server will request a USERVAR name made up of a fixed part (the 8 characters \"IBMRSEED\" immediately followed by an 8-byte hexadecimal variable part, which is the server random seed. The client generates its own 8-byte random seed value, and uses both seeds to encrypt the password. Both the encrypted password and the client random seed value are then sent to the server for authentication. RFC 1572 rules will need to be adhered to when transmitting the client random seed and substituted password values to the server. Specifically, since a typical environment string is a variable length hexadecimal field, the hexadecimal fields are required to be escaped and/or byte stuffed according to the RFC 854 [8], where any single byte could be mis-construed as a Telnet IAC or other Telnet option negotiation control character. The client must escape and/or byte stuff any bytes which could be seen as a RFC 1572 [13] option, specifically VAR, VALUE, ESC and USERVAR.",
      "ja": "サーバーのランダムシード値をクライアントに通信するために、サーバーは固定部品で構成されるUserVar名（8バイトの16進数の変数部品がすぐに「Ibmrseed」8文字が続きます。これはサーバーランダムシードです。。クライアントは独自の8バイトのランダムシード値を生成し、両方のシードを使用してパスワードを暗号化します。暗号化されたパスワードとクライアントのランダムシード値の両方が認証のためにサーバーに送信されます。RFC1572ルールを順守する必要がありますクライアントのランダムシードとパスワード値をサーバーに送信する場合。具体的には、典型的な環境文字列はさまざまな長さの六分位フィールドであるため、六分位フィールドはRFC 854 [8]に従って脱出および/またはバイトを詰め込む必要があります。単一のバイトがTelnet IACまたはその他のTelnetオプションネゴシエーションコントロール文字として誤って構築される可能性がある場合。クライアントはRFC 1572 [13]オプション、具体的にはVAR、値、ESCとUSERVAR。"
    },
    {
      "indent": 3,
      "text": "The following illustrates the encrypted case:",
      "ja": "以下は、暗号化されたケースを示しています。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server             Enhanced Telnet client\n--------------------------       -------------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nUSERVAR \"IBMSUBSPW\"\nVAR USERVAR IAC SE          -->\n                                 IAC SB NEW-ENVIRON IS\n                                 VAR \"USER\" VALUE \"DUMMYUSR\"\n                                 USERVAR \"IBMRSEED\" VALUE \"yyyyyyyy\"\n                                 USERVAR \"IBMSUBSPW\" VALUE \"zzzzzzzz\"\n                            <--  IAC SE\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In this example, \"xxxxxxxx\" is an 8-byte hexadecimal random server seed, \"yyyyyyyy\" is an 8-byte hexadecimal random client seed and \"zzzzzzzz\" is an 8-byte hexadecimal encrypted password. If the password is not valid, then the sign-on panel is displayed. If the password is expired, then the Change Password panel is displayed.",
      "ja": "この例では、「xxxxxxxxx」は8バイトの16進ランダムサーバーシード、「yyyyyyyy」は8バイトの16進のランダムクライアントシードであり、「zzzzzzzzz」は8バイトの16進暗号化されたパスワードです。パスワードが有効でない場合は、サインオンパネルが表示されます。パスワードの有効期限が切れた場合、パスワードの変更パネルが表示されます。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below, where the server seed is \"7D3E488F18080404\", the client seed is \"4E4142334E414233\" and the encrypted password is \"DFB0402F22ABA3BA\". The user profile used to generate the encrypted password is \"44554D4D59555352\" (DUMMYUSR), with a clear-text password of \"44554D4D595057\" (DUMMYPW).",
      "ja": "上記の例で送信された実際のバイトは、サーバーシードが「7D3E488F18080404」で、クライアントシードは「4E4142334E414233」で、暗号化されたパスワードは「DFB0402F222222222222223BA」です。暗号化されたパスワードを生成するために使用されるユーザープロファイルは、「44554D4D59555552」（DummyUSR）で、「44554D4D595057」（Dummypw）のクリアテキストパスワードがあります。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server             Enhanced Telnet client\n--------------------------       -------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 7D 3E 48\n8F 18 08 04 04 03 49 42\n4D 53 55 42 53 50 57 03\n00 FF F0                    -->\n                                 FF FA 27 00 00 55 53 45\n                                 52 01 44 55 4D 4D 59 55\n                                 53 52 03 49 42 4D 52 53\n                                 45 45 44 01 4E 41 42 33\n                                 4E 41 42 33 03 49 42 4D\n                                    53 55 42 53 50 57 01 DF\n                                 B0 40 2F 22 AB A3 BA FF\n                            <--  F0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The following illustrates the clear-text case:",
      "ja": "以下は、クリアテキストのケースを示しています。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server             Enhanced Telnet client\n--------------------------       -------------------------\nIAC DO NEW-ENVIRON          -->\n                            <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nUSERVAR \"IBMRSEEDxxxxxxxx\"\nUSERVAR \"IBMSUBSPW\"\nVAR USERVAR IAC SE          -->\n                                 IAC SB NEW-ENVIRON IS\n                                 VAR \"USER\" VALUE \"DUMMYUSR\"\n                                 USERVAR \"IBMRSEED\" VALUE\n                                 USERVAR \"IBMSUBSPW\" VALUE \"yyyyyyyy\"\n                            <--  IAC SE\n                             .\n                             .\n(other negotiations)         .",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In this example, \"xxxxxxxx\" is an 8-byte hexadecimal random server seed, \"yyyyyyyyyy\" is a 10-byte us-ascii client clear-text password. If the password has expired, then the sign-on panel is displayed.",
      "ja": "この例では、「xxxxxxxxx」は8バイトの16進のランダムサーバーシードであり、「yyyyyyyyyy」は10バイトのUS-ASCIIクライアントクリアテキストパスワードです。パスワードの有効期限が切れた場合、サインオンパネルが表示されます。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below, where the server seed is \"7D3E488F18080404\", the client seed is empty and the clear-text password is \"44554D4D595057\" (DUMMYPW). The user profile used is \"44554D4D59555352\" (DUMMYUSR).",
      "ja": "上記の例で伝達された実際のバイトは、サーバーシードが「7D3E488F18080404」である以下の16進数に示されています。クライアントシードは空で、クリアテキストパスワードは「44554D4D595057」（Dummypw）です。使用されるユーザープロファイルは、「44554D4D595555352 \"（dummyusr）です。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server             Enhanced Telnet client\n--------------------------       -------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 03 49 42 4D\n52 53 45 45 44 7D 3E 48\n8F 18 08 04 04 03 49 42\n4D 53 55 42 53 50 57 03\n00 FF F0                    -->\n                                 FF FA 27 00 00 55 53 45\n                                 52 01 44 55 4D 4D 59 55\n                                 53 52 03 49 42 4D 52 53\n                                 45 45 44 01 03 49 42 4D\n                                 53 55 42 53 50 57 01 44\n                            <--  55 4D 4D 59 50 57 FF F0",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "5.1 Password Substitutes Processing",
      "section_title": true,
      "ja": "5.1 パスワードの代替処理"
    },
    {
      "indent": 3,
      "text": "Both APPC and Client Access use well-known DES encryption algorithms to create encrypted passwords. A Network Station or Enhanced Client can generate compatible encrypted passwords if they follow these steps, details of which can be found in the Federal Information Processing Standards 46-2 [17].",
      "ja": "APPCとクライアントアクセスの両方が、よく知られているDES暗号化アルゴリズムを使用して、暗号化されたパスワードを作成します。ネットワークステーションまたは強化されたクライアントは、これらの手順に従うと、互換性のある暗号化されたパスワードを生成できます。その詳細は、連邦情報処理基準46-2 [17]に記載されています。"
    },
    {
      "indent": 3,
      "text": "1. Padded_PW = Left justified user password padded to the right with '40'X to 8 bytes.",
      "ja": "1. padded_pw =左に右にパッドでパッドでパッドでパッドがパッドでパッドを左から8バイト。"
    },
    {
      "indent": 6,
      "text": "The users password must be left justified in an 8 byte variable and padded to the right with '40'X up to an 8 byte length. If the users password is 8 bytes in length, no padding would occur. For computing password substitutes for passwords of length 9 and 10 see section \"Handling passwords of length 9 and 10\" below. Passwords less than 1 byte or greater than 10 bytes in length are not valid. Please note, if password is not in EBCDIC, it must be converted to EBCDIC uppercase.",
      "ja": "ユーザーのパスワードは、8バイト変数で正当化され、右にパッドでパッドで塗装されている必要があります。ユーザーのパスワードの長さが8バイトの場合、パディングは発生しません。長さ9と10のパスワードのパスワード代替を計算するには、セクション「長さ9および10のパスワードの取り扱いの処理」を参照してください。1バイト未満または長さ10バイトを超えるパスワードは無効です。パスワードがEBCDICにない場合は、EBCDIC大文字に変換する必要があります。"
    },
    {
      "indent": 3,
      "text": "2. XOR_PW = Padded_PW xor '5555555555555555'X",
      "ja": "2. xor_pw = padded_pw xor '5555555555555555'x"
    },
    {
      "indent": 6,
      "text": "The padded password is Exclusive OR'ed with 8 bytes of '55'X.",
      "ja": "パッド付きパスワードは、8バイトの '55' Xで排他的または充填されています。"
    },
    {
      "indent": 3,
      "text": "3. SHIFT_RESULT = XOR_PW << 1",
      "ja": "3. shift_result = xor_pw << 1"
    },
    {
      "indent": 6,
      "text": "The entire 8 byte result is shifted 1 bit to the left; the leftmost bit value is discarded, and the rightmost bit value is cleared to 0.",
      "ja": "8バイトの結果全体が左に1ビットシフトされます。左端のビット値は破棄され、右端のビット値は0にクリアされます。"
    },
    {
      "indent": 3,
      "text": "4. PW_TOKEN = DES_ECB_mode(SHIFT_RESULT, /* key */ userID_in_EBCDIC_uppercase /* data */ )",
      "ja": "4. pw_token = des_ecb_mode（shift_result、 / * key * / userid_in_ebcdic_uppercase / * data * /）"
    },
    {
      "indent": 6,
      "text": "This shifted result is used as key to the Data Encryption Standard (Federal Information Processing Standards 46-2 [17]) to encipher the user identifier. When the user identifier is less than 8 bytes, it is left justified in an 8 byte variable and padded to the right with '40'X. When the user identifier is 9 or 10 bytes, it is first padded to the right with '40'X to a length of 10 bytes. Then bytes 9 and 10 are \"folded\" into bytes 1-8 using the following algorithm:",
      "ja": "このシフトされた結果は、ユーザー識別子を接続するために、データ暗号化標準（連邦情報処理基準46-2 [17]）の鍵として使用されます。ユーザーの識別子が8バイト未満の場合、8バイト変数で正当化され、 '40'xで右にパッドにされます。ユーザーの識別子が9または10バイトの場合、最初に右に右にパッドが付けられ、 '40' xから10バイトの長さがあります。次のアルゴリズムを使用して、バイト9と10が「折りたたまれ」1〜8に「折り畳まれ」ます。"
    },
    {
      "indent": 8,
      "text": "Bit 0 is the high-order bit (i.e. has value of '80'X).",
      "ja": "ビット0は高次ビットです（つまり、 '80'xの値があります）。"
    },
    {
      "indent": 8,
      "text": "Byte 1, bits 0 and 1 are replaced with byte 1, bits 0 and 1 Exclusive OR'ed with byte 9, bits 0 and 1. Byte 2, bits 0 and 1 are replaced with byte 2, bits 0 and 1 Exclusive OR'ed with byte 9, bits 2 and 3.",
      "ja": "バイト1、ビット0および1は、バイト1、ビット0および1の排他的またはバイト9、ビット0および1で置き換えられます。バイト2、ビット0および1は、バイト2、ビット0および1の排他的または1に置き換えられます。BYTE 9、ビット2および3でエド。"
    },
    {
      "indent": 8,
      "text": "Byte 3, bits 0 and 1 are replaced with byte 3, bits 0 and 1 Exclusive OR'ed with byte 9, bits 4 and 5. Byte 4, bits 0 and 1 are replaced with byte 4, bits 0 and 1 Exclusive OR'ed with byte 9, bits 6 and 7. Byte 5, bits 0 and 1 are replaced with byte 5, bits 0 and 1 Exclusive OR'ed with byte 10, bits 0 and 1. Byte 6, bits 0 and 1 are replaced with byte 6, bits 0 and 1 Exclusive OR'ed with byte 10, bits 2 and 3. Byte 7, bits 0 and 1 are replaced with byte 7, bits 0 and 1 Exclusive OR'ed with byte 10, bits 4 and 5. Byte 8, bits 0 and 1 are replaced with byte 8, bits 0 and 1 Exclusive OR'ed with byte 10, bits 6 and 7.",
      "ja": "バイト3、ビット0および1は、バイト3、ビット0および1の排他的またはバイト9、ビット4および5で置き換えられます。バイト4、ビット0および1は、バイト4、ビット0および1の排他的または1に置き換えられます。バイト9、ビット6および7でエド、バイト5、ビット0および1はバイト5、ビット0および1の排他的またはバイト10、ビット0および1で置き換えられます。バイト6、ビット0および1は置き換えられますバイト6、ビット0および1の排他的または1バイト10、ビット2および3、バイト7、ビット0および1はバイト7、ビット0および1の排他的またはバイト10、ビット4および5で置き換えられます。バイト8、ビット0および1は、バイト8、ビット0および1の排他的またはバイト10、ビット6および7で置き換えられます。"
    },
    {
      "indent": 6,
      "text": "User identifier greater than 10 bytes or less than 1 byte are not the result of this encryption id known as PW_TOKEN in the paper.",
      "ja": "10バイトを超えるユーザー識別子または1バイト未満は、この暗号化IDの結果ではありません。"
    },
    {
      "indent": 3,
      "text": "5. Increment PWSEQs and store it.",
      "ja": "5. pwseqsを増やして保存します。"
    },
    {
      "indent": 6,
      "text": "Each LU must maintain a pair of sequence numbers for ATTACHs sent and received on each session. Each time an ATTACH is generated, (and password substitutes are in use on the session) the sending sequence number, PWSEQs, is incremented and saved for the next time. Both values are set to zero at BIND time. So the first use of PWSEQs has the value of 1, and increases by one with each use. A new field is added to the ATTACH to carry this sequence number. However, in certain error conditions, it is possible for the sending side to increment the sequence number and the receiver may not increment it. When the sender sends a subsequent ATTACH, the receiver will detect a missing sequence. This is allowed. However the sequence number received must always be larger than the previous one, even if some are missing.",
      "ja": "各LUは、各セッションで送信および受信したアタッチのシーケンス番号のペアを維持する必要があります。アタッチが生成されるたびに（およびセッションでパスワードの代替品が使用されています）、送信シーケンス番号PWSEQSが次回に増分および保存されます。両方の値は、バインド時間でゼロに設定されます。したがって、PWSEQSの最初の使用は1の値を持ち、使用するごとに1つ増加します。このシーケンス番号を掲載するために、新しいフィールドがアタッチに追加されます。ただし、特定のエラー条件では、送信側がシーケンス番号を増分する可能性があり、受信機はそれをインクリメントしない場合があります。送信者が後続のアタッチを送信すると、レシーバーは欠落しているシーケンスを検出します。これは許可されています。ただし、受信したシーケンス番号は、たとえ不足している場合でも、常に前のシーケンス数よりも大きくなければなりません。"
    },
    {
      "indent": 6,
      "text": "The maximum number of consecutive missing sequence numbers allowed is 16. If this is exceeded, the session is unbound with a protocol violation.",
      "ja": "許可されている連続した欠落シーケンス数の最大数は16です。これを超えると、プロトコル違反でセッションが解除されます。"
    },
    {
      "indent": 6,
      "text": "Note: The sequence number must be incremented for every ATTACH sent. However, the sequence number field is only required to be included in the FMH5 if a password substitute is sent (byte 4, bit 3 on).",
      "ja": "注：送信されるアタッチごとに、シーケンス番号をインクリメントする必要があります。ただし、パスワードの代替品が送信された場合にのみ、シーケンス番号フィールドをFMH5に含める必要があります（バイト4、ビット3オン）。"
    },
    {
      "indent": 3,
      "text": "6. RDrSEQ = RDr + PWSEQs /* RDr is server seed. */",
      "ja": "6. rdrseq = rdr pwseqs /* rdrはサーバーシードです。*/"
    },
    {
      "indent": 6,
      "text": "The current value of PWSEQs is added to RDr, the random value received from the partner LU on this session, yielding RDrSEQ, essentially a predictably modified value of the random value received from the partner LU at BIND time.",
      "ja": "PWSEQの現在の値はRDRに追加されます。RDRは、このセッションでパートナーLUから受け取ったランダム値であり、RDRSEQを生成します。RDRSEQは、BIND時にパートナーLUから受け取ったランダム値の予測的に変更された値です。"
    },
    {
      "indent": 3,
      "text": "7. PW_SUB = DES_CBC_mode(PW_TOKEN, /* key */ (RDrSEQ, /* 8 bytes */ RDs, /* 8 bytes */ ID xor RDrSEQ, /* 16 bytes */ PWSEQs, /* 8 bytes */ ) /* data */ )",
      "ja": "7. pw_sub = des_cbc_mode（pw_token、 /* key* /（rdrseq、 /* 8 bytes* /rds、 /* 8 bytes* /id xor rdrseq、 /* 16 bytes* /pwseqs、 /* 8 bytes* /） /*データデータデータ*/）"
    },
    {
      "indent": 7,
      "text": "The PW_TOKEN is used as a key to the DES function to generate a 8 bytes value for the following string of inputs. The DES CBC mode Initialization Vector (IV) used is 8 bytes of '00'X.",
      "ja": "PW_TOKENは、DES関数の鍵として使用され、次の入力文字列の8バイト値を生成します。使用されるDES CBCモード初期化ベクトル（IV）は、 '00'xの8バイトです。"
    },
    {
      "indent": 9,
      "text": "RDrSEQ: the random data value received from the partner LU plus the sequence number.",
      "ja": "RDRSEQ：パートナーLUとシーケンス番号から受信したランダムデータ値。"
    },
    {
      "indent": 9,
      "text": "RDs: the random data value sent to the partner LU on BIND for this session.",
      "ja": "RDS：このセッションでBindでパートナーLUに送信されたランダムデータ値。"
    },
    {
      "indent": 9,
      "text": "A 16 byte value created by:",
      "ja": "作成された16バイト値："
    },
    {
      "indent": 17,
      "text": "- padding the user identifier with '40'X to a length of 16 bytes.",
      "ja": "- '40'xでユーザー識別子を16バイトの長さにパディングします。"
    },
    {
      "indent": 17,
      "text": "- Exclusive OR the two 8 byte halves of the padded user identifier with the RDrSEQ value.",
      "ja": "- RDRSEQ値を持つパッド入りユーザー識別子の排他的または2つの8バイトの半分。"
    },
    {
      "indent": 17,
      "text": "Note: User ID must first be converted to EBCDIC upper case.",
      "ja": "注：ユーザーIDは、最初にEBCDICの大文字に変換する必要があります。"
    },
    {
      "indent": 9,
      "text": "PWSEQs: the sequence number.",
      "ja": "PWSEQS：シーケンス番号。"
    },
    {
      "indent": 6,
      "text": "This is similar to the process used on LU-LU verification as described in the Enhanced LU-LU Bind Security. The resulting enciphered random data is the 'password substitute'.",
      "ja": "これは、拡張されたLu-Lu Bindセキュリティで説明されているように、Lu-Lu検証で使用されるプロセスに似ています。結果として得られるエンカーランダムデータは、「パスワード代替」です。"
    },
    {
      "indent": 0,
      "text": "5.2 Handling passwords of length 9 and 10",
      "section_title": true,
      "ja": "5.2 長さ9と10のパスワードの処理"
    },
    {
      "indent": 3,
      "text": "1. Generate PW_TOKENa by using characters 1 to 8 of the password and steps 1-4 from the previous section.",
      "ja": "1. パスワードの1〜8文字を使用して、前のセクションから手順1〜4を使用してPW_TOKENAを生成します。"
    },
    {
      "indent": 3,
      "text": "2. Generate PW_TOKENb by using characters 9 and 10 and steps 1-4 from the previous section. In this case Padded_PW from step 1 will be characters 9 and 10 padded to the right with '40'X, for a total length of 8.",
      "ja": "2. 前のセクションから文字9と10とステップ1〜4を使用して、PW_TOKENBを生成します。この場合、ステップ1のpadded_pwは、 '40' xで右にパッドで塗りつぶされ、合計長さ8です。"
    },
    {
      "indent": 3,
      "text": "3. PW_TOKEN = PW_TOKENa xor PW_TOKENb 4. Now compute PW_SUB by performing steps 5-7 from the previous section.",
      "ja": "3. PW_TOKEN = PW_TOKENA XOR PW_TOKENB 4.前のセクションから手順5-7を実行してPW_SUBを計算します。"
    },
    {
      "indent": 0,
      "text": "5.3 Example Password Substitute Calculation",
      "section_title": true,
      "ja": "5.3 パスワードのサンプル代替計算"
    },
    {
      "indent": 3,
      "text": "ID: USER123 Password: ABCDEFG Server seed: '7D4C2319F28004B2'X Client seed: '08BEF662D851F4B1'X PWSEQs: 1 (PWSEQs is a sequence number needed in the 7-step encryption, and it is always one)",
      "ja": "ID：user123パスワード：ABCDEFGサーバーシード： '7D4C2319F28004B2'Xクライアントシード：' 08BEF662D851F4B1'X PWSEQS：1（PWSEQSは7段階の暗号化で必要なシーケンス番号であり、常に1つです）"
    },
    {
      "indent": 3,
      "text": "Encrypted Password should be : '5A58BD50E4DD9B5F'X",
      "ja": "暗号化されたパスワードは次のようにする必要があります： '5A58BD50E4DD9B5F'X"
    },
    {
      "indent": 0,
      "text": "6. Device Name Collision Processing",
      "section_title": true,
      "ja": "6. デバイス名衝突処理"
    },
    {
      "indent": 3,
      "text": "Device name collision occurs when a Telnet client sends the Telnet server a virtual device name that it wants to use, but that device is already in use on the server. When this occurs, the Telnet server sends a request to the client asking it to try another device name. The environment option negotiation uses the USERVAR name of DEVNAME to communicate the virtual device name. The following shows how the Telnet server will request the Telnet client to send a different DEVNAME when device name collision occurs.",
      "ja": "デバイス名の衝突は、Telnetクライアントが使用したい仮想デバイス名をTelnetサーバーに送信するときに発生しますが、そのデバイスはすでにサーバーで使用されています。これが発生すると、Telnetサーバーはクライアントにリクエストを送信し、別のデバイス名を試すように依頼します。環境オプションのネゴシエーションは、DevNameのUservar名を使用して、仮想デバイス名を通信します。以下は、TelnetサーバーがTelnetクライアントに、デバイス名の衝突が発生したときに別のDevNameを送信するようにどのように要求するかを示しています。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server             Enhanced Telnet client\n--------------------------       -------------------------\nIAC SB NEW-ENVIRON SEND\nVAR USERVAR IAC SE         -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Server requests all environment variables be sent.",
      "ja": "サーバーは、すべての環境変数を送信します。"
    },
    {
      "indent": 30,
      "text": "      IAC SB NEW-ENVIRON IS USERVAR\n      \"DEVNAME\" VALUE \"MYDEVICE1\"\n      USERVAR \"xxxxx\" VALUE \"xxx\"\n      ...\n<--   IAC SE",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Client sends all environment variables, including DEVNAME. Server tries to select device MYDEVICE1. If the device is already in use, server requests DEVNAME be sent again.",
      "ja": "クライアントは、devnameを含むすべての環境変数を送信します。サーバーは、デバイスmydevice1を選択しようとします。デバイスが既に使用されている場合、サーバーはDevNameを再度送信します。"
    },
    {
      "indent": 3,
      "text": "IAC SB NEW-ENVIRON SEND\nUSERVAR \"DEVNAME\" IAC SE   -->\n   Server sends a request for a single environment variable: DEVNAME",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 30,
      "text": "      IAC SB NEW-ENVIRON IS USERVAR\n<--   \"DEVNAME\" VALUE \"MYDEVICE2\" IAC SE",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Client sends one environment variable, calculating a new value of MYDEVICE2. If MYDEVICE2 is different from the last request, then server tries to select device MYDEVICE2, else server disconnects client. If MYDEVICE2 is also in use, server will send DEVNAME request again, and keep doing so until it receives a device that is not in use, or the same device name twice in row.",
      "ja": "クライアントは1つの環境変数を送信し、myDevice2の新しい値を計算します。MyDevice2が最後のリクエストと異なる場合、サーバーはデバイスMyDevice2を選択しようとし、Else Serverはクライアントを切断します。MyDevice2も使用されている場合、サーバーはDevNameリクエストを再度送信し、使用していないデバイスまたは同じデバイス名が2回並んでいるかを受信するまで続けます。"
    },
    {
      "indent": 0,
      "text": "7. Enhanced Printer Emulation Support",
      "section_title": true,
      "ja": "7. 強化されたプリンターエミュレーションサポート"
    },
    {
      "indent": 3,
      "text": "RFC 1572 style USERVAR variables have been defined to allow a compliant Telnet client more control over the Telnet server virtual device on the AS/400. These USERVAR's allow the client Telnet to select a previously created virtual device or auto-create a new virtual device with requested attributes.",
      "ja": "RFC 1572スタイルのUSERVAR変数は、AS/400のTelnetサーバー仮想デバイスをコンプライアントなTelnetクライアントがより制御できるように定義されています。これらのUSERVARにより、クライアントテルネットは以前に作成された仮想デバイスを選択するか、要求された属性を備えた新しい仮想デバイスを自動作成できます。"
    },
    {
      "indent": 3,
      "text": "This makes the enhancements available to any Telnet client that chonoses to support the new negotiations.",
      "ja": "これにより、新しい交渉をサポートするためにその格子を飾るTelnetクライアントが拡張機能を利用できるようにします。"
    },
    {
      "indent": 3,
      "text": "The USERVAR's defined to accomplish this are:",
      "ja": "これを達成するために定義されているUservarが次のとおりです。"
    },
    {
      "indent": 3,
      "text": "USERVAR       VALUE            EXAMPLE           DESCRIPTION\n------------- ---------------- ----------------  -------------------\nDEVNAME       us-ascii char(x) PRINTER1          Printer device name\nIBMIGCFEAT    us-ascii char(6) 2424J0            IGC feature (DBCS)\nIBMMSGQNAME   us-ascii char(x) QSYSOPR           *MSGQ name\nIBMMSGQLIB    us-ascii char(x) QSYS              *MSGQ library\nIBMFONT       us-ascii char(x) 12                Font\nIBMFORMFEED   us-ascii char(1) C | U | A         Formfeed\nIBMTRANSFORM  us-ascii char(1) 1 | 0             Transform\nIBMMFRTYPMDL  us-ascii char(x) *IBM42023         Mfg. type and model\nIBMPPRSRC1    binary(1)        1-byte hex field  Paper source 1\nIBMPPRSRC2    binary(1)        1-byte hex field  Paper source 2\nIBMENVELOPE   binary(1)        1-byte hex field  Envelope hopper\nIBMASCII899   us-ascii char(1) 1 | 0             ASCII 899 support\nIBMWSCSTNAME  us-ascii char(x) *NONE             WSCST name\nIBMWSCSTLIB   us-ascii char(x) *LIBL             WSCST library",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "x - up to a maximum of 10 characters",
      "ja": "X-最大10文字まで"
    },
    {
      "indent": 3,
      "text": "The \"IBM\" prefix on the USERVAR's denotes AS/400 specific attributes.",
      "ja": "Uservarの「IBM」プレフィックスは、AS/400固有の属性を示します。"
    },
    {
      "indent": 3,
      "text": "The DEVNAME USERVAR is used both for displays and printers. The IBMFONT and IBMASCII899 are used only for SBCS environments.",
      "ja": "DevName Uservarは、ディスプレイとプリンターの両方に使用されます。IBMFontおよびIBMASCII899は、SBCS環境にのみ使用されます。"
    },
    {
      "indent": 3,
      "text": "For a description of most of these parameters (drop the \"IBM\" from the USERVAR) and their permissible values, refer to Chapter 8 in the Communications Configuration Reference [5].",
      "ja": "これらのパラメーターのほとんどの説明（Uservarから「IBM」をドロップ）とそれらの許容値については、通信構成参照[5]の第8章を参照してください。"
    },
    {
      "indent": 3,
      "text": "The IBMIGCFEAT supports the following variable DBCS language identifiers in position 5 (positions 1-4 must be '2424', position 6 must be '0'):",
      "ja": "IBMIGCFEATは、位置5の次の変数DBCS言語識別子をサポートします（位置1〜4は「2424」、位置6は「0」でなければなりません）："
    },
    {
      "indent": 8,
      "text": "'J' = Japanese              'K' = Korean\n'C' = Traditional Chinese   'S' = Simplified Chinese",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The IBMTRANSFORM and IBMASCII899 values correspond to:",
      "ja": "IBMTransformおよびIBMASCII899値は以下に対応しています。"
    },
    {
      "indent": 8,
      "text": "'1' = Yes '2' = No",
      "ja": "'1' = yes '2 '= no"
    },
    {
      "indent": 3,
      "text": "The IBMFORMFEED values correspond to:",
      "ja": "ibmformfeed値は以下に対応しています"
    },
    {
      "indent": 8,
      "text": "'C' = Continuous  'U' = Cut  'A' = Autocut",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The IBMPPRSRC1, IBMPPRSRC2 and IBMENVELOPE custom USERVAR's do not map directly to their descriptions in Chapter 8 in the Communications Configuration Reference [5]. To map these, use the index listed here:",
      "ja": "IBMPPRSRC1、IBMPPRSRC2、およびIBMENVELOPEカスタムUSERVARは、通信構成参照[5]の第8章で説明に直接マッピングしません。これらをマッピングするには、ここにリストされているインデックスを使用します。"
    },
    {
      "indent": 3,
      "text": "IBMPPRSRC1    HEX     IBMPPRSRC2    HEX     IBMENVELOPE    HEX\n----------   -----    ----------   -----    -----------   -----\n*NONE        'FF'X    *NONE        'FF'X    *NONE         'FF'X\n*MFRTYPMDL   '00'X    *MFRTYPMDL   '00'X    *MFRTYPMDL    '00'X\n*LETTER      '01'X    *LETTER      '01'X    *B5           '06'X\n*LEGAL       '02'X    *LEGAL       '02'X    *MONARCH      '09'X\n*EXECUTIVE   '03'X    *EXECUTIVE   '03'X    *NUMBER9      '0A'X\n*A4          '04'X    *A4          '04'X    *NUMBER10     '0B'X\n*A5          '05'X    *A5          '05'X    *C5           '0C'X\n*B5          '06'X    *B5          '06'X    *DL           '0D'X\n*CONT80      '07'X    *CONT80      '07'X\n*CONT132     '08'X    *CONT132     '08'X\n*A3          '0E'X    *A3          '0E'X\n*B4          '0F'X    *B4          '0F'X\n*LEDGER      '10'X    *LEDGER      '10'X",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Note 1: For IBMPPRSRC2, *CONT80 and *CONT132 support starts at V3R7.",
      "ja": "注1：IBMPPRSRC2の場合、 *cont80および *cont132サポートはV3R7で始まります。"
    },
    {
      "indent": 3,
      "text": "Note 2: For IBMPPRSRC1 and IBMPPRSRC2, *A3, *B4 and *LEDGER support starts at V3R7.",
      "ja": "注2：IBMPPRSRC1およびIBMPPRSRC2の場合、 *A3、 *B4および *LEDGERサポートはV3R7から始まります。"
    },
    {
      "indent": 0,
      "text": "8. Telnet Printer Terminal Types",
      "section_title": true,
      "ja": "8. Telnetプリンター端子タイプ"
    },
    {
      "indent": 3,
      "text": "New Telnet options are defined for the printer pass-through mode of operation. To enable printer pass-through mode, both the client and server must agree to at least support the Transmit-Binary, End-Of-Record, and Terminal-Type Telnet options. The following are new terminal types for printers:",
      "ja": "新しいTelnetオプションは、プリンターパススルー操作モード用に定義されています。プリンターのパススルーモードを有効にするには、クライアントとサーバーの両方が、少なくとも送信バイナリ、録音の終了、および端末タイプのTelnetオプションをサポートすることに同意する必要があります。以下は、プリンター用の新しい端末タイプです。"
    },
    {
      "indent": 3,
      "text": "TERMINAL-TYPE  DESCRIPTION\n-------------  -------------------\nIBM-5553-B01   Double-Byte printer\nIBM-3812-1     Single-Byte printer",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Specific characteristics of the IBM-5553-B01 or IBM-3812-1 printers are specified through the USERVAR IBMMFRTYPMDL, which specifies the manufacturer type and model.",
      "ja": "IBM-5553-B01またはIBM-3812-1プリンターの特定の特性は、メーカーの種類とモデルを指定するUservar IBMMFRTYPMDLを介して指定されています。"
    },
    {
      "indent": 3,
      "text": "An example of a typical negotiation process to establish printer pass-through mode of operation is shown below. In this example, the server initiates the negotiation by sending the DO TERMINAL-TYPE request.",
      "ja": "プリンタのパススルーモードを確立するための典型的な交渉プロセスの例を以下に示します。この例では、サーバーはDO端末タイプの要求を送信することにより、ネゴシエーションを開始します。"
    },
    {
      "indent": 3,
      "text": "For DBCS environments, if IBMTRANSFORM is set to 1 (use Host Print Transform), then the virtual device created is 3812, not 5553. Therefore, IBM-3812-1 should be negotiated for TERMINAL-TYPE, and not IBM-5553-B01.",
      "ja": "DBCS環境の場合、IBMTransformが1に設定されている場合（ホスト印刷変換を使用）、作成された仮想デバイスは5553ではなく3812です。。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server            Enhanced Telnet client\n--------------------------      --------------------------\nIAC DO NEW-ENVIRON         -->\n                           <--  IAC WILL NEW-ENVIRON\nIAC SB NEW-ENVIRON SEND\nVAR USERVAR IAC SE         -->\n                                IAC SB NEW-ENVIRON IS\n                                USERVAR \"DEVNAME\" VALUE \"PCPRINTER\"\n                                USERVAR \"IBMMSGQNAME\" VALUE \"QSYSOPR\"\n                                USERVAR \"IBMMSGQLIB\" VALUE \"*LIBL\"\n                                USERVAR \"IBMTRANSFORM\" VALUE \"0\"\n                                USERVAR \"IBMFONT\" VALUE \"12\"\n                                USERVAR \"IBMFORMFEED\" VALUE \"C\"\n                                USERVAR \"IBMPPRSRC1\" VALUE ESC '01'X\n                                USERVAR \"IBMPPRSRC2\" VALUE '04'X\n                                USERVAR \"IBMENVELOPE\" VALUE IAC 'FF'X\n                           <--  IAC SE\nIAC DO TERMINAL-TYPE       -->\n                           <--  IAC WILL TERMINAL-TYPE\nIAC SB TERMINAL-TYPE SEND\nIAC SE                     -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "                                IAC SB TERMINAL-TYPE IS IBM-3812-1\n                           <--  IAC SE\nIAC DO BINARY              -->\n                           <--  IAC WILL BINARY\nIAC DO EOR                 -->\n                           <--  IAC WILL EOR",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Some points about the above example. The IBMPPRSRC1 value requires escaping the value using ESC according to RFC 1572 [13]. The IBMPPRSRC2 does not require an ESC character since '04'X has no conflict with RFC 1572 options. Finally, to send 'FF'X for the IBMENVELOPE value, escape the 'FF'X value by using another 'FF'X (called \"doubling\"), so as not to have the value interpreted as a Telnet character per RFC 854 [8].",
      "ja": "上記の例に関するいくつかのポイント。IBMPPRSRC1値は、RFC 1572 [13]に従ってESCを使用して値を逃れる必要があります。IBMPPRSRC2は、 '04'xにはRFC 1572オプションと矛盾していないため、ESC文字を必要としません。最後に、ibmenvelope値に 'ff'xを送信するには、別のff'x（ \"doubling\"と呼ばれる）を使用して' ff'x値をエスケープします。8]。"
    },
    {
      "indent": 3,
      "text": "Actual bytes transmitted in the above example are shown in hex below.",
      "ja": "上記の例で送信された実際のバイトは、以下の16進数に示されています。"
    },
    {
      "indent": 3,
      "text": "AS/400 Telnet server             Enhanced Telnet client\n--------------------------       --------------------------\nFF FD 27                    -->\n                            <--  FF FB 27\nFF FA 27 01 00 03 FF F0     -->\n                                 FF FA 27 00 03 44 45 56\n                                 4E 41 4D 45 01 50 43 50\n                                 52 49 4E 54 45 52 03 49\n                                 42 4D 4D 53 47 51 4E 41\n                                 4D 45 01 51 53 59 53 4F\n                                 50 52 03 49 42 4D 4D 53\n                                 47 51 4C 49 42 01 2A 4C\n                                 49 42 4C 03 49 42 4D 54\n                                 52 41 4E 53 46 4F 52 4D\n                                 01 30 03 49 42 4D 46 4F\n                                 4E 54 01 31 32 03 49 42\n                                 4D 46 4F 52 4D 46 45 45\n                                 44 01 43 03 49 42 4D 50\n                                 50 52 53 52 43 31 01 02\n                                 01 03 49 42 4D 50 50 52\n                                 53 52 43 32 01 04 03 49\n                                 42 4D 45 4E 56 45 4C 4F\n                            <--  50 45 01 FF FF FF F0\nFF FD 18                    -->\n                            <--  FF FB 18\nFF FA 18 01 FF F0           -->\n                                 FF FA 18 00 49 42 4D 2D\n                            <--  33 38 31 32 2D 31 FF F0\nFF FD 00                    -->\n                            <--  FF FB 00\nFF FD 19                    -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 36,
      "text": "FF FB 19",
      "ja": "FF FB 19"
    },
    {
      "indent": 0,
      "text": "9. Telnet Printer Startup Response Record for Printer Emulators",
      "section_title": true,
      "ja": "9. プリンターエミュレーターのTelnetプリンタースタートアップ応答レコード"
    },
    {
      "indent": 3,
      "text": "Once Telnet negotiation for a 5250 pass-through mode is completed, the 5250 Telnet server will initiate a virtual printer power-on sequence on behalf of the Telnet client. The Telnet server will supply a Startup Response Record to the Telnet client with the status of the printer power-on sequence, indicating success or failure of the virtual printer power-on sequence.",
      "ja": "5250パススルーモードのTelnetネゴシエーションが完了すると、5250 Telnetサーバーは、Telnetクライアントに代わって仮想プリンターのパワーオンシーケンスを開始します。Telnetサーバーは、プリンターのパワーオンシーケンスのステータスでTelnetクライアントにスタートアップ応答レコードを提供し、仮想プリンターのパワーオンシーケンスの成功または失敗を示します。"
    },
    {
      "indent": 3,
      "text": "This section shows an example of two Startup Response Records. The source device is a type 3812 model 01 printer with name \"PCPRINTER\" on the target system \"TARGET\".",
      "ja": "このセクションは、2つのスタートアップ応答レコードの例を示しています。ソースデバイスは、ターゲットシステム「ターゲット」に「pcprinter」という名前のタイプ3812モデル01プリンターです。"
    },
    {
      "indent": 3,
      "text": "Figure 1 shows an example of a successful response; Figure 2 shows an example of an error response.",
      "ja": "図1は、応答が成功した例を示しています。図2は、エラー応答の例を示しています。"
    },
    {
      "indent": 0,
      "text": "9.1 Example of a Success Response Record",
      "section_title": true,
      "ja": "9.1 成功応答レコードの例"
    },
    {
      "indent": 3,
      "text": "The response record in Figure 1 was sent by an AS/400 at Release V4R2. It is an example of the target sending back a successful Startup Response Record.",
      "ja": "図1の応答記録は、リリースV4R2でAS/400によって送信されました。これは、ターゲットが成功したスタートアップ応答レコードを送り返す例です。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|       +-----  Pass-Through header                                |\n|       |          +---  Response data                             |\n|       |          |            +----  Start diagnostic information|\n|       |          |            |                                  |\n| +----------++----------++--------------------------------------- |\n| |          ||          ||                                        |\n| 004912A090000560060020C0003D0000C9F9F0F2E3C1D9C7C5E34040D7C3D7D9 |\n|                                 |      | T A R G E T     P C P R |\n|                                 +------+                         |\n|                           Response Code (I902)                   |\n|                                                                  |\n| ---------------------------------------------------------------- |\n|                                                                  |\n| C9D5E3C5D9400000000000000000000000000000000000000000000000000000 |\n|  I N T E R                                                       |\n|                                                                  |\n|                  +------- End of diagnostic information          |\n|                  |                                               |\n| -----------------+                                               |\n|                  |                                               |\n| 000000000000000000                                               |\n+------------------------------------------------------------------+\n Figure 1. Example of a success response record.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "- '0049'X = Length pass-through data, including this length field - '12A0'X = GDS LU6.2 header - '90000560060020C0003D0000'X = Fixed value fields - 'C9F9F0F2'X = Response Code (I902) - 'E3C1D9C7C5E34040'X = System Name (TARGET) - 'D7C3D7D9C9D5E3C5D940'X = Object Name (PCPRINTER)",
      "ja": "- '0049'x =この長さのフィールドを含む長さのパススルーデータ - ' 12a0'x = gds lu6.2ヘッダー -  '90000560060020c0003d0000'x =' c9f9f0f0f'x = response code（i902） -  'e3c1d9c7c5e34040'X =システム名（ターゲット） -  'D7C3D7D9C9D5E3C5D940'X =オブジェクト名（PCPRINTER）"
    },
    {
      "indent": 0,
      "text": "9.2 Example of an Error Response Record",
      "section_title": true,
      "ja": "9.2 エラー応答レコードの例"
    },
    {
      "indent": 3,
      "text": "The response record in Figure 2 is one that reports an error. The virtual device named \"PCPRINTER\", is not available on the target system \"TARGET\", because the device is not available. You would normally see this error if the printer was already assigned to another Telnet session.",
      "ja": "図2の応答記録は、エラーを報告するものです。「PCPRINTER」という名前の仮想デバイスは、デバイスが使用できないため、ターゲットシステム「ターゲット」で使用できません。通常、プリンターが別のTelnetセッションに割り当てられている場合、通常、このエラーが表示されます。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|       +-----  Pass-Through header                                |\n|       |          +---  Response data                             |\n|       |          |            +----  Start diagnostic information|\n|       |          |            |                                  |\n| +----------++----------++--------------------------------------- |\n| |          ||          ||                                        |\n| 004912A09000056006008200003D0000F8F9F0F2E3C1D9C7C5E34040D7C3D7D9 |\n|                                 |      | T A R G E T     P C P R |\n|                                 +------+                         |\n|                           Response Code (8902)                   |\n|                                                                  |\n| ---------------------------------------------------------------- |\n|                                                                  |\n| C9D5E3C5D9400000000000000000000000000000000000000000000000000000 |\n|  I N T E R                                                       |\n|                                                                  |\n|                  +------- End of diagnostic information          |\n|                  |                                               |\n| -----------------+                                               |\n|                  |                                               |\n| 000000000000000000                                               |\n+------------------------------------------------------------------+\n Figure 2. Example of an error response record.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "- '0049'X = Length pass-through data, including this length field - '12A0'X = GDS LU6.2 header - '90000560060020C0003D0000'X = Fixed value fields - 'F8F9F0F2'X = Response Code (8902) - 'E3C1D9C7C5E34040'X = System Name (TARGET) - 'D7C3D7D9C9D5E3C5D940'X = Object Name (PCPRINTER)",
      "ja": "- '0049'x =この長さのフィールドを含む長さのパススルーデータ - ' 12a0'x = gds lu6.2ヘッダー -  '90000560060020c0003d0000'x =固定値フィールド - ' f8f9f0f'x =応答コード（8902） -  'e3c1d9c7c5e34040'X =システム名（ターゲット） -  'D7C3D7D9C9D5E3C5D940'X =オブジェクト名（PCPRINTER）"
    },
    {
      "indent": 0,
      "text": "9.3 Response Codes",
      "section_title": true,
      "ja": "9.3 応答コード"
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record success response codes:",
      "ja": "起動応答レコード成功応答コード："
    },
    {
      "indent": 3,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\nI901    Virtual device has less function than source device\nI902    Session successfully started\nI906    Automatic sign-on requested, but not allowed.\n        Session still allowed; a sign-on screen will be\n        coming.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The Start-Up Response Record error response codes:",
      "ja": "起動応答レコードエラー応答コード："
    },
    {
      "indent": 3,
      "text": "CODE    DESCRIPTION\n----    ------------------------------------------------------\n2702    Device description not found.\n2703    Controller description not found.\n2777    Damaged device description.\n8901    Device not varied on.\n8902    Device not available.\n8903    Device not valid for session.\n8906    Session initiation failed.\n8907    Session failure.\n8910    Controller not valid for session.\n8916    No matching device found.\n8917    Not authorized to object.\n8918    Job canceled.\n8920    Object partially damaged.\n8921    Communications error.\n8922    Negative response received.\n8923    Start-up record built incorrectly.\n8925    Creation of device failed.\n8928    Change of device failed.\n8929    Vary on or vary off failed.\n8930    Message queue does not exist.\n8934    Start-up for S/36 WSF received.\n8935    Session rejected.\n8936    Security failure on session attempt.\n8937    Automatic sign-on rejected.\n8940    Automatic configuration failed or not allowed.\nI904    Source system at incompatible release.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "10. Printer Steady-State Pass-Through Interface",
      "section_title": true,
      "ja": "10. プリンター定常状態のパススルーインターフェイス"
    },
    {
      "indent": 3,
      "text": "The information in this section applies to the passthrough session after the receipt of startup confirmation records is complete.",
      "ja": "このセクションの情報は、スタートアップ確認記録の受領後にパススルーセッションに適用されます。"
    },
    {
      "indent": 3,
      "text": "Following is the printer header interface used by Telnet.",
      "ja": "Telnetが使用するプリンターヘッダーインターフェイスは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                 |\n|   |                                                              |\n|   |    +-- GDS identifier                                        |\n|   |    |                                                         |\n|   |    |    +-- Data flow record                                 |\n|   |    |    |                                                    |\n|   |    |    |   +-- Length of pass-through specific header (LL)  |\n|   |    |    |   |                                                |\n|   |    |    |   |   +-- Flags                                    |\n|   |    |    |   |   |                                            |\n|   |    |    |   |   |   +-- Printer operation code               |\n|   |    |    |   |   |   |                                        |\n|   |    |    |   |   |   |      +-- Diagnostic field - zero pad to|\n|   |    |    |   |   |   |      |   LL specified                  |\n|   |    |    |   |   |   |      |                                 |\n|   |    |    |   |   |   |      |            +-- Printer data     |\n|   |    |    |   |   |   |      |            |                    |\n| +--+ +--+ +--+ ++ +--+ ++ +----------+ +----------------+        |\n| |  | |  | |  | || |  | || |          | |                |        |\n| xxxx 12A0 xxxx xx xxxx xx xxxxxxxxxxxx ... print data ...        |\n|                                                                  |\n+------------------------------------------------------------------+\n Figure 3. Layout of the printer pass-through header",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "BYTES 0-1: Length of structure including this field (LLLL)",
      "ja": "バイト0-1：このフィールドを含む構造の長さ（LLLL）"
    },
    {
      "indent": 3,
      "text": "BYTES 2-3: GDS Identifier ('12A0'X)",
      "ja": "バイト2-3：GDS識別子（ '12a0'x）"
    },
    {
      "indent": 3,
      "text": "BYTE 4-5: Data flow record",
      "ja": "バイト4-5：データフローレコード"
    },
    {
      "indent": 16,
      "text": "This field contains flags that describe what type of data pass-through should expect to find following this header. Generally, bits 0-2 in the first byte are mutually exclusive (that is, if one of them is set to ' 1'B, the rest will be set to '0'B.) The bits, and their meanings follow.",
      "ja": "このフィールドには、このヘッダーに従って見つけることが期待されるデータパススルーの種類を説明するフラグが含まれています。一般に、最初のバイトのビット0-2は相互に排他的です（つまり、そのうちの1つが「1」に設定されている場合、残りは「0」に設定されます）。"
    },
    {
      "indent": 16,
      "text": "BIT DESCRIPTION",
      "ja": "ビット説明"
    },
    {
      "indent": 16,
      "text": "0 Start-Up confirmation 1 Termination record 2 Start-Up Record 3 Diagnostic information included 4 - 5 Reserved 6 Reserved 7 Printer record 8 - 13 Reserved 14 Client-originated (inbound) printer record 15 Server-originated (outbound) printer record",
      "ja": "0スタートアップ確認1終了レコード2スタートアップレコード3診断情報4-5予約6予約6プリンターレコード8-13予約14クライアントオリジネート（インバウンド）プリンターレコード15サーバーオリジネート（アウトバウンド）プリンターレコードレコード"
    },
    {
      "indent": 3,
      "text": "BYTE 6: Length printer pass-through header including this field (LL)",
      "ja": "バイト6：このフィールドを含む長さのプリンターパススルーヘッダー（LL）"
    },
    {
      "indent": 3,
      "text": "BYTES 7-8: Flags",
      "ja": "バイト7-8：フラグ"
    },
    {
      "indent": 5,
      "text": "BYTE 7 BITS:  xxxx x111 --> Reserved\n              xxxx 1xxx --> Last of chain\n              xxx1 xxxx --> First of chain\n              xx1x xxxx --> Printer now ready\n              x1xx xxxx --> Intervention Required\n              1xxx xxxx --> Error Indicator",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "BYTE 8 BITS:  xxxx xxxx --> Reserved",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "BYTE 9: Printer operation code",
      "ja": "バイト9：プリンター操作コード"
    },
    {
      "indent": 16,
      "text": "'01'X Print/Print complete '02'X Clear Print Buffers",
      "ja": "'01'x印刷/印刷complete' 02'xクリア印刷バッファー"
    },
    {
      "indent": 3,
      "text": "BYTE 10-LL: Diagnostic information (1)",
      "ja": "バイト10-ll：診断情報（1）"
    },
    {
      "indent": 5,
      "text": "If BYTE 7 = xx1x xxxx then bytes 10-LL may contain: Printer ready C9 00 00 00 02",
      "ja": "バイト7 = xx1x xxxxの場合、バイト10-llには次のものが含まれている場合があります。プリンター準備C9 00 00 00 02"
    },
    {
      "indent": 5,
      "text": "If BYTE 7 = x1xx xxxx then bytes 10-LL may contain: (2)\n   Command/parameter not valid  C9 00 03 02 2x\n   Print check                  C9 00 03 02 3x\n   Forms check                  C9 00 03 02 4x\n   Normal periodic condition    C9 00 03 02 5x\n   Data stream error            C9 00 03 02 6x\n   Machine/print/ribbon check   C9 00 03 02 8x",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "If BYTE 7 = 1xxx xxxx then bytes 10-LL may contain: (3) Cancel 08 11 02 00 Invalid print parameter 08 11 02 29 Invalid print command 08 11 02 28",
      "ja": "バイト7 = 1xxx xxxxの場合、バイト10-llには次のものが含まれる場合があります。（3）キャンセル08 11 02 00無効な印刷パラメーター08 11 02 29無効な印刷コマンド08 11 02 28"
    },
    {
      "indent": 3,
      "text": "Diagnostic information notes:",
      "ja": "診断情報メモ："
    },
    {
      "indent": 3,
      "text": "1. LL is the length of the structure defined in Byte 6. If no additional data is present, the remainder of the structure must be padded with zeroes.",
      "ja": "1. LLは、バイト6で定義された構造の長さです。追加のデータが存在しない場合、構造の残りの部分にゼロでパディングする必要があります。"
    },
    {
      "indent": 3,
      "text": "2. These are printer SIGNAL commands. Further information on these commands may be obtained from the 5494 Remote Control Unit Functions Reference guide [2]. Refer to your AS/400 printer documentation for more specific information on these data stream exceptions. Some 3812 and 5553 errors that may be seen:",
      "ja": "2. これらはプリンター信号コマンドです。これらのコマンドの詳細については、5494リモートコントロールユニット機能参照ガイド[2]から入手できます。これらのデータストリームの例外に関するより具体的な情報については、AS/400プリンターのドキュメントを参照してください。見られる可能性のある3812および5553のエラー："
    },
    {
      "indent": 7,
      "text": "Machine check              C9 00 03 02 11\nGraphics check             C9 00 03 02 26\nPrint check                C9 00 03 02 31\nForm jam                   C9 00 03 02 41\nPaper jam                  C9 00 03 02 47\nEnd of forms               C9 00 03 02 50\nPrinter not ready          C9 00 03 02 51\nData stream - class 1      C9 00 03 02 66 loss of text\nData stream - class 2      C9 00 03 02 67 text appearance\nData stream - class 3      C9 00 03 02 68 multibyte control error\nData stream - class 4      C9 00 03 02 69 multibyte control parm\nCover unexpectedly open    C9 00 03 02 81\nMachine check              C9 00 03 02 86\nMachine check              C9 00 03 02 87\nRibbon check               C9 00 03 02 88",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "3. These are printer negative responses. Further information on these commands may be obtained from the 5494 Remote Control Unit Functions Reference guide [2].",
      "ja": "3. これらはプリンターの負の応答です。これらのコマンドの詳細については、5494リモートコントロールユニット機能参照ガイド[2]から入手できます。"
    },
    {
      "indent": 7,
      "text": "The print data will start in byte LL+1.",
      "ja": "印刷データは、byte ll 1で開始されます。"
    },
    {
      "indent": 0,
      "text": "10.1 Example of a Print Record",
      "section_title": true,
      "ja": "10.1 印刷レコードの例"
    },
    {
      "indent": 3,
      "text": "Figure 4 shows the server sending the client data with a print record. This is normally seen following receipt of a Success Response Record, such as the example in Figure 1.",
      "ja": "図4は、サーバーが印刷レコードでクライアントデータを送信することを示しています。これは通常、図1の例など、成功応答記録の受領後に見られます。"
    },
    {
      "indent": 2,
      "text": "+--------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                   |\n|   |    +-- GDS identifier                                          |\n|   |    |    +-- Data flow record                                   |\n|   |    |    |   +-- Length of pass-through specific header (LL)    |\n|   |    |    |   |   +-- Flags                                      |\n|   |    |    |   |   |   +-- Printer operation code                 |\n|   |    |    |   |   |   |      +-- Zero pad to LL specified (0A)   |\n|   |    |    |   |   |   |      |            +-- Printer data       |\n|   |    |    |   |   |   |      |            |                      |\n| +--+ +--+ +--+ ++ +--+ ++ +----------+ +---------------------------|\n| |  | |  | |  | || |  | || |          | |                           |\n| 0085 12A0 0101 0A 1800 01 000000000000 34C4012BD20345FF2BD2044C0002|\n|                                                                    |\n| ------------------------------------------------------------       |\n|                                                                    |\n| 2BD2040D00002BD20A8501010201030204022BD20309022BD2061100014A       |\n|                                                                    |\n| ------------------------------------------------------------       |\n|                                                                    |\n| 402BD20601010000012BD306F60000FFFF2BD20A48000001000000010100       |\n|                                                                    |\n| ------------------------------------------------------------       |\n|                                                                    |\n| 2BD10705000B0090012BD2044900F02BD206404A403DE02BD2041500F034       |\n|                                                                    |\n|    end of printer data                                             |\n| -------------------------+                                         |\n|                          |                                         |\n| C4012BD10381FF002BC8034001                                         |\n+--------------------------------------------------------------------+\n Figure 4. Server sending client data with a print record",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "- '0085'X = Logical record length, including this byte (LLLL) - '12A0'X = GDS LU6.2 header - '0101'X = Data flow record (server to client) - '0A'X = Length of pass-through specific header (LL) - '1800'X = First of chain / Last of chain indicators - '01'X = Print - '000000000000'X = Zero pad header to LL specified - '34C401'X = First piece of data for spooled data - Remainder is printer data/commands/orders",
      "ja": "- '0085'x =このバイト（llll） - ' 12a0'x = gds lu6.2ヘッダー -  '0101'x =データフローレコード（サーバーからクライアント） - ' 0a'x =パスの長さ - 特定のヘッダー（ll） -  '1800'x =チェーンの最初の /最後のチェーンインジケーター - ' 01'x = print- '000000000000'x =ゼロパッドヘッダー指定 - ' 34c401'x =ファーストデータのデータスプールデータ - 残りはプリンターデータ/コマンド/注文です"
    },
    {
      "indent": 0,
      "text": "10.2 Example of a Print Complete Record",
      "section_title": true,
      "ja": "10.2 印刷の完全な記録の例"
    },
    {
      "indent": 3,
      "text": "Figure 5 shows the client sending the server a print complete record. This would normally follow receipt of a print record, such as the example in Figure 4. This indicates successful completion of a print request.",
      "ja": "図5は、クライアントがサーバーに印刷の完全なレコードを送信することを示しています。これは通常、図4の例のように、印刷記録の受領に続きます。これは、印刷要求の正常な完了を示しています。"
    },
    {
      "indent": 3,
      "text": "+-------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                  |\n|   |    +-- GDS identifier                                         |\n|   |    |    +-- Data flow record                                  |\n|   |    |    |   +-- Length of pass-through specific header (LL)   |\n|   |    |    |   |   +-- Flags                                     |\n|   |    |    |   |   |   +-- Printer operation code                |\n|   |    |    |   |   |   |                                         |\n| +--+ +--+ +--+ ++ +--+ ++                                         |\n| |  | |  | |  | || |  | ||                                         |\n| 000A 12A0 0102 04 0000 01                                         |\n+-------------------------------------------------------------------+\n Figure 5. Client sending server a print complete record",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "- '000A'X = Logical record length, including this byte (LLLL) - '12A0'X = GDS LU6.2 header - '0102'X = Data flow response record (client to server) - '04'X = Length of pass-through specific header (LL) - '0000'X = Good Response - '01'X = Print Complete",
      "ja": "- '000a'x =このバイト（llll） - ' 12a0'x = gds lu6.2ヘッダー -  '0102'x =データフロー応答レコード（クライアントからサーバー） - ' 04'x =パスの長さ - スルー特定のヘッダー（LL） -  '0000'x =良好な応答 - ' 01'x =印刷完了"
    },
    {
      "indent": 0,
      "text": "10.3 Example of a Null Print Record",
      "section_title": true,
      "ja": "10.3 ヌルプリントレコードの例"
    },
    {
      "indent": 3,
      "text": "Figure 6 shows the server sending the client a null print record. The null print record is the last print command the server sends to the client for a print job, and indicates to the printer there is no more data. The null data byte '00'X is optional, and in some cases may be omitted (in particular, this scenario occurs in DBCS print streams).",
      "ja": "図6は、サーバーがクライアントにヌルプリントレコードを送信することを示しています。Null Printレコードは、サーバーが印刷ジョブのためにクライアントに送信する最後の印刷コマンドであり、プリンターにこれ以上のデータがないことを示します。NULLデータバイト '00'Xはオプションであり、場合によっては省略される場合があります（特に、このシナリオはDBCSプリントストリームで発生します）。"
    },
    {
      "indent": 3,
      "text": "This example would normally follow any number of print records, such as the example in Figure 4. This indicates successful completion of a print job. The client normally responds to this null print record with another print complete record, such as in Figure 5.",
      "ja": "この例は通常、図4の例など、任意の数の印刷記録に従います。これは、印刷ジョブの正常な完了を示しています。クライアントは通常、このnullプリントレコードに、図5のような別の印刷記録で応答します。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------------------------------+\n|   +-- Length of structure (LLLL)                                 |\n|   |    +-- GDS identifier                                        |\n|   |    |    +-- Data flow record                                 |\n|   |    |    |   +-- Length of pass-through specific header (LL)  |\n|   |    |    |   |   +-- Flags                                    |\n|   |    |    |   |   |   +-- Printer operation code               |\n|   |    |    |   |   |   |      +-- Zero pad to LL specified (0A) |\n|   |    |    |   |   |   |      |        +-- Printer data         |\n|   |    |    |   |   |   |      |        |                        |\n| +--+ +--+ +--+ ++ +--+ ++ +----------+ ++                        |\n| |  | |  | |  | || |  | || |          | ||                        |\n| 0011 12A0 0101 0A 0800 01 000000000000 00                        |\n+------------------------------------------------------------------+\n Figure 6. Server sending client a null print record",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "- '0011'X = Logical record length, including this byte - '12A0'X = GDS LU6.2 header - '0101'X = Data flow record - '0A'X = Length of pass-through specific header (LL) - '0800'X = Last of Chain - '01'X = Print - '000000000000'X = Zero pad header to LL specified - '00'X = Null data byte",
      "ja": "- '0011'x =このバイトを含む論理レコード長 - ' 12a0'x = gds lu6.2ヘッダー -  '0101'x =データフローレコード - ' 0a'x =パススルー特定のヘッダー（ll） -  'の長さ0800'x = last of chain- '01'x = print-' 000000000000'x =ゼロパッドヘッダー指定 -  '00'x = null data byte"
    },
    {
      "indent": 0,
      "text": "11. End-to-End Print Example",
      "section_title": true,
      "ja": "11. エンドツーエンドの印刷の例"
    },
    {
      "indent": 3,
      "text": "The next example shows a full print exchange between a Telnet client and server for a 526 byte spooled file. Selective translation of the hexadecimal streams into 1) Telnet negotiations and 2) ASCII/EBCDIC characters are done to aid readability. Telnet negotiations are delimited by '(' and ')' parenthesis characters; ASCII/EBCDIC conversions are bracketed by '|' vertical bar characters.",
      "ja": "次の例では、526バイトのスプールされたファイルのTelnetクライアントとサーバー間の完全な印刷交換を示しています。1六分位のストリームの選択的翻訳は、1）Telnet交渉と2）ASCII/EBCDIC文字が読みやすくするために行われます。Telnetの交渉は、 '（' and '）'括弧文字によって区切られています。ASCII/EBCDIC変換は '|'によって括弧で囲まれています垂直バー文字。"
    },
    {
      "indent": 1,
      "text": "AS/400 Telnet server                Enhanced Telnet client\n-------------------------------     ---------------------------------\nFFFD27                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(IAC DO NEW-ENVIRON) <-- FFFB27",
      "ja": "（iac do new-environ）<-fffb27"
    },
    {
      "indent": 37,
      "text": "(IAC WILL NEW-ENVIRON)",
      "ja": "（IACはニューエンヴィロンになります）"
    },
    {
      "indent": 1,
      "text": "FFFD18FFFA270103 49424D5253454544\n7EA5DFDDFD300404 0003FFF0       -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(IAC DO TERMINAL-TYPE IAC SB NEW-ENVIRON SEND USERVAR IBMRSEED xxxxxxxx VAR USERVAR IAC SE)",
      "ja": "（IAC do terminal-type iac sb new-environ send uservar ibmrseed xxxxxxxx var uservar iac se）"
    },
    {
      "indent": 33,
      "text": "<-- FFFB18",
      "ja": "<-fffb18"
    },
    {
      "indent": 37,
      "text": "(IAC WILL TERMINAL-TYPE)",
      "ja": "（IACはターミナルタイプになります）"
    },
    {
      "indent": 1,
      "text": "FFFA1801FFF0                    -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(IAC SB TERMINAL-TYPE SEND IAC SE)",
      "ja": "（IAC SBターミナルタイプの送信IAC SE）"
    },
    {
      "indent": 33,
      "text": " FFFA27000349424D 52534545447EA5DF DDFD300404000344 45564E414D450144 554D4D5950525403 49424D4D5347514E 414D450151535953 4F50520349424D4D 5347514C4942012A 4C49424C0349424D 464F4E5401313103 49424D5452414E53 464F524D01310349 424D4D4652545950 4D444C012A485049 490349424D505052 5352433101020103 49424D5050525352 433201040349424D 454E56454C4F5045 01FFFF0349424D41 5343494938393901 <-- 30FFF0",
      "ja": "FFFA27000349424D 52534545447EA5DF DDFD300404000344 45564E414D450144 554D4D5950525403 49424D4D5347514E 414D450151535953 4F50520349424D4D 5347514C4942012A 4C49424C0349424D 464F4E5401313103 49424D5452414E53 464F524D01310349 424D4D4652545950 4D444C012A485049 490349424D505052 5352433101020103 49424D5050525352 433201040349424D 454E56454C4F5045 01FFFF0349424D41 5343494938393901 <-- 30FFF0"
    },
    {
      "indent": 37,
      "text": "(IAC SB NEW-ENVIRON IS USERVAR IBMRSEED xxxxxxxx VAR USERVAR DEVNAME VALUE DUMMYPRT USERVAR IBMMSGQNAME VALUE QSYSOPR USERVAR IBMMSGQLIB VALUE *LIBL USERVAR IBMFONT VALUE 11 USERVAR IBMTRANSFORM VALUE 1 USERVAR IBMMFRTYPMDL VALUE *HPII USERVAR IBMPPRSRC1 VALUE ESC '01'X USERVAR IBMPPRSRC2 VALUE '04'X USERVAR IBMENVELOPE VALUE IAC USERVAR IBMASCII899 VALUE 0 IAC SE)",
      "ja": "（IAC SB New-EnvironはUservar Ibmrseed xxxxxxxxxx var uservar devname value dummyprt uservar ibmmsgqname value qsysopr uservar ibmmsgqlib value *libl uservar ibmfont valuati Value ESC '01'X USERVAR IBMPPRSRC2 Value '04'x uservar ibmenvelope値iac uservar ibmascii899 value 0 iac se）"
    },
    {
      "indent": 33,
      "text": "<-- FFFA180049424D2D 333831322D31FFF0",
      "ja": "<-fffa180049424d2d 333831322d31fff0"
    },
    {
      "indent": 1,
      "text": "                                    (IAC SB TERMINAL-TYPE IS\n                                     IBM-3812-1 IAC SE)\nFFFD19                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(IAC DO EOR) <-- FFFB19",
      "ja": "（iac do eor）<-fffb19"
    },
    {
      "indent": 37,
      "text": "(IAC WILL EOR)",
      "ja": "（IACはeor）"
    },
    {
      "indent": 1,
      "text": "FFFB19                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(IAC WILL EOR) <-- FFFD19",
      "ja": "（iac will eor）<-fffd19"
    },
    {
      "indent": 1,
      "text": "                                    (IAC DO EOR)\nFFFD00                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(IAC DO BINARY) <-- FFFB00",
      "ja": "（iac do binary）<-fffb00"
    },
    {
      "indent": 1,
      "text": "                                    (IAC WILL BINARY)\nFFFB00                          -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(IAC WILL BINARY) <-- FFFD00",
      "ja": "（IACはバイナリ）<-fffd00"
    },
    {
      "indent": 37,
      "text": "(IAC DO BINARY)",
      "ja": "（IACはバイナリを行います）"
    },
    {
      "indent": 1,
      "text": "004912A090000560 060020C0003D0000     |       -   {    |\nC9F9F0F2C5D3C3D9 E3D7F0F6C4E4D4D4     |I902ELCRTP06DUMM| (EBCDIC)\nE8D7D9E340400000 0000000000000000     |YPRT            |\n0000000000000000 0000000000000000     |                |\n0000000000000000 00FFEF           --> |                |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(73-byte startup success response\n record ... IAC EOR)\n00DF12A001010A18 0001000000000000     |                |\n03CD1B451B283130 551B287330703130     |   E (10U (s0p10| (ASCII)\n2E30306831327630 733062303033541B     |.00h12v0s0b003T |\n287330421B266440 1B266C304F1B266C     |(s0B &d@ &l0O &l|\n303038431B266C30 3035431B28733070     |008C &l005C (s0p|\n31372E3130683130 7630733062303030     |17.10h10v0s0b000|\n541B283130551B28 73307031372E3130     |T (10U (s0p17.10|\n6831307630733062 303030541B287330     |h10v0s0b000T (s0|\n421B2664401B266C 314F1B266C303035     |B &d@ &l1O &l005|\n431B287330703137 2E31306831307630     |C (s0p17.10h10v0|\n733062303030541B 266C314F1B287330     |s0b000T &l1O (s0|\n7031372E31306831 3076307330623030     |p17.10h10v0s0b00|\n30541B2873307031 372E313068313076     |0T (s0p17.10h10v|\n3073306230303054 1B266C30303543FF     |0s0b000T &l005C |\nEF                                --> |                |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(... 223-byte print record ... ... first of chain ... ... last of chain ... IAC EOR)",
      "ja": "（... 223バイトの印刷記録... ...チェーンの最初... ...最後のチェーン... IAC EOR）"
    },
    {
      "indent": 35,
      "text": "<-- 000A12A001020400 0001FFEF",
      "ja": "<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 1,
      "text": "                                      (10-byte print complete header)\n031012A001010A10 0001000000000000     |                |\n03FFFF1B451B2831 30551B2873307031     |    E (10U (s0p1| (ASCII)\n372E313068313076 3073306230303054     |7.10h10v0s0b000T|\n1B287330421B2664 401B266C314F1B26     | (s0B &d@ &l1O &|\n6C303035431B266C 31481B266C314F1B     |l005C &l1H &l1O |\n266C3032411B266C 31431B266C303030     |&l02A &l1C &l000|\n38451B266C303038 431B266C30303439     |8E &l008C &l0049|\n461B266130521B26 6C303035430A0A0A     |F &a0R &l005C   |\n0A0A0A0A1B26612B 3030303130561B26     |     &a+00010V &|\n6C303035431B2661 2B30303231364820     |l005C &a+00216H |\n2020202020202020 2020202020202020     |                |\n2020202020205072 696E74204B657920     |      Print Key |\n4F75747075742020 2020202020202020     |Output          |\n2020202020202020 2020202020202020     |                |\n2020202020205061 6765202020310D0A     |      Page   1  |\n1B26612B30303231 3648202020203537     | &a+00216H    57|\n3639535331205634 52334D3020393830     |69SS1 V4R3M0 980|\n373203FFFF392020 2020202020202020     |72   9          |\n202020202020454C 4352545030362020     |      ELCRTP06  |\n2020202020202020 202030332F33312F     |          03/31/|\n3939202031363A33 303A34350D0A1B26     |99  16:30:45   &|\n612B303032313648 0D0A1B26612B3030     |a+00216H   &a+00|\n3231364820202020 446973706C617920     |216H    Display |\n4465766963652020 2E202E202E202E20     |Device  . . . . |\n2E203A2020515041 444556303033510D     |. :  QPADEV003Q |\n0A1B26612B303032 3136482020202055     |  &a+00216H    U|\n73657220202E202E 202E202E202E202E     |ser  . . . . . .|\n202E202E202E202E 203A202052434153     | . . . . :  RCAS|\n54524F0D0A1B2661 2B3030323136480D     |TRO   &a+00216H |\n0A1B26612B303032 313648204D41494E     |  &a+00216H MAIN|\n2020202020202020 2020202020202020     |                |\n2020202020202020 20202041532F3430     |           AS/40|\n30204D61696E204D 656E750D0A1B2661     |0 Main Menu   &a|\n2B30303203FFFF31 3648202020202020     |+002   16H      |\n2020202020202020 2020202020202020     |                |\n2020202020202020 2020202020202020     |                |\n2020202020202020 2020202020202020     |                |\n2020202020202053 797374656D3A2020     |       System:  |\n20454C4352545030 360D0A1B26612B30     | ELCRTP06   &a+0|\n3032313648205365 6C656374206F6E65     |0216H Select one|\n206F662074686520 666F6C6C6F77696E     | of the followin|\n673A0D0A1B26612B 3030323136480D0A     |g:   &a+00216H  |\n1B26612B30303231 3648202020202020     | &a+00216H      |\n312E205573657220 7461736B730D0A1B     |1. User tasks   |\n26612B3030323136 4820202020202032     |&a+00216H      2|",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "2E204F6666696365 207461736B730D0A |. Office tasks | 1B26612B30303231 36480D0A1B26612B | &a+00216H &a+| 3030323136482020 20202020342E2046 |00216H 4. F| 696C65732C206C69 627261726965732C |iles, libraries,| 20616EFFEF | an |",
      "ja": "2E204F6666696365 207461736B730D0A |。オフィスタスク|1B26612B30303231 36480D0A1B26612B |＆A 00216H＆A |303032313648202020202020342E2046 | 00216H 4. f |696C65732C206C69 627261726965732C | ILES、ライブラリ、|20616EFFEF ||"
    },
    {
      "indent": 1,
      "text": "(... 784-byte print record ... ... first of chain ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 784-byte Print Record ... ...最初のチェーン... IAC EOR）<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 39,
      "text": "(10-byte print complete header)",
      "ja": "（10バイト印刷完全ヘッダー）"
    },
    {
      "indent": 1,
      "text": "020312A001010A00 0001000000000000     |                |\n64206603FFFF6F6C 646572730D0A1B26     |d f   olders   &| (ASCII)\n612B303032313648 0D0A1B26612B3030     |a+00216H   &a+00|\n3231364820202020 2020362E20436F6D     |216H      6. Com|\n6D756E6963617469 6F6E730D0A1B2661     |munications   &a|\n2B3030323136480D 0A1B26612B303032     |+00216H   &a+002|\n3136482020202020 20382E2050726F62     |16H      8. Prob|\n6C656D2068616E64 6C696E670D0A1B26     |lem handling   &|\n612B303032313648 202020202020392E     |a+00216H      9.|\n20446973706C6179 2061206D656E750D     | Display a menu |\n0A1B26612B303032 3136482020202020     |  &a+00216H     |\n31302E20496E666F 726D6174696F6E20     |10. Information |\n417373697374616E 74206F7074696F6E     |Assistant option|\n730D0A1B26612B30 3032313648202020     |s   &a+00216H   |\n202031312E20436C 69656E7420416363     |  11. Client Acc|\n6573732F34303020 7461736B730D0A1B     |ess/400 tasks   |\n26612B3030323136 480D0A1B26612B30     |&a+00216H   &a+0|\n303231364803ED20 2020202039302E20     |0216H       90. |\n5369676E206F6666 0D0A1B26612B3030     |Sign off   &a+00|\n323136480D0A1B26 612B303032313648     |216H   &a+00216H|\n2053656C65637469 6F6E206F7220636F     | Selection or co|\n6D6D616E640D0A1B 26612B3030323136     |mmand   &a+00216|\n48203D3D3D3E0D0A 1B26612B30303231     |H ===>   &a+0021|\n36480D0A1B26612B 3030323136482046     |6H   &a+00216H F|\n333D457869742020 2046343D50726F6D     |3=Exit   F4=Prom|\n707420202046393D 5265747269657665     |pt   F9=Retrieve|\n2020204631323D43 616E63656C202020     |   F12=Cancel   |\n4631333D496E666F 726D6174696F6E20     |F13=Information |\n417373697374616E 740D0A1B26612B30     |Assistant   &a+0|\n3032313648204632 333D53657420696E     |0216H F23=Set in|\n697469616C206D65 6E750D0A1B26612B     |itial menu   &a+|\n3030323136480D0A 1B26612B30303231     |00216H   &a+0021|\n36480D0CFFEF                          |6H              |",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(... 515-byte print record ... IAC EOR)",
      "ja": "（... 515バイト印刷記録... IAC EOR）"
    },
    {
      "indent": 35,
      "text": "<-- 000A12A001020400 0001FFEF",
      "ja": "<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 1,
      "text": "                                      (10-byte print complete header)\n001412A001010A00 0001000000000000     |                |\n03021B45FFEF                          |   E            |  (ASCII)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(... 20-byte print record ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 20バイト印刷記録... IAC EOR）<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 1,
      "text": "                                      (10-byte print complete header)\n001112A001010A08 0001000000000000\n00FFEF                            -->",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 1,
      "text": "(... 17-byte NULL print record ... ... last of chain ... IAC EOR) <-- 000A12A001020400 0001FFEF",
      "ja": "（... 17バイトヌルプリントレコード... ...最後のチェーン... IAC EOR）<-000A12A001020400 0001FFEF"
    },
    {
      "indent": 39,
      "text": "(10-byte print complete header)",
      "ja": "（10バイト印刷完全ヘッダー）"
    },
    {
      "indent": 0,
      "text": "12. Authors' Note",
      "section_title": true,
      "ja": "12. 著者のメモ"
    },
    {
      "indent": 3,
      "text": "Discussion of this memo should occur in one of these mailing lists:",
      "ja": "このメモの議論は、これらのメーリングリストのいずれかに記載されているはずです。"
    },
    {
      "indent": 6,
      "text": "TN3270E List (Roger Fajman raf@cu.nih.gov). Send subscription requests as e-mail with \"subscribe tn3270e your_full_name\" to listserv@list.nih.gov.",
      "ja": "TN3270Eリスト（roger fajman raf@cu.nih.gov）。subscription requestsを電子メールとして送信します。"
    },
    {
      "indent": 6,
      "text": "Midrange-L List (David Gibbs david@midrange.com). Send subscription requests as email with \"subscribe midrange-l your_internet_address\" to majordomo@midrange.com.",
      "ja": "Midrange-Lリスト（David Gibbs David@midrange.com）。サブスクリプションリクエストを「subscribe midrange-l your_internet_address」を含むメールとしてmajordomo@midrange.comに送信します。"
    },
    {
      "indent": 6,
      "text": "Telnet Working Group Mailing List: Send subscription requests as email with \"subscribe telnet-ietf\" to telnet-ietf-request@bsdi.com.",
      "ja": "Telnetワーキンググループメーリングリスト：サブスクリプションリクエストを電子メールとして送信して、「subscribe telnet-ietf」をTelnet-iet-request@bsdi.comに送信します。"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "ja": "13. 参考文献"
    },
    {
      "indent": 3,
      "text": "[1] IBM, \"IBM 5250 Information Display System, Functions Reference Manual\", SA21-9247-6, March 1987.",
      "ja": "[1] IBM、「IBM 5250情報表示システム、機能参照マニュアル」、SA21-9247-6、1987年3月。"
    },
    {
      "indent": 3,
      "text": "[2] IBM, \"5494 Remote Control Unit, Functions Reference\", SC30- 3533-04, August 1995.",
      "ja": "[2] IBM、「5494リモートコントロールユニット、関数リファレンス」、SC30- 3533-04、1995年8月。"
    },
    {
      "indent": 3,
      "text": "[3] IBM, \"AS/400 System API Reference\", SC41-5801-01, February 1998.",
      "ja": "[3] IBM、「AS/400システムAPIリファレンス」、SC41-5801-01、1998年2月。"
    },
    {
      "indent": 3,
      "text": "[4] IBM, \"AS/400 TCP/IP Configuration and Reference\", SC41-5420-02, September 1998.",
      "ja": "[4] IBM、「AS/400 TCP/IP構成と参照」、SC41-5420-02、1998年9月。"
    },
    {
      "indent": 3,
      "text": "[5] IBM, \"AS/400 Communications Configuration\", SC41-5401-00, August 1997.",
      "ja": "[5] IBM、「AS/400通信構成」、SC41-5401-00、1997年8月。"
    },
    {
      "indent": 3,
      "text": "[6] IBM, \"SNA Formats\", GA27-3136-13, November 1993.",
      "ja": "[6] IBM、「SNAフォーマット」、GA27-3136-13、1993年11月。"
    },
    {
      "indent": 3,
      "text": "[7] IBM, \"Using the Pageprinter 3812 with System/36 or System/38\", S544-3343-01, September 1997.",
      "ja": "[7] IBM、「System/36またはSystem/38を使用してPagePrinter 3812を使用する」、S544-3343-01、1997年9月。"
    },
    {
      "indent": 3,
      "text": "[8] Postel, J. and J. Reynolds, \"Telnet Protocol Specification\", STD 8, RFC 854, May 1983.",
      "ja": "[8] Postel、J。およびJ. Reynolds、「Telnetプロトコル仕様」、STD 8、RFC 854、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[9] Postel, J. and J. Reynolds, \"Telnet Option Specifications\", STD 8, RFC 855, May 1983.",
      "ja": "[9] Postel、J。およびJ. Reynolds、「Telnetオプション仕様」、STD 8、RFC 855、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[10] Postel, J. and J. Reynolds, \"Telnet Binary Transmission\", STD 27, RFC 856, May 1983.",
      "ja": "[10] Postel、J。およびJ. Reynolds、「Telnetバイナリ伝送」、STD 27、RFC 856、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[11] VanBokkeln, J., \"Telnet Terminal-Type Option\", RFC 1091, February 1989.",
      "ja": "[11] Vanbokkeln、J。、「Telnetターミナルタイプオプション」、RFC 1091、1989年2月。"
    },
    {
      "indent": 3,
      "text": "[12] Postel, J. and J. Reynolds, \"Telnet End of Record Option\", RFC 885, December 1983.",
      "ja": "[12] Postel、J。およびJ. Reynolds、「Telnet end of Record Option」、RFC 885、1983年12月。"
    },
    {
      "indent": 3,
      "text": "[13] Alexander, S., \"Telnet Environment Option\", RFC 1572, January 1994.",
      "ja": "[13] Alexander、S。、「Telnet Environment Option」、RFC 1572、1994年1月。"
    },
    {
      "indent": 3,
      "text": "[14] Chmielewski, P., \"5250 Telnet Interface\", RFC 1205, February 1991.",
      "ja": "[14] Chmielewski、P。、「5250 Telnet Interface」、RFC 1205、1991年2月。"
    },
    {
      "indent": 3,
      "text": "[15] Postel, J. and J. Reynolds, \"Telnet Supress Go Ahead Option\", STD 29, RFC 858, May 1983.",
      "ja": "[15] Postel、J。およびJ. Reynolds、「Telnet Supress Go Afry Option」、STD 29、RFC 858、1983年5月。"
    },
    {
      "indent": 3,
      "text": "[16] IBM, \"AS/400 National Language Support\", SC41-5101-01, February 1998.",
      "ja": "[16] IBM、「AS/400 National Language Support」、SC41-5101-01、1998年2月。"
    },
    {
      "indent": 3,
      "text": "[17] Data Encryption Standard (DES), Federal Information Processing Standards Publication 46-2, January 22, 1988.",
      "ja": "[17] データ暗号化標準（DES）、連邦情報処理標準出版46-2、1988年1月22日。"
    },
    {
      "indent": 3,
      "text": "[18] DES Modes of Operation, Federal Information Processing Standards Publication 81, December 1980.",
      "ja": "[18] DESモードオブオペレーション、連邦情報処理基準出版81、1980年12月。"
    },
    {
      "indent": 3,
      "text": "[19] Reynolds, J. and J. Postel, \"Assigned Numbers\", STD 2, RFC 1700, October 1994.",
      "ja": "[19] Reynolds、J。およびJ. Postel、「割り当てられた番号」、STD 2、RFC 1700、1994年10月。"
    },
    {
      "indent": 3,
      "text": "[20] IBM, \"IBM Pageprinter 3812 Programming Reference\", S544-3268.",
      "ja": "[20] IBM、「IBM PagePrinter 3812プログラミングリファレンス」、S544-3268。"
    },
    {
      "indent": 0,
      "text": "14. Security Considerations",
      "section_title": true,
      "ja": "14. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Security considerations of passwords are discussed in Section 6.",
      "ja": "パスワードのセキュリティ上の考慮事項については、セクション6で説明します。"
    },
    {
      "indent": 0,
      "text": "15. Authors' Addresses",
      "section_title": true,
      "ja": "15. 著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Thomas E. Murphy, Jr. IBM Corporation 1701 North Street Endicott, NY 13760",
      "ja": "トーマス・E・マーフィー、Jr。IBMCorporation 1701 North Street Endicott、NY 13760"
    },
    {
      "indent": 3,
      "text": "Phone: (607) 752-5482 Fax: (607) 752-5421 EMail: murphyte@us.ibm.com",
      "ja": "電話：（607）752-5482ファックス：（607）752-5421メール：murphyte@us.ibm.com"
    },
    {
      "indent": 3,
      "text": "Paul F. Rieth IBM Corporation 1701 North Street Endicott, NY 13760",
      "ja": "Paul F. Rieth IBM Corporation 1701 North Street Endicott、NY 13760"
    },
    {
      "indent": 3,
      "text": "Phone: (607) 752-5474 Fax: (607) 752-5421 EMail: rieth@us.ibm.com",
      "ja": "電話：（607）752-5474ファックス：（607）752-5421メール：rieth@us.ibm.com"
    },
    {
      "indent": 3,
      "text": "Jeffrey S. Stevens IBM Corporation 1701 North Street Endicott, NY 13760",
      "ja": "ジェフリー・S・スティーブンス・イブ・コーポレーション1701ノース・ストリート・エンディコット、ニューヨーク13760"
    },
    {
      "indent": 3,
      "text": "Phone: (607) 752-5488 Fax: (607) 752-5421 EMail: jssteven@us.ibm.com",
      "ja": "電話：（607）752-5488ファックス：（607）752-5421メール：jssteven@us.ibm.com"
    },
    {
      "indent": 0,
      "text": "16. Relation to Other RFC's",
      "section_title": true,
      "ja": "16. 他のRFCとの関係"
    },
    {
      "indent": 3,
      "text": "UPDATES",
      "ja": "更新"
    },
    {
      "indent": 6,
      "text": "This memo is an update to RFC 1205 [14], which describes the 5250 Telnet Interface. This update enhances that description to include device negotiation as well as printer support.",
      "ja": "このメモは、5250 Telnetインターフェイスを説明するRFC 1205 [14]の更新です。このアップデートは、その説明を強化して、デバイスのネゴシエーションとプリンターのサポートを含むようにします。"
    },
    {
      "indent": 6,
      "text": "This memo makes use of RFC 1572 [13] to enhance communications with 5250 Telnet clients. RFC 1572 is currently on the Standards Track as a Proposed Standard, and is listed in Assigned Numbers [19].",
      "ja": "このメモでは、RFC 1572 [13]を使用して、5250のTelnetクライアントとのコミュニケーションを強化しています。RFC 1572は現在、提案された標準として標準トラックに載っており、割り当てられた数字[19]にリストされています。"
    },
    {
      "indent": 0,
      "text": "17. Full Copyright Statement",
      "section_title": true,
      "ja": "17. 完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2000）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があります。また、それについてコメントまたは説明する派生作品、またはその実装を支援することは、いかなる種類の制限なしに、準備、コピー、公開、および部分的に配布される場合があります。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書と本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}