{
  "title": {
    "text": "RFC 2834 - ARP and IP Broadcast over HIPPI-800",
    "ja": "RFC 2834 - HIPPI-800でARPとIP放送"
  },
  "number": 2834,
  "created_at": "2024-01-23 07:17:11.830842+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                        J.-M. Pittet\nRequest for Comments: 2834                          Silicon Graphics Inc.\nObsoletes: 1374                                                  May 2000\nCategory: Standards Track",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 18,
      "text": "ARP and IP Broadcast over HIPPI-800",
      "ja": "HIPPI-800でARPとIP放送"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の現在のエディションを参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2000）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This document specifies a method for resolving IP addresses to ANSI High-Performance Parallel Interface (HIPPI) hardware addresses and for emulating IP broadcast in a logical IP subnet (LIS) as a direct extension of HARP. This memo defines a HARP that will interoperate between HIPPI-800 and HIPPI-6400 (also known as Gigabyte System Network, GSN). This document (when combined with RFC-2067 \"IP over HIPPI\") obsoletes RFC-1374.",
      "ja": "このドキュメントは、IPアドレスをANSI高性能並列インターフェイス（HIPPI）ハードウェアアドレスに解決し、HARPの直接拡張として論理IPサブネット（LIS）でIPブロードキャストをエミュレートする方法を指定します。このメモは、HIPPI-800とHIPPI-6400（Gigabyte System Network、GSNとしても知られている）の間で相互操作するHARPを定義します。このドキュメント（RFC-2067 \"IP over Hippi\"と組み合わせた場合）RFC-1374"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . .   2\n2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3\n3.  Definitions . . . . . . . . . . . . . . . . . . . . . . .   3\n    3.1 Global Concepts . . . . . . . . . . . . . . . . . . .   3\n    3.2 Glossary  . . . . . . . . . . . . . . . . . . . . . .   3\n4.  IP Subnetwork Configuration . . . . . . . . . . . . . . .   5\n    4.1 Background  . . . . . . . . . . . . . . . . . . . . .   5\n    4.2 HIPPI LIS Requirements  . . . . . . . . . . . . . . .   6\n5.  HIPPI Address Resolution Protocol - HARP  . . . . . . . .   7\n    5.1 HARP Algorithm  . . . . . . . . . . . . . . . . . . .   8\n        5.1.1 Selecting the authoritative HARP service  . . .   8\n        5.1.2 HARP registration phase . . . . . . . . . . . .   9\n        5.1.3 HARP operational phase  . . . . . . . . . . . .  10\n5.2 HARP Client Operational Requirements  . . . . . . . . . .  11\n    5.3 Receiving Unknown HARP Messages . . . . . . . . . . .  12\n    5.4 HARP Server Operational Requirements  . . . . . . . .  12\n       5.5 HARP and Permanent ARP Table Entries  . . . . . . . .  14\n    5.6 HARP Table Aging  . . . . . . . . . . . . . . . . . .  14\n6.  HARP Message Encoding . . . . . . . . . . . . . . . . . .  15\n    6.1 HIPPI-LE Header of HARP Messages  . . . . . . . . . .  15\n        6.1.1 IEEE 802.2 LLC  . . . . . . . . . . . . . . . .  16\n        6.1.2 SNAP  . . . . . . . . . . . . . . . . . . . . .  16\n        6.1.3 Diagram . . . . . . . . . . . . . . . . . . . .  17\n    6.2 HIPPI Hardware Address Formats and Requirements . . .  18\n        6.2.1 48-bit Universal LAN MAC Addresses  . . . . . .  18\n    6.3 HARP and InHARP Message Formats . . . . . . . . . . .  19\n        6.3.1 Example Message encodings . . . . . . . . . . .  22\n        6.3.2 HARP_NAK message format . . . . . . . . . . . .  22\n        6.3.3 Combined HIPPI-LE and HARP message addresses  .  22\n7.  Broadcast and Multicast . . . . . . . . . . . . . . . . .  23\n    7.1 Protocol for an IP Broadcast Emulation Server - PIBES  23\n    7.2 IP Broadcast Address  . . . . . . . . . . . . . . . .  24\n    7.3 IP Multicast Address  . . . . . . . . . . . . . . . .  24\n    7.4 A Note on Broadcast Emulation Performance . . . . . .  24\n8.  HARP for Scheduled Transfer Protocol  . . . . . . . . . .  25\n9.  Discovery of One's Own Switch Address . . . . . . . . . .  25\n10. Security Considerations . . . . . . . . . . . . . . . . .  26\n11. Open Issues . . . . . . . . . . . . . . . . . . . . . . .  26\n12. HARP Examples . . . . . . . . . . . . . . . . . . . . . .  26\n    12.1 Registration Phase of Client Y on Non-broadcast HW .  27\n    12.2 Registration Phase of Client Y on Broadcast Hardware  28\n    12.3 Operational Phase (phase II) . . . . . . . . . . . .  28\n         12.3.1 Standard successful HARP_Resolve example  . .  29\n         12.3.2 Standard non-successful HARP_Resolve example   30\n13. References  . . . . . . . . . . . . . . . . . . . . . . .  31\n14. Acknowledgments . . . . . . . . . . . . . . . . . . . . .  32\n15. Changes from RFC-1374 . . . . . . . . . . . . . . . . . .  32\n16. Author's Address  . . . . . . . . . . . . . . . . . . . .  33\n17. Full Copyright Statement  . . . . . . . . . . . . . . . .  34",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The ANSI High-Performance Parallel Interface (HIPPI) is a dual simplex data channel. HIPPI can send and receive data simultaneously at 800 or 1600 megabits per second. Between 1987 and 1997, the ANSI X3T11.1 HIPPI working group (now known as NCITS T11.1) Standardized five documents that bear on the use of HIPPI as a network interface. They cover the physical and electrical specification (HIPPI-PH [1]), the framing of a stream of bytes (HIPPI-FP [2]), encapsulation of IEEE 802.2 LLC (HIPPI-LE [3]), the behavior of a physical layer switch (HIPPI-SC [4]) and the physical-level and optical specification (HIPPI-Serial [5]). HIPPI-LE also implies the encapsulation of Internet Protocol[5]. The reader should be familiar with the ANSI HIPPI documents. Approved ANSI NCITS standards are available from ANSI (http://www.ansi.org). The working documents of the T11.1 working group may be obtained from the T11 web page (http://www.t11.org/).",
      "ja": "ANSI高性能パラレルインターフェイス（HIPPI）は、デュアルシンプレックスデータチャネルです。Hippiは、1秒あたり800または1600メガビットで同時にデータを送信および受信できます。1987年から1997年の間に、ANSI X3T11.1 HIPPIワーキンググループ（現在はNCITS T11.1として知られています）は、ネットワークインターフェイスとしてのHippiの使用に耐える5つのドキュメントを標準化しました。物理的および電気仕様（HIPPI-PH [1]）、バイトの流れのフレーミング（HIPPI-FP [2]）、IEEE 802.2 LLCのカプセル化（HIPPI-LE [3]）、物理層スイッチ（Hippi-SC [4]）および物理レベルおよび光学仕様（Hippi-Serial [5]）。Hippi-leは、インターネットプロトコルのカプセル化も意味します[5]。読者は、ANSI Hippiドキュメントに精通している必要があります。承認されたANSI NCITS標準は、ANSI（http://www.ansi.org）から入手できます。T11.1ワーキンググループの作業文書は、T11 Webページ（http://www.t11.org/）から取得できます。"
    },
    {
      "indent": 3,
      "text": "HIPPI switches can be used to connect a variety of computers and peripheral equipment for many purposes, but the working group stopped short of describing their use as Local Area Networks. RFC-2067 [15] describes the encapsulation of IP over HIPPI-800. This memo takes up where the working group and RFC-2067 [15] left off and defines address resolution and LIS IP broadcast emulation for HIPPI-800 networks.",
      "ja": "HIPPIスイッチは、さまざまなコンピューターと周辺機器を多くの目的で接続するために使用できますが、ワーキンググループは、ローカルエリアネットワークとしての使用を説明することを停止しました。RFC-2067 [15]は、HIPPI-800を介したIPのカプセル化について説明しています。このメモは、ワーキンググループとRFC-2067 [15]が脱落し、HIPPI-800ネットワークのアドレス解像度とLIS IPブロードキャストエミュレーションを定義する場所を取り上げます。"
    },
    {
      "indent": 3,
      "text": "While investigating possible solutions for HARP it became evident that IP broadcast could easily be emulated for both HIPPI-800 and HIPPI-6400 hardware types. This is useful since HIPPI switches are not required to implement broadcast but many standard networking protocols rely on broadcast. This memo therefore further addresses the emulation of LIS IP broadcast as an extension of HARP.",
      "ja": "HARPの可能なソリューションを調査している間、IP放送はHIPPI-800とHIPPI-6400の両方のハードウェアタイプの両方で簡単にエミュレートできることが明らかになりました。HIPPIスイッチはブロードキャストを実装する必要はないため有用ですが、多くの標準ネットワークプロトコルはブロードキャストに依存しています。したがって、このメモは、HARPの拡張としてのLIS IPブロードキャストのエミュレーションにさらに対処します。"
    },
    {
      "indent": 0,
      "text": "2 Terminology",
      "ja": "2用語"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC-2119 [18].",
      "ja": "「必須」、「そうしない」、「必須」、「shall」、「shall \"、\" ingle \"、\" should \"、\" not \"、\" becommended \"、\" bay \"、および「optional」は、RFC-2119 [18]に記載されているように解釈される。"
    },
    {
      "indent": 0,
      "text": "3. Definitions",
      "section_title": true,
      "ja": "3. 定義"
    },
    {
      "indent": 0,
      "text": "3.1 Global concepts used",
      "section_title": true,
      "ja": "3.1 使用されているグローバルな概念"
    },
    {
      "indent": 3,
      "text": "In the following discussion, the terms \"requester\" and \"target\" are used to identify the port initiating the address resolution request and the port whose address it wishes to discover, respectively. If not all switches in the LIS support broadcast then there will be a HARP server providing the address resolution service and it will be the source of the reply. If on the other hand all switches support broadcast then the source address of a reply will be the target's target address.",
      "ja": "次の議論では、「リクエスター」と「ターゲット」という用語を使用して、アドレス解決要求を開始するポートと、それぞれアドレスを発見したいポートを識別します。LISサポートブロードキャストのすべてのスイッチではない場合、アドレス解像度サービスを提供するHARPサーバーがあり、応答のソースになります。一方、すべてのスイッチがブロードキャストをサポートする場合、返信のソースアドレスがターゲットのターゲットアドレスになります。"
    },
    {
      "indent": 3,
      "text": "Values are decimal unless otherwise noted. Formatting follows IEEE 802.1A canonical bit order and and HIPPI-FP bit and byte order.",
      "ja": "特に明記しない限り、値は10進数です。フォーマットは、IEEE 802.1A Canonical Bit OrderとHippi-FP BitおよびByte Orderに従います。"
    },
    {
      "indent": 0,
      "text": "3.2 Glossary",
      "section_title": true,
      "ja": "3.2 用語集"
    },
    {
      "indent": 3,
      "text": "Broadcast",
      "ja": "放送"
    },
    {
      "indent": 3,
      "text": "A distribution mode which transmits a message to all ports. Particularly also the port sending the message.",
      "ja": "すべてのポートにメッセージを送信する配布モード。特に、メッセージの送信ポートも。"
    },
    {
      "indent": 3,
      "text": "Classical/Conventional",
      "ja": "クラシック/従来"
    },
    {
      "indent": 3,
      "text": "Both terms are used to refer to networks such as Ethernet, FDDI, and other 802 LAN types, as distinct from HIPPI-SC LANs.",
      "ja": "両方の用語は、Hippi-SC LANとは異なるものとして、イーサネット、FDDI、およびその他の802 LANタイプなどのネットワークを参照するために使用されます。"
    },
    {
      "indent": 3,
      "text": "Destination",
      "ja": "行き先"
    },
    {
      "indent": 3,
      "text": "The HIPPI port that receives data from a HIPPI Source.",
      "ja": "Hippiソースからデータを受信するHippiポート。"
    },
    {
      "indent": 3,
      "text": "HARP",
      "ja": "ハープ"
    },
    {
      "indent": 3,
      "text": "HARP describes the whole set of HIPPI address resolution encodings and algorithms defined in this memo. HARP is a combination and adaptation of the Internet Address Resolution Protocol (ARP) RFC-826 [13] and Inverse ARP (InARP) [7] (see section 5). HARP also describes the HIPPI specific version of ARP [10] (i.e. the protocol and the HIPPI specific encoding).",
      "ja": "Harpは、このメモで定義されているHippiアドレス解像度のエンコーディングとアルゴリズムのセット全体を説明しています。HARPは、インターネットアドレス解像度プロトコル（ARP）RFC-826 [13]および逆ARP（INARP）[7]の組み合わせと適応です（セクション5を参照）。Harpは、ARP [10]のHIPPI固有バージョン（つまり、プロトコルとHIPPI固有のエンコード）についても説明しています。"
    },
    {
      "indent": 3,
      "text": "HARP table",
      "ja": "ハープテーブル"
    },
    {
      "indent": 3,
      "text": "Each host has a HARP table which contains the IP to hardware address mapping of IP members.",
      "ja": "各ホストには、IPメンバーのハードウェアアドレスアドレスマッピングを含むHARPテーブルがあります。"
    },
    {
      "indent": 3,
      "text": "HIPPI-Serial",
      "ja": "ヒッピシリアル"
    },
    {
      "indent": 3,
      "text": "An implementation of HIPPI in serial fashion on coaxial cable or optical fiber. (see [5])",
      "ja": "同軸ケーブルまたは光ファイバのシリアルファッションでのHIPPIの実装。（[5]を参照）"
    },
    {
      "indent": 3,
      "text": "HRAL",
      "ja": "hral"
    },
    {
      "indent": 3,
      "text": "The HARP Request Address List. A list of ULAs to which HARP messages are sent when resolving names to addresses (see section 4.2).",
      "ja": "HARPリクエストアドレスリスト。アドレスに名前を解決するときにHARPメッセージが送信されるULAのリスト（セクション4.2を参照）。"
    },
    {
      "indent": 3,
      "text": "Hardware (HW) address",
      "ja": "ハードウェア（HW）アドレス"
    },
    {
      "indent": 3,
      "text": "The hardware address of a port consisting of an I-Field and an optional ULA (see section 6.2). Note: the term port as used in this document refers to a HIPPI port and is roughly equivalent to the term \"interface\" as commonly used in other IP documents.",
      "ja": "IフィールドとオプションのULAで構成されるポートのハードウェアアドレス（セクション6.2を参照）。注：このドキュメントで使用されている用語ポートは、Hippiポートを指し、他のIPドキュメントで一般的に使用される「インターフェイス」という用語とほぼ同等です。"
    },
    {
      "indent": 3,
      "text": "Host",
      "ja": "ホスト"
    },
    {
      "indent": 3,
      "text": "An entity, usually a computer system, that may have one or more HIPPI ports and which may serve as a client or a HARP server.",
      "ja": "エンティティ（通常はコンピューターシステム）が1つ以上のHIPPIポートを持ち、クライアントまたはHARPサーバーとして機能する場合があります。"
    },
    {
      "indent": 3,
      "text": "Port",
      "ja": "ポート"
    },
    {
      "indent": 3,
      "text": "An entity consisting of one HIPPI Source/Destination dual simplex pair that is connected by parallel or serial HIPPI to a HIPPI-SC switch and that transmits and receives IP datagrams.",
      "ja": "並列またはシリアルHIPPIによってHIPPI-SCスイッチに接続され、IPデータグラムを送信および受信する1つのHIPPIソース/宛先デュアルシンプレックスペアで構成されるエンティティ。"
    },
    {
      "indent": 3,
      "text": "PIBES",
      "ja": "パイブ"
    },
    {
      "indent": 3,
      "text": "The Protocol for Internet Broadcast Emulation Server (see section 7).",
      "ja": "インターネットブロードキャストエミュレーションサーバーのプロトコル（セクション7を参照）。"
    },
    {
      "indent": 3,
      "text": "Switch Address",
      "ja": "スイッチアドレス"
    },
    {
      "indent": 3,
      "text": "A value used as the address of a port on a HIPPI-SC network. It is transmitted in the I-field. HIPPI-SC switches map Switch Addresses to physical switch port numbers. The switch address is extended with a mode byte to form an I-Field (see [4] and 6.2.2)",
      "ja": "Hippi-SCネットワーク上のポートのアドレスとして使用される値。i-fieldに送信されます。HIPPI-SCスイッチマップスイッチアドレスは、物理スイッチポート番号になります。スイッチアドレスはモードバイトで拡張され、Iフィールドを形成します（[4]および6.2.2を参照）"
    },
    {
      "indent": 3,
      "text": "Source",
      "ja": "ソース"
    },
    {
      "indent": 3,
      "text": "The HIPPI port that generates data to send to a HIPPI Destination.",
      "ja": "Hippiの宛先に送信するデータを生成するHippiポート。"
    },
    {
      "indent": 3,
      "text": "Universal LAN MAC Address (ULA)",
      "ja": "ユニバーサルランマックアドレス（ULA）"
    },
    {
      "indent": 3,
      "text": "A 48-bit globally unique address, administered by the IEEE, assigned to each port on an Ethernet, FDDI, 802 network, or HIPPI-SC LAN.",
      "ja": "IEEEが管理する48ビットのグローバルに一意のアドレスは、イーサネット、FDDI、802ネットワーク、またはHIPPI-SC LANの各ポートに割り当てられています。"
    },
    {
      "indent": 0,
      "text": "4. IP Subnetwork Configuration",
      "section_title": true,
      "ja": "4. IPサブネットワーク構成"
    },
    {
      "indent": 0,
      "text": "4.1 Background",
      "section_title": true,
      "ja": "4.1 背景"
    },
    {
      "indent": 3,
      "text": "ARP (address resolution protocol) as defined in [12] was meant to work on the 'local' cable. This definition gives the ARP protocol a local logical IP subnet (LIS) scope. In the LIS scenario, each separate administrative entity configures its hosts and routers within the LIS. Each LIS operates and communicates independently of other LIS's on the same HIPPI network.",
      "ja": "[12]で定義されているARP（アドレス解像度プロトコル）は、「ローカル」ケーブルで作業することを目的としていました。この定義により、ARPプロトコルはローカル論理IPサブネット（LIS）スコープを提供します。LISシナリオでは、それぞれの個別の管理エンティティがLIS内のホストとルーターを構成します。各LIは、同じHippiネットワーク上の他のLISとは独立して動作および通信します。"
    },
    {
      "indent": 3,
      "text": "HARP has LIS scope only and serves all ports in the LIS. Communication to ports located outside of the local LIS is usually provided via an IP router. This router is a HIPPI port attached to the HIPPI network that is configured as a member of one or more LIS's. This configuration MAY result in a number of disjoint LIS's operating over the same HIPPI network. Using this model, ports of different IP subnets SHOULD communicate via an intermediate IP router even though it may be possible to open a direct HIPPI connection between the two IP members over the HIPPI network. This is a consequence of using IP and choosing to have multiple LIS's on the same HIPPI fabric.",
      "ja": "HarpにはLISスコープのみがあり、LISのすべてのポートにサービスを提供しています。ローカルLISの外側にあるポートへの通信は、通常、IPルーターを介して提供されます。このルーターは、1つ以上のLISのメンバーとして構成されているHippiネットワークに接続されたHippiポートです。この構成により、同じHippiネットワーク上でLisが動作する多くの矛盾が生じる可能性があります。このモデルを使用して、異なるIPサブネットのポートは、HIPPIネットワーク上の2人のIPメンバー間で直接HIPPI接続を開くことができる場合でも、中間IPルーターを介して通信する必要があります。これは、IPを使用して、同じHippiファブリックに複数のLISを使用することを選択した結果です。"
    },
    {
      "indent": 3,
      "text": "By default, the HARP method detailed in section 5 and the classical LIS routing model MUST be available to any IP member client in the LIS.",
      "ja": "デフォルトでは、セクション5で詳述されているHARPメソッドと古典的なLISルーティングモデルは、LISのIPメンバークライアントが利用できる必要があります。"
    },
    {
      "indent": 0,
      "text": "4.2 HIPPI LIS Requirements",
      "section_title": true,
      "ja": "4.2 Hippi lis要件"
    },
    {
      "indent": 3,
      "text": "The requirement for IP members (hosts, routers) operating in a HIPPI LIS configuration is:",
      "ja": "HIPPI LIS構成で動作するIPメンバー（ホスト、ルーター）の要件は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o All members of the LIS SHALL have the same IP network/subnet address and address mask [6].",
      "ja": "o LISのすべてのメンバーは、同じIPネットワーク/サブネットアドレスとアドレスマスクを持っている必要があります[6]。"
    },
    {
      "indent": 3,
      "text": "The following list identifies the set of HIPPI-specific parameters that MUST be implemented in each IP station connected to the HIPPI network:",
      "ja": "次のリストは、HIPPIネットワークに接続された各IPステーションに実装する必要があるHIPPI固有のパラメーターのセットを識別します。"
    },
    {
      "indent": 3,
      "text": "o HIPPI Hardware Address:",
      "ja": "o HIPPIハードウェアアドレス："
    },
    {
      "indent": 6,
      "text": "The HIPPI hardware address of an individual IP port MUST contain the port's Switch Address (see section 9). The address SHOULD also contain a non-zero ULA address. If there is no ULA then that field MUST be zero.",
      "ja": "個々のIPポートのHIPPIハードウェアアドレスには、ポートのスイッチアドレスが含まれている必要があります（セクション9を参照）。アドレスには、ゼロ以外のULAアドレスも含める必要があります。ULAがない場合、そのフィールドはゼロでなければなりません。"
    },
    {
      "indent": 3,
      "text": "o HARP Request Address List (HRAL):",
      "ja": "o HARPリクエストアドレスリスト（HRAL）："
    },
    {
      "indent": 6,
      "text": "The HRAL is an ordered list of two or more addresses identifying the address resolution service(s). All HARP clients MUST be configured identically, i.e. all ports MUST have the same addresses(es) in the HRAL.",
      "ja": "Hralは、アドレス解決サービスを識別する2つ以上のアドレスの順序付けられたリストです。すべてのHARPクライアントは同じように構成する必要があります。つまり、すべてのポートはHralに同じアドレス（ES）を持っている必要があります。"
    },
    {
      "indent": 6,
      "text": "The HRAL MUST contain at least two HIPPI HW addresses identifying the individual HARP service(s) that have authoritative responsibility for resolving HARP requests of all IP members located within the LIS.",
      "ja": "HRALには、LIS内にあるすべてのIPメンバーのHARPリクエストを解決する権威ある責任を負う個々のHARPサービスを特定する少なくとも2つのHIPPI HWアドレスを含める必要があります。"
    },
    {
      "indent": 6,
      "text": "By default the first address MUST be the reserved address for broadcast, i.e. the address for \"IP traffic conventionally directed to the IEEE 802.1 broadcast address: 0xFE1\" [4]. The ULA for this HARP service entry SHALL be FF:FF:FF:FF:FF:FF.",
      "ja": "デフォルトでは、最初のアドレスは放送の予約アドレスでなければなりません。つまり、「IEEE 802.1ブロードキャストアドレス：0xfe1」に向けられている「従来のIPトラフィック」[4]のアドレスでなければなりません。このHARPサービスエントリのULAは、FF：FF：FF：FF：FF：FFでなければなりません。"
    },
    {
      "indent": 6,
      "text": "It is REQUIRED that the second address be the address for \"Messages pertaining to (the) ... address resolution requests: 0xFE0\" [4]. The ULA for this HARP server entry is 00:00:00:00:00:00.",
      "ja": "2番目のアドレスは、「（the）に関連するメッセージ...アドレス解決要求：0xfe0」[4]のアドレスである必要があります。このHARPサーバーエントリのULAは00：00：00：00：00：00です。"
    },
    {
      "indent": 0,
      "text": "Therefore, the HRAL entries are sorted in the following order:\n  1st **  : broadcast address            (0x07000FE1 FF:FF:FF:FF:FF:FF),\n  2nd **  : official HARP server address (0x07000FE0 00:00:00:00:00:00),\n  3rd & on: any additional HARP server addresses will be sorted in\n            decreasing order of the 12bit destination switch\n            address portion of their I-Field (see section 6.2).\n  ** REQUIRED",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Within the restrictions mentioned above and in Section 6.2.2, local administration choose address(es) for the additional HARP services which they will put into the HRAL.",
      "ja": "上記の制限内およびセクション6.2.2で、地方行政は、HRALに投入する追加のHARPサービスの住所を選択します。"
    },
    {
      "indent": 3,
      "text": "An example of such a list:\n   1st entry: 0x07000FE1 FF:FF:FF:FF:FF:FF\n   2nd entry: 0x07000FE0 00:00:00:00:00:00\n   3rd entry: 0x07000001 <Alternate-HARP-server-ula>\n   ...",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Manual configuration of the addresses and address lists presented in this section is implementation dependent and beyond the scope of this memo.",
      "ja": "このセクションで表示されているアドレスとアドレスリストの手動構成は、このメモの範囲を超えて実装に依存します。"
    },
    {
      "indent": 0,
      "text": "5. HIPPI Address Resolution Protocol - HARP",
      "section_title": true,
      "ja": "5. HIPPIアドレス解像度プロトコル-HARP"
    },
    {
      "indent": 3,
      "text": "Address resolution within the HIPPI LIS SHALL make use of the HIPPI Address Resolution Protocol (HARP) and the Inverse HIPPI Address Resolution Protocol (InHARP). HARP provides the same functionality as the Internet Address Resolution Protocol (ARP). HARP is based on ARP which is defined in RFC-826 [13]. Knowing the Internet address, conventional networks use ARP to discover another port's hardware address. HARP presented in this section further specifies the combination of the original protocol definitions to form a coherent address resolution service that is independent of the hardware's broadcast capability.",
      "ja": "HIPPI LIS内のアドレス解像度は、HIPPIアドレス解像度プロトコル（HARP）と逆HIPPIアドレス解像度プロトコル（INHARP）を利用するものとします。HARPは、インターネットアドレス解像度プロトコル（ARP）と同じ機能を提供します。HARPは、RFC-826で定義されているARPに基づいています[13]。インターネットアドレスを知っていると、従来のネットワークはARPを使用して別のポートのハードウェアアドレスを発見します。このセクションで提示されたHARPは、元のプロトコル定義の組み合わせをさらに指定して、ハードウェアのブロードキャスト機能に依存しないコヒーレントアドレス解像度サービスを形成します。"
    },
    {
      "indent": 3,
      "text": "InHARP is based on the original Inverse ARP (InARP) protocol presented in [7]. Knowing its hardware address, InARP is used to discover the other party's Internet address.",
      "ja": "INHARPは、[7]で提示された元の逆ARP（INARP）プロトコルに基づいています。ハードウェアアドレスを知っているINARPは、相手のインターネットアドレスを発見するために使用されます。"
    },
    {
      "indent": 3,
      "text": "This memo further REQUIRES the PIBES (see section 7 below) extension to the HARP protocol, guaranteeing broadcast service to upper layer protocols like IP.",
      "ja": "このメモでは、HARPプロトコルのPIBE（以下のセクション7を参照）の拡張をさらに必要とし、IPのような上層層プロトコルへのブロードキャストサービスを保証します。"
    },
    {
      "indent": 3,
      "text": "Internet addresses are assigned independent of ULAs and switch addresses. Before using HARP, each port MUST know its IP and its hardware addresses. The ULA is optional but is RECOMMENDED if bridging to conventional networks is desired.",
      "ja": "インターネットアドレスは、ULASおよびスイッチアドレスから独立して割り当てられます。HARPを使用する前に、各ポートはIPとハードウェアアドレスを知っている必要があります。ULAはオプションですが、従来のネットワークへの橋渡しが必要な場合はお勧めします。"
    },
    {
      "indent": 0,
      "text": "5.1 HARP Algorithm",
      "section_title": true,
      "ja": "5.1 ハープアルゴリズム"
    },
    {
      "indent": 3,
      "text": "This section defines the behavior and requirements for HARP implementations on both broadcast and non-broadcast capable HIPPI-SC networks. HARP creates a table in each port which maps the IP address of each port to a hardware address, so that when an application requests a connection to a remote port by its IP address, the hardware address can be determined, a correct HIPPI-LE header can be built, and a connection to the port can be established using the correct Switch Address in the I-field.",
      "ja": "このセクションでは、ブロードキャストと非放送の両方のHIPPI-SCネットワークの両方でのHARP実装の動作と要件を定義します。HARPは各ポートに各ポートにテーブルを作成し、各ポートのIPアドレスをハードウェアアドレスにマッピングします。これにより、アプリケーションがIPアドレスでリモートポートへの接続を要求すると、ハードウェアアドレスを決定できます。構築でき、i-fieldの正しいスイッチアドレスを使用してポートへの接続を確立できます。"
    },
    {
      "indent": 3,
      "text": "HARP is a two phase protocol. The first phase is the registration phase and the second phase is the operational phase. In the registration phase the port detects if it is connected to broadcast hardware or not. The InHARP protocol is used in the registration phase. In case of non-broadcast capable hardware, the InHARP Protocol will register and establish a table entry with the server. The operational phase works much like conventional ARP with the exception of the message format.",
      "ja": "Harpは2位のプロトコルです。最初のフェーズは登録フェーズで、第2フェーズは運用フェーズです。登録フェーズでは、ポートがブロードキャストハードウェアに接続されているかどうかを検出します。INHARPプロトコルは、登録フェーズで使用されます。ブロードキャストの有能なハードウェアの場合、INHARPプロトコルはサーバーにテーブルエントリを登録して確立します。動作フェーズは、メッセージ形式を除き、従来のARPとよく似ています。"
    },
    {
      "indent": 0,
      "text": "5.1.1 Selecting the authoritative HARP service",
      "section_title": true,
      "ja": "5.1.1 権威あるハープサービスの選択"
    },
    {
      "indent": 3,
      "text": "Within the HIPPI LIS, there SHALL be an authoritative HARP service. At each point in time there is only one authoritative HARP service.",
      "ja": "Hippi Lis内には、権威あるHarpサービスがあります。それぞれの時点で、権威あるハープサービスは1つだけです。"
    },
    {
      "indent": 3,
      "text": "To select the authoritative HARP service, each port needs to determine if it is connected to a broadcast network.",
      "ja": "権威あるHARPサービスを選択するには、各ポートがブロードキャストネットワークに接続されているかどうかを判断する必要があります。"
    },
    {
      "indent": 3,
      "text": "The port SHALL send an InHARP_REQUEST to the first address in its HRAL (0x07000FE1 FF:FF:FF:FF:FF:FF). If the port sees its own InHARP_REQUEST, then it is connected to a broadcast capable network. In this case, the rest of the HRAL is ignored and the authoritative HARP service is the broadcast entry.",
      "ja": "ポートは、hral（0x07000fe1 ff：ff：ff：ff：ff）の最初のアドレスにinharp_requestを送信するものとします。ポートが独自のinharp_requestを見た場合、ブロードキャスト対応ネットワークに接続されます。この場合、Hralの残りの部分は無視され、権威あるHARPサービスは放送エントリです。"
    },
    {
      "indent": 3,
      "text": "If the port is connected to a non-broadcast capable network, then the port SHALL send the InHARP_REQUEST to all of the remaining entries in the HRAL. Every address which sends an InHARP_REPLY is considered to be a responsive HARP server. The authoritative HARP service SHALL be the HARP server which appears first in the HRAL.",
      "ja": "ポートが非ブロードキャスト対応ネットワークに接続されている場合、ポートはHralの残りのすべてのエントリにINHARP_REQUESTを送信するものとします。inharp_replyを送信するすべてのアドレスは、レスポンシブハープサーバーと見なされます。権威あるHARPサービスは、HRALに最初に表示されるHARPサーバーでなければなりません。"
    },
    {
      "indent": 3,
      "text": "The sequence of the HRAL is only important for deciding which address will be the authoritative one. On a non-broadcast network, the port is REQUIRED to keep \"registered\" with all HARP server addresses in the HRAL (NOTE: not the broadcast address since it is not a HARP server address). If for instance the authoritative HARP service is non-responsive, then the port will consider the next address in the HRAL as a candidate for the authoritative address and send an InHARP_REQUEST.",
      "ja": "Hralのシーケンスは、どのアドレスが権威あるものになるかを決定するためにのみ重要です。非放送ネットワークでは、ポートはHRALのすべてのHARPサーバーアドレスに「登録」し続ける必要があります（注：HARPサーバーアドレスではないため、ブロードキャストアドレスではありません）。たとえば、権威あるHARPサービスが反応しない場合、ポートはHralの次の住所を権威ある住所の候補として考慮し、inharp_requestを送信します。"
    },
    {
      "indent": 3,
      "text": "The authoritative HARP server SHOULD be considered non-responsive when it has failed to reply to: (1) one or more registration requests by the client (see section 5.1.2 and 5.2), (2) any two HARP_REQUESTs in the last 120 seconds or (3) if an external agent has detected failure of the authoritative HARP server. The details of such an external agent and its interaction with the HARP client are beyond the scope of this document. Should an authoritative HARP server become non-responsive, then the registration process SHOULD be restarted. Alternative methods for choosing an authoritative HARP service are not prohibited.",
      "ja": "権威あるHARPサーバーは、（1）クライアントによる1つ以上の登録要求（セクション5.1.2および5.2を参照）、（2）過去120秒の任意の2つのharp_requestsに返信できなかった場合、非応答性と見なされる必要があります。または（3）外部エージェントが権威あるHARPサーバーの障害を検出した場合。このような外部エージェントの詳細とHARPクライアントとの相互作用は、このドキュメントの範囲を超えています。権威あるHARPサーバーが反応しない場合、登録プロセスを再起動する必要があります。権威あるHARPサービスを選択するための代替方法は禁止されていません。"
    },
    {
      "indent": 0,
      "text": "5.1.2 HARP registration phase",
      "section_title": true,
      "ja": "5.1.2 ハープ登録フェーズ"
    },
    {
      "indent": 3,
      "text": "HARP clients SHALL initiate the registration phase by sending an InHARP_REQUEST message using the addresses in the HRAL in order. The client SHALL terminate the registration phase and transition into the operational phase, either when it receives its own InHARP_REQUEST or when it receives an InHARP_REPLY from at least one of the HARP servers and when it has determined the authoritative HARP service as described in section 5.1.1.",
      "ja": "HARPクライアントは、HRALのアドレスを順番に使用してINHARP_REQUESTメッセージを送信することにより、登録フェーズを開始するものとします。クライアントは、登録段階を終了し、独自のinharp_requestを受信した場合、またはHARPサーバーの少なくとも1つからinharp_replyを受信した場合、およびセクション5.1で説明されているように権威あるHARPサービスを決定した場合。1。"
    },
    {
      "indent": 3,
      "text": "When ports are initiated they send an InHARP_REQUEST to the authoritative address as described in section 5.1.2. The first address to be tried will be the broadcast address \"0x07000FE1 FF:FF:FF:FF:FF:FF\". There are two outcomes:",
      "ja": "ポートが開始されると、セクション5.1.2で説明されているように、権威あるアドレスにinharp_requestを送信します。最初に試されるアドレスは、ブロードキャストアドレス「0x07000fe1 ff：ff：ff：ff：ff」です。2つの結果があります。"
    },
    {
      "indent": 3,
      "text": "1. The port sees its own InHARP_REQUEST: then the port is connected to a broadcast capable network. The first address becomes and remains the authoritative address for the HARP service.",
      "ja": "1. ポートは独自のINHARP_REQUESTを見ています。その後、ポートはブロードキャスト対応ネットワークに接続されています。最初のアドレスは、HARPサービスの権威ある住所になり、ままです。"
    },
    {
      "indent": 3,
      "text": "2. The port does not receive its InHARP_REQUEST: then the port is connected to a non-broadcast capable network.",
      "ja": "2. ポートはINHARP_REQUESTを受け取りません。その後、ポートはブロードキャストの有能なネットワークに接続されています。"
    },
    {
      "indent": 3,
      "text": "In the second case, the port SHALL choose the next address in the HRAL as a candidate for a authoritative address and send an InHARP_REQUEST to that address: (0x07000FE0 00:00:00:00:00:00).",
      "ja": "2番目のケースでは、ポートは、権威ある住所の候補としてHRALの次のアドレスを選択し、そのアドレスにINHARP_REQUESTを送信するものとします。（0x07000FE0 00：00：00：00：00：00）。"
    },
    {
      "indent": 3,
      "text": "o If the port receives its own message, then the port itself is the HARP server and the port is REQUIRED to provide broadcast services using the PIBES (see section 7).",
      "ja": "o ポートが独自のメッセージを受信した場合、ポート自体はハープサーバーであり、ポートはパイブを使用してブロードキャストサービスを提供する必要があります（セクション7を参照）。"
    },
    {
      "indent": 3,
      "text": "o If the port receives an InHARP_REPLY, then it is a HARP client and not a HARP server.",
      "ja": "o ポートがINHARP_REPLYを受信した場合、それはHARPクライアントであり、HARPサーバーではありません。"
    },
    {
      "indent": 3,
      "text": "In both cases, the current candidate address becomes the authoritative HARP service address.",
      "ja": "どちらの場合も、現在の候補者アドレスが権威あるHARPサービスアドレスになります。"
    },
    {
      "indent": 3,
      "text": "If the client determines it is connected to a non-broadcast capable network then the client SHALL continue to retry each non-broadcast HARP server address in the HRAL at least once every 5 seconds until one of these two termination criteria are met for each address.",
      "ja": "クライアントがそれが非放送能力のあるネットワークに接続されていると判断した場合、クライアントは、これら2つの終了基準のいずれかが各アドレスに対して満たされるまで、少なくとも5秒ごとにHralの各非ブロードキャストHarpサーバーアドレスを再び再試行し続けるものとします。"
    },
    {
      "indent": 3,
      "text": "InHARP is an application of the InARP protocol for a purpose not originally intended. The purpose is to accomplish registration of port IP address mappings with a HARP server if one exists or detect hardware broadcast capability.",
      "ja": "INHARPは、当初意図されていない目的のためのINARPプロトコルの適用です。目的は、ハードウェアブロードキャスト機能を存在または検出した場合、HARPサーバーを使用してポートIPアドレスマッピングの登録を達成することです。"
    },
    {
      "indent": 3,
      "text": "If the HIPPI-SC LAN supports broadcast, then the client will see its own InHARP_REQUEST message and SHALL complete the registration phase. The client SHOULD further note that it is connected to a broadcast capable network and use this information for aging the HARP server entry and for IP broadcast emulation as specified in sections 5.4 and 5.6 respectively.",
      "ja": "HIPPI-SC LANがブロードキャストをサポートしている場合、クライアントは独自のINHARP_REQUESTメッセージを表示し、登録フェーズを完了します。クライアントはさらに、ブロードキャスト対応ネットワークに接続されていることに注意し、この情報を使用して、HARPサーバーエントリの老化と、それぞれセクション5.4および5.6で指定されているIPブロードキャストエミュレーションに使用します。"
    },
    {
      "indent": 3,
      "text": "If the client doesn't see its own InHARP_REQUEST, then it SHALL await an InHARP_REPLY before completing the registration phase. This will also provide the client with the protocol address by which the HARP server is addressable. This will be the case when the client happens to be connected to a non-broadcast capable HIPPI-SC network.",
      "ja": "クライアントが独自のinharp_requestを表示しない場合、登録フェーズを完了する前にinharp_replyを待つものとします。これにより、クライアントにHarpサーバーがアドレス指定できるプロトコルアドレスを提供します。これは、クライアントがたまたまブロードキャストの有能なHIPPI-SCネットワークに接続されている場合に当てはまります。"
    },
    {
      "indent": 0,
      "text": "5.1.3 HARP operational phase",
      "section_title": true,
      "ja": "5.1.3 HARP運用段階"
    },
    {
      "indent": 3,
      "text": "Once a HARP client has completed its registration phase it enters the operational phase. In this phase of the protocol, the HARP client SHALL gain and refresh its own HARP table which contains the IP to HW address mapping of IP members by sending HARP_REQUESTS to the authoritative address in the HRAL and receiving HARP_REPLYs. The client is fully operational during the operational phase.",
      "ja": "HARPクライアントが登録フェーズを完了すると、運用フェーズに入ります。プロトコルのこのフェーズでは、HARPクライアントは、HARP_REQUESTSをHRALの信頼できるアドレスに送信してHARP_REPLYSを受信することにより、IPメンバーのHWアドレスマッピングを含む独自のHARPテーブルを獲得して更新するものとします。クライアントは、運用段階で完全に動作します。"
    },
    {
      "indent": 3,
      "text": "In the operational phase, the client's behavior for requesting HARP resolution is the same for broadcast or non-broadcast networks.",
      "ja": "運用段階では、HARP解像度を要求するクライアントの動作は、ブロードキャストまたは非放送ネットワークで同じです。"
    },
    {
      "indent": 3,
      "text": "The target of an address resolution request updates its address mapping tables with any new information it can find in the request. If it is the target port it SHALL formulate and send a reply message. A port is the target of an address resolution request if at least ONE of the following statements is true of the request:",
      "ja": "アドレス解像度のターゲットは、リクエストで見つけることができる新しい情報でアドレスマッピングテーブルを更新します。ターゲットポートの場合、返信メッセージを策定して送信します。次のステートメントのうち少なくとも1つがリクエストに当てはまる場合、ポートはアドレス解決要求のターゲットです。"
    },
    {
      "indent": 3,
      "text": "1. The port's IP address is in the target protocol address field (ar$tpa) of the HARP message.",
      "ja": "1. ポートのIPアドレスは、HARPメッセージのターゲットプロトコルアドレスフィールド（AR $ TPA）にあります。"
    },
    {
      "indent": 3,
      "text": "2. The port's ULA (if non-zero), is in the ULA part of the Target Hardware Address field (ar$tha) of the message.",
      "ja": "2. ポートのULA（ゼロ以外の場合）は、メッセージのターゲットハードウェアアドレスフィールド（ar $ tha）のULA部分にあります。"
    },
    {
      "indent": 3,
      "text": "3. The port's switch address is in the Target Switch Address field of Target Hardware Address field (ar$tha) of the message (see section 6.2.2).",
      "ja": "3. ポートのスイッチアドレスは、メッセージのターゲットハードウェアアドレスアドレスフィールド（ar $ tha）のターゲットスイッチアドレスフィールドにあります（セクション6.2.2を参照）。"
    },
    {
      "indent": 3,
      "text": "4. The port is a HARP server.",
      "ja": "4. ポートはハープサーバーです。"
    },
    {
      "indent": 3,
      "text": "NOTE: It is RECOMMENDED that all HARP servers run on a ports which each have a non-zero ULA.",
      "ja": "注：すべてのHARPサーバーは、それぞれがゼロ以外のULAを持つポートで実行することをお勧めします。"
    },
    {
      "indent": 0,
      "text": "5.2 HARP Client Operational Requirements",
      "section_title": true,
      "ja": "5.2 HARPクライアントの運用要件"
    },
    {
      "indent": 3,
      "text": "The HARP client is responsible for contacting the HARP server(s) to have its own HARP information registered and to gain and refresh its own HARP entry/information about other IP members. This means, as noted above, that HARP clients MUST be configured with the hardware address of the HARP server(s) in the HRAL.",
      "ja": "HARPクライアントは、HARPサーバーに連絡して、独自のHARP情報を登録し、他のIPメンバーに関する独自のHARPエントリ/情報を取得および更新する責任があります。これは、上記のように、HARPクライアントをHRALのHARPサーバーのハードウェアアドレスで構成する必要があることを意味します。"
    },
    {
      "indent": 3,
      "text": "HARP clients MUST:",
      "ja": "HARPクライアントは次のことをしなければなりません："
    },
    {
      "indent": 3,
      "text": "1. When an interface is enabled (e.g. \"ifconfig <interface> up\" with an IP address) or assigned the first or an additional IP address (i.e. an IP alias), the client SHALL initiate the registration phase.",
      "ja": "1. インターフェイスが有効になっている場合（たとえば、IPアドレスを使用して「ifconfig <interface> up」）、または追加のIPアドレスまたは追加のIPアドレス（つまり、IPエイリアス）を割り当てた場合、クライアントは登録フェーズを開始するものとします。"
    },
    {
      "indent": 3,
      "text": "2. In the operational phase the client MUST respond to HARP_REQUEST and InHARP_REQUEST messages if it is the target port. If an interface has multiple IP addresses (e.g., IP aliases) then the client MUST cycle through all the IP addresses and generate an InHARP_REPLY for each such address. In that case an InHARP_REQUEST will have multiple replies. (Refer to Section 7, \"Protocol Operation\" in RFC-1293 [7].)",
      "ja": "2. 運用段階では、クライアントがターゲットポートである場合、harp_requestおよびinharp_requestメッセージに応答する必要があります。インターフェイスに複数のIPアドレス（IPエイリアスなど）がある場合、クライアントはすべてのIPアドレスをサイクリングし、そのようなアドレスごとにinharp_replyを生成する必要があります。その場合、inharp_requestには複数の返信があります。（RFC-1293 [7]のセクション7、「プロトコル操作」を参照してください。）"
    },
    {
      "indent": 3,
      "text": "3. React to address resolution reply messages appropriately to build or refresh its own client HARP table entries. All solicited and unsolicited HARP_REPLYs from the authoritative HARP server SHALL be used to update and refresh its own client HARP table entries.",
      "ja": "3. 対応するために解像度の応答メッセージを適切に反応して、独自のクライアントHarpテーブルエントリを構築または更新します。権威あるHARPサーバーからのすべての勧誘および未承諾のHARP_REPLYSは、独自のクライアントHARPテーブルエントリを更新および更新するために使用するものとします。"
    },
    {
      "indent": 6,
      "text": "Explanation: This allows the HARP server to update the clients when one of server's mappings change, similar to what is accomplished on Ethernet with gratuitous ARP.",
      "ja": "説明：これにより、HARPサーバーは、サーバーのマッピングの1つが変更されたときにクライアントを更新できます。"
    },
    {
      "indent": 3,
      "text": "4. Generate and transmit InHARP_REQUEST messages as needed and process InHARP_REPLY messages appropriately (see section 5.1.2 and 5.6). All InHARP_REPLY messages SHALL be used by the client to build or refresh its HARP table entries. (Refer to Section 7, \"Protocol Operation\" in [7].)",
      "ja": "4. 必要に応じてinharp_requestメッセージを生成および送信し、inharp_replyメッセージを適切に処理します（セクション5.1.2および5.6を参照）。すべてのinharp_replyメッセージは、クライアントがハープテーブルエントリを構築または更新するために使用するものとします。（[7]のセクション7、「プロトコル操作」を参照してください。）"
    },
    {
      "indent": 3,
      "text": "If the registration phase showed that the hardware does not support broadcast, then the client MUST refresh its own entry for the HARP server, created during the registration phase, at least once every 15 minutes. This can be accomplished either through the exchange of a HARP request/reply with the HARP server or by repeating step 1. To decrease the redundant network traffic, this timeout SHOULD be reset after each HARP_REQUEST/HARP_REPLY exchange.",
      "ja": "登録段階でハードウェアがブロードキャストをサポートしていないことを示した場合、クライアントは、少なくとも15分ごとに登録フェーズ中に作成されたHARPサーバーの独自のエントリを更新する必要があります。これは、HARPリクエスト/HARPサーバーとの返信を交換するか、ステップ1を繰り返すことで達成できます。冗長ネットワークトラフィックを減らすために、各harp_request/harp_reply Exchangeの後にこのタイムアウトをリセットする必要があります。"
    },
    {
      "indent": 3,
      "text": "Explanation: The HARP_REQUEST shows the HARP server that the client is still alive. Receiving a HARP_REPLY indicates to the client that the server must have seen the HARP_REQUEST.",
      "ja": "説明：HARP_REQUESTは、クライアントがまだ生きていることをHARPサーバーに示しています。harp_replyを受信すると、サーバーがharp_requestを見たに違いないことをクライアントに示します。"
    },
    {
      "indent": 3,
      "text": "If the registration phase shows that the underlying network supports broadcast, then periodic InHARP_REQUEST/InHARP_REPLY operations of step 4 are NOT REQUIRED.",
      "ja": "登録フェーズで、基礎となるネットワークがブロードキャストをサポートしていることが示されている場合、ステップ4の定期的なinharp_request/inharp_reply操作は必要ありません。"
    },
    {
      "indent": 0,
      "text": "5.3 Receiving Unknown HARP Messages",
      "section_title": true,
      "ja": "5.3 未知のハープメッセージを受信します"
    },
    {
      "indent": 3,
      "text": "If a HARP client receives a HARP message with an operation code (ar$op) that it does not support, it MUST gracefully discard the message and continue normal operation. A HARP client is NOT REQUIRED to return any message to the sender of the undefined message.",
      "ja": "HARPクライアントが、サポートしていない操作コード（AR $ op）でHARPメッセージを受信した場合、メッセージを優雅に破棄し、通常の操作を継続する必要があります。HARPクライアントは、未定義のメッセージの送信者にメッセージを返す必要はありません。"
    },
    {
      "indent": 0,
      "text": "5.4 HARP Server Operational Requirements",
      "section_title": true,
      "ja": "5.4 HARPサーバーの運用要件"
    },
    {
      "indent": 3,
      "text": "A HARP server MUST accept HIPPI connections from other HIPPI ports. The HARP server expects an InHARP_REQUEST as the first message from the client. A server examines the IP source address, the hardware source address of the InHARP_REQUEST and adds or updates its HARP table entry <IP address(es), switch address, ULA> as well as the time stamp.",
      "ja": "HARPサーバーは、他のHIPPIポートからのHIPPI接続を受け入れる必要があります。HARPサーバーは、クライアントからの最初のメッセージとしてINHARP_REQUESTを期待しています。サーバーは、IPソースアドレス、INHARP_REQUESTのハードウェアソースアドレスを調べ、HARPテーブルエントリ<IPアドレス（ES）、スイッチアドレス、ULA>、およびタイムスタンプを追加または更新します。"
    },
    {
      "indent": 3,
      "text": "A HARP server SHALL reply to HARP_REQUESTs and InHARP_REQUESTs based on the information which it has in its HARP table. The HARP server SHALL reply with a HARP_REPLY or a InHARP_REPLY, if it has the requested information in its tables; otherwise it SHALL reply with a HARP_NAK. The HARP server replies SHALL contain the hardware type and corresponding format of the request (see also section 6).",
      "ja": "HARPサーバーは、HARP_REQUESTSおよびINHARP_REQUESTSに、HARPテーブルにある情報に基づいて返信するものとします。HARPサーバーは、テーブルに要求された情報がある場合、HARP_REPLYまたはINHARP_REPLYで返信するものとします。それ以外の場合は、harp_nakで返信します。HARPサーバーの返信には、リクエストのハードウェアタイプと対応する形式が含まれているものとします（セクション6も参照）。"
    },
    {
      "indent": 3,
      "text": "The following table shows all possible source address combinations on an incoming message and the actions to be taken. \"linked\" indicates that an existing \"IP entry\" is linked to a \"hardware entry\". It is possible to have an existing \"IP entry\" and to have an existing \"hardware entry\" but neither is linked to the other.",
      "ja": "次の表は、着信メッセージのすべての可能なソースアドレスの組み合わせと、実行されるアクションを示しています。「リンク」は、既存の「IPエントリ」が「ハードウェアエントリ」にリンクされていることを示します。既存の「IPエントリ」を持ち、既存の「ハードウェアエントリ」を持つことは可能ですが、どちらも他方にリンクされていません。"
    },
    {
      "indent": 6,
      "text": "+---+----------+----------+------------+---------------------+\n| # | IP entry | HW entry |  misc      |      Action         |\n+---+----------+----------+------------+---------------------+\n| 1 |  exists  |  exists  |     linked | *                   |\n| 2 |  exists  |  exists  | not linked | *, a, b,       e, f |\n| 3 |  exists  |    new   | not linked | *, a, b,    d, e, f |\n| 4 |   new    |  exists  | not linked | *,       c,    e, f |\n| 5 |   new    |    new   | not linked | *,       c, d, e, f |\n+---+----------+----------+------------+---------------------+\nActions:\n*: update timeout value\na: break the existing IP -> hardware (HW) - old link\nb: delete HW(old) -> IP link and decrement HW(old) refcount, if\n   refcount = 0, delete HW(old)\nc: create new IP entry\nd: create new HW entry\ne: add new IP -> HW link to IP entry\nf: add new HW -> IP link to HW entry",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Examples of when this could happen (Numbers match lines in above table):",
      "ja": "これがいつ発生するかの例（数字は上の表の行に一致します）："
    },
    {
      "indent": 3,
      "text": "1: supplemental message",
      "ja": "1：補足メッセージ"
    },
    {
      "indent": 6,
      "text": "Just update timer.",
      "ja": "タイマーを更新するだけです。"
    },
    {
      "indent": 3,
      "text": "2: move an IP alias to an existing interface",
      "ja": "2：IPエイリアスを既存のインターフェイスに移動する"
    },
    {
      "indent": 6,
      "text": "If the IP source address of the InHARP_REQUEST duplicates a table entry IP address (e.g. IPa <-> HWa) and the InHARP_REQUEST hardware source address matches a hardware address entry (e.g. HWb <-> IPb), but they are not linked together, then: - HWa entry needs to have its reference to the current IPa address removed. - HWb needs to have a new reference to IPa added - IPa needs to be linked to HWb",
      "ja": "INHARP_REQUESTのIPソースアドレスがテーブルエントリIPアドレス（IPA <-> HWAなど）を複製し、INHARP_REQUESTハードウェアソースアドレスがハードウェアアドレスエントリ（hwb <-> IPBなど）と一致する場合、それらは一緒にリンクされていません。：-HWAエントリは、現在のIPAアドレスを削除することを参照する必要があります。-HWBはIPAを追加する新しい参照を持つ必要があります-IPAはHWBにリンクする必要があります"
    },
    {
      "indent": 3,
      "text": "3: move IP address to a new interface",
      "ja": "3：IPアドレスを新しいインターフェイスに移動します"
    },
    {
      "indent": 6,
      "text": "If the InHARP_REQUEST requester's IP source address duplicates a table entry IP address and the InHARP_REQUEST hardware source address does not match the table entry hardware address, then a new HW entry SHALL be created. The requestor's IP address SHALL be moved from the original HW entry to the new one (see above).",
      "ja": "INHARP_REQUEST RequesterのIPソースアドレスがテーブルエントリIPアドレスを複製し、INHARP_REQUESTハードウェアソースアドレスがテーブルエントリハードウェアアドレスと一致しない場合、新しいHWエントリが作成されます。要求者のIPアドレスは、元のHWエントリから新しいエントリに移動するものとします（上記参照）。"
    },
    {
      "indent": 3,
      "text": "4: add IP alias to table",
      "ja": "4：IPエイリアスをテーブルに追加します"
    },
    {
      "indent": 6,
      "text": "If the InHARP_REQUEST requester's hardware source address duplicates a hardware source address entry, but there is no IP entry matching the received IP address, then the IP address SHALL be added to the hardware entries previous IP address(es). (E.g. adding an IP alias).",
      "ja": "INHARP_REQUEST Requesterのハードウェアソースアドレスがハードウェアソースアドレスのエントリを複製しているが、受信したIPアドレスに一致するIPエントリがない場合、IPアドレスは以前のIPアドレス（ES）のハードウェアエントリに追加されるものとします。（例：IPエイリアスの追加）。"
    },
    {
      "indent": 3,
      "text": "5: fresh entry, add it",
      "ja": "5：新鮮なエントリ、追加してください"
    },
    {
      "indent": 6,
      "text": "Standard case, create both entries and link them.",
      "ja": "標準的なケース、両方のエントリを作成してリンクします。"
    },
    {
      "indent": 3,
      "text": "A server MUST update the HARP table entry's timeout for each HARP_REQUEST. Explanation: if the client is sending HARP requests to the server, then the server SHOULD note that the client is still \"alive\" by updating the timeout on the client's HARP table entry.",
      "ja": "サーバーは、各harp_requestのHarpテーブルエントリのタイムアウトを更新する必要があります。説明：クライアントがハープリクエストをサーバーに送信している場合、サーバーは、クライアントのHARPテーブルエントリのタイムアウトを更新することにより、クライアントがまだ「生きている」ことに注意する必要があります。"
    },
    {
      "indent": 3,
      "text": "A HARP server SHOULD use the PIBES (see section 7) to send out HARP_REPLYs to all hardware addresses in its table when the HARP server table changes mappings. This feature decreases the time of stale entries in the clients.",
      "ja": "HARPサーバーは、PIBE（セクション7を参照）を使用して、HARP_REPLYSをテーブル内のすべてのハードウェアアドレスに送信する必要があります。この機能は、クライアントの古いエントリの時間を短縮します。"
    },
    {
      "indent": 3,
      "text": "If there are multiple addresses in the HRAL, then a server needs to act as a client to the other servers.",
      "ja": "Hralに複数のアドレスがある場合、サーバーは他のサーバーのクライアントとして動作する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.5 HARP and Permanent ARP Table Entries",
      "section_title": true,
      "ja": "5.5 HARPおよび永久ARPテーブルエントリ"
    },
    {
      "indent": 3,
      "text": "An IP station MUST have a mechanism (e.g. manual configuration) for determining what permanent entries it has. The details of the mechanism are beyond the scope of this memo. The permanent entries allow interoperability with legacy HIPPI adapters which do not yet implement dynamic HARP and use a table-based static ARP. Permanent entries are not aged.",
      "ja": "IPステーションには、永続的なエントリを決定するためのメカニズム（たとえば、手動構成）が必要です。メカニズムの詳細は、このメモの範囲を超えています。永続的なエントリにより、動的HARPをまだ実装しておらず、テーブルベースの静的ARPを使用していないレガシーHIPPIアダプターとの相互運用性が可能になります。恒久的なエントリは熟成されていません。"
    },
    {
      "indent": 3,
      "text": "The HARP server SHOULD use the static entries to resolve incoming HARP_REQUESTs from the clients. This feature eliminates the need for maintaining a static HARP table on the client ports.",
      "ja": "HARPサーバーは、静的エントリを使用して、クライアントからの着信HARP_REQUESTSを解決する必要があります。この機能により、クライアントポートに静的HARPテーブルを維持する必要がなくなります。"
    },
    {
      "indent": 0,
      "text": "5.6 HARP Table Aging",
      "section_title": true,
      "ja": "5.6 ハープテーブルの老化"
    },
    {
      "indent": 3,
      "text": "HARP table aging MUST be supported since IP addresses, especially IP aliases and also interfaces (with their ULA), are likely to move. When so doing the mapping in the clients own HARP table/cache becomes invalid and stale.",
      "ja": "IPアドレス、特にIPエイリアス、およびインターフェイス（ULAを使用）が移動する可能性が高いため、HARPテーブルの老化をサポートする必要があります。そうすると、クライアント自身のハープテーブル/キャッシュのマッピングが無効で古くなります。"
    },
    {
      "indent": 3,
      "text": "o When a client's HARP table entry ages beyond 15 minutes, a HARP client MUST invalidate the table entry.",
      "ja": "o クライアントのHARPテーブルエントリが15分を超える場合、HARPクライアントはテーブルエントリを無効にする必要があります。"
    },
    {
      "indent": 3,
      "text": "o When a server's HARP table entry ages beyond 20 minutes, the HARP server MUST delete the table entry.",
      "ja": "o サーバーのHARPテーブルエントリが20分を超える場合、HARPサーバーはテーブルエントリを削除する必要があります。"
    },
    {
      "indent": 3,
      "text": "NOTE: the client SHOULD revalidate a HARP table entry before it ages, thus restarting the aging time when the table entry is successfully revalidated. The client MAY continue sending traffic to the port referred to by this entry while revalidation is in progress, as long as the table entry has not aged. The client MUST revalidate an aged entry prior to transmitting any non-address-resolution traffic to the port referred to by this entry.",
      "ja": "注：クライアントは、高齢化する前にハープテーブルエントリを再検証する必要があります。そのため、テーブルエントリが正常に再検証された老化時間を再起動する必要があります。クライアントは、テーブルエントリが老化していない限り、再生が進行中にこのエントリで言及されたポートにトラフィックを送信し続けることができます。クライアントは、このエントリで言及されているポートにアドレス解像度以外のトラフィックを送信する前に、高齢のエントリを再検証する必要があります。"
    },
    {
      "indent": 3,
      "text": "The client revalidates the entry by querying the HARP server with a HARP_REQUEST. If a valid reply is received (e.g. HARP_REPLY), the entry is updated. If the address resolution service cannot resolve the entry (e.g. HARP_NAK, \"host not found\"), the associated table entry is removed. If the address resolution service is not available (i.e. \"server failure\") the client MUST attempt to revalidate the entry by transmitting an InHARP_REQUEST to the hardware address of the entry in question and updating the entry on receipt of an InHARP_REPLY. If the InHARP_REQUEST attempt fails to return an InHARP_REPLY, the associated table entry is removed.",
      "ja": "クライアントは、HARP_REQUESTでHARPサーバーを照会することにより、エントリを再確認します。有効な返信が受信された場合（harp_replyなど）、エントリが更新されます。アドレス解像度サービスがエントリを解決できない場合（例：HARP_NAK、「ホストは見つかりません」）、関連するテーブルエントリが削除されます。アドレス解像度サービスが利用できない場合（つまり、「サーバー障害」）、クライアントは、問題のエントリのハードウェアアドレスにINHARP_REQUESTを送信し、INHARP_REPLYの受領時にエントリを更新することにより、エントリの再評価を試みなければなりません。inharp_requestの試行がinharp_replyを返すことに失敗した場合、関連するテーブルエントリが削除されます。"
    },
    {
      "indent": 0,
      "text": "6. HARP Message Encoding",
      "section_title": true,
      "ja": "6. ハープメッセージエンコーディング"
    },
    {
      "indent": 3,
      "text": "The HARP Message is encapsulated over HIPPI-FP and HIPPI-LE headers. The HARP FP header values are to be set as defined in RFC-2067 \"IP over HIPPI\" [15]. The following sections detail the HIPPI-LE field contents and HARP message structure and contents. In a broadcast capable network the client MAY also support Type 1 and 6, Ethernet and IEEE 802 ARP packet formats.",
      "ja": "HARPメッセージは、Hippi-FPおよびHippi-Leヘッダーを介してカプセル化されています。HARP FPヘッダー値は、RFC-2067「IP Over Hippi」で定義されているように設定されます[15]。次のセクションでは、ヒッピルフィールドの内容とHARPメッセージ構造と内容について詳しく説明しています。ブロードキャスト対応ネットワークでは、クライアントはタイプ1および6、イーサネットおよびIEEE 802 ARPパケット形式をサポートすることもできます。"
    },
    {
      "indent": 0,
      "text": "6.1 HIPPI-LE Header of HARP Messages",
      "section_title": true,
      "ja": "6.1 HarpメッセージのHippi-leヘッダー"
    },
    {
      "indent": 3,
      "text": "The HIPPI message format for Internet datagrams shall conform to the HIPPI-FP [2] and HIPPI-LE [3] standards. The length of a HIPPI message, including trailing fill, shall be a multiple of eight bytes as required by HIPPI-LE. The HIPPI-LE header fields of HARP and InHARP requests and replies SHALL be:",
      "ja": "インターネットデータグラムのHIPPIメッセージ形式は、Hippi-FP [2]およびHippi-le [3]標準に準拠するものとします。トレーリングフィルを含むHippiメッセージの長さは、Hippi-leが必要とする8バイトの倍数でなければなりません。HARPおよびINHARPのリクエストと返信のヒッピルヘッダーフィールドは次のとおりです。"
    },
    {
      "indent": 3,
      "text": "FC (3 bits) SHALL contain zero.",
      "ja": "FC（3ビット）にはゼロが含まれます。"
    },
    {
      "indent": 3,
      "text": "Double-wide SHOULD be set according to HIPPI-LE [3]. This memo does NOT address the implications on HARP when this bit is set to 1 indicating the possibility of a port being able to accept 64-bit HIPPI connections.",
      "ja": "Hippi-le [3]に従って、双方を設定する必要があります。このメモは、このビットが1に設定されている場合、ポートが64ビットのHIPPI接続を受け入れることができる可能性を示している場合、HARPへの影響に対処しません。"
    },
    {
      "indent": 3,
      "text": "Message_Type SHALL contain 0 to indicate a data message. HARP messages are identified using the Ethertype and the message type in the ar$op field of the HARP message.",
      "ja": "Message_typeは、データメッセージを示すために0を含める必要があります。HARPメッセージは、HARPメッセージのAr $ opフィールドのEtherTypeとメッセージタイプを使用して識別されます。"
    },
    {
      "indent": 3,
      "text": "Destination_Switch_Address, SHALL be the Switch Address of the destination port.",
      "ja": "Destination_switch_addressは、宛先ポートのスイッチアドレスです。"
    },
    {
      "indent": 3,
      "text": "Destination_IEEE_Address SHALL be the ULA of the destination port, if known, otherwise zero.",
      "ja": "destination_ieee_addressは、既知の場合はゼロの宛先ポートのULAでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Destination_Address_Type SHALL be 2, a 12-bit logical address. The behavior with type = 1, source routing, is NOT defined in this specification.",
      "ja": "Destination_Address_Typeは、12ビットの論理アドレスである2でなければなりません。Type = 1の動作、ソースルーティングは、この仕様では定義されていません。"
    },
    {
      "indent": 3,
      "text": "Source_Switch_Address in requests SHALL be the sender's Switch Address.",
      "ja": "リクエストのsource_switch_addressは、送信者のスイッチアドレスでなければなりません。"
    },
    {
      "indent": 3,
      "text": "Source_IEEE_Address SHALL be the sender's ULA if known, otherwise zero.",
      "ja": "source_ieee_addressは、既知の場合は送信者のULAであり、そうでなければゼロです。"
    },
    {
      "indent": 3,
      "text": "Source_Address_Type SHALL be 2, a 12-bit logical address. The behavior with type = 1, source routing, is NOT defined in this specification.",
      "ja": "source_address_typeは、12ビットの論理アドレスである2でなければなりません。Type = 1の動作、ソースルーティングは、この仕様では定義されていません。"
    },
    {
      "indent": 0,
      "text": "6.1.1 IEEE 802.2 LLC",
      "section_title": true,
      "ja": "6.1.1 IEEE 802.2 LLC"
    },
    {
      "indent": 3,
      "text": "The IEEE 802.2 LLC Header SHALL begin in the first byte of the HIPPI-FP D2_Area.",
      "ja": "IEEE 802.2 LLCヘッダーは、HIPPI-FP D2_AREAの最初のバイトで開始するものとします。"
    },
    {
      "indent": 3,
      "text": "The LLC value for SSAP-DSAP-CTL SHALL be 0xAA-AA-03 (3 bytes) indicating the presence of a SNAP header.",
      "ja": "SSAP-DSAP-CTLのLLC値は、スナップヘッダーの存在を示す0xAA-AA-03（3バイト）でなければなりません。"
    },
    {
      "indent": 0,
      "text": "6.1.2 SNAP",
      "section_title": true,
      "ja": "6.1.2 スナップ"
    },
    {
      "indent": 3,
      "text": "The OUI value for Organization Code SHALL be 0x00-00-00 (3 bytes) indicating that the following two-bytes is an Ethertype.",
      "ja": "組織コードのOUI値は0x00-00-00（3バイト）でなければなりません。これは、次の2バイトが倫理であることを示しています。"
    },
    {
      "indent": 3,
      "text": "The Ethertype value SHALL be set as defined in Assigned Numbers [16]: InHARP = InARP = HARP = ARP = 2054 = 0x0806.",
      "ja": "EtherType値は、割り当てられた数値[16]で定義されているように設定するものとします。"
    },
    {
      "indent": 3,
      "text": "The total size of the LLC/SNAP header is fixed at 8-bytes.",
      "ja": "LLC/SNAPヘッダーの合計サイズは、8バイトで固定されています。"
    },
    {
      "indent": 0,
      "text": "6.1.3 HIPPI-LE header Diagram",
      "section_title": true,
      "ja": "6.1.3 ヒッピルヘッダー図"
    },
    {
      "indent": 19,
      "text": "HIPPI-LE header for HARP/InHARP PDUs:",
      "ja": "HARP/INHARP PDUSのヒッピルヘッダー："
    },
    {
      "indent": 3,
      "text": "   31    28        23  21          15        10     7         2   0\n   +-----+---------+-+-+-----------+---------+-----+---------+-----+\n 0 | 04 = IP ULP   |1|0|         000         |      03       |  0  |\n   +---------------+-+-+---------------------+---------------+-----+\n 1 |                            n + 8                              |\n   +-----+-+-------+-----------------------+-----------------------+\n 2 |[LA] |W|M_Type |          000          |  Dest. Switch Addr    |\n   +-----+-+-------+-----------------------+-----------------------+\n 3 | D_A_T | S_A_T |          000          | Source Switch Addr    |\n   +-------+-------+---------------+-------+-----------------------+\n 4 |             00 00             |                               |\n   +-------------------------------+                               |\n 5 |                         Destination ULA                       |\n   +-------------------------------+-------------------------------+\n 6 |             [LA]              |                               |\n   +-------------------------------+                               |\n 7 |                           Source ULA                          |\n   +===============+===============+===============+===============+\n 8 |       AA      |      AA       |       03      |       00      |\n   +---------------+---------------+---------------+---------------+\n 9 |       00      |      00       |        Ethertype (2054)       |\n   +---------------+---------------+-------------------------------+\n10 |Message byte 0 |Message byte 1 |Message byte 2 | . . .         |\n   +---------------+---------------+---------------+---            |\n   |                            .  .  .                            |\n   +   ------------+---------------+---------------+---------------+\n   |         . . . |   byte (n-2)  |   byte (n-1)  |     FILL      |\n   +---------------+---------------+---------------+---------------+\nN-1|      FILL     |     FILL      |     FILL      |     FILL      |\n   +---------------+---------------+---------------+---------------+\n                         HIPPI Message Format",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": "Words 0-1:  HIPPI-FP Header\nWords 2-7:  D1_Area (HIPPI-LE Header)\nWords 8-9:  D2_Area (IEEE 802.2 LLC/SNAP)\nWords 10-(N-1):  D2_Area           (HARP message)\n(n+8) is the nb of bytes in the  HARP message, incl. LLC/SNAP.\n+====+ denotes the boundary between D1_Area and D2_Area.\n[LA] fields are zero unless used otherwise locally.\nAbbreviations:\n \"W\"      = Double_Wide field        SHALL be 0\n \"M_Type\" = Message_Type field       SHALL be set according to\n                                              HIPPI-LE\n \"D_A_T\"  = Destination_Address_Type SHALL be 2",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 6,
      "text": " \"S_A_T\" = Source_Address_Type SHALL be 2 [FILL] bytes complete the HIPPI message to an even number of 32 bit words. The number of fill bytes is not counted in the data length.",
      "ja": "「s_a_」= source_addressタイプは2 [fill]バイトで、ヒッピーメッセージを偶数32ビット単語に完了します。充填バイトの数は、データの長さにカウントされません。"
    },
    {
      "indent": 0,
      "text": "6.2 HIPPI Hardware Address Formats and Requirements",
      "section_title": true,
      "ja": "6.2 HIPPIハードウェアアドレスフォーマットと要件"
    },
    {
      "indent": 3,
      "text": "For HIPPI-800, the Hardware Address is a 10-byte unit that SHALL contain the Switch Address AND the ULA. The format of a hardware address is:",
      "ja": "HIPPI-800の場合、ハードウェアアドレスは、スイッチアドレスとULAを含む10バイトユニットです。ハードウェアアドレスの形式は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "31              23              15               7              0\n+---------------+---------------+-------+-------+---------------+\n|   Mode Byte   |      00       |   0   |  X    |      XX       |\n+---------------+---------------+-------+-------+---------------+\n|   ULA byte 0  |   ULA byte 1  |   ULA byte 2  |   ULA byte 3  |\n+---------------+---------------+---------------+---------------+\n|   ULA byte 4  |   ULA byte 5  |\n+---------------+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Where \"XXX\" is the 12 bit HIPPI logical address defined in HIPPI-SC [4]. Details on ULA see next section.",
      "ja": "ここで、「xxx」は、Hippi-SCで定義されている12ビットHippi論理アドレスです[4]。ULAの詳細次のセクションを参照してください。"
    },
    {
      "indent": 3,
      "text": "Two switch addresses are considered to be the same when they have the same 12 bit destination HIPPI logical address.",
      "ja": "2つのスイッチアドレスは、同じ12ビットの宛先HIPPI論理アドレスを持っている場合、同じと見なされます。"
    },
    {
      "indent": 3,
      "text": "NOTE: In the case of HIPPI-6400, the hardware address is ONLY the 6- byte ULA. Therefore the length of the hardware address clearly defines which version of HIPPI is being used.",
      "ja": "注：HIPPI-6400の場合、ハードウェアアドレスは6バイトULAのみです。したがって、ハードウェアアドレスの長さは、Hippiのバージョンが使用されているバージョンを明確に定義します。"
    },
    {
      "indent": 0,
      "text": "6.2.1 48-bit Universal LAN MAC Addresses",
      "section_title": true,
      "ja": "6.2.1 48ビットユニバーサルLAN MACアドレス"
    },
    {
      "indent": 3,
      "text": "IEEE Standard 802.1A [11] specifies the Universal LAN MAC Address format. The globally unique part of the 48-bit space is administered by the IEEE. Each port on a HIPPI-SC LAN SHOULD be assigned a ULA. Multiple ULAs may be used if a port contains more than one IEEE 802.2 LLC protocol entity.",
      "ja": "IEEE Standard 802.1a [11]は、ユニバーサルLAN Macアドレス形式を指定します。48ビットスペースのグローバルにユニークな部分は、IEEEによって管理されています。Hippi-SC LANの各ポートには、ULAを割り当てる必要があります。ポートに複数のIEEE 802.2 LLCプロトコルエンティティが含まれている場合、複数のULAが使用される場合があります。"
    },
    {
      "indent": 3,
      "text": "The format of the HIPPI hardware address within its HARP message\nfollows IEEE 802.1A canonical bit order and HIPPI-FP bit and byte\norder. For example the requester's ULA part of the HIPPI hardware\naddress would decompose to:\n   31              23              15               7              0\n+---------------+---------------+---------------+---------------+\n|ULA byte 0 |L|G|   ULA byte 1  |   ULA byte 2  |   ULA byte 3  |\n+---------------+---------------+---------------+---------------+\n|   ULA byte 4  |   ULA byte 5  |\n+---------------+---------------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 21,
      "text": "Universal LAN MAC Address Format",
      "ja": "ユニバーサルLAN MACアドレス形式"
    },
    {
      "indent": 6,
      "text": "L (U/L bit) = 1 for Locally administered addresses, 0 for Universal. G (I/G bit) = 1 for Group addresses, 0 for Individual.",
      "ja": "l（u/l bit）= 1ローカルに管理されているアドレスの場合は、普遍的で0。g（I/gビット）= 1グループアドレスの場合は、個々の場合は0。"
    },
    {
      "indent": 3,
      "text": "The use of ULAs is OPTIONAL, but RECOMMENDED. The use of ULAs is REQUIRED if a port wishes to interoperate with a conventional network.",
      "ja": "ULASの使用はオプションですが、推奨されます。ポートが従来のネットワークと相互運用したい場合、ULASの使用が必要です。"
    },
    {
      "indent": 3,
      "text": "ULAs may also be used by bridging devices that replace HIPPI hardware headers with the MAC headers of other LANs.",
      "ja": "ULASは、Hippiハードウェアヘッダーを他のLANのMacヘッダーに置き換えるブリッジングデバイスでも使用できます。"
    },
    {
      "indent": 0,
      "text": "6.3 HARP and InHARP Message Formats",
      "section_title": true,
      "ja": "6.3 HarpおよびInharpメッセージ形式"
    },
    {
      "indent": 3,
      "text": "The HARP protocols use the HIPARP hardware type (ar$hrd) [16], protocol type (ar$pro), and operation code (ar$op) data formats as the ARP, and InARP protocols [15,7]. In addition, HARP makes use of an additional operation code for ARP_NAK introduced with [12]. The remainder of the HARP/InHARP message format is different than the ARP/InARP message format defined in [15,7,10] and it is also different from the format defined in the first \"IP and ARP on HIPPI\" RFC-1374 [14].",
      "ja": "HARPプロトコルは、HIPARPハードウェアタイプ（AR $ HRD）[16]、プロトコルタイプ（AR $ PRO）、および操作コード（AR $ OP）データ形式をARPとして使用し、ARP [15,7]を使用します。さらに、HARPは[12]で導入されたARP_NAKの追加操作コードを使用しています。HARP/INHARPメッセージ形式の残りは、[15,7,10]で定義されているARP/INARPメッセージ形式とは異なり、最初の「HIPPIのIPとARP」RFC-1374 [RFC-1374で定義された形式とも異なります。14]。"
    },
    {
      "indent": 3,
      "text": "HARP messages SHALL be transmitted with the HIPARP hardware type code of 28 (decimal). Furthermore, HARP messages SHALL be accepted if received with hardware type codes of either 28, 1 or 6 (decimal).",
      "ja": "HARPメッセージは、28（小数）のHIPARPハードウェアタイプコードで送信されます。さらに、28、1、または6（小数）のハードウェアタイプコードで受信した場合、HARPメッセージは受け入れられます。"
    },
    {
      "indent": 3,
      "text": "The HARP message has several fields that have the following format and values:",
      "ja": "HARPメッセージには、次の形式と値を持ついくつかのフィールドがあります。"
    },
    {
      "indent": 3,
      "text": "Data sizes and field meaning: ar$hrd 16 bits Hardware type ar$pro 16 bits Protocol type of the protocol fields below ar$op 16 bits Operation code (request, reply, or NAK) ar$pln 8 bits byte length of each protocol address ar$rhl 8 bits requester's HIPPI hardware address length (q) ar$thl 8 bits target's HIPPI hardware address length (x) ar$rpa 32 bits requester's protocol address ar$tpa 32 bits target's protocol address ar$rha qbytes requester's HIPPI Hardware address ar$tha xbytes target's HIPPI Hardware address",
      "ja": "データサイズとフィールドの意味：AR $ 16ビットハードウェアタイプAR $ PRO 16ビットプロトコルタイプ以下のプロトコルフィールドAR $ 16ビット操作コード（リクエスト、返信、またはNAK）AR $ PLN 8ビットバイト各プロトコルの長さアドレスAR $ RHL 8ビットリクエスト担当者のHIPPIハードウェアアドレス長さ（Q）AR $ THL 8ビットターゲットのHIPPIハードウェアアドレス長（X）AR $ RPA 32ビットリクエスタターのプロトコルアドレスAR $ TPA 32ビットターゲットのプロトコルアドレスアドレスar $ tha xbytesターゲットのHippiハードウェアアドレス"
    },
    {
      "indent": 3,
      "text": "Where : ar$hrd - SHALL contain 28. (HIPARP)",
      "ja": "場所：ar $ hrd- 28.（hiparp）が含まれます"
    },
    {
      "indent": 5,
      "text": "ar$pro - SHALL contain the IP protocol code 2048 (decimal).",
      "ja": "ar $ pro-は、IPプロトコルコード2048（小数）を含めるものとします。"
    },
    {
      "indent": 5,
      "text": "ar$op - SHALL contain the operational value (decimal): 1 for HARP_REQUESTs 2 for HARP_REPLYs 8 for InHARP_REQUESTs 9 for InHARP_REPLYs 10 for HARP_NAK",
      "ja": "ar $ op -conforational Value（decimal）：1 harp_replys 8のharp_requests 2の場合：inharp_replys 9 for harp_replys 10 for harp_nak"
    },
    {
      "indent": 5,
      "text": "ar$pln - SHALL contain 4.",
      "ja": "ar $ pln-には4が含まれます。"
    },
    {
      "indent": 5,
      "text": "ar$rln - SHALL contain 10 IF this is a HIPPI-800 HW address ELSE, for HIPPI-6400, it SHALL contain 6.",
      "ja": "ar $ rln-これがHIPPI-800 HWアドレスである場合は10を含むものとする。HIPPI-6400の場合、6を含む。"
    },
    {
      "indent": 5,
      "text": "ar$thl - SHALL contain 10 IF this is a HIPPI-800 HW address ELSE, for HIPPI-6400, it SHALL contain 6.",
      "ja": "ar $ thl-これがHIPPI-800 HWアドレスである場合は、HIPPI-6400の場合、6を含む6を含む6。"
    },
    {
      "indent": 5,
      "text": "ar$rha - in requests and NAKs it SHALL contain the requester's HW address. In replies it SHALL contain the target port's HW address.",
      "ja": "ar $ rha-リクエストとnaksでは、要求者のHWアドレスを含めるものとします。返信には、ターゲットポートのHWアドレスが含まれます。"
    },
    {
      "indent": 5,
      "text": "ar$rpa - in requests and NAKs it SHALL contain the requester's IP address if known, otherwise zero. In other replies it SHALL contain the target port's IP address.",
      "ja": "ar $ rpa-リクエストとnaksでは、既知の場合はリクエスターのIPアドレスが含まれます。他の返信では、ターゲットポートのIPアドレスが含まれます。"
    },
    {
      "indent": 5,
      "text": "ar$tha - in requests and NAKs it SHALL contain the target's HW address if known, otherwise zero. In other replies it SHALL contain the requester's HW addressA.",
      "ja": "ar $ tha-リクエストとnaksでは、既知の場合はターゲットのHWアドレスが含まれ、それ以外の場合はゼロが含まれます。他の返信では、要求者のHWアドレスが含まれます。"
    },
    {
      "indent": 5,
      "text": "ar$tpa - in requests and NAKs it SHALL contain the target's IP address if known, otherwise zero. In other replies it SHALL contain the requester's IP address.",
      "ja": "ar $ tpa-リクエストとnaksでは、既知の場合はターゲットのIPアドレスが含まれ、それ以外の場合はゼロが含まれます。他の返信では、要求者のIPアドレスが含まれます。"
    },
    {
      "indent": 3,
      "text": "The format of the six bytes of the ULA SHALL be the same as required in the HIPPI-LE header (see section 6.2), except for the alignment of the ULAs with respect to the 32-bit HIPPI word, which is different between ARP and HIPPI-LE. No bit reversal is necessary as is required with FDDI.",
      "ja": "ULAの6バイトの形式は、ARPとARPとの間で異なる32ビットHIPPIワードに関するULASのアラインメントを除き、Hippi-leヘッダーで必要と同じでなければなりません（セクション6.2を参照）。Hippi-le。FDDIで必要なように、少し逆転する必要はありません。"
    },
    {
      "indent": 3,
      "text": "   31    28        23  21          15        10     7         2   0\n   +-----+---------+-+-+-----------+---------+-----+---------+-----+\n 0 |      04       |1|0|         000         |      03       |  0  |\n   +---------------+-+-+---------------------+---------------+-----+\n 1 |                              45                               |\n   +-----+-+-------+-----------------------+-----------------------+\n 2 |[LA] |W|MsgT= 0|          000          |   Dest. Switch Addr   |\n   +-----+-+-------+-----------------------+-----------------------+\n 3 |   2   |   2   |          000          |  Source Switch Addr   |\n   +---------------+---------------+-------+-----------------------+\n 4 |             00 00             |                               |\n   +-------------------------------+                               |\n 5 |                      Destination ULA                          |\n   +-------------------------------+-------------------------------+\n 6 |             [LA]              |                               |\n   +-------------------------------+                               |\n 7 |                         Source ULA                            |\n   +===============+===============+===============+===============+\n 8 |       AA      |      AA       |       03      |       00      |\n   +---------------+---------------+---------------+---------------+\n 9 |       00      |      00       |        Ethertype (2054)       |\n   +---------------+---------------+-------------------------------+\n10 |              hrd (28)         |           pro (2048)          |\n   +---------------+---------------+---------------+---------------+\n11 |             op (ar$op)        |     pln (6)   |   rhl (q)     |\n   +---------------+---------------+---------------+---------------+\n12 |    thl = (x)  |   Requester IP Address upper  (24 bits)       |\n   +---------------------------------------------------------------+\n13 | Req. IP lower |      Target IP Address upper  (24 bits)       |\n   +---------------+-----------------------------------------------+\n14 | Tgt. IP lower | Requester HIPPI Hardware Address bytes 0 - 2  |\n   +---------------+-----------------------------------------------+\n15 |         Requester HIPPI Hardware Address bytes 3 - 6          |\n   +-----------------------------------------------+---------------+\n16 |         Requester HW Address bytes 7 - q      | Tgt HW byte 0 |\n   +---------------+---------------+---------------+---------------+\n17 |          Target  HIPPI Hardware Address bytes 1 - 4           |\n   +---------------------------------------------------------------+\n18 |          Target  HIPPI Hardware Address bytes 5 - 8           |\n   +---------------+---------------+---------------+---------------+\n19 |Tgt HW byte 9-x|     FILL      |     FILL      |     FILL      |\n   +---------------+---------------+---------------+---------------+\n                        HARP - InHARP Message",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.3.1 Example Message encodings:",
      "ja": "6.3.1 メッセージメッセージのエンコーディング："
    },
    {
      "indent": 3,
      "text": "HARP_REQUEST message\n      HARP ar$op   = 1 (HARP_REQUEST)\n      HARP ar$rpa  = IPy                HARP ar$tpa  = IPa\n      HARP ar$rha  = SWy ULAy           HARP ar$tha  = 0 **\n      ** is what we would like to find out",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "HARP_REPLY message format\n      HARP ar$op   = 2 (HARP_REPLY)\n      HARP ar$rpa  = IPa                HARP ar$tpa  = IPy\n      HARP ar$rha  = SWa ULAa *         HARP ar$tha  = SWy ULAy\n      * answer we were looking for",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "InHARP_REQUEST message format\n      HARP ar$op    = 8 (InHARP_REQUEST)\n      HARP ar$rpa   = IPy               HARP ar$tpa   = 0 **\n      HARP ar$rha   = SWy ULAy          HARP ar$tha   = SWa ULAa\n      ** is what we would like to find out",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "InHARP_REPLY message format\n      HARP ar$op    = 9 (InHARP_REPLY)\n      HARP ar$rpa   = IPs *             HARP ar$tpa   = IPy\n      HARP ar$rha   = SWa ULAa          HARP ar$tha   = SWy ULAy\n      * answer we were looking for",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6.3.2 HARP_NAK message format",
      "section_title": true,
      "ja": "6.3.2 harp_nakメッセージ形式"
    },
    {
      "indent": 3,
      "text": "The HARP_NAK message format is the same as the received HARP_REQUEST message format with the operation code set to HARP_NAK; i.e. the HARP_REQUEST message data is copied byte for byte for transmission with the HARP_REQUEST operation code changed to the HARP_NAK value. HARP makes use of an additional operation code for HARP_NAK. Hence, HARP_NAK MUST be implemented.",
      "ja": "harp_nakメッセージ形式は、操作コードがharp_nakに設定された、受信したharp_requestメッセージ形式と同じです。つまり、HARP_REQUESTメッセージデータは、HARP_NAK値に変更されたHARP_REQUEST操作コードを使用して、送信用にバイト用のバイトにコピーされます。Harpは、harp_nakの追加操作コードを使用しています。したがって、harp_nakを実装する必要があります。"
    },
    {
      "indent": 0,
      "text": "6.3.3 Combined HIPPI-LE and HARP message addresses",
      "section_title": true,
      "ja": "6.3.3 Hippi-LeとHarpのメッセージアドレスを組み合わせました"
    },
    {
      "indent": 3,
      "text": "The combined HIPPI-LE/HARP message contains ten addresses, two for the destination and two for the source of the message, three for the requester and three for the target:",
      "ja": "結合されたHippi-le/Harpメッセージには、10のアドレスが含まれています。宛先用に2つ、メッセージのソースに2つ、リクエスター用に3つ、ターゲットに3つのアドレスが含まれています。"
    },
    {
      "indent": 6,
      "text": "Destination Switch Address (HIPPI-LE) Destination ULA (HIPPI_LE)",
      "ja": "宛先スイッチアドレス（hippi-le）宛先ULA（hippi_le）"
    },
    {
      "indent": 6,
      "text": "Source Switch Address (HIPPI-LE) Source ULA (HIPPI-LE) Requester IP Address (HARP) Requester ULA (HARP) Requester Switch Address (HARP)",
      "ja": "ソーススイッチアドレス（HIPPI-LE）ソースULA（HIPPI-LE）リクエストターIPアドレス（HARP）リクエスターULA（HARP）リクエスタースイッチアドレス（HARP）"
    },
    {
      "indent": 6,
      "text": "Target IP Address (HARP) Target ULA (HARP) Target Switch Address (HARP)",
      "ja": "ターゲットIPアドレス（HARP）ターゲットULA（HARP）ターゲットスイッチアドレス（HARP）"
    },
    {
      "indent": 3,
      "text": "Examples:",
      "ja": "例："
    },
    {
      "indent": 3,
      "text": "The following relations are true for a HARP_REQUEST and InHARP_REQUESTs.",
      "ja": "次の関係は、harp_requestおよびinharp_requestsに当てはまります。"
    },
    {
      "indent": 6,
      "text": "LIS without broadcast -  Dest SW Addr   = HARP server SW Addr\n(with HARP server)       Dest ULA       = HARP server ULA\n                         Source SW Addr = Requester's SW Addr\n                         Source ULA     = Requester's ULA",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "7 Broadcast and Multicast",
      "ja": "7ブロードキャストとマルチキャスト"
    },
    {
      "indent": 3,
      "text": "HIPPI-SC does not require switches to support broadcast. Broadcast support has therefore been absent from many HIPPI networks.",
      "ja": "Hippi-SCは、ブロードキャストをサポートするためにスイッチを必要としません。したがって、ブロードキャストサポートは多くのHippiネットワークに欠けています。"
    },
    {
      "indent": 3,
      "text": "During its registration phase, every port, including HARP server(s), discover if the underlying medium is capable of broadcast (see section 5.1.2). Should this not be the case, then the HARP server(s) MUST emulate broadcast through an IP broadcast emulation server.",
      "ja": "登録段階では、HARPサーバーを含むすべてのポートが、基礎となる媒体がブロードキャストできるかどうかを発見します（セクション5.1.2を参照）。そうでない場合、HARPサーバーはIPブロードキャストエミュレーションサーバーを介してブロードキャストをエミュレートする必要があります。"
    },
    {
      "indent": 3,
      "text": "A HIPPI IP broadcast server (PIBES) is an extension to the HARP server and only makes sense when the LIS does not inherently support broadcast. The PIBES allows common upper layer networking protocols (RIP, TCP, UDP, etc.) to access IP LIS broadcast.",
      "ja": "HIPPI IPブロードキャストサーバー（PIBES）は、HARPサーバーの拡張機能であり、LISが本質的にブロードキャストをサポートしていない場合にのみ理にかなっています。PIBESにより、一般的な上層ネットワーキングプロトコル（RIP、TCP、UDPなど）がIP LISブロードキャストにアクセスできます。"
    },
    {
      "indent": 0,
      "text": "7.1 Protocol for an IP Broadcast Emulation Server - PIBES",
      "section_title": true,
      "ja": "7.1 IPブロードキャストエミュレーションサーバーのプロトコル-Pibes"
    },
    {
      "indent": 3,
      "text": "To emulate broadcast within an LIS, a PIBES SHALL use the currently valid HARP table of the HARP server as a list of addresses called the target list. The broadcast server SHALL validate that all incoming messages have a source address which corresponds to an address in the target list. Only messages addressed to the IP LIS broadcast addresses, multicast address or 255.255.255.255 are considered valid messages for broadcasting. Invalid messages MUST be dropped. All valid incoming messages shall be forwarded to all addresses in the target list.",
      "ja": "LIS内でブロードキャストをエミュレートするには、PIBESは、HARPサーバーの現在有効なHARPテーブルをターゲットリストと呼ばれるアドレスのリストとして使用するものとします。ブロードキャストサーバーは、すべての着信メッセージがターゲットリストのアドレスに対応するソースアドレスを持っていることを検証するものとします。IP LISブロードキャストアドレス、マルチキャストアドレス、または255.255.255.255にアドレス指定されたメッセージのみが、放送用の有効なメッセージと見なされます。無効なメッセージを削除する必要があります。すべての有効な受信メッセージは、ターゲットリストのすべてのアドレスに転送されるものとします。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that the broadcast server run on the same port as the HARP server since this memo does not define the protocol for exchanging the valid HARP table. The default address to use for the broadcast address is the operational HARP server address.",
      "ja": "このメモは有効なHARPテーブルを交換するためのプロトコルを定義しないため、HARPサーバーと同じポートでブロードキャストサーバーを実行することをお勧めします。ブロードキャストアドレスで使用するデフォルトのアドレスは、運用上のHARPサーバーアドレスです。"
    },
    {
      "indent": 0,
      "text": "7.2 IP Broadcast Address",
      "section_title": true,
      "ja": "7.2 IPブロードキャストアドレス"
    },
    {
      "indent": 3,
      "text": "This memo only defines IP broadcast. It is independent of the underlying hardware addressing and broadcast capabilities. Any port can differentiate between IP traffic directed to itself and a broadcast message sent to it by looking at the IP address. All IP broadcast messages SHALL use the IP LIS broadcast address or.",
      "ja": "このメモは、IPブロードキャストのみを定義します。基礎となるハードウェアのアドレス指定とブロードキャスト機能とは無関係です。ポートは、それ自体に向けられたIPトラフィックと、IPアドレスを見ることで送信されるブロードキャストメッセージを区別できます。すべてのIPブロードキャストメッセージは、IP lisブロードキャストアドレスを使用するものとします。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that the PIBES run on the same port as the HARP server. In that case, the PIBES SHALL use the same address as the HARP server.",
      "ja": "PibesはHarpサーバーと同じポートで実行されることをお勧めします。その場合、パイブはHARPサーバーと同じアドレスを使用するものとします。"
    },
    {
      "indent": 0,
      "text": "7.3 IP Multicast Address",
      "section_title": true,
      "ja": "7.3 IPマルチキャストアドレス"
    },
    {
      "indent": 3,
      "text": "HIPPI does not directly support multicast address, therefore there are no mappings available from IP multicast addresses to HIPPI multicast services. Current IP multicast implementations (i.e. MBONE and IP tunneling, see [9]) will continue to operate over HIPPI-based logical IP subnets if all IP multicast packets are sent using the same algorithm as if the packet were being sent to 255.255.255.255.",
      "ja": "Hippiはマルチキャストアドレスを直接サポートしていないため、IPマルチキャストアドレスからHIPPIマルチキャストサービスまで利用可能なマッピングはありません。現在のIPマルチキャストの実装（つまり、MBONEおよびIPトンネリング、[9]を参照）は、すべてのIPマルチキャストパケットが255.255.255.255に送信されているかのようにすべてのIPマルチキャストパケットを使用して送信された場合、HIPPIベースの論理IPサブネットを引き続き動作します。"
    },
    {
      "indent": 0,
      "text": "7.4 A Note on Broadcast Emulation Performance",
      "section_title": true,
      "ja": "7.4 ブロードキャストエミュレーションパフォーマンスに関するメモ"
    },
    {
      "indent": 3,
      "text": "It is obvious that a broadcast emulation service (as defined in section 7.1) has an inherent performance limit. In an LIS with n ports, the upper bound on the bandwidth that such a service can broadcast is: (total bandwidth)/(n+1)",
      "ja": "ブロードキャストエミュレーションサービス（セクション7.1で定義されている）には、固有のパフォーマンス制限があることは明らかです。Nポートを備えたLISでは、そのようなサービスがブロードキャストできる帯域幅の上限は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "since each message must first enter the broadcast server, accounting for the additional 1, and then be sent to all n ports. The broadcast server could forward the message destined to the port on which it runs internally, thus reducing (n+1) to (n) in a first optimization.",
      "ja": "各メッセージは最初にブロードキャストサーバーに入力する必要があるため、追加の1を説明してから、すべてのNポートに送信する必要があります。ブロードキャストサーバーは、内部で実行されるポートに運命づけられているメッセージを転送することができ、最初の最適化で（n 1）に（n）に削減できます。"
    },
    {
      "indent": 3,
      "text": "This service is adequate for the standard networking protocols such as RIP, OSPF, NIS, etc. since they usually use a small fraction of the network bandwidth for broadcast. For these purposes, the broadcast emulation server as defined in this memo allows the HIPPI network to look similar to an Ethernet network to the higher layers.",
      "ja": "このサービスは、RIP、OSPF、NISなどの標準的なネットワークプロトコルに適しています。通常、ネットワーク帯域幅のごく一部をブロードキャストに使用するためです。これらの目的のために、このメモで定義されているブロードキャストエミュレーションサーバーにより、HIPPIネットワークは高レイヤーにイーサネットネットワークに似ています。"
    },
    {
      "indent": 3,
      "text": "It is further obvious that such an emulation cannot be used to broadcast high bandwidth traffic. For such a solution, hardware support for true broadcast is required.",
      "ja": "このようなエミュレーションを使用して、高い帯域幅トラフィックをブロードキャストできないことはさらに明らかです。このようなソリューションには、真のブロードキャストのハードウェアサポートが必要です。"
    },
    {
      "indent": 0,
      "text": "8 HARP for Scheduled Transfer Protocol[17]",
      "ja": "8スケジュールされた転送プロトコルのハープ[17]"
    },
    {
      "indent": 3,
      "text": "This RFC also applies for resolving addresses used with Scheduled Transfer (STP) over HIPPI-800 instead of IP. This RFC's message types and algorithms can be used for STP (since STP uses Internet Addresses) as long as there is also an IP over HIPPI implementation on all of the ports.",
      "ja": "このRFCは、IPの代わりにHIPPI-800を介してスケジュールされた転送（STP）で使用されるアドレスの解決にも適用されます。このRFCのメッセージタイプとアルゴリズムは、すべてのポートにHIPPIを介したIPを介してIPがある限り、STPに（STPはインターネットアドレスを使用するため）に使用できます。"
    },
    {
      "indent": 0,
      "text": "9 Discovery of One's Own Switch Address",
      "ja": "9独自のスイッチアドレスの発見"
    },
    {
      "indent": 3,
      "text": "This HARP specification assumes that each port has prior knowledge of its own hardware address. This address may be manually configured, by means outside the scope of this memo or a port may discover its own logical address through the algorithm described below.",
      "ja": "このHARP仕様は、各ポートが独自のハードウェアアドレスの事前知識を持っていることを前提としています。このアドレスは、このメモまたはポートの範囲外の手段によって手動で構成される場合があります。"
    },
    {
      "indent": 3,
      "text": "Ports are NOT REQUIRED to implement this switch address discovery protocol but are encouraged to do so since it reduces the administrative overhead. The algorithm presented in this section is based on John Renwick's work as detailed in RFC-1374 [14]. The concept of the discovery process is to scan all possible switch addresses. The messages that are received will be the ones containing one of our switch addresses.",
      "ja": "ポートはこのスイッチアドレスディスカバリープロトコルを実装する必要はありませんが、管理オーバーヘッドを削減するため、そうすることをお勧めします。このセクションで提示されたアルゴリズムは、RFC-1374 [14]で詳述されているジョンレンウィックの研究に基づいています。発見プロセスの概念は、可能なすべてのスイッチアドレスをスキャンすることです。受信されたメッセージは、スイッチアドレスの1つを含むメッセージです。"
    },
    {
      "indent": 3,
      "text": "If a port implements this algorithm it SHALL form a HIPPI-LE message as defined in HIPPI-LE: containing an Self_Address_Resolution_Request (see [3]) PDU Type, a Source_IEEE_Address and Destination_IEEE_Address (set to the correct ULA for the sender), and the Source_Switch_Address and Destination_Switch_Address.",
      "ja": "ポートがこのアルゴリズムを実装する場合、hippi-leで定義されているようにヒッピルメッセージを形成するものとする：self_address_resolution_request（[3]を参照）pduタイプ、Source_ieee_address、destination_ieee_address（送信者の正しいULAに設定）、およびsource_switch_addressおよびdestination_switch_address。"
    },
    {
      "indent": 3,
      "text": "This self address resolution message uses the same HIPPI-LE message format as described in HIPPI-SC and HIPPI-LE: the Self Address Resolution Request PDU and Self Address Resolution Response PDU type codes and no piggybacked ULP data. The HIPPI-LE header contents for the request are:",
      "ja": "この自己アドレス解像度メッセージは、Hippi-SCおよびHippi-Leで説明されているのと同じHippi-Leメッセージ形式を使用します。自己アドレス解像度はPDUとセルフアドレス解像度の応答PDUタイプコードと、ピギーバックされたULPデータを要求します。リクエストのヒッピルヘッダーの内容は次のとおりです。"
    },
    {
      "indent": 6,
      "text": "HIPPI-LE Message_Type is = 3, Self Addr. Resolution Request HIPPI-LE Destination_Address_Type = 0 (undefined) HIPPI-LE Destination_Switch_Address = X (X element scan range) HIPPI-LE Source_Address_Type = 0 (undefined) HIPPI-LE Source_Switch_Address = 0 (unknown) HIPPI-LE Destination_IEEE_Address = 0 HIPPI-LE Source_IEEE_Address = my ULA",
      "ja": "hippi-le message_type is = 3、self addr。解像度要求hippi-le destination_address_type = 0（undefined）hippi-le destination_switch_address = x（x要素スキャン範囲）hippi-le source_address_type = 0（未定義）hippi-le source_switch_address = 0（hippi-le destination_ieee_address = 0 hippi-lelesource_ieee_address = my ula"
    },
    {
      "indent": 3,
      "text": "There is no D2 data; the message contains only the HIPPI-FP header and D1_Area with the HIPPI-LE header.",
      "ja": "D2データはありません。このメッセージには、Hippi-leヘッダーを備えたHippi-FPヘッダーとD1_AREAのみが含まれています。"
    },
    {
      "indent": 3,
      "text": "Ports SHALL start the scan with a configurable logical address (default 0x000) and increment the value for by one for each subsequent try. The port SHALL continue until it sees its own self address resolution request or it has reached the end, which may be another configurable value (default 0xFFF). It is RECOMMENDED that the range of addresses to scan be configurable since some networks have equipment that does not gracefully handle HIPPI-LE messages.",
      "ja": "ポートは、構成可能な論理アドレス（デフォルト0x000）でスキャンを開始し、その後の試行ごとに1の値を増加させます。ポートは、独自の自己アドレス解像度のリクエストを確認するか、終了に達するまで継続するものとします。一部のネットワークには、Hippi-leメッセージを優雅に処理しない機器を備えているため、スキャンするアドレスの範囲を構成可能にすることをお勧めします。"
    },
    {
      "indent": 3,
      "text": "After a port sends the[se] request[s], two positive outcomes are possible:",
      "ja": "ポートが[se]リクエストを送信した後、2つの肯定的な結果が可能です。"
    },
    {
      "indent": 3,
      "text": "o the port receives its own request(s), and obtains one of its own Switch Address, or",
      "ja": "o ポートは独自の要求を受け取り、独自のスイッチアドレスの1つを取得するか、"
    },
    {
      "indent": 3,
      "text": "o the port receives an AR_S_Response with the Destination_Switch_Address filled in.",
      "ja": "o ポートは、destination_switch_addressが記入されたAR_S_RESPONSEを受け取ります。"
    },
    {
      "indent": 0,
      "text": "10 Security Considerations",
      "ja": "10のセキュリティ上の考慮事項"
    },
    {
      "indent": 3,
      "text": "HARP messages are not authenticated which is a potentially flaw that could allow corrupt information to be introduced into the server system.",
      "ja": "HARPメッセージは認証されていません。これは、破損した情報をサーバーシステムに導入できる可能性がある潜在的な欠陥です。"
    },
    {
      "indent": 3,
      "text": "There are other known security issues relating to port impersonation via the address resolution protocols used in the Internet [8]. No special security mechanisms have been added to the address resolution mechanism defined here for use with networks using HARP.",
      "ja": "インターネットで使用されるアドレス解像度プロトコルを介したポートのなりすましに関連する他の既知のセキュリティ問題があります[8]。HARPを使用してネットワークで使用するためにここで定義されているアドレス解像度メカニズムに特別なセキュリティメカニズムは追加されていません。"
    },
    {
      "indent": 3,
      "text": "Not all of the security issues relating to ARP over HIPPI are clearly understood at this time. However, given the security hole ARP allows, other concerns are probably minor.",
      "ja": "HippiをめぐるARPに関連するすべてのセキュリティ問題が現時点では明確に理解されているわけではありません。ただし、セキュリティホールARPが許可されていることを考えると、他の懸念はおそらくマイナーです。"
    },
    {
      "indent": 0,
      "text": "11 Open Issues",
      "ja": "11の開かれた問題"
    },
    {
      "indent": 3,
      "text": "Synchronization and coordination of multiple HARP servers and multiple broadcast servers are left for further study.",
      "ja": "複数のHARPサーバーと複数のブロードキャストサーバーの同期と調整は、さらなる研究のために残されています。"
    },
    {
      "indent": 0,
      "text": "12 HARP Examples",
      "ja": "12のハープの例"
    },
    {
      "indent": 3,
      "text": "Assume a HIPPI-SC switch is installed with three connected ports: x, y, and a. Each port has a unique hardware address that consists of Switch Address (e.g. SWx, SWy, SWa) and unique ULA (ULAx, ULAy and ULAa, respectively). There is a HARP server connected to a switch port that is mapped to the address HWa (SWa, ULAa), this address is the authoritative HIPPI hardware address in the HRAL (HARP Request Address List).",
      "ja": "Hippi-SCスイッチが3つの接続されたポートでインストールされていると仮定します：x、y、およびa。各ポートには、スイッチアドレス（SWX、SWY、SWAなど）とユニークなULA（Ulax、Ulay、ULAA）で構成される一意のハードウェアアドレスがあります。アドレスHWA（SWA、ULAA）にマッピングされたスイッチポートに接続されたHARPサーバーがあります。このアドレスは、HRAL（HARPリクエストアドレスリスト）の権威あるHIPPIハードウェアアドレスです。"
    },
    {
      "indent": 3,
      "text": "The HARP server's table is empty. Ports X and Y each know their own hardware address. Eventually they want to talk to each other; each knows the other's IP address (from the port database) but neither knows the other's ULA or Switch Address. Both ports X and Y have their interfaces configured DOWN.",
      "ja": "Harpサーバーのテーブルは空です。ポートXとYはそれぞれ独自のハードウェアアドレスを知っています。最終的に彼らはお互いに話したいと思っています。それぞれが相手のIPアドレス（ポートデータベースから）を知っていますが、どちらも相手のULAまたはスイッチアドレスを知りません。ポートXとYの両方に、インターフェイスが下に構成されています。"
    },
    {
      "indent": 3,
      "text": "NOTE: The LLC, SNAP, Ethertype, HIPPI-LE Message Type, ar$hrd, ar$pro, ar$pln fields are left out from the examples below since they are constant. Likewise, ar$rhl = ar$thl = 9 are omitted since these are all HIPPI-800 examples.",
      "ja": "注：LLC、SNAP、ETHERTYPE、HIPPI-LEメッセージタイプ、ar $ hrd、ar $ pro、ar $ plnフィールドは、一定であるため、以下の例から除外されています。同様に、ar $ rhl = ar $ thl = 9はすべてhippi-800の例であるため省略されています。"
    },
    {
      "indent": 0,
      "text": "12.1 Registration Phase of Client Y on Non-broadcast Hardware",
      "section_title": true,
      "ja": "12.1 非ブロードキャストハードウェアのクライアントYの登録フェーズ"
    },
    {
      "indent": 3,
      "text": "Port Y starts: its HARP table entry state for the server: PENDING",
      "ja": "ポートYの開始：サーバーのハープテーブルエントリ状態：保留中"
    },
    {
      "indent": 3,
      "text": "1. Port Y initiates its interface and sends an InHARP_REQUEST to HWa after starting a table entry for HWa.",
      "ja": "1. ポートYは、インターフェイスを開始し、HWAのテーブルエントリを開始した後、HWAにinharp_requestを送信します。"
    },
    {
      "indent": 6,
      "text": "HIPPI-LE Destination_Switch_Address = SWa\nHIPPI-LE Source_Switch_Address      = SWy\nHIPPI-LE Destination_IEEE_Address   = ULAa\nHIPPI-LE Source_IEEE_Address        = ULAy\nHARP ar$op                          = 8 (InHARP_REQUEST)\nHARP ar$rpa                         = IPy\nHARP ar$tpa                         = 0 **\nHARP ar$rha                         = SWy ULAy\nHARP ar$tha                         = SWa ULAa\n** is what we would like to find out",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. HARP server receives Y's InHARP_REQUEST, it examines the source addresses and scans its tables for a match. Since this is the first time Y connects to this server there is no entry and one will be created and time stamped with the information from the InHARP_REQUEST. The HARP server will then send a InHARP_REPLY including its IP address.",
      "ja": "2. Harp ServerはYのINHARP_REQUESTを受信し、ソースアドレスを調べて試合のテーブルをスキャンします。yがこのサーバーに接続するのは初めてであるため、エントリが作成されず、1つは作成され、inharp_requestからの情報が時間がかけられます。Harpサーバーは、IPアドレスを含むINHARP_REPLYを送信します。"
    },
    {
      "indent": 6,
      "text": "HIPPI-LE Destination_Switch_Address = SWy HIPPI-LE Source_Switch_Address = SWa HIPPI-LE Destination_IEEE_Address = ULAy HIPPI-LE Source_IEEE_Address = ULAa HARP ar$op = 9 (InHARP_REPLY) HARP ar$rpa = IPs * HARP ar$tpa = IPy HARP ar$rha = SWa ULAa HARP ar$tha = SWy ULAy * answer we were looking for",
      "ja": "Hippi-le Destination_switch_address = swy hippi-le source_switch_address = swa hippi-ledestion_ieee_address = ulay hippi-le source_ieee_address = ulaa harp ar $ op = 9（inharp_reply）harp ar $ rpa = ips *= swa ulaa harp ar $ tha = swy ulay *私たちが探していた答え"
    },
    {
      "indent": 3,
      "text": "3. Port Y examines the incoming InHARP_REPLY, completes its table entry for the HARP server. The client's HARP table entry for the server now passes into the VALID state and is usable for regular HARP traffic. Receiving this reply ensures that the HARP server has properly registered the client.",
      "ja": "3. ポートYは、着信inharp_replyを調べ、HARPサーバーのテーブルエントリを完了します。サーバーのクライアントのHARPテーブルエントリは、有効な状態に渡され、通常のHARPトラフィックに使用可能になりました。この返信を受信すると、Harpサーバーがクライアントを適切に登録したことが保証されます。"
    },
    {
      "indent": 0,
      "text": "12.2 Registration Phase of Client Y on Broadcast Capable Hardware",
      "section_title": true,
      "ja": "12.2 ブロードキャスト対応ハードウェアのクライアントYの登録フェーズ"
    },
    {
      "indent": 3,
      "text": "If there is a broadcast capable network then the authoritative address in the HRAL would be mapped to the broadcast address, HWb = SWb, ULAb (likely 0xFE1 and FF:FF:FF:FF:FF:FF).",
      "ja": "ブロードキャスト対応ネットワークがある場合、HRALの権威あるアドレスは、hwb = swb、ulab（可能性が高い0xfe1およびff：ff：ff：ff：ff：ff）にブロードキャストアドレスにマッピングされます。"
    },
    {
      "indent": 3,
      "text": "Port Y starts: its HARP table entry state for HWa: PENDING",
      "ja": "ポートYの開始：HWAのハープテーブルエントリ状態：保留中"
    },
    {
      "indent": 3,
      "text": "1. Port Y initiates its interface and sends an InHARP_REQUEST to HWa, in this example the broadcast address, after starting a table entry.",
      "ja": "1. ポートYは、インターフェイスを開始し、テーブルエントリを開始した後、この例では、この例ではHWAにinharp_requestを送信します。"
    },
    {
      "indent": 6,
      "text": "HIPPI-LE Destination_Switch_Address = SWb\nHIPPI-LE Source_Switch_Address      = SWy\nHIPPI-LE Destination_IEEE_Address   = ULAb\nHIPPI-LE Source_IEEE_Address        = ULAy\nHARP ar$op                          = 8 (InHARP_REQUEST)\nHARP ar$rpa                         = IPy\nHARP ar$tpa                         = 0 **\nHARP ar$rha                         = SWy ULAy\nHARP ar$tha                         = SWb ULAb\n** is what we would like to find out",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. Since the network is a broadcast network, client Y will receive a copy of its InHARP_REQUEST. Client Y examines the source addresses. Since they are the same as what Y filled in the InHARP_REQUEST, Y can deduce that it is connected to a broadcast medium. Port Y completes its table entry for HWa. This entry will not timeout since it is considered unlikely for a particular underlying hardware type to change between broadcast and non-broadcast; therefore this mapping will never change.",
      "ja": "2. ネットワークはブロードキャストネットワークであるため、クライアントYはinharp_requestのコピーを受け取ります。クライアントYはソースアドレスを調べます。それらはy ynharp_requestで満たされたものと同じであるため、yはブロードキャスト媒体に接続されていると推測できます。ポートYは、HWAのテーブルエントリを完了します。このエントリは、特定の基礎となるハードウェアタイプがブロードキャストと非ブロードキャストの間で変更される可能性が低いと見なされるため、タイムアウトではありません。したがって、このマッピングは決して変更されません。"
    },
    {
      "indent": 0,
      "text": "12.3 Operational Phase (phase II)",
      "section_title": true,
      "ja": "12.3 運用段階（フェーズII）"
    },
    {
      "indent": 3,
      "text": "The Operational Phase of the HARP protocol as specified in this memo is the same for both broadcast and non-broadcast capable HIPPI hardware. The authoritative address in the HRAL for this example will be HWa: <SWa, ULAa> and IPs for simplicity reasons.",
      "ja": "このメモで指定されているHARPプロトコルの運用フェーズは、ブロードキャストと非ブロードキャストの両方のHippiハードウェアの両方で同じです。この例のHRALの権威あるアドレスは、単純な理由でHWA：<SWA、ULAA>およびIPSです。"
    },
    {
      "indent": 0,
      "text": "12.3.1 Standard successful HARP_Resolve example",
      "section_title": true,
      "ja": "12.3.1 標準的な成功したharp_resolveの例"
    },
    {
      "indent": 3,
      "text": "Assume the same process (steps 1-3 of section 10.1) happened for port X. Then the state of X and Y's tables is: the HARP server table entry is in the VALID state. So lets look at the message traffic when X tries to send a message to Y. Since X doesn't have an entry for Y,",
      "ja": "ポートXで同じプロセス（セクション10.1のステップ1〜3）が発生したと仮定します。XとYの表の状態は次のとおりです。HARPサーバーテーブルエントリは有効な状態にあります。XがYにメッセージを送信しようとしたときにメッセージトラフィックを見てみましょう。XはYのエントリがないため、"
    },
    {
      "indent": 3,
      "text": "1. Port X connects to the authoritative address of the HRAL and sends a HARP_REQUEST for Y's hardware address:",
      "ja": "1. ポートXは、hralの権威あるアドレスに接続し、yのハードウェアアドレスのharp_requestを送信します。"
    },
    {
      "indent": 6,
      "text": "HIPPI-LE Destination_Switch_Address = SWa\nHIPPI-LE Source_Switch_Address      = SWx\nHIPPI-LE Destination_IEEE_Address   = ULAa\nHIPPI-LE Source_IEEE_Address        = ULAx\nHARP ar$op                          = 1  (HARP_REQUEST)\nHARP ar$rpa                         = IPx\nHARP ar$tpa                         = IPy\nHARP ar$rha                         = SWx ULAx\nHARP ar$tha                         = 0 **\n** is what we would like to find out",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. The HARP server receives the HARP request and updates its entry for X if necessary. It then generates a HARP_REPLY with Y's hardware address information.",
      "ja": "2. HARPサーバーはHARPリクエストを受信し、必要に応じてXのエントリを更新します。次に、Yのハードウェアアドレス情報を使用してharp_replyを生成します。"
    },
    {
      "indent": 6,
      "text": "HIPPI-LE Destination_Switch_Address = SWx HIPPI-LE Source_Switch_Address = SWa HIPPI-LE Destination_IEEE_Address = ULAx HIPPI-LE Source_IEEE_Address = ULAa HARP ar$op = 2 (HARP_Reply) HARP ar$rpa = IPy HARP ar$tpa = IPx HARP ar$rha = SWy ULAy * HARP ar$tha = SWx ULAx * answer we were looking for",
      "ja": "Hippi-le Destination_switch_address = swx hippi-le source_switch_address = swa hippi-ledestion_ieee_address = ulax hippi-le source_ieee_address = ulaa harp ar $ op = 2（harp_reply）harp arp ar $ rpa = ipy harp = tpa = ipx harp ar $ rha =swy ulay * harp ar $ tha = swx ulax *答え私たちが探していた"
    },
    {
      "indent": 3,
      "text": "3. Port X connects to port Y and transmits an IP message with the following information in the HIPPI-LE header:",
      "ja": "3. ポートXはポートYに接続し、Hippi-Leヘッダーに次の情報を含むIPメッセージを送信します。"
    },
    {
      "indent": 6,
      "text": "HIPPI-LE Destination_Switch_Address = SWy HIPPI-LE Source_Switch_Address = SWx HIPPI-LE Destination_IEEE_Address = ULAy HIPPI-LE Source_IEEE_Address = ULAx",
      "ja": "Hippi-le Destination_switch_address = swy hippi-le source_switch_address = swx hippi-ledestion_ieee_address = ulay hippi-le source_ieee_address = ulax"
    },
    {
      "indent": 3,
      "text": "If there had been a broadcast capable HIPPI network, the target ports would themselves have received the HARP_REQUEST of step 2 above and responded to them in the same way the HARP server did.",
      "ja": "ブロードキャスト対応のHIPPIネットワークがあった場合、ターゲットポート自体が上記のステップ2のharp_requestを受け取り、HARPサーバーが行ったのと同じように応答しました。"
    },
    {
      "indent": 0,
      "text": "12.3.2 Standard non-successful HARP_Resolve example",
      "section_title": true,
      "ja": "12.3.2 標準的な非成分のharp_resolveの例"
    },
    {
      "indent": 3,
      "text": "Like in 12.3.1, assume that X and Y are fully registered with the HARP server. Then the state of X and Y's HARP server table entry is: VALID. So lets look at the message traffic when X tries to send a message to Q. Further assume that interface Q is NOT configured UP, i.e. it is DOWN. Since X doesn't have an entry for Q,",
      "ja": "12.3.1のように、xとyがHARPサーバーに完全に登録されていると仮定します。次に、XおよびYのHARPサーバーテーブルエントリの状態は次のとおりです。そのため、XがQにメッセージを送信しようとしたときにメッセージトラフィックを見てみましょう。さらに、インターフェイスQが構成されていない、つまりダウンしていると仮定します。xにはqのエントリがないため、"
    },
    {
      "indent": 3,
      "text": "1. Port X connects to the HARP server switch address and sends a HARP_REQUEST for Q's hardware address:",
      "ja": "1. ポートXは、HARPサーバースイッチアドレスに接続し、Qのハードウェアアドレスのharp_requestを送信します。"
    },
    {
      "indent": 6,
      "text": "HIPPI-LE Destination_Switch_Address = SWa\nHIPPI-LE Source_Switch_Address      = SWx\nHIPPI-LE Destination_IEEE_Address   = ULAa\nHIPPI-LE Source_IEEE_Address        = ULAx\nHARP ar$op                          = 1  (HARP_REQUEST)\nHARP ar$rpa                         = IPx\nHARP ar$tpa                         = IPq\nHARP ar$rha                         = SWx ULAx\nHARP ar$tha                         = 0 **\n** is what we would like to find out",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "2. The HARP server receives the HARP request and updates its entry for X if necessary. It then looks up IPq in its tables and doesn't find it. The HARP server then generates a HARP_NAK reply message.",
      "ja": "2. HARPサーバーはHARPリクエストを受信し、必要に応じてXのエントリを更新します。次に、テーブルでIPQを調べて、見つかりません。Harpサーバーは、harp_nakの返信メッセージを生成します。"
    },
    {
      "indent": 6,
      "text": "HIPPI-LE Destination_Switch_Address = SWx\nHIPPI-LE Source_Switch_Address      = SWa\nHIPPI-LE Destination_IEEE_Address   = ULAx\nHIPPI-LE Source_IEEE_Address        = ULAa\nHARP ar$op                          = 10  (HARP_NAK)\nHARP ar$rpa                         = IPx\nHARP ar$tpa                         = IPq\nHARP ar$rha                         = SWx ULAx\nHARP ar$tha                         = 0 ***\n*** No Answer, and notice that the fields do not get swapped,\n    i.e. the HARP message is the same as the HARP_REQUEST\n    except for the operation code.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "If there had been a broadcast capable HIPPI network, then there would not have been a reply.",
      "ja": "放送対応のHIPPIネットワークがあった場合、返信はなかったでしょう。"
    },
    {
      "indent": 0,
      "text": "13 References",
      "ja": "13参照"
    },
    {
      "indent": 3,
      "text": "[1] ANSI X3.183-1991(R1996), Information Technology - High-Performance Parallel Interface - Mechanical, Electrical and Signaling Protocol Specification; (HIPPI-PH).",
      "ja": "[1] ANSI X3.183-1991（R1996）、情報技術 - 高性能並列インターフェイス - 機械的、電気的、シグナル伝達プロトコル仕様。（hippi-ph）。"
    },
    {
      "indent": 3,
      "text": "[2] ANSI X3.210-1998, Information Technology - High-Performance Parallel Interface - Framing Protocol; (HIPPI-FP).",
      "ja": "[2] ANSI X3.210-1998、情報技術 - 高性能並列インターフェイス - フレーミングプロトコル。（Hippi-FP）。"
    },
    {
      "indent": 3,
      "text": "[3] ANSI X3.218-1993, Information Technology - High-Performance Parallel Interface - Encapsulation of ISO 8802-2 (IEEE Std 802.2) Logical Link Control Protocol Data Units; (HIPPI-LE).",
      "ja": "[3] ANSI X3.218-1993、情報技術 - 高性能並列インターフェイス -  ISO 8802-2のカプセル化（IEEE STD 802.2）論理リンク制御プロトコルデータユニット。（Hippi-le）。"
    },
    {
      "indent": 3,
      "text": "[4] ANSI X3.222-1997, Information Technology - High-Performance Parallel Interface - Physical Switch Control; (HIPPI-SC).",
      "ja": "[4] ANSI X3.222-1997、情報技術 - 高性能並列インターフェイス - 物理スイッチ制御。（Hippi-SC）。"
    },
    {
      "indent": 3,
      "text": "[5] ANSI X3.300-1997, Information Technology - High-Performance Parallel Interface - Serial Specification; (HIPPI-Serial).",
      "ja": "[5] ANSI X3.300-1997、情報技術 - 高性能並列インターフェイス - シリアル仕様。（Hippi-Serial）。"
    },
    {
      "indent": 3,
      "text": "[6] Braden, R., \"Requirements for Internet Hosts -- Communication Layers\", STD 3, RFC 1122, October 1989.",
      "ja": "[6] Braden、R。、「インターネットホストの要件 - 通信レイヤー」、STD 3、RFC 1122、1989年10月。"
    },
    {
      "indent": 3,
      "text": "[7] Bradely, T. and C. Brown, \"Inverse Address Resolution Protocol\", RFC 2390, September 1998.",
      "ja": "[7] Bradley、T。およびC. Brown、「逆住所解像度プロトコル」、RFC 2390、1998年9月。"
    },
    {
      "indent": 3,
      "text": "[8] Bellovin, Steven M., \"Security Problems in the TCP/IP Protocol Suite\", ACM Computer Communications Review, Vol. 19, Issue 2, pp. 32-48, 1989.",
      "ja": "[8] Bellovin、Steven M.、「TCP/IPプロトコルスイートのセキュリティ問題」、ACM Computer Communications Review、Vol。19、第2号、pp。32-48、1989。"
    },
    {
      "indent": 3,
      "text": "[9] Deering, S, \"Host Extensions for IP Multicasting\", STD 5, RFC 1112, August 1989.",
      "ja": "[9] Deering、S、「IPマルチキャストのホスト拡張」、STD 5、RFC 1112、1989年8月。"
    },
    {
      "indent": 3,
      "text": "[10] Finlayson, R., Mann, T., Mogul, J. and M. Theimer, \"A Reverse Address Resolution Protocol\", RFC 903, June 1984.",
      "ja": "[10] Finlayson、R.、Mann、T.、Mogul、J。、およびM. Theimer、「A Reverse Address Resolution Protocol」、RFC 903、1984年6月。"
    },
    {
      "indent": 3,
      "text": "[11] ANSI/IEEE Std. 802.2-1989, Information Processing Systems - Local Area Networks - Logical Link Control, \"IEEE Standards for Local Area Networks: Logical Link Control\", IEEE, New York, New York, 1985.",
      "ja": "[11] ansi/ieee std。802.2-1989、情報処理システム - ローカルエリアネットワーク - 論理リンク制御、「ローカルエリアネットワークのIEEE標準：論理リンク制御」、IEEE、ニューヨーク、ニューヨーク、1985年。"
    },
    {
      "indent": 3,
      "text": "[12] Laubach, Mark., \"Classical IP and ARP over ATM\", RFC 2225, April 1998.",
      "ja": "[12] Laubach、Mark。、「Classical IP and ARP Over ATM」、RFC 2225、1998年4月。"
    },
    {
      "indent": 3,
      "text": "[13] Plummer, D., \"An Ethernet Address Resolution Protocol - or - Converting Network Addresses to 48-bit Ethernet Address for Transmission on Ethernet Hardware\", RFC 826, November 1982.",
      "ja": "[13] Plummer、D。、「イーサネットアドレス解像度プロトコル - または - ネットワークアドレスをイーサネットハードウェア上の送信用の48ビットイーサネットアドレスに変換する」、RFC 826、1982年11月。"
    },
    {
      "indent": 3,
      "text": "[14] Renwick, J. and A. Nicholson, \"IP and ARP on HIPPI\", RFC 1374, October 1992.",
      "ja": "[14] Renwick、J。およびA. Nicholson、「IP and ARP on Hippi」、RFC 1374、1992年10月。"
    },
    {
      "indent": 3,
      "text": "[15] Renwick, J., \"IP over HIPPI\", RFC 2067, January 1997.",
      "ja": "[15] Renwick、J。、「IP Over Hippi」、RFC 2067、1997年1月。"
    },
    {
      "indent": 3,
      "text": "[16] Reynolds, J. and J. Postel, \"Assigned Numbers\", STD 2, RFC 1700, October 1994.",
      "ja": "[16] Reynolds、J。およびJ. Postel、「割り当てられた番号」、STD 2、RFC 1700、1994年10月。"
    },
    {
      "indent": 3,
      "text": "[17] ANSI NCITS xxx.199x, Project 1245-D, Scheduled Transfer Protocol ANSI NCITS, Scheduled Transfer Protocol draft standard.",
      "ja": "[17] ANSI NCITS XXX.199X、プロジェクト1245-D、スケジュールされた転送プロトコルANSI NCITS、スケジュールされた転送プロトコルドラフト標準。"
    },
    {
      "indent": 3,
      "text": "[18] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "ja": "[18] Bradner、S。、「要件レベルを示すためにRFCで使用するためのキーワード」、BCP 14、RFC 2119、1997年3月。"
    },
    {
      "indent": 0,
      "text": "14 Acknowledgments",
      "ja": "14謝辞"
    },
    {
      "indent": 3,
      "text": "This memo could not have come into being without the critical review from Greg Chesson, Carlin Otto, the high performance interconnect group of Silicon Graphics (specifically Jim Pinkerton, Brad Strand and Jeff Young) and the expertise of the ANSI T11.1 Task Group responsible for the HIPPI standards work.",
      "ja": "このメモは、グレッグ・チェッソン、カーリン・オットー、シリコングラフィックスの高性能相互接続グループ（特にジム・ピンカートン、ブラッド・ストランド、ジェフ・ヤング）、およびANSI T11.1タスクグループの専門知識から批判的なレビューなしで存在することはできませんでした。Hippi Standardsの作業。"
    },
    {
      "indent": 3,
      "text": "This memo is based on the second part of [14], written by John Renwick. ARP [13] written by Dave Plummer and Inverse ARP [7] written by T. Bradley and C. Brown provide the fundamental algorithms of HARP as presented in this memo. Further, the HARP server is based on concepts and models presented in [12], written by Mark Laubach who laid the structural groundwork for the HARP server.",
      "ja": "このメモは、ジョン・レンウィックによって書かれた[14]の第2部に基づいています。Dave Plummerとinverse Arp [7]によって書かれたArp [13] T. BradleyとC. Brownによって書かれた著者は、このメモに示されているHarpの基本的なアルゴリズムを提供します。さらに、HARPサーバーは、HARPサーバーの構造的基礎を築いたMark Laubachによって書かれた[12]で提示された概念とモデルに基づいています。"
    },
    {
      "indent": 0,
      "text": "15 Changes from RFC-1374 [14]",
      "ja": "RFC-1374からの15の変更[14]"
    },
    {
      "indent": 3,
      "text": "RFC-2067 obsoletes RFC-1374 but left ARP outside of its scope because there was not enough implementation experience. This memo is an effort to clarify and expand the definition of ARP over HIPPI as found in RFC-1374 such that implementations will be more readily possible, especially considering forward interoperability with HIPPI-6400.",
      "ja": "RFC-2067廃止RFC-1374は、十分な実装経験がなかったため、その範囲の外側にARPを残しました。このメモは、特にHIPPI-6400との前方の相互運用性を考慮して、RFC-1374で見つかったHippi上のARPの定義を明確にし、拡張する努力です。"
    },
    {
      "indent": 3,
      "text": "The changes from RFC-1374 [14] are:",
      "ja": "RFC-1374 [14]からの変更は次のとおりです。"
    },
    {
      "indent": 3,
      "text": "o A new message format to acknowledge the HIPPI hardware address format and to eliminate the requirement of HIPPI-LE ARP for HARP to function.",
      "ja": "o HIPPIハードウェアアドレス形式を確認し、HARPが機能するためのHippi-le ARPの要件を排除するための新しいメッセージ形式。"
    },
    {
      "indent": 3,
      "text": "o Explicit registration phase.",
      "ja": "o 明示的な登録フェーズ。"
    },
    {
      "indent": 3,
      "text": "o Additional message formats: InHARP requests and replies as well as HARP_NAKs.",
      "ja": "o 追加のメッセージ形式：HARP_NAKSと同様に、INHARPリクエストと返信。"
    },
    {
      "indent": 3,
      "text": "o Details about the IP subnetwork configuration.",
      "ja": "o IPサブネットワーク構成の詳細。"
    },
    {
      "indent": 3,
      "text": "o Details about table aging.",
      "ja": "o テーブル老化の詳細。"
    },
    {
      "indent": 3,
      "text": "o IP broadcast emulation.",
      "ja": "o IPブロードキャストエミュレーション。"
    },
    {
      "indent": 0,
      "text": "16 Author's Address",
      "ja": "16著者の住所"
    },
    {
      "indent": 3,
      "text": "Jean-Michel Pittet Silicon Graphics Inc 1600 Amphitheatre Parkway Mountain View, CA 94043",
      "ja": "Jean-Michel Pittet Silicon Graphics Inc 1600 Amphitheatre Parkway Mountain View、CA 94043"
    },
    {
      "indent": 3,
      "text": "Phone: 650-933-6149\nFax:   650-933-3542\nEMail: jmp@sgi.com, jmp@acm.org",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "17 Full Copyright Statement",
      "ja": "17完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2000）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があります。また、それについてコメントまたは説明する派生作品、またはその実装を支援することは、いかなる種類の制限なしに、準備、コピー、公開、および部分的に配布される場合があります。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書と本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}