{
  "title": {
    "text": "RFC 2593 - Script MIB Extensibility Protocol Version 1.0",
    "ja": "RFC 2593 - スクリプトMIB拡張性プロトコルバージョン1.0"
  },
  "number": 2593,
  "created_at": "2024-02-22 22:30:54.401021+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                   J. Schoenwaelder\nRequest for Comments: 2593                               TU Braunschweig\nCategory: Experimental                                        J. Quittek\n                                                         NEC Europe Ltd.\n                                                                May 1999",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 13,
      "text": "Script MIB Extensibility Protocol Version 1.0",
      "ja": "スクリプトMIB拡張性プロトコルバージョン1.0"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo defines an Experimental Protocol for the Internet community. It does not specify an Internet standard of any kind. Discussion and suggestions for improvement are requested. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティの実験プロトコルを定義します。いかなる種類のインターネット標準を指定しません。改善のための議論と提案が要求されます。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（1999）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "The IETF Script MIB defines an interface for the delegation of management functions based on the Internet management framework. A management script is a set of instructions that are executed by a language specific runtime system. The Script MIB extensibility protocol (SMX) defined in this memo separates language specific runtime systems from language independent Script MIB implementations.",
      "ja": "IETFスクリプトMIBは、インターネット管理フレームワークに基づいて、管理機能の委任のインターフェイスを定義します。管理スクリプトは、言語固有のランタイムシステムによって実行される一連の命令です。このメモで定義されているスクリプトMIB拡張性プロトコル（SMX）は、言語固有のランタイムシステムと言語の独立したスクリプトMIB実装を分離しています。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. Introduction ................................................    2\n2. Process Model and Communication Model .......................    3\n3. Security Profiles ...........................................    3\n4. Start of Runtime Systems and Connection Establishment .......    4\n5. SMX Messages ................................................    5\n5.1 Common Definitions .........................................    5\n5.2 Commands ...................................................    7\n5.3 Replies ....................................................    8\n6. Elements of Procedure .......................................    9\n6.1 SMX Message Processing on the Runtime Systems ..............    9\n6.1.1 Processing the `hello' Command ...........................   10\n6.1.2 Processing the `start' Command ...........................   10\n6.1.3 Processing the `suspend' Command .........................   11\n6.1.4 Processing the `resume' Command ..........................   12\n6.1.5 Processing the `abort' Command ...........................   12\n6.1.6 Processing the `status' Command ..........................   12\n6.1.7 Generation of Asynchronous Notifications .................   13\n   6.2 SMX Message Processing on the SNMP Agent ...................   13\n6.2.1 Creating a Runtime System ................................   13\n6.2.2 Generating the `hello' Command ...........................   13\n6.2.3 Generating the `start' Command ...........................   14\n6.2.4 Generating the `suspend' Command .........................   15\n6.2.5 Generating the `resume' Command ..........................   16\n6.2.6 Generating the `abort' Command ...........................   16\n6.2.7 Generating the `status' Command ..........................   17\n6.2.8 Processing Asynchronous Notifications ....................   18\n7. An Example SMX Message Flow .................................   19\n8. Security Considerations .....................................   19\n9. Acknowledgments .............................................   20\n10. References .................................................   20\n11. Authors' Addresses .........................................   21\n12. Full Copyright Statement ...................................   22",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "The Script MIB [1] defines a standard interface for the delegation of management functions based on the Internet management framework. In particular, it provides the following capabilities:",
      "ja": "スクリプトMIB [1]は、インターネット管理フレームワークに基づいて、管理機能の委任の標準インターフェイスを定義します。特に、次の機能を提供します。"
    },
    {
      "indent": 3,
      "text": "1. Transfer of management scripts to a distributed manager.",
      "ja": "1. 分散マネージャーに管理スクリプトを転送します。"
    },
    {
      "indent": 3,
      "text": "2. Initiating, suspending, resuming and terminating management scripts.",
      "ja": "2. 管理スクリプトの開始、一時停止、再開、終了。"
    },
    {
      "indent": 3,
      "text": "3. Transfer of arguments for management scripts.",
      "ja": "3. 管理スクリプトの引数の転送。"
    },
    {
      "indent": 3,
      "text": "4. Monitoring and control of running management scripts.",
      "ja": "4. 実行管理スクリプトの監視と制御。"
    },
    {
      "indent": 3,
      "text": "5. Transfer of results produced by management scripts.",
      "ja": "5. 管理スクリプトによって生成された結果の転送。"
    },
    {
      "indent": 3,
      "text": "A management script is a set of instructions executed by a language specific runtime system. The Script MIB does not prescribe a specific language. Instead, it allows to control scripts written in different languages that are executing concurrently.",
      "ja": "管理スクリプトは、言語固有のランタイムシステムによって実行される一連の命令です。スクリプトMIBは特定の言語を処方しません。代わりに、同時に実行されているさまざまな言語で記述されたスクリプトを制御できます。"
    },
    {
      "indent": 3,
      "text": "The Script MIB Extensibility protocol (SMX) defined in this memo can be used to separate language specific runtime systems from the runtime system independent Script MIB implementations. The lightweight SMX protocol can be used to support different runtime systems without any changes to the language neutral part of a Script MIB implementation.",
      "ja": "このメモで定義されているスクリプトMIB拡張性プロトコル（SMX）は、ランタイムシステムに依存しないスクリプトMIB実装から言語固有のランタイムシステムを分離するために使用できます。軽量SMXプロトコルを使用して、スクリプトMIB実装の言語中立部分を変更することなく、さまざまなランタイムシステムをサポートできます。"
    },
    {
      "indent": 3,
      "text": "Examples of languages and runtime systems considered during the design of the SMX protocol are the Java virtual machine [2] and the Tool Command Language (Tcl) [3]. Other languages with comparable features should be easy to integrate as well.",
      "ja": "SMXプロトコルの設計中に考慮される言語とランタイムシステムの例は、Java仮想マシン[2]とツールコマンド言語（TCL）[3]です。同等の機能を備えた他の言語は、統合しやすくする必要があります。"
    },
    {
      "indent": 0,
      "text": "2. Process Model and Communication Model",
      "section_title": true,
      "ja": "2. プロセスモデルと通信モデル"
    },
    {
      "indent": 3,
      "text": "Figure 1 shows the process and communication model underlying the SMX protocol. The language and runtime system independent SNMP agent implementing the Script MIB communicates with one ore more runtime systems via the SMX protocol. A runtime system may be able to execute one or multiple scripts simultaneously (multi-threading). The SMX protocol supports multi-threading, but it does not require multi-threaded runtime systems.",
      "ja": "図1は、SMXプロトコルの根底にあるプロセスと通信モデルを示しています。スクリプトMIBを実装する言語およびランタイムシステム独立したSNMPエージェントは、SMXプロトコルを介して1つの鉱石より多くのランタイムシステムと通信します。ランタイムシステムは、1つまたは複数のスクリプトを同時に実行できる場合があります（マルチスレッド）。SMXプロトコルはマルチスレッドをサポートしていますが、マルチスレッドランタイムシステムは必要ありません。"
    },
    {
      "indent": 3,
      "text": "The SMX protocol uses a local storage device (usually implemented on top of the local file system) to transfer scripts from the SNMP agent to the runtime systems. The SNMP agent has read and write access to the script storage device while the runtime systems only need read access. The SMX protocol passes the location of a script in the local storage device to the runtime engines. It is then the responsibility of the runtime engines to load the script from the specified location.",
      "ja": "SMXプロトコルは、ローカルストレージデバイス（通常はローカルファイルシステムの上に実装されている）を使用して、SNMPエージェントからランタイムシステムにスクリプトを転送します。SNMPエージェントには、ランタイムシステムには読み取りアクセスのみが必要な間、スクリプトストレージデバイスへの読み取りおよび書き込みアクセスがあります。SMXプロトコルは、ローカルストレージデバイス内のスクリプトの場所をランタイムエンジンに渡します。その後、指定された場所からスクリプトをロードするのは、ランタイムエンジンの責任です。"
    },
    {
      "indent": 7,
      "text": "                                             runtime 1\n            +--------------+       SMX      +---------+\n            |              |<-------------->| O  O  O |<-+\n    SNMP    |  Script MIB  |                +---------+  |\n<---------->|              |                             |\n            |  SNMP Agent  |                 runtime 2   |\n            |              |       SMX      +---------+  |\n            |              |<-------------->| O       |  |\n            +--------------+                +---------+  |\n                    ^                            ^       |\n                    |       +---------+          |       |\n                    |       | script  |----------+       |\n                    +------>| storage |------------------+\n                            +---------+",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 11,
      "text": "Figure 1: SMX process and communication model",
      "ja": "図1：SMXプロセスと通信モデル"
    },
    {
      "indent": 0,
      "text": "3. Security Profiles",
      "section_title": true,
      "ja": "3. セキュリティプロファイル"
    },
    {
      "indent": 3,
      "text": "Security profiles control what a running script is allowed to do. It is useful to distinguish two different classes of security profiles:",
      "ja": "セキュリティプロファイルは、実行中のスクリプトが許可されていることを制御します。セキュリティプロファイルの2つの異なるクラスを区別すると便利です。"
    },
    {
      "indent": 3,
      "text": "- The operating system security profile specifies the set of operating system services that can be used by the operating system level process which executes a script. Under UNIX, this maps to the effective user and group identity for the running process. In addition, many UNIX versions allow to set other resource limits, such as the number of open files or the maximum stack sizes. Another mechanism in UNIX is the chroot() system call which changes the file system root for a process. The chroot() mechanism can be used to prevent runtime systems from accessing any system files. It is suggested to make use of all applicable operating system security mechanism in order to protect the operating system from malicious scripts or runtime systems.",
      "ja": "- オペレーティングシステムのセキュリティプロファイルは、スクリプトを実行するオペレーティングシステムレベルプロセスで使用できるオペレーティングシステムサービスのセットを指定します。UNIXでは、これは実行中のプロセスのために効果的なユーザーとグループIDにマッピングします。さらに、多くのUNIXバージョンでは、オープンファイルの数や最大スタックサイズなど、他のリソース制限を設定できます。UNIXのもう1つのメカニズムは、プロセスのファイルシステムルートを変更するChroot（）システムコールです。Chroot（）メカニズムは、ランタイムシステムがシステムファイルにアクセスしないようにするために使用できます。悪意のあるスクリプトやランタイムシステムからオペレーティングシステムを保護するために、適用可能なすべてのオペレーティングシステムセキュリティメカニズムを利用することがお勧めします。"
    },
    {
      "indent": 3,
      "text": "- Secure runtime systems provide fine grained control over the set of services that can be used by a running script at a particular point during script execution. A runtime security profile specifying fine grained access control is runtime system dependent. For a Java virtual machine, the runtime security profile is interpreted by the SecurityManager and ClassLoader classes[4]. For Tcl, the runtime security profile maps to the interpreter's security profile [5].",
      "ja": "- 安全なランタイムシステムは、スクリプトの実行中に特定のポイントでランニングスクリプトで使用できるサービスのセットを細かく制御できます。細かい穀物アクセス制御を指定するランタイムセキュリティプロファイルは、ランタイムシステムに依存します。Java仮想マシンの場合、ランタイムセキュリティプロファイルは、SecurityManagerおよびClassloaderクラス[4]によって解釈されます。TCLの場合、ランタイムセキュリティプロファイルは、インタープリターのセキュリティプロファイルにマップします[5]。"
    },
    {
      "indent": 3,
      "text": "The SMX protocol allows to execute scripts under different operating system profiles and runtime system profiles. Multiple operating system security profiles are realized by using multiple runtime systems which execute in operating system processes with different security profiles. Multiple runtime security profiles are supported by passing a security profile name to a runtime system during script invocation.",
      "ja": "SMXプロトコルでは、さまざまなオペレーティングシステムプロファイルとランタイムシステムプロファイルの下でスクリプトを実行できます。複数のオペレーティングシステムセキュリティプロファイルが、異なるセキュリティプロファイルを持つオペレーティングシステムプロセスで実行する複数のランタイムシステムを使用することにより実現されます。複数のランタイムセキュリティプロファイルは、スクリプトの呼び出し中にセキュリティプロファイル名をランタイムシステムに渡すことによりサポートされます。"
    },
    {
      "indent": 3,
      "text": "The Script MIB does not define how operating system or runtime system security profiles are identified. This memo suggests that the smLaunchOwner is mapped to an operating system security profile and a runtime system security profile when a script is started.",
      "ja": "スクリプトMIBは、オペレーティングシステムまたはランタイムシステムのセキュリティプロファイルがどのように識別されるかを定義していません。このメモは、SMLAunchownerがスクリプトの開始時にオペレーティングシステムセキュリティプロファイルとランタイムシステムセキュリティプロファイルにマッピングされることを示唆しています。"
    },
    {
      "indent": 0,
      "text": "4. Start of Runtime Systems and Connection Establishment",
      "section_title": true,
      "ja": "4. ランタイムシステムと接続確立の開始"
    },
    {
      "indent": 3,
      "text": "The SNMP agent starts runtime systems based on the static properties of the runtime system (multi-threaded or single-threaded) and the operating system security profiles. Starting a new runtime system requires to create a process environment which matches the operating system security profile.",
      "ja": "SNMPエージェントは、ランタイムシステム（マルチスレッドまたはシングルスレッド）の静的特性とオペレーティングシステムのセキュリティプロファイルに基づいてランタイムシステムを開始します。新しいランタイムシステムを開始するには、オペレーティングシステムのセキュリティプロファイルに一致するプロセス環境を作成する必要があります。"
    },
    {
      "indent": 3,
      "text": "The SNMP agent initially passes information to the runtime system by means of environment variables. The information is needed to establish a trusted communication channel between the SNMP agent and a runtime system.",
      "ja": "SNMPエージェントは、最初に環境変数によって情報をランタイムシステムに渡します。この情報は、SNMPエージェントとランタイムシステムの間に信頼できる通信チャネルを確立するために必要です。"
    },
    {
      "indent": 3,
      "text": "The SNMP agent first creates a listening TCP socket which accepts connections from runtime systems. It is the responsibility of the runtime system to establish a connection to this TCP socket once it has been started. The port number of the listening TCP socket is passed from the SNMP agent to the runtime system in the environment variable SMX_PORT.",
      "ja": "SNMPエージェントは、最初にランタイムシステムからの接続を受け入れるリスニングTCPソケットを作成します。開始後、このTCPソケットへの接続を確立することは、ランタイムシステムの責任です。リスニングTCPソケットのポート番号は、SNMPエージェントから環境変数SMX_PORTのランタイムシステムに渡されます。"
    },
    {
      "indent": 3,
      "text": "The SNMP agent must ensure that only authorized runtime systems establish a connection to the listening TCP socket. The following rules are used for this purpose:",
      "ja": "SNMPエージェントは、承認されたランタイムシステムのみがリスニングTCPソケットへの接続を確立することを確認する必要があります。この目的のために、次のルールが使用されます。"
    },
    {
      "indent": 3,
      "text": "- The TCP connection must originate from the local host.",
      "ja": "- TCP接続は、ローカルホストから発生する必要があります。"
    },
    {
      "indent": 3,
      "text": "- The SNMP agent queries the runtime system for a security cookie and closes the TCP connection if no valid response is received within a given time interval. The security cookie is a random number generated by the SNMP agent and passed to the runtime system as part of its environment. The cookie is found in the environment variable SMX_COOKIE.",
      "ja": "- SNMPエージェントは、セキュリティCookieのランタイムシステムを照会し、特定の時間間隔内に有効な応答が受信されない場合、TCP接続を閉じます。セキュリティCookieは、SNMPエージェントによって生成された乱数であり、その環境の一部としてランタイムシステムに渡されます。Cookieは、環境変数SMX_COOKIEにあります。"
    },
    {
      "indent": 3,
      "text": "The security assumption here is that access to the process environment is protected by the operating system.",
      "ja": "ここでのセキュリティの仮定は、プロセス環境へのアクセスはオペレーティングシステムによって保護されているということです。"
    },
    {
      "indent": 3,
      "text": "Alternate transports (e.g. UNIX domain sockets) are possible but not defined at this point in time. The reason to choose TCP as the transport protocol for SMX was that TCP is supported by all potential runtime systems, while other transports are not universally available.",
      "ja": "代替輸送（UNIXドメインソケットなど）は可能ですが、この時点では定義されていません。SMXの輸送プロトコルとしてTCPを選択する理由は、TCPがすべての潜在的なランタイムシステムによってサポートされているため、他の輸送は普遍的に利用できないことです。"
    },
    {
      "indent": 0,
      "text": "5. SMX Messages",
      "section_title": true,
      "ja": "5. SMXメッセージ"
    },
    {
      "indent": 3,
      "text": "The message formats described below are defined using the Augmented BNF (ABNF) defined in RFC 2234 [6]. The definitions for `ALPHA', `DIGIT', `HEXDIG', `WSP', `CRLF', `CR', `LF', `HTAB', `VCHAR' and `DQUOTE' are imported from appendix A of RFC 2234 and not repeated here.",
      "ja": "以下に説明するメッセージ形式は、RFC 2234 [6]で定義された拡張BNF（ABNF）を使用して定義されています。「アルファ」、「桁」、「ヘクスディグ」、「wsp」、「crlf」、「cr」、「lf」、「htab」、「vchar」、「dquote」の定義は、RFC 2234の付録Aからインポートされています。ここで繰り返されません。"
    },
    {
      "indent": 0,
      "text": "5.1. Common Definitions",
      "section_title": true,
      "ja": "5.1. 一般的な定義"
    },
    {
      "indent": 3,
      "text": "The following ABNF definitions are used in subsequent sections to define the SMX protocol messages.",
      "ja": "以下のABNF定義は、後続のセクションで使用され、SMXプロトコルメッセージを定義します。"
    },
    {
      "indent": 5,
      "text": "Zero          = %x30          ; the ASCII character '0'",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "AlNum         = DIGIT / ALPHA / %x2D-2F\n                              ; digits, alphas plus '-', '.', '/'",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "QuotedString  = DQUOTE *(VCHAR / WSP) DQUOTE",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "HexString     = 1*(HEXDIG HEXDIG)\n     Id            = 1*DIGIT       ; identifier for an SMX transaction",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Script = QuotedString ; script file name",
      "ja": "スクリプト= QUOTEDSTRING;スクリプトファイル名"
    },
    {
      "indent": 5,
      "text": "RunId         = 1*DIGIT       ; globally unique identifier for a\n                              ; running script (note, smRunIndex\n                              ; is only unique for a smLaunchOwner,\n                              ; smLaunchName pair)",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Profile       = 1*AlNum       ; security profile name",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "RunState      =  \"1\"          ; smRunState `initializing'\nRunState      =/ \"2\"          ; smRunState `executing'\nRunState      =/ \"3\"          ; smRunState `suspending'\nRunState      =/ \"4\"          ; smRunState `suspended'\nRunState      =/ \"5\"          ; smRunState `resuming'\nRunState      =/ \"6\"          ; smRunState `aborting'\nRunState      =/ \"7\"          ; smRunState `terminated'",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "ExitCode      =  \"1\"          ; smRunExitCode `noError'\nExitCode      =/ \"2\"          ; smRunExitCode `halted'\nExitCode      =/ \"3\"          ; smRunExitCode `lifeTimeExceeded'\nExitCode      =/ \"4\"          ; smRunExitCode `noResourcesLeft'\nExitCode      =/ \"5\"          ; smRunExitCode `languageError'\nExitCode      =/ \"6\"          ; smRunExitCode `runtimeError'\nExitCode      =/ \"7\"          ; smRunExitCode `invalidArgument'\nExitCode      =/ \"8\"          ; smRunExitCode `securityViolation'\nExitCode      =/ \"9\"          ; smRunExitCode `genericError'",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Cookie = HexString ; authentication cookie",
      "ja": "Cookie = HexString;認証クッキー"
    },
    {
      "indent": 5,
      "text": "Version = \"SMX/1.0\" ; current version of the SMX protocol",
      "ja": "version = \"smx/1.0\";SMXプロトコルの現在のバージョン"
    },
    {
      "indent": 5,
      "text": "Argument      = HexString / QuotedString      ; see smRunArgument",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Result        = HexString / QuotedString      ; see smRunResult",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "ErrorMsg      = HexString / QuotedString      ; see smRunError",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The definition of QuotedString requires further explanation. A quoted string may contain special character sequences, all starting with the backslash character (%x5C). The interpretation of these sequences is as follows:",
      "ja": "QuotedStringの定義には、さらなる説明が必要です。引用された文字列には、バックスラッシュ文字（％x5c）から始まる特別な文字シーケンスが含まれる場合があります。これらのシーケンスの解釈は次のとおりです。"
    },
    {
      "indent": 11,
      "text": "`\\\\' backslash character (`%x5C') `\\t' tab character (`HTAB') `\\n' newline character (`LF') `\\r' carriage-return character (`CR') `\\\"' quote character (`DQUOTE')",
      "ja": "`\\\\ 'バックスラッシュ文字（`％x5c'） `\\ t 'タブ文字（` htab'） `\\ n 'newline文字（` lf'） `\\ r 'キャリッジリターン文字（` cr'） `\\\"'引用キャラクター（ `dquote'）"
    },
    {
      "indent": 3,
      "text": "In all other cases not listed above, the backslash is dropped and the following character is treated as an ordinary character. `Argument' and `Result' is either a QuotedString or a HexString. The Script MIB defines script arguments and results as arbitrary octet strings. The SMX protocol supports a binary and a human readable representation since it is likely that printable argument and result strings will be used frequently. However, an implementation must be able to handle both formats in order to be compliant with the Script MIB.",
      "ja": "上記の他のすべてのケースでは、バックスラッシュが削除され、次のキャラクターは通常のキャラクターとして扱われます。「引数」と「結果」は引用符であるかヘックスストリングです。スクリプトMIBは、スクリプト引数と結果を任意のオクテット文字列として定義します。SMXプロトコルは、印刷可能な引数と結果文字列が頻繁に使用される可能性が高いため、バイナリと人間の読み取り可能な表現をサポートしています。ただし、スクリプトMIBに準拠するために、実装は両方の形式を処理できる必要があります。"
    },
    {
      "indent": 3,
      "text": "The `Cookie' is a HexString which does not carry any semantics other than being a random sequence of bytes. It is therefore not necessary to have a human readable representation.",
      "ja": "「Cookie」は、バイトのランダムシーケンスであること以外のセマンティクスを持たないヘックスストリングです。したがって、人間の読みやすい表現を持つ必要はありません。"
    },
    {
      "indent": 0,
      "text": "5.2. Commands",
      "section_title": true,
      "ja": "5.2. コマンド"
    },
    {
      "indent": 3,
      "text": "The following ABNF definitions define the set of SMX commands which can be sent from the SNMP agent to a runtime system.",
      "ja": "次のABNF定義は、SNMPエージェントからランタイムシステムに送信できるSMXコマンドのセットを定義します。"
    },
    {
      "indent": 5,
      "text": "Command = \"hello\" WSP Id CRLF",
      "ja": "command = \"hello\" wsp id crlf"
    },
    {
      "indent": 5,
      "text": "Command =/ \"start\"   WSP Id WSP RunId WSP Script WSP Profile\n                     WSP Argument CRLF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Command =/ \"suspend\" WSP Id WSP RunId CRLF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Command =/ \"resume\"  WSP Id WSP RunId CRLF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Command =/ \"abort\"   WSP Id WSP RunId CRLF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Command =/ \"status\"  WSP Id WSP RunId CRLF",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "The `hello' command is always the first command sent over a SMX connection. It is used to identify and authenticate the runtime system. The `start' command starts the execution of a script. The `suspend', `resume' and `abort' commands can be used to change the status of a running script. The `status' command is used to retrieve status information for a running script.",
      "ja": "「Hello」コマンドは、常にSMX接続を介して送信された最初のコマンドです。ランタイムシステムを識別および認証するために使用されます。「start」コマンドは、スクリプトの実行を開始します。「一時停止」、「履歴書」、「中止」コマンドを使用して、実行中のスクリプトのステータスを変更できます。「ステータス」コマンドは、実行中のスクリプトのステータス情報を取得するために使用されます。"
    },
    {
      "indent": 3,
      "text": "There is no compile command. It is the responsibility of the SNMP agent to perform any compilation steps as needed before using the SMX `start' command. There is no SMX command to shutdown a runtime system. Closing the connection must be interpreted as a request to terminate all running scripts in that runtime system and to shutdown the runtime system.",
      "ja": "コンパイルコマンドはありません。SMX「Start」コマンドを使用する前に、必要に応じて必要に応じて任意のコンパイル手順を実行することは、SNMPエージェントの責任です。ランタイムシステムをシャットダウンするSMXコマンドはありません。接続を閉じることは、そのランタイムシステムのすべての実行ランニングスクリプトを終了し、ランタイムシステムをシャットダウンするリクエストとして解釈する必要があります。"
    },
    {
      "indent": 0,
      "text": "5.3. Replies",
      "section_title": true,
      "ja": "5.3. 返信"
    },
    {
      "indent": 3,
      "text": "Every reply message starts with a three digit reply code and ends with `CRLF'. The three digits in a reply code have a special meaning. The first digit identifies the class of a reply message. The following classes exist:",
      "ja": "すべての返信メッセージは、3桁の返信コードで始まり、「CRLF」で終わります。返信コードの3桁には特別な意味があります。最初の数字は、返信メッセージのクラスを識別します。次のクラスが存在します："
    },
    {
      "indent": 5,
      "text": "1yz transient positive response 2yz permanent positive response 3yz transient negative response 4yz permanent negative response 5yz asynchronous notification",
      "ja": "1YZ過渡陽性応答2YZ永久陽性応答3YZ過渡否定的応答4YZ永久負の応答5YZ非同期通知"
    },
    {
      "indent": 3,
      "text": "The classes 1yz and 3yz are currently not used by SMX version 1.0. They are defined only for future SMX extensions.",
      "ja": "クラス1YZと3YZは現在、SMXバージョン1.0で使用されていません。これらは、将来のSMX拡張機能に対してのみ定義されます。"
    },
    {
      "indent": 3,
      "text": "The second digit encodes the specific category. The following categories exist:",
      "ja": "2番目の数字は特定のカテゴリをエンコードします。次のカテゴリが存在します。"
    },
    {
      "indent": 5,
      "text": "x0z syntax errors that don't fit any other category x1z replies for commands targeted at the whole runtime system x2z replies for commands targeted at scripts x3z replies for commands targeted at running instances of scripts",
      "ja": "x0z他のカテゴリx1zの応答は、ランタイムシステム全体をターゲットにしたコマンドの応答x1z x2zのx2zの応答スクリプトx3zをターゲット"
    },
    {
      "indent": 3,
      "text": "The third digit gives a finer gradation of meaning in each category specified by the second digit. Below is the ABNF definition of all reply messages and codes:",
      "ja": "3桁目は、2番目の数字で指定された各カテゴリで、より細かい意味のグラデーションを提供します。以下は、すべての返信メッセージとコードのABNF定義です。"
    },
    {
      "indent": 5,
      "text": "Reply = \"211\" WSP Id WSP Version WSP Cookie CRLF ; identification of the ; runtime system",
      "ja": "REPLY = \"211\" WSP ID WSPバージョンWSP Cookie CRLF;の識別;ランタイムシステム"
    },
    {
      "indent": 5,
      "text": "Reply =/ \"231\" WSP Id WSP RunState CRLF\n                              ; status of a running script",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"232\" WSP Id CRLF    ; abort of a running script",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"401\" WSP Id CRLF    ; syntax error in command",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"402\" WSP Id CRLF    ; unknown command",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"421\" WSP Id CRLF    ; unknown or illegal Script",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"431\" WSP Id CRLF    ; unknown or illegal RunId\n     Reply =/ \"432\" WSP Id CRLF    ; unknown or illegal Profile",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"433\" WSP Id CRLF    ; illegal Argument",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"434\" WSP Id CRLF    ; unable to change the status of\n                              ; a running script",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"511\" WSP Zero WSP QuotedString CRLF\n                              ; an arbitrary message send from\n                              ; the runtime system",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"531\" WSP Zero WSP RunId WSP RunState CRLF\n                              ; asynchronous running script\n                              ; status change",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"532\" WSP Zero WSP RunId WSP RunState WSP Result CRLF\n                              ; intermediate script result",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"533\" WSP Zero WSP RunId WSP RunState WSP Result CRLF\n                              ; intermediate script result that\n                              ; trigger an event report",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"534\" WSP Zero WSP RunId WSP Result CRLF\n                              ; normal script termination",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 5,
      "text": "Reply =/ \"535\" WSP Zero WSP RunId WSP ExitCode WSP ErrorMsg CRLF\n                              ; abnormal script termination.",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "6. Elements of Procedure",
      "section_title": true,
      "ja": "6. 手順の要素"
    },
    {
      "indent": 3,
      "text": "This section describes in detail the processing steps performed by the SNMP agent and the runtime system with regard to the SMX protocol.",
      "ja": "このセクションでは、SMXプロトコルに関してSNMPエージェントとランタイムシステムによって実行される処理手順について詳しく説明します。"
    },
    {
      "indent": 0,
      "text": "6.1. SMX Message Processing on the Runtime Systems",
      "section_title": true,
      "ja": "6.1. ランタイムシステムでのSMXメッセージ処理"
    },
    {
      "indent": 3,
      "text": "This section describes the processing of SMX command messages by a runtime engine and the conditions under which asynchronous notifications are generated.",
      "ja": "このセクションでは、ランタイムエンジンによるSMXコマンドメッセージの処理と、非同期通知が生成される条件について説明します。"
    },
    {
      "indent": 3,
      "text": "When the runtime system receives a message, it first tries to recognize a command consisting of the command string and the transaction identifier. If the runtime system is not able to extract both the command string and the transaction identifier, then the message is discarded. An asynchronous `511' reply may be generated in this case. Otherwise, the command string is checked to be valid, i.e. to be one of the strings `hello', `start', `suspend', `resume', `abort', or `status'. If the string is invalid, a `402' reply is sent and processing of the message stops. If a valid command has been detected, further processing of the message depends on the command as described below.",
      "ja": "ランタイムシステムがメッセージを受信すると、最初にコマンド文字列とトランザクション識別子からなるコマンドを認識しようとします。ランタイムシステムがコマンド文字列とトランザクション識別子の両方を抽出できない場合、メッセージは破棄されます。この場合、非同期「511」の応答が生成される場合があります。それ以外の場合、コマンド文字列が有効であること、つまり「hello '」、「start」、「suspend」、「resume」、 `abort'、または` status 'の1つになるようにチェックされます。文字列が無効な場合、「402」の返信が送信され、メッセージの処理が停止します。有効なコマンドが検出された場合、メッセージのさらなる処理は、以下に説明するようにコマンドに依存します。"
    },
    {
      "indent": 3,
      "text": "The command specific processing describes several possible syntax errors for which specific reply messages are generated. If the runtime engine detects any syntax error which is not explicitely mentioned or which cannot be identified uniquely, a generic `401' reply is sent indicating that the command cannot be executed.",
      "ja": "コマンド固有の処理は、特定の返信メッセージが生成されるいくつかの可能な構文エラーを説明します。ランタイムエンジンが明示的に言及されていない、または一意に識別できない構文エラーを検出した場合、コマンドを実行できないことを示す一般的な「401」返信が送信されます。"
    },
    {
      "indent": 0,
      "text": "6.1.1. Processing the `hello' Command",
      "section_title": true,
      "ja": "6.1.1. `hello 'コマンドを処理します"
    },
    {
      "indent": 3,
      "text": "When the runtime system receives a `hello' command, it processes it as follows:",
      "ja": "ランタイムシステムが「Hello」コマンドを受信すると、次のように処理します。"
    },
    {
      "indent": 3,
      "text": "1. The runtime system obtains the security cookie from its process environment.",
      "ja": "1. ランタイムシステムは、プロセス環境からセキュリティクッキーを取得します。"
    },
    {
      "indent": 3,
      "text": "2. The runtime system sends a `211' reply containing the security cookie.",
      "ja": "2. ランタイムシステムは、セキュリティクッキーを含む「211」の返信を送信します。"
    },
    {
      "indent": 0,
      "text": "6.1.2. Processing the `start' Command",
      "section_title": true,
      "ja": "6.1.2. `start 'コマンドを処理します"
    },
    {
      "indent": 3,
      "text": "When the runtime system receives a `start' command, it processes it as follows:",
      "ja": "ランタイムシステムが「START」コマンドを受信すると、次のように処理します。"
    },
    {
      "indent": 3,
      "text": "1. The syntax of the arguments of the `start' command is checked. The following four checks must be made:",
      "ja": "1. 「start」コマンドの引数の構文がチェックされます。次の4つのチェックを行う必要があります。"
    },
    {
      "indent": 8,
      "text": "(a) The syntax of the `RunId' parameter is checked and a `431' reply is sent if any syntax error is detected.",
      "ja": "(a) 「runid」パラメーターの構文がチェックされ、構文エラーが検出された場合は「431」の応答が送信されます。"
    },
    {
      "indent": 8,
      "text": "(b) The syntax of the `Script' parameter is checked and a `421' reply is sent if any syntax error is detected.",
      "ja": "(b) 「スクリプト」パラメーターの構文がチェックされ、構文エラーが検出された場合は「421」応答が送信されます。"
    },
    {
      "indent": 8,
      "text": "(c) The syntax of the `Profile' parameter is checked and a `432' reply is sent if any syntax error is detected.",
      "ja": "(c) 「プロファイル」パラメーターの構文がチェックされ、構文エラーが検出された場合は「432」の応答が送信されます。"
    },
    {
      "indent": 8,
      "text": "(d) If syntax of the `Argument' parameter is checked and a `433' reply is sent if any syntax error is detected.",
      "ja": "(d) 「引数」パラメーターの構文がチェックされ、「433」の応答が送信された場合、構文エラーが検出された場合。"
    },
    {
      "indent": 3,
      "text": "2. The runtime system checks whether the new `RunId' is already in use. If yes, a `431' reply is sent and processing stops.",
      "ja": "2. ランタイムシステムは、新しい「runid」がすでに使用されているかどうかを確認します。はいの場合、「431」の返信が送信され、処理が停止します。"
    },
    {
      "indent": 3,
      "text": "3. The runtime system checks whether the `Script' parameter is the name of a file on the local storage device, that can be read. A `421' reply is sent and processing stops if the file does not exist or is not readable.",
      "ja": "3. ランタイムシステムは、「スクリプト」パラメーターがローカルストレージデバイス上のファイルの名前であるかどうかを確認してください。「421」の返信が送信され、ファイルが存在しない、または読み取られない場合は処理が停止します。"
    },
    {
      "indent": 3,
      "text": "4. The runtime system checks whether the security profile is known and sends a `432' reply and stops processing if not.",
      "ja": "4. ランタイムシステムは、セキュリティプロファイルが既知であるかどうかを確認し、「432」の応答を送信し、そうでない場合は処理を停止します。"
    },
    {
      "indent": 3,
      "text": "5. The runtime engine starts the script given by the script name. When the script has been started, a `231' reply is sent including the current run state.",
      "ja": "5. ランタイムエンジンは、スクリプト名で指定されたスクリプトを開始します。スクリプトが開始されると、現在の実行状態を含む「231」の返信が送信されます。"
    },
    {
      "indent": 3,
      "text": "Processing of the `start' command stops, when the script reaches the state `running'. For each asynchronous state change of the running script, a `531' reply is sent. Processing of the `start' command is also stopped if an error occurs before the state `running' is reached. In this case, the run is aborted and a `535' reply is generated.",
      "ja": "スクリプトが状態「実行中」に到達すると、「start」コマンドの処理が停止します。実行中のスクリプトの非同期状態の変更ごとに、「531」の返信が送信されます。「実行中」に到達する前にエラーが発生した場合、「start」コマンドの処理も停止します。この場合、実行は中止され、「535」の応答が生成されます。"
    },
    {
      "indent": 3,
      "text": "If an `abort' command or a `suspend' command for the running script is received before processing of the `start' command is complete, then the processing of the `start' command may be stopped before the state `running' is reached. In this case, the resulting status of the running script is given by the respective reply to the `abort' or `suspend' command, and no reply with the transaction identifier of the `start' command is generated.",
      "ja": "「start」コマンドの処理が完了する前に、実行中のスクリプトの「中止」コマンドまたは「停止」コマンドが完了する場合、「ランニング」に到達する前に「start」コマンドの処理が停止する場合があります。この場合、実行中のスクリプトの結果のステータスは、「Abort」または「Suspend」コマンドに対するそれぞれの返信によって与えられ、「start」コマンドのトランザクション識別子との返信は生成されません。"
    },
    {
      "indent": 0,
      "text": "6.1.3. Processing the `suspend' Command",
      "section_title": true,
      "ja": "6.1.3. `suspend 'コマンドを処理します"
    },
    {
      "indent": 3,
      "text": "When the runtime system receives a `suspend' command, it processes it as follows:",
      "ja": "ランタイムシステムが「一時停止」コマンドを受信すると、次のように処理します。"
    },
    {
      "indent": 3,
      "text": "1. If there is a syntax error in the running script identifier or if there is no running script matching the identifier, a `431' reply is sent and processing of the command is stopped.",
      "ja": "1. 実行中のスクリプト識別子に構文エラーがある場合、または識別子に一致する実行ランニングスクリプトがない場合、「431」の返信が送信され、コマンドの処理が停止されます。"
    },
    {
      "indent": 3,
      "text": "2. If the running script is already in the state `suspended', a '231' reply is sent and processing of the command is stopped.",
      "ja": "2. 実行中のスクリプトがすでに「中断」状態にある場合、「231」の返信が送信され、コマンドの処理が停止されます。"
    },
    {
      "indent": 3,
      "text": "3. If the running script is in the state `running', it is suspended and a `231' reply is sent after suspending. If suspending fails, a `434' reply is sent and processing of the command is stopped.",
      "ja": "3. 実行中のスクリプトが状態「実行中」にある場合、停止され、停止後に「231」の返信が送信されます。一時停止が失敗した場合、「434」の返信が送信され、コマンドの処理が停止します。"
    },
    {
      "indent": 3,
      "text": "4. If the running script has not yet reached the state `running' (the `start' command still being processed), it may reach the state `suspended' without having been in the state `running'. After reaching the state `suspended', a `231' reply is sent.",
      "ja": "4. 実行中のスクリプトがまだ状態「実行中」に到達していない場合（「開始」コマンドはまだ処理されています）、状態「ランニング」にならずに「停止」状態に到達する可能性があります。状態「一時停止」に到達した後、「231」の返信が送信されます。"
    },
    {
      "indent": 3,
      "text": "5. If the running script is in any other state, a `434' reply is sent.",
      "ja": "5. 実行中のスクリプトが他の状態にある場合、「434」の返信が送信されます。"
    },
    {
      "indent": 0,
      "text": "6.1.4. Processing the `resume' Command",
      "section_title": true,
      "ja": "6.1.4. 「resume」コマンドを処理します"
    },
    {
      "indent": 3,
      "text": "When the runtime system receives a `resume' command, it processes it as follows:",
      "ja": "ランタイムシステムが「resume」コマンドを受信すると、次のように処理します。"
    },
    {
      "indent": 3,
      "text": "1. If there is a syntax error in the running script identifier or if there is no running script matching the identifier, a `431' reply is sent and processing of the command is stopped.",
      "ja": "1. 実行中のスクリプト識別子に構文エラーがある場合、または識別子に一致する実行ランニングスクリプトがない場合、「431」の返信が送信され、コマンドの処理が停止されます。"
    },
    {
      "indent": 3,
      "text": "2. If the running script is already in the state `running', a `231' reply is sent and processing of the command is stopped.",
      "ja": "2. 実行中のスクリプトがすでに「実行中」状態にある場合、「231」の返信が送信され、コマンドの処理が停止されます。"
    },
    {
      "indent": 3,
      "text": "3. If the running script is in the state `suspended', it is resumed and a `231' reply is sent after resuming. If resuming fails, a `434' reply is sent and processing of the command is stopped.",
      "ja": "3. 実行中のスクリプトが状態「中断」にある場合、再開され、再開後に「231」の返信が送信されます。再開が失敗した場合、「434」の返信が送信され、コマンドの処理が停止します。"
    },
    {
      "indent": 3,
      "text": "4. If the `start' command is still being processed for the script, a `231' reply is sent when the state `running' has been reached.",
      "ja": "4. 「Start」コマンドがまだスクリプトのために処理されている場合、状態「実行中」に到達したときに「231」の返信が送信されます。"
    },
    {
      "indent": 3,
      "text": "5. If the running script is in any other state, a `434' reply is sent.",
      "ja": "5. 実行中のスクリプトが他の状態にある場合、「434」の返信が送信されます。"
    },
    {
      "indent": 0,
      "text": "6.1.5. Processing the `abort' Command",
      "section_title": true,
      "ja": "6.1.5. 「Abort」コマンドを処理します"
    },
    {
      "indent": 3,
      "text": "When the runtime system receives an `abort' command, it processes it as follows:",
      "ja": "ランタイムシステムが「中止」コマンドを受信すると、次のように処理します。"
    },
    {
      "indent": 3,
      "text": "1. If there is a syntax error in the running script identifier or if there is no running script matching the identifier, a `431' reply is sent and processing of the command is stopped.",
      "ja": "1. 実行中のスクリプト識別子に構文エラーがある場合、または識別子に一致する実行ランニングスクリプトがない場合、「431」の返信が送信され、コマンドの処理が停止されます。"
    },
    {
      "indent": 3,
      "text": "2. If the running script is already aborted, a `232' reply is sent and processing of the command is stopped.",
      "ja": "2. 実行中のスクリプトがすでに中止されている場合、「232」の返信が送信され、コマンドの処理が停止します。"
    },
    {
      "indent": 3,
      "text": "3. The running script is aborted and a `232' reply is sent after aborting. If aborting fails, a `434' reply is sent and processing is stopped.",
      "ja": "3. 実行中のスクリプトは中止され、「232」の返信が中止された後に送信されます。中絶が失敗すると、「434」の返信が送信され、処理が停止します。"
    },
    {
      "indent": 0,
      "text": "6.1.6. Processing the `status' Command",
      "section_title": true,
      "ja": "6.1.6. 「ステータス」コマンドを処理します"
    },
    {
      "indent": 3,
      "text": "When the runtime system receives a `status' command, it processes it as follows:",
      "ja": "ランタイムシステムが「ステータス」コマンドを受信すると、次のように処理します。"
    },
    {
      "indent": 3,
      "text": "1. If there is a syntax error in the running script identifier or if there is no running script matching the identifier, a `431' reply is sent and processing of the command is stopped.",
      "ja": "1. 実行中のスクリプト識別子に構文エラーがある場合、または識別子に一致する実行ランニングスクリプトがない場合、「431」の返信が送信され、コマンドの処理が停止されます。"
    },
    {
      "indent": 3,
      "text": "2. The status of the script is obtained and a `231' reply is sent.",
      "ja": "2. スクリプトのステータスが取得され、「231」の返信が送信されます。"
    },
    {
      "indent": 0,
      "text": "6.1.7. Generation of Asynchronous Notifications",
      "section_title": true,
      "ja": "6.1.7. 非同期通知の生成"
    },
    {
      "indent": 3,
      "text": "The runtime system generates or may generate the following notifications:",
      "ja": "ランタイムシステムは、次の通知を生成または生成する場合があります。"
    },
    {
      "indent": 3,
      "text": "1. If a change of the status of a running script is observed by the runtime system, a `531' reply is sent.",
      "ja": "1. ランニングスクリプトのステータスの変更がランタイムシステムによって観察される場合、「531」の返信が送信されます。"
    },
    {
      "indent": 3,
      "text": "2. A `534' reply is sent if a running script terminates normally.",
      "ja": "2. 実行中のスクリプトが正常に終了する場合、「534」の返信が送信されます。"
    },
    {
      "indent": 3,
      "text": "3. A `535' reply is sent if a running script terminates abnormally.",
      "ja": "3. 実行中のスクリプトが異常に終了する場合、「535」の返信が送信されます。"
    },
    {
      "indent": 3,
      "text": "4. If a script generates an intermediate result, a `532' reply is sent.",
      "ja": "4. スクリプトが中間結果を生成すると、「532」の返信が送信されます。"
    },
    {
      "indent": 3,
      "text": "5. If a script requests the generation of a `smScriptResult' notification, a `533' reply is sent.",
      "ja": "5. スクリプトが「smscriptresult」通知の生成を要求する場合、「533」の返信が送信されます。"
    },
    {
      "indent": 3,
      "text": "6. Besides the notifications mentioned above, the runtime system may generate arbitrary `511' replies, which are logged or displayed by the SNMP agent.",
      "ja": "6. 上記の通知に加えて、ランタイムシステムは、SNMPエージェントによってログまたは表示される任意の「511」応答を生成する場合があります。"
    },
    {
      "indent": 0,
      "text": "6.2. SMX Message Processing on the SNMP Agent",
      "section_title": true,
      "ja": "6.2. SNMPエージェントのSMXメッセージ処理"
    },
    {
      "indent": 3,
      "text": "This section describes the conditions under which an SNMP agent implementing the Script MIB generates SMX commands. It also describes how the SNMP agent processes replies to SMX commands.",
      "ja": "このセクションでは、スクリプトMIBを実装するSNMPエージェントがSMXコマンドを生成する条件について説明します。また、SNMPエージェントがSMXコマンドにどのように回答するかについても説明します。"
    },
    {
      "indent": 0,
      "text": "6.2.1. Creating a Runtime System",
      "section_title": true,
      "ja": "6.2.1. ランタイムシステムの作成"
    },
    {
      "indent": 3,
      "text": "New runtime systems are started by the SNMP agent while processing set requests for a `smLaunchStart' variable. The SNMP agent first searches for an already running runtime systems which matches the security profiles associated with the `smLaunchStart' variable. If no suitable runtime system is available, a new runtime system is started by preparing the environment for the new runtime system and starting the executable for the runtime system in a new process which conforms to the operating system security profile. The SNMP agent prepares to accept a connection from the new runtime system. The `smRunState' of all scripts that should be executed in this new runtime system is set to `initializing'.",
      "ja": "新しいランタイムシステムは、「smlaunchstart」変数のセットリクエストを処理する際にSNMPエージェントによって開始されます。SNMPエージェントは、最初に、「SmlaunchStart」変数に関連付けられたセキュリティプロファイルに一致するすでに実行されているランタイムシステムを検索します。適切なランタイムシステムが利用できない場合、新しいランタイムシステムの環境を準備し、オペレーティングシステムのセキュリティプロファイルに準拠する新しいプロセスでランタイムシステムの実行可能ファイルを起動することにより、新しいランタイムシステムが開始されます。SNMPエージェントは、新しいランタイムシステムから接続を受け入れる準備をします。この新しいランタイムシステムで実行する必要があるすべてのスクリプトの「Smrunstate」は、「初期化」に設定されています。"
    },
    {
      "indent": 0,
      "text": "6.2.2. Generating the `hello' Command",
      "section_title": true,
      "ja": "6.2.2. `hello 'コマンドを生成します"
    },
    {
      "indent": 3,
      "text": "The `hello' command is generated once a connection request from a runtime system has been accepted. The SNMP agent sends the `hello' command as defined in section 5.2. The SNMP agent then expects a reply from the runtime system within a reasonable timeout interval.",
      "ja": "ランタイムシステムからの接続要求が受け入れられると、「hello」コマンドが生成されます。SNMPエージェントは、セクション5.2で定義されている「Hello」コマンドを送信します。SNMPエージェントは、合理的なタイムアウト間隔内でランタイムシステムからの返信を期待します。"
    },
    {
      "indent": 3,
      "text": "1. If the timeout expires before the SNMP agent received a reply, then the connection is closed and all data associated with it is deleted. Any scripts that should be running in this runtime system are aborted, the `smRunExitCode' is set to `genericError' and `smRunError' is modified to describe the error situation.",
      "ja": "1. SNMPエージェントが返信を受信する前にタイムアウトの有効期限が切れた場合、接続が閉じられ、それに関連するすべてのデータが削除されます。このランタイムシステムで実行されるべきスクリプトは中止され、「smrunexitcode」は「genericerror」に設定され、「smrunerror」が変更されてエラーの状況を説明するように変更されます。"
    },
    {
      "indent": 3,
      "text": "2. If the received message can not be analyzed because it does not have the required format, then the connection is closed and all data associated with it is deleted. Any scripts that should be running in this runtime system are aborted, the `smRunExitCode' is set to `genericError' and `smRunError' is modified to describe the error situation.",
      "ja": "2. 受信したメッセージを必要な形式がないために分析できない場合、接続が閉じられ、関連するすべてのデータが削除されます。このランタイムシステムで実行されるべきスクリプトは中止され、「smrunexitcode」は「genericerror」に設定され、「smrunerror」が変更されてエラーの状況を説明するように変更されます。"
    },
    {
      "indent": 3,
      "text": "3. If the received message is a `211' reply, then the `Id' is checked whether it matches the `Id' used in the `hello' command. If the `Id' matches, then the `Version' is checked. If the `Version' matches a supported SMX protocol version, then the `Cookie' is checked whether it matches the cookie passed to the runtime system. If any of these tests fails, then the connection is closed and all data associated with this runtime system is deleted. Any scripts that should be running in this runtime system are aborted, the `smRunExitCode' is set to `genericError' and `smRunError' is modified to describe the error situation.",
      "ja": "3. 受信したメッセージが「211」の返信である場合、「ID」が「Hello」コマンドで使用されている「ID」と一致するかどうかを確認します。「ID」が一致する場合、「バージョン」がチェックされます。「バージョン」がサポートされているSMXプロトコルバージョンと一致する場合、「Cookie」はランタイムシステムに合格したCookieと一致するかどうかを確認します。これらのテストのいずれかが失敗した場合、接続が閉じられ、このランタイムシステムに関連付けられているすべてのデータが削除されます。このランタイムシステムで実行されるべきスクリプトは中止され、「smrunexitcode」は「genericerror」に設定され、「smrunerror」が変更されてエラーの状況を説明するように変更されます。"
    },
    {
      "indent": 3,
      "text": "4. Received messages are discarded if none of the previous rules applies.",
      "ja": "4. 受信したメッセージは、以前のルールのいずれも適用されない場合に破棄されます。"
    },
    {
      "indent": 0,
      "text": "6.2.3. Generating the `start' Command",
      "section_title": true,
      "ja": "6.2.3. `start 'コマンドを生成します"
    },
    {
      "indent": 3,
      "text": "The `start' command is generated while processing set-requests for a `smLaunchStart' variable. The `start' command assumes that the SNMP agent already determined a runtime system suitable to execute the script associated with the `smLaunchStart' variable. The SNMP agent sends the `start' command as defined in section 5.2 to the selected runtime system. The SNMP agent then expects a reply from the runtime system within a reasonable timeout interval.",
      "ja": "`start 'コマンドは、「smlaunchstart」変数のセットレクエストの処理中に生成されます。`start 'コマンドは、SNMPエージェントが既に「smlaunchstart」変数に関連付けられたスクリプトを実行するのに適したランタイムシステムを決定していると想定しています。SNMPエージェントは、セクション5.2で定義されている「開始」コマンドを選択したランタイムシステムに送信します。SNMPエージェントは、合理的なタイムアウト間隔内でランタイムシステムからの返信を期待します。"
    },
    {
      "indent": 3,
      "text": "1. If the timeout expires before the SNMP agent received a reply, then the SNMP agent sends an `abort' command to abort the running script and sets the `smRunState' of the running script to `terminated', the `smRunExitCode' to `genericError' and `smRunError' is modified to describe the timeout situation.",
      "ja": "1. SNMPエージェントが返信を受信する前にタイムアウトの有効期限が切れた場合、SNMPエージェントは「中止」コマンドを送信して実行中のスクリプトを中止し、実行中のスクリプトの「SmrunState」を「終了」するように設定します。「Smrunerror」は、タイムアウトの状況を説明するように変更されています。"
    },
    {
      "indent": 3,
      "text": "2. If the received message can not be analyzed because it does not have the required format, then the message is ignored. The SNMP agent continues to wait for a valid reply message until the timeout expires.",
      "ja": "2. 必要な形式がないために受信したメッセージを分析できない場合、メッセージは無視されます。SNMPエージェントは、タイムアウトの有効期限が切れるまで有効な返信メッセージを待ち続けます。"
    },
    {
      "indent": 3,
      "text": "3. If the received message is a `4yz' reply and the `Id' matches the `Id' of the `start' command, then the SNMP agent assumes that the script can not be started. The `smRunState' of the running script is set to `terminated', the `smRunExitCode' to `genericError' and the `smRunError' is modified to contain a message describing the error situation.",
      "ja": "3. 受信したメッセージが「4YZ」の返信であり、「ID」が「start」コマンドの「ID」と一致する場合、SNMPエージェントはスクリプトを起動できないと想定します。実行中のスクリプトの「smrunstate」は「終了」に設定され、「smrunexitcode」から「genericerror」と「smrunerror」が変更され、エラーの状況を説明するメッセージが含まれます。"
    },
    {
      "indent": 3,
      "text": "4. If the received message is a `231' reply and the `Id' matches the `Id' of the `start' command, then the `smRunState' variable of the running script is updated.",
      "ja": "4. 受信したメッセージが「231」の返信であり、「ID」が「start」コマンドの「ID」と一致する場合、実行中のスクリプトの「smrunState」変数が更新されます。"
    },
    {
      "indent": 3,
      "text": "5. Received messages are discarded if none of the previous rules applies.",
      "ja": "5. 受信したメッセージは、以前のルールのいずれも適用されない場合に破棄されます。"
    },
    {
      "indent": 0,
      "text": "6.2.4. Generating the `suspend' Command",
      "section_title": true,
      "ja": "6.2.4. 「一時停止」コマンドを生成します"
    },
    {
      "indent": 3,
      "text": "The `suspend' command is generated while processing set-requests for the `smLaunchControl' and `smRunControl' variables which change the value to `suspend'. The SNMP agent sets the `smRunState' variable to `suspending' and sends the `suspend' command as defined in section 5.2. The SNMP agent then expects a reply from the runtime system within a reasonable timeout interval.",
      "ja": "「smlaunchcontrol」および「smruncontrol」変数のセットレクエストを処理する際に、「一時停止」コマンドが生成され、値を「一時停止」に変更します。SNMPエージェントは、「SmrunState」変数を「一時停止」に設定し、セクション5.2で定義されている「サスペンド」コマンドを送信します。SNMPエージェントは、合理的なタイムアウト間隔内でランタイムシステムからの返信を期待します。"
    },
    {
      "indent": 3,
      "text": "1. If the timeout expires before the SNMP agent received a reply, then the SNMP agent sends an `abort' command to abort the running script and sets the `smRunState' of the running script to `terminated', the `smRunExitCode' to `genericError' and `smRunError' is modified to describe the timeout situation.",
      "ja": "1. SNMPエージェントが返信を受信する前にタイムアウトの有効期限が切れた場合、SNMPエージェントは「中止」コマンドを送信して実行中のスクリプトを中止し、実行中のスクリプトの「SmrunState」を「終了」するように設定します。「Smrunerror」は、タイムアウトの状況を説明するように変更されています。"
    },
    {
      "indent": 3,
      "text": "2. If the received message can not be analyzed because it does not have the required format, then the message is ignored. The SNMP agent continues to wait for a valid reply message until the timeout expires.",
      "ja": "2. 必要な形式がないために受信したメッセージを分析できない場合、メッセージは無視されます。SNMPエージェントは、タイムアウトの有効期限が切れるまで有効な返信メッセージを待ち続けます。"
    },
    {
      "indent": 3,
      "text": "3. If the received message is a `401', `402' or a `431' reply and the `Id' matches the `Id' of the `suspend' command, then the runtime systems is assumed to not provide the suspend/resume capability and processing of the `suspend' command stops.",
      "ja": "3. 受信したメッセージが「401」、「402」、または「431」の返信であり、「ID」が「一時停止」コマンドの「ID」と一致する場合、ランタイムシステムは一時停止/履歴書機能を提供しないと想定されます「一時停止」コマンドの処理が停止します。"
    },
    {
      "indent": 3,
      "text": "4. If the received message is a `231' reply and the `Id' matches the `Id' of the `suspend' command, then the `smRunState' variable of the running script is updated.",
      "ja": "4. 受信したメッセージが「231」の返信であり、「ID」が「停止」コマンドの「ID」と一致する場合、実行中のスクリプトの「SMRUNSTATE」変数が更新されます。"
    },
    {
      "indent": 3,
      "text": "5. Received messages are discarded if none of the previous rules applies.",
      "ja": "5. 受信したメッセージは、以前のルールのいずれも適用されない場合に破棄されます。"
    },
    {
      "indent": 0,
      "text": "6.2.5. Generating the `resume' Command",
      "section_title": true,
      "ja": "6.2.5. 「resume」コマンドを生成します"
    },
    {
      "indent": 3,
      "text": "The `resume' command is generated while processing set-requests for the `smLaunchControl' and `smRunControl' variables which change the value to `resume'. The SNMP agent sets the `smRunState' variable to `resuming' and sends the `resume' command as defined in section 5.2. The SNMP agent then expects a reply from the runtime system within a reasonable timeout interval.",
      "ja": "「smlaunchcontrol」および「smruncontrol」変数のセットレクストを処理する際に、「resume」コマンドは生成され、値を「resume」に変更します。SNMPエージェントは、「smrunstate」変数を「再開」に設定し、セクション5.2で定義されている「resume」コマンドを送信します。SNMPエージェントは、合理的なタイムアウト間隔内でランタイムシステムからの返信を期待します。"
    },
    {
      "indent": 3,
      "text": "1. If the timeout expires before the SNMP agent received a reply, then the SNMP agent sends an `abort' command to abort the running script and sets the `smRunState' of the running script to `terminated', the `smRunExitCode' to `genericError' and `smRunError' is modified to describe the timeout situation.",
      "ja": "1. SNMPエージェントが返信を受信する前にタイムアウトの有効期限が切れた場合、SNMPエージェントは「中止」コマンドを送信して実行中のスクリプトを中止し、実行中のスクリプトの「SmrunState」を「終了」するように設定します。「Smrunerror」は、タイムアウトの状況を説明するように変更されています。"
    },
    {
      "indent": 3,
      "text": "2. If the received message can not be analyzed because it does not have the required format, then the message is ignored. The SNMP agent continues to wait for a valid reply message until the timeout expires.",
      "ja": "2. 必要な形式がないために受信したメッセージを分析できない場合、メッセージは無視されます。SNMPエージェントは、タイムアウトの有効期限が切れるまで有効な返信メッセージを待ち続けます。"
    },
    {
      "indent": 3,
      "text": "3. If the received message is a `401', `402' or a `431' reply and the `Id' matches the `Id' of the `resume' command, then the runtime systems is assumed to not provide the suspend/resume capability and processing of the `resume' command stops.",
      "ja": "3. 受信したメッセージが `401 '、` 402'、または `431 '返信であり、「id」が「resume」コマンドの「id」と一致する場合、ランタイムシステムは一時停止/履歴書機能を提供しないと想定されます「resume」コマンドの処理停止。"
    },
    {
      "indent": 3,
      "text": "4. If the received message is a `231' reply and the `Id' matches the `Id' of the `resume' command, then the `smRunState' variable of the running script is updated.",
      "ja": "4. 受信したメッセージが「231」の返信であり、「ID」が「resume」コマンドの「ID」と一致する場合、実行中のスクリプトの「smrunState」変数が更新されます。"
    },
    {
      "indent": 3,
      "text": "5. Received messages are discarded if none of the previous rules applies.",
      "ja": "5. 受信したメッセージは、以前のルールのいずれも適用されない場合に破棄されます。"
    },
    {
      "indent": 0,
      "text": "6.2.6. Generating the `abort' Command",
      "section_title": true,
      "ja": "6.2.6. 「Abort」コマンドを生成します"
    },
    {
      "indent": 3,
      "text": "The `abort' command is generated while processing set-requests for the `smLaunchControl' and `smRunControl' variables which change the value to `abort'. In addition, the `abort' command is also generated if the `smRunLifeTime' variable reaches the value 0. The SNMP agent sends the `abort' command as defined in section 5.2. The SNMP agent then expects a reply from the runtime system within a reasonable timeout interval.",
      "ja": "「smlaunchcontrol」および「smruncontrol」変数のセットレクエストを処理する際に、「abort」コマンドは生成され、値を「aubort」に変更します。さらに、「smrunlifetime」変数が値0に達すると、「abort」コマンドも生成されます。SNMPエージェントは、セクション5.2で定義されている「Abort」コマンドを送信します。SNMPエージェントは、合理的なタイムアウト間隔内でランタイムシステムからの返信を期待します。"
    },
    {
      "indent": 3,
      "text": "1. If the timeout expires before the SNMP agent received a reply, then the SNMP agent sets the `smRunState' of the running script to `terminated', the `smRunExitCode' to `genericError' and `smRunError' is modified to describe the timeout situation.",
      "ja": "1. SNMPエージェントが返信を受信する前にタイムアウトの有効期限が切れた場合、SNMPエージェントは実行中のスクリプトの「smrunstate」を「終了」し、「smrunexitcode」を「genericerror」と「smrunerror」に設定し、タイムアウトの状況を説明するために変更されます。"
    },
    {
      "indent": 3,
      "text": "2. If the received message can not be analyzed because it does not have the required format, then the message is ignored. The SNMP agent continues to wait for a valid reply message until the timeout expires.",
      "ja": "2. 必要な形式がないために受信したメッセージを分析できない場合、メッセージは無視されます。SNMPエージェントは、タイムアウトの有効期限が切れるまで有効な返信メッセージを待ち続けます。"
    },
    {
      "indent": 3,
      "text": "3. If the received message is a `4yz' reply and the `Id' matches the `Id' of the `abort' command, then the SNMP agent assumes that the script can not be aborted. The `smRunState' of the running script is set to `terminated', the `smRunExitCode' to `genericError' and the `smRunResult' is modified to describe the error situation.",
      "ja": "3. 受信したメッセージが「4YZ」の返信であり、「ID」が「Abort」コマンドの「ID」と一致する場合、SNMPエージェントはスクリプトを中止できないと想定します。実行中のスクリプトの「smrunState」は「終了」に設定され、「smrunexitcode」は「genericerror」に「smrunResult」が変更され、エラーの状況を説明するように変更されます。"
    },
    {
      "indent": 3,
      "text": "4. If the received message is a `232' reply and the `Id' matches the `Id' of the `abort' command, then the `smRunExitCode' variable of the terminated script is changed to either `halted' (when processing a set-request for the `smLaunchControl' and `smRunControl' variables) or `lifeTimeExceeded' (if the `abort' command was generated because the `smRunLifeTime' variable reached the value 0). The `smRunState' variable is changed to the value `terminated'.",
      "ja": "4. 受信したメッセージが「232」の返信であり、「ID」が「Abort」コマンドの「ID」と一致する場合、終了したスクリプトの「SMRUNEXITCODE」変数は「停止」に変更されます（セットの処理時に「smlaunchcontrol」および「smruncontrol '変数）または「lifetimeex cuceed」の要求（「smrunlifetime」変数が値0に達したために「abort」コマンドが生成された場合）。「smrunstate」変数は、値「終了」に変更されます。"
    },
    {
      "indent": 3,
      "text": "5. Received messages are discarded if none of the previous rules applies.",
      "ja": "5. 受信したメッセージは、以前のルールのいずれも適用されない場合に破棄されます。"
    },
    {
      "indent": 0,
      "text": "6.2.7. Generating the `status' Command",
      "section_title": true,
      "ja": "6.2.7. 「ステータス」コマンドを生成します"
    },
    {
      "indent": 3,
      "text": "The `status' command is generated either periodically or on demand by the SNMP agent in order to retrieve status information from running scripts. The SNMP agent sends the `status' command as defined in 5.2. The SNMP agent then expects a reply from the runtime system within a reasonable timeout interval.",
      "ja": "「ステータス」コマンドは、ランニングスクリプトからステータス情報を取得するために、SNMPエージェントによって定期的にまたはオンデマンドで生成されます。SNMPエージェントは、5.2で定義されている「ステータス」コマンドを送信します。SNMPエージェントは、合理的なタイムアウト間隔内でランタイムシステムからの返信を期待します。"
    },
    {
      "indent": 3,
      "text": "1. If the timeout expires before the SNMP agent received a reply, then the SNMP agent sends an `abort' command to abort the running script and sets the `smRunState' of the running script to `terminated', the `smRunExitCode' to `genericError' and `smRunError' is modified to describe the timeout situation.",
      "ja": "1. SNMPエージェントが返信を受信する前にタイムアウトの有効期限が切れた場合、SNMPエージェントは「中止」コマンドを送信して実行中のスクリプトを中止し、実行中のスクリプトの「SmrunState」を「終了」するように設定します。「Smrunerror」は、タイムアウトの状況を説明するように変更されています。"
    },
    {
      "indent": 3,
      "text": "2. If the received message can not be analyzed because it does not have the required format, then the message is ignored. The SNMP agent continues to wait for a valid reply message until the timeout expires.",
      "ja": "2. 必要な形式がないために受信したメッセージを分析できない場合、メッセージは無視されます。SNMPエージェントは、タイムアウトの有効期限が切れるまで有効な返信メッセージを待ち続けます。"
    },
    {
      "indent": 3,
      "text": "3. If the received message is a `4yz' reply and the `Id' matches the `Id' of the `status' command, then the SNMP agent assumes that the script status can not be read, which is a fatal error condition. The SNMP agent sends an `abort' command to abort the running script. The `smRunState' of the running script is set to",
      "ja": "3. 受信したメッセージが「4YZ」の返信であり、「ID」が「ステータス」コマンドの「ID」と一致する場合、SNMPエージェントは、スクリプトステータスを読み取れないと想定しています。これは致命的なエラー条件です。SNMPエージェントは、「Abort」コマンドを送信して、実行中のスクリプトを中止します。実行中のスクリプトの「smrunstate」はに設定されています"
    },
    {
      "indent": 8,
      "text": "`terminated', the `smRunExitCode' to `genericError' and the `smRunError' is modified to describe the error situation.",
      "ja": "「終了」、「smrunexitcode」は「genericError」に「smrunexitcode」と「smrunerror」が変更され、エラーの状況を説明します。"
    },
    {
      "indent": 3,
      "text": "4. If the received message is a `231' reply and the `Id' matches the `Id' of the `status' command, then the `smRunState' variable of the running script is updated.",
      "ja": "4. 受信したメッセージが「231」の返信であり、「ID」が「ステータス」コマンドの「ID」と一致する場合、実行中のスクリプトの「SMRUNSTATE」変数が更新されます。"
    },
    {
      "indent": 3,
      "text": "5. Received messages are discarded if none of the previous rules applies.",
      "ja": "5. 受信したメッセージは、以前のルールのいずれも適用されない場合に破棄されます。"
    },
    {
      "indent": 0,
      "text": "6.2.8. Processing Asynchronous Notifications",
      "section_title": true,
      "ja": "6.2.8. 非同期通知の処理"
    },
    {
      "indent": 3,
      "text": "The runtime system can send asynchronous status change notifications. These `5yz' replies are processed as described below.",
      "ja": "ランタイムシステムは、非同期ステータス変更通知を送信できます。これらの「5YZ」応答は、以下で説明するように処理されます。"
    },
    {
      "indent": 3,
      "text": "1. If the received message is a `511' reply, then the message is displayed or logged appropriately and processing stops.",
      "ja": "1. 受信したメッセージが「511」の返信である場合、メッセージが適切に表示またはログに表示され、処理が停止します。"
    },
    {
      "indent": 3,
      "text": "2. If the received message is a `531' reply, then the SNMP agent checks whether a running script with the given `RunId' exists in the runtime system. Processing of the notification stops if there is no running script with the `RunId'. Otherwise, the `smRunState' is updated.",
      "ja": "2. 受信したメッセージが「531」の返信である場合、SNMPエージェントは、実行時の「runID」を持つ実行中のスクリプトがランタイムシステムに存在するかどうかをチェックします。「runid」に実行されているスクリプトがない場合、通知の処理は停止します。それ以外の場合、「smrunstate」が更新されます。"
    },
    {
      "indent": 3,
      "text": "3. If the received message is a `532' reply, then the SNMP agent checks whether a running script with the given `RunId' exists in the runtime system. Processing of the notification stops if there is no running script with the `RunId'. Otherwise, `smRunState' and `smRunResult' are updated.",
      "ja": "3. 受信したメッセージが「532」の返信である場合、SNMPエージェントは、実行時の「runID」を持つ実行中のスクリプトがランタイムシステムに存在するかどうかをチェックします。「runid」に実行されているスクリプトがない場合、通知の処理は停止します。それ以外の場合、「smrunstate」と「smrunresult」が更新されます。"
    },
    {
      "indent": 3,
      "text": "4. If the received message is a `533' reply, then the SNMP agent checks whether a running script with the given `RunId' exists in the runtime system. Processing of the notification stops if there is no running script with the `RunId'. Otherwise, `smRunState' and `smRunResult' are updated and the `smScriptResult' notification is generated.",
      "ja": "4. 受信したメッセージが「533」の返信である場合、SNMPエージェントは、実行時システムに指定された「runID」を持つ実行中のスクリプトが存在するかどうかをチェックします。「runid」に実行されているスクリプトがない場合、通知の処理は停止します。それ以外の場合、「smrunstate」と「smrunresult」が更新され、「smscriptresult」通知が生成されます。"
    },
    {
      "indent": 3,
      "text": "5. If the received message is a `534' reply, then the SNMP agent checks whether a running script with the given `RunId' exists in the runtime system. Processing stops if there is no running script with the `RunId'. Otherwise, `smExitCode' is set to `noError', `smRunState' is set to `terminated' and `smRunResult' is updated.",
      "ja": "5. 受信したメッセージが「534」の返信である場合、SNMPエージェントは、実行時の「runID」を持つ実行中のスクリプトがランタイムシステムに存在するかどうかをチェックします。「runid」に実行されているスクリプトがない場合、処理が停止します。それ以外の場合、「smexitcode」は「noerror」に設定され、「smrunstate」が「終了」に設定され、「smrunresult」が更新されます。"
    },
    {
      "indent": 3,
      "text": "6. If the received message is a `535' reply, then the SNMP agent checks whether a running script with the given `RunId' exists in the runtime system. Processing stops if there is no running script with the `RunId'. Otherwise, `smRunState' is set to",
      "ja": "6. 受信したメッセージが「535」の返信である場合、SNMPエージェントは、実行時システムに指定された「runID」を持つ実行中のスクリプトが存在するかどうかをチェックします。「runid」に実行されているスクリプトがない場合、処理が停止します。それ以外の場合、「smrunstate」が設定されています"
    },
    {
      "indent": 8,
      "text": "`terminated' and `smExitCode' and `smRunError' are updated.",
      "ja": "「終了」および「Smexitcode」と「Smrunerror」が更新されます。"
    },
    {
      "indent": 0,
      "text": "7. An Example SMX Message Flow",
      "section_title": true,
      "ja": "7. SMXメッセージフローの例"
    },
    {
      "indent": 3,
      "text": "Below is an example SMX message exchange. Messages send from the SNMP agent are marked with `>' while replies send from the runtime system are marked with `<'. Line terminators (`CRLF') are not shown in order to make the example more readable.",
      "ja": "以下は、SMXメッセージ交換の例です。SNMPエージェントから送信されるメッセージは「>」でマークされ、ランタイムシステムから送信される返信には「<」がマークされています。ラインターミネーター（「CRLF」）は、例をより読みやすくするためには表示されません。"
    },
    {
      "indent": 5,
      "text": "> hello 1 < 211 1 SMX/1.0 0AF0BAED6F877FBC > start 2 42 \"/var/snmp/scripts/foo.jar\" untrusted \"\" > start 5 44 \"/var/snmp/scripts/bar.jar\" trusted \"www.ietf.org\" < 231 2 2 > start 12 48 \"/var/snmp/scripts/foo.jar\" funny \"\" < 231 5 2 < 532 0 44 2 \"waiting for response\" > status 18 42 > status 19 44 < 432 12 < 231 19 2 < 231 18 2 > hello 578 < 211 578 SMX/1.0 0AF0BAED6F877FBC > suspend 581 42 < 231 581 4 < 534 0 44 \"test completed\" > abort 611 42 < 232 611",
      "ja": "> Hello 1 <211 1 SMX/1.0 0AF0BAED6F8777FBC> START 2 42 \"/VAR/SNMP/SCRIPTS/FOO.JAR.org \"<231 2 2> Start 12 48\" /var/snmp/scripts/foo.jar \"Funny\" \"<231 5 2 <532 0 44 2\"応答を待っている \">ステータス18 42>ステータス19 44 <43212 <231 19 2 <231 18 2> Hello 578 <211 578 SMX/1.0 0AF0BAED6F877FBC> SUSPEND 581 42 <231 581 4 <534 0 44 \"テスト完了\"> ABORT 611 42 <232 611"
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "ja": "8. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "The SMX protocol runs on top of a local TCP connection. Protocol messages never leave the local system. It is therefore not possible to attack the message exchanges if the underlying operating system protects local TCP connections from other users on the same machine.",
      "ja": "SMXプロトコルは、ローカルTCP接続の上で実行されます。プロトコルメッセージはローカルシステムを離れることはありません。したがって、基礎となるオペレーティングシステムが同じマシン上の他のユーザーからローカルTCP接続を保護する場合、メッセージ交換を攻撃することはできません。"
    },
    {
      "indent": 3,
      "text": "The only critical situation is the connection establishment phase. The rules defined in section 4 ensure that only local connections are accepted and that a runtime system has to identify itself with a security cookie generated by the SNMP agent and passed to the runtime system process as part of its environment. This rule ensures that scripts will only be executed on authorized runtime systems. This scheme relies on the protection of process environments by the operating system. Well maintained UNIX operating systems have this property.",
      "ja": "唯一の重要な状況は、接続確立フェーズです。セクション4で定義されているルールは、ローカル接続のみが受け入れられ、ランタイムシステムがSNMPエージェントによって生成され、環境の一部としてランタイムシステムプロセスに渡されたセキュリティCookieで自分自身を識別する必要があることを確認します。このルールにより、スクリプトは承認されたランタイムシステムでのみ実行されることが保証されます。このスキームは、オペレーティングシステムによるプロセス環境の保護に依存しています。よくメンテナンスされたUNIXオペレーティングシステムには、このプロパティがあります。"
    },
    {
      "indent": 3,
      "text": "The SMX protocol allows to execute script under different operating system and runtime system security profiles. The memo suggests to map the smLaunchOwner value to an operating system and a runtime system security profile. The operating system security profile is enforced by the operating system by setting up a proper process environment. The runtime security profile is enforced by a secure runtime system (e.g. the Java virtual machine or a safe Tcl interpreter) [7].",
      "ja": "SMXプロトコルでは、異なるオペレーティングシステムとランタイムシステムセキュリティプロファイルの下でスクリプトを実行できます。このメモは、SMLaunchownerの値をオペレーティングシステムとランタイムシステムセキュリティプロファイルにマッピングすることを提案しています。オペレーティングシステムのセキュリティプロファイルは、適切なプロセス環境を設定することにより、オペレーティングシステムによって実施されます。ランタイムセキュリティプロファイルは、安全なランタイムシステム（たとえば、Java仮想マシンまたは安全なTCLインタープリターなど）によって実施されます[7]。"
    },
    {
      "indent": 0,
      "text": "9. Acknowledgments",
      "section_title": true,
      "ja": "9. 謝辞"
    },
    {
      "indent": 3,
      "text": "The protocol described in this memo is the result of a joint project between the Technical University of Braunschweig and C&C Research Laboratories of NEC Europe Ltd. in Berlin. We would like to thank the following project members for their contributions to the initial design and the implementation of the protocol described in this memo:",
      "ja": "このメモに記載されているプロトコルは、ベルリンのブラウンシュヴァフィグ工科大学とNECヨーロッパ株式会社のC＆C研究研究所との共同プロジェクトの結果です。このメモに記載されているプロトコルの初期設計と実装への貢献について、次のプロジェクトメンバーに感謝します。"
    },
    {
      "indent": 11,
      "text": "M. Bolz (TU Braunschweig) C. Kappler (NEC Europe Ltd.) A. Kind (NEC Europe Ltd.) S. Mertens (TU Braunschweig) J. Nicklisch (NEC Europe Ltd.)",
      "ja": "M.ボルツ（Tu Braunschweig）C。Kappler（Nec Europe Ltd.）A。Kind（Nec Europe Ltd.）S。Mertens（Tu Braunschweig）J。Nicklisch（Nec Europe Ltd.）"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "ja": "10. 参考文献"
    },
    {
      "indent": 3,
      "text": "[1] Levi, D. and J. Schoenwaelder, \"Definitions of Managed Objects for the Delegation of Management Scripts\", RFC 2592, May 1999.",
      "ja": "[1] Levi、D。およびJ. Schoenwaelder、「管理スクリプトの委任のための管理されたオブジェクトの定義」、RFC 2592、1999年5月。"
    },
    {
      "indent": 3,
      "text": "[2] Lindholm, T., and F. Yellin, \"The Java Virtual Machine Specification\", Addison Wesley, 1997.",
      "ja": "[2] Lindholm、T。、およびF. Yellin、「Java Virtual Machine Specification」、Addison Wesley、1997。"
    },
    {
      "indent": 3,
      "text": "[3] J.K. Ousterhout, \"Tcl and the Tk Toolkit\", Addison Wesley, 1994.",
      "ja": "[3] J.K.Oousterhout、「TCLとTK Toolkit」、Addison Wesley、1994。"
    },
    {
      "indent": 3,
      "text": "[4] Fritzinger, J.S., and M. Mueller, \"Java Security\", White Paper, Sun Microsystems, Inc., 1996.",
      "ja": "[4] Fritzinger、J.S.、およびM. Mueller、「Java Security」、White Paper、Sun Microsystems、Inc.、1996。"
    },
    {
      "indent": 3,
      "text": "[5] Levy, J.Y., Demailly, L., Ousterhout, J.K., and B. Welch, \"The Safe-Tcl Security Model\", Proc. USENIX Annual Technical Conference, June 1998.",
      "ja": "[5] Levy、J.Y.、Demailly、L.、Oousterhout、J.K。、およびB. Welch、「Safe-TCL Security Model」、Proc。USENIX年次技術会議、1998年6月。"
    },
    {
      "indent": 3,
      "text": "[6] Crocker, D., and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", RFC 2234, Internet Mail Consortium, Demon Internet Ltd., November 1997.",
      "ja": "[6] Crocker、D。、およびP. Overell、「構文仕様のためのBNFの増強：ABNF：ABNF」、RFC 2234、Internet Mail Consortium、Demon Internet Ltd.、1997年11月。"
    },
    {
      "indent": 3,
      "text": "[7] Schoenwaelder, J., and J. Quittek, \"Secure Management by Delegation within the Internet Management\", Proc. IFIP/IEEE International Symposium on Integrated Network Management '99, May 1999.",
      "ja": "[7] Schoenwaelder、J。、およびJ. Quittek、「インターネット管理内の委任による安全な管理」、Proc。1999年5月、統合ネットワーク管理'99に関するIFIP/IEEE国際シンポジウム。"
    },
    {
      "indent": 0,
      "text": "11. Authors' Addresses",
      "section_title": true,
      "ja": "11. 著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Juergen Schoenwaelder TU Braunschweig Bueltenweg 74/75 38106 Braunschweig Germany",
      "ja": "Juergen Schoenwaelder Tu Braunschweig Bueltenweg 74/75 38106 Braunschweigドイツ"
    },
    {
      "indent": 3,
      "text": "Phone: +49 531 391-3283\nEMail: schoenw@ibr.cs.tu-bs.de",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Juergen Quittek NEC Europe Ltd. C&C Research Laboratories Hardenbergplatz 2 10623 Berlin Germany",
      "ja": "Juergen Quittek Nec Europe Ltd. C＆C Research Laboratories Hardenbergplatz 2 10623ベルリンドイツ"
    },
    {
      "indent": 3,
      "text": "Phone: +49 30 254230-19\nEMail: quittek@ccrle.nec.de",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "12. Full Copyright Statement",
      "section_title": true,
      "ja": "12. 完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（1999）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があります。また、それについてコメントまたは説明する派生作品、またはその実装を支援することは、いかなる種類の制限なしに、準備、コピー、公開、および部分的に配布される場合があります。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書と本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}