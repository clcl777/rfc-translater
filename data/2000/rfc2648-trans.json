{
  "title": {
    "text": "RFC 2648 - A URN Namespace for IETF Documents",
    "ja": "RFC 2648 - IETFドキュメント用のurnネームスペース"
  },
  "number": 2648,
  "created_at": "2024-02-13 13:17:27.710798+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                           R. Moats\nRequest for Comments: 2648                                          AT&T\nCategory: Informational                                      August 1999",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 19,
      "text": "A URN Namespace for IETF Documents",
      "ja": "IETFドキュメント用のurnネームスペース"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "ja": "このメモは、インターネットコミュニティに情報を提供します。いかなる種類のインターネット標準を指定しません。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（1999）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "A system for Uniform Resource Names (URNs) must be capable of supporting new naming systems. As an example of proposing a new namespace, this document proposes the \"ietf\" namespace. This namespace consists of the RFC family of documents (RFCs, STDs, FYIs, and BCPs) developed by the IETF and published by the RFC Editor, the minutes of working groups (WG) and birds of a feather (BOF) meetings that occur during IETF conferences, and the Internet Drafts published by the Internet Drafts Editor. Both the current URN framework and URN syntax support this namespace.",
      "ja": "均一なリソース名（URN）のシステムは、新しい命名システムをサポートできる必要があります。新しい名前空間を提案する例として、このドキュメントは「IETF」名前空間を提案しています。この名前空間は、IETFによって開発され、RFCエディターによって発行されたドキュメントのRFCファミリー（RFC、STDS、FYIS、およびBCP）で構成され、ワーキンググループ（WG）の議事録、および羽の鳥（BOF）会議が発生します。IETF会議、およびインターネットドラフトエディターが発行したインターネットドラフト。現在のURNフレームワークとURN構文の両方がこの名前空間をサポートしています。"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "ja": "1. はじめに"
    },
    {
      "indent": 3,
      "text": "This document proposes the \"ietf\" namespace, which consists of the RFC family of documents (RFCs, STDs, FYIs, and BCPs) developed by the IETF and published by the RFC editor and the minutes of working groups (WG) and birds of a feather (BOF) meetings that occur during IETF conferences.",
      "ja": "このドキュメントは、IETFによって開発され、RFCエディターによって公開されたドキュメントのRFCファミリー（RFC、STDS、FYIS、およびBCP）で構成される「IETF」名前空間を提案します。IETF会議中に発生するフェザー（BOF）会議。"
    },
    {
      "indent": 3,
      "text": "The namespace specification is for a formal namespace.",
      "ja": "名前空間仕様は、正式な名前空間用です。"
    },
    {
      "indent": 0,
      "text": "2. Specification Template",
      "section_title": true,
      "ja": "2. 仕様テンプレート"
    },
    {
      "indent": 6,
      "text": "Namespace ID:",
      "ja": "名前空間ID："
    },
    {
      "indent": 12,
      "text": "\"ietf\" requested.",
      "ja": "「IETF」が要求しました。"
    },
    {
      "indent": 6,
      "text": "Registration Information:",
      "ja": "登録情報："
    },
    {
      "indent": 12,
      "text": "Registration version number: 1 Registration date: 1999-04-22",
      "ja": "登録バージョン番号：1登録日：1999-04-22"
    },
    {
      "indent": 6,
      "text": "Declared registrant of the namespace:",
      "ja": "名前空間の登録者を宣言する："
    },
    {
      "indent": 12,
      "text": "Ryan Moats jayhawk@att.com AT&T 15621 Drexel Circle Omaha, NE 68135-2358",
      "ja": "Ryan Moats jayhawk@att.com AT＆T 15621ドレクセルサークルオマハ、NE 68135-2358"
    },
    {
      "indent": 6,
      "text": "Declaration of structure:",
      "ja": "構造の宣言："
    },
    {
      "indent": 12,
      "text": "The identifier has the following ABNF [2] specification:",
      "ja": "識別子には、次のABNF [2]仕様があります。"
    },
    {
      "indent": 12,
      "text": "NSS = rfc-nss / fyi-nss / std-nss / bcp-nss /\n      draft-nss / mtg-nss / other-nss",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "rfc-nss = \"rfc:\" 1*DIGIT\nfyi-nss = \"fyi:\" 1*DIGIT\nstd-nss = \"std:\" 1*DIGIT\nbcp-nss = \"bcp:\" 1*DIGIT\ndraft-nss = \"id:\" string\nmtg-nss = \"mtg:\" string\nother-nss = string\n  ; beginning with a prefix other than one of those\n  ; above for future expansion",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "string = 1*(DIGIT / ALPHA / \"-\")",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 12,
      "text": "If the IESG (or it successor) adds a new document series, this ABNF specification will need to be updated. Further, if a working group or BOF is created that used characters outside the range of this ABNF specification, this specification will need to be updated. Any system intended to resolve names for this namespace should be written with the awareness that this could occur at any time.",
      "ja": "IESG（または後継者）が新しいドキュメントシリーズを追加する場合、このABNF仕様を更新する必要があります。さらに、このABNF仕様の範囲外の文字を使用したワーキンググループまたはBOFが作成された場合、この仕様を更新する必要があります。この名前空間の名前を解決することを目的としたシステムは、これがいつでも発生する可能性があるという認識を持って記述する必要があります。"
    },
    {
      "indent": 6,
      "text": "Relevant ancillary documentation:",
      "ja": "関連する補助文書："
    },
    {
      "indent": 12,
      "text": "Relevant documentation is in RFC 2648.",
      "ja": "関連するドキュメントはRFC 2648にあります。"
    },
    {
      "indent": 6,
      "text": "Identifier uniqueness considerations:",
      "ja": "識別子の一意性の考慮事項："
    },
    {
      "indent": 12,
      "text": "Because the rfc-editor assigns the RFC number uniquely these URNs are unique. Since the mapping between RFCs and other rfc-editor document series (STDs, FYIs or BCPs) is not necessarily one-to-one, uniqueness of STDs, FYIs and BCPs are defined based on the document mappings maintained by the RFC Editor (the index files \"rfc-index.txt\", \"fyi-index.txt\", \"bcp-index.txt\", \"std-index.txt\") are defined to be the definitive statement of the assignment of RFC Family URNs in this namespace. The meeting minutes portion of the namespace is guaranteed unique because the URN includes the sequence number of the IETF conference. The document mapping maintained by the Internet Drafts editor (\"1id-abstracts.txt\") is defined as the definitive statement of the assignment of URNs for the internet draft portion of this namespace.",
      "ja": "RFC編集者はRFC番号を一意に割り当てているため、これらのURNは一意です。RFCSと他のRFCエディタードキュメントシリーズ（STDS、FYISまたはBCPS）の間のマッピングは必ずしも1対1ではないため、STD、FYIS、およびBCPの一意性は、RFCエディター（インデックスが維持されているドキュメントマッピングに基づいて定義されます。ファイル \"rfc-index.txt\"、 \"fyi-index.txt\"、 \"bcp-index.txt\"、 \"std-index.txt\"）は、この名前空間におけるRFCファミリーURNの割り当ての決定的な声明であると定義されています。。URNにはIETF会議のシーケンス番号が含まれているため、名前空間の会議分部分は一意に保証されています。インターネットDraftsエディター（ \"1ID-Abstracts.txt\"）が維持するドキュメントマッピングは、この名前空間のインターネットドラフト部分に対するurnsの割り当ての決定的な声明として定義されます。"
    },
    {
      "indent": 6,
      "text": "Identifier persistence considerations:",
      "ja": "識別子の持続性の考慮事項："
    },
    {
      "indent": 12,
      "text": "Persistence of the URNs of this namespace is independent of the mutability of the underlying documents. A URN once assigned will never be reassigned to a different resource; the assignment is persistent and immutable. Immutability of RFCs, STDs, FYIs and BCPs is at the discretion of the RFC Editor. They may be composites of one or more RFCs and the set of RFCs that includes them may change with time. It is important to note that this mutability of some resources is independent of the immutability of URN assignment to a resource.",
      "ja": "この名前空間の骨nsの永続性は、基礎となるドキュメントの可変性とは無関係です。割り当てられたurは、別のリソースに再割り当てされることはありません。割り当ては永続的で不変です。RFC、STD、FYIS、およびBCPの不変性は、RFCエディターの裁量にあります。それらは、1つ以上のRFCの複合材であり、それらを含むRFCのセットは時間とともに変化する可能性があります。一部のリソースのこの可変性は、リソースへのurn割り当ての不変性とは無関係であることに注意することが重要です。"
    },
    {
      "indent": 6,
      "text": "Process of identifier assignment:",
      "ja": "識別子割り当てのプロセス："
    },
    {
      "indent": 12,
      "text": "Assignment of URNs from this namespace occurs in three ways. The first is through publication of a new RFC, FYI, STD or BCP is by the RFC Editor. This new document will have a new series number and will therefore define a new URN. The document mappings maintained by the RFC Editor (the index files \"rfc-index.txt\", \"fyi-index.txt\", \"bcp-index.txt\" and \"std-index.txt\") are defined to be the definitive statement of the assignment of RFC Family URNs in this namespace.",
      "ja": "この名前空間からのurの割り当ては、3つの方法で発生します。1つ目は、新しいRFC、FYI、STD、またはBCPの公開を通じて、RFCエディターによるものです。この新しいドキュメントには新しいシリーズ番号があり、したがって新しいurnを定義します。RFCエディターによって維持されているドキュメントマッピング（インデックスファイル「RFC-Index.txt」、「fyi-index.txt」、 \"bcp-index.txt\"、 \"std-index.txt\"）は、決定的なものであると定義されています。この名前空間におけるRFCファミリーのurの割り当ての声明。"
    },
    {
      "indent": 12,
      "text": "The second way a URN is assigned is through the filing of meeting minutes by a working group or birds of a feather as part of an IETF conference. The list of minutes maintained by the IETF for each working group and conference in the subtree pointed at by the URL ftp://ietf.org/ietf/ is considered the definitive assignment of URNs for working group or birds of a feather minutes.",
      "ja": "URNが割り当てられる2番目の方法は、IETF会議の一環として、ワーキンググループまたは羽の鳥による会議議事録の提出を通してです。URL FTP://ietf.org/ietf/が指摘したサブツリーでの各ワーキンググループと会議のIETFによって維持された議事録のリストは、ワーキンググループまたは羽の鳥のURNの決定的な割り当てと見なされます。"
    },
    {
      "indent": 12,
      "text": "The third way a URN is assigned is through the publication of a new internet-draft by the Internet Draft Editor. This draft will have a distinct name (and version number) and therefore defined a new URN. The document mapping maintained by the Internet Drafts editor (\"1id-abstracts.txt\") is defined as the definitive statement of the assignment of URNs for this portion of the namespace.",
      "ja": "URNが割り当てられる3番目の方法は、インターネットドラフトエディターによる新しいインターネットドラフトの公開によるものです。このドラフトには明確な名前（およびバージョン番号）があり、したがって新しいurnを定義します。インターネットDraftsエディター（ \"1ID-Abstracts.txt\"）によって維持されているドキュメントマッピングは、名前空間のこの部分にurの割り当ての決定的な声明として定義されます。"
    },
    {
      "indent": 6,
      "text": "Process of identifier resolution:",
      "ja": "識別子解像度のプロセス："
    },
    {
      "indent": 12,
      "text": "A mirrored copy of the underlying documentation is required to resolve these URNs. Resolution via HTTP is done by a set of simple Perl cgi-bin scripts presented in Appendix A.",
      "ja": "これらのURNを解決するには、基礎となるドキュメントのミラーリングコピーが必要です。HTTP経由の解像度は、付録Aに示されている一連の単純なPerl CGI-Binスクリプトによって行われます。"
    },
    {
      "indent": 6,
      "text": "Rules for Lexical Equivalence:",
      "ja": "語彙の等価性のルール："
    },
    {
      "indent": 12,
      "text": "The entire URN is case-insensitive.",
      "ja": "ur全体は症例に依存しません。"
    },
    {
      "indent": 6,
      "text": "Conformance with URN Syntax:",
      "ja": "urn構文への適合："
    },
    {
      "indent": 12,
      "text": "There are no additional characters reserved.",
      "ja": "予約された追加の文字はありません。"
    },
    {
      "indent": 6,
      "text": "Validation mechanism:",
      "ja": "検証メカニズム："
    },
    {
      "indent": 12,
      "text": "None additional to resolution specified",
      "ja": "指定された解像度に追加されていません"
    },
    {
      "indent": 6,
      "text": "Scope:",
      "ja": "範囲："
    },
    {
      "indent": 12,
      "text": "Global.",
      "ja": "グローバル。"
    },
    {
      "indent": 0,
      "text": "3. Examples",
      "section_title": true,
      "ja": "3. 例"
    },
    {
      "indent": 3,
      "text": "The following are examples of URNs that a resolver for this namespace can resolve:",
      "ja": "以下は、この名前空間のリゾルバーが解決できるurの例です。"
    },
    {
      "indent": 9,
      "text": "urn:ietf:rfc:2141\nurn:ietf:std:50\nurn:ietf:id:ietf-urn-ietf-06\nurn:ietf:mtg:41-urn",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "4. Security Considerations",
      "section_title": true,
      "ja": "4. セキュリティに関する考慮事項"
    },
    {
      "indent": 3,
      "text": "Because this namespace defines no additional reserved characters, it does not add any security considerations beyond those inherent from the existence of the reserved characters from [1]. Further, none of the reserved characters from [1] are used in the definition of the NSS. This means that resolvers for this namespace may be considered \"secure\" in the sense that any escaping of characters in the NSS MUST result in the resolver indicating that the URN has incorrect syntax.",
      "ja": "この名前空間は追加の予約された文字を定義しないため、[1]から予約された文字の存在から固有のものを超えてセキュリティ上の考慮事項を追加しません。さらに、[1]の予約された文字は、NSSの定義では使用されません。つまり、この名前空間のリゾルバーは、NSSの文字の逃げ方がurnに誤った構文を持っていることを示すリゾルバーになる必要があるという意味で「安全」と見なされる可能性があることを意味します。"
    },
    {
      "indent": 0,
      "text": "5. Acknowledgments",
      "section_title": true,
      "ja": "5. 謝辞"
    },
    {
      "indent": 3,
      "text": "Thanks to various members of the URN working group for comments on earlier drafts of this document. The work described in this document is partially supported by the National Science Foundation, Cooperative Agreement NCR-9218179.",
      "ja": "この文書の以前のドラフトに関するコメントについては、URNワーキンググループのさまざまなメンバーに感謝します。この文書に記載されている作業は、National Science Foundation、Cooperative Asmiral NCR-9218179によって部分的にサポートされています。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "ja": "6. 参考文献"
    },
    {
      "indent": 3,
      "text": "Request For Comments (RFC) and Internet Draft documents are available from numerous mirror sites.",
      "ja": "コメントのリクエスト（RFC）およびインターネットドラフトドキュメントは、多数のミラーサイトから入手できます。"
    },
    {
      "indent": 3,
      "text": "[1] Moats, R., \"URN Syntax\", RFC 2141, May 1997.",
      "ja": "[1] Moats、R。、「urn構文」、RFC 2141、1997年5月。"
    },
    {
      "indent": 3,
      "text": "[2] Crocker, D. and P. Overell, \"Augmented BNF for Syntax Specifications: ABNF\", RFC 2234, November 1997.",
      "ja": "[2] Crocker、D。およびP. Overell、「構文仕様のためのBNFの増強：ABNF」、RFC 2234、1997年11月。"
    },
    {
      "indent": 0,
      "text": "7. Author's Address",
      "section_title": true,
      "ja": "7. 著者の連絡先"
    },
    {
      "indent": 3,
      "text": "Ryan Moats AT&T 15621 Drexel Circle Omaha, NE 68135-2358 USA",
      "ja": "ライアン・モートAT＆T 15621ドレクセルサークルオマハ、NE 68135-2358 USA"
    },
    {
      "indent": 3,
      "text": "EMail:  jayhawk@att.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "Appendix A. Example Resolution Scripts",
      "section_title": true,
      "ja": "付録A. 解像度の例"
    },
    {
      "indent": 3,
      "text": "The following scripts are examples that can be used for resolving URNs in this namespace.",
      "ja": "次のスクリプトは、この名前空間でURNを解決するために使用できる例です。"
    },
    {
      "indent": 0,
      "text": "A.1 I2C",
      "section_title": true,
      "ja": "A.1 I2C"
    },
    {
      "indent": 0,
      "text": "#!/usr/local/bin/perl",
      "ja": "＃！/usr/local/bin/perl"
    },
    {
      "indent": 0,
      "text": "use strict;",
      "ja": "厳格を使用します。"
    },
    {
      "indent": 0,
      "text": "# # this is a URN 2 URC resolver for the ietf namespace #",
      "ja": "＃＃これはietF名のためのURN 2 URCリゾルバーです＃"
    },
    {
      "indent": 0,
      "text": "my(%cite) = (\n  bcp => \"/ftp/rfc/bcp-index.txt\",\n  fyi => \"/ftp/fyi/fyi-index.txt\",\n  id => \"/ftp/internet-drafts/1id-abstracts.txt\",\n  rfc => \"/ftp/rfc/rfc-index.txt\",\n  std => \"/ftp/std/std-index.txt\"\n);\nmy(%number2date) = (\n  44 => \"99mar\",\n  43 => \"98dec\", 42 => \"98aug\", 41 => \"98apr\",\n  40 => \"97dec\", 39 => \"97aug\", 38 => \"97apr\",\n  37 => \"96dec\", 36 => \"96jun\", 35 => \"96mar\",\n  34 => \"95dec\", 33 => \"95jul\", 32 => \"95apr\",\n  31 => \"94dec\", 30 => \"94jul\", 29 => \"94mar\",\n  28 => \"93nov\", 27 => \"93jul\", 26 => \"93mar\",\n  25 => \"92nov\", 24 => \"92jul\", 23 => \"92mar\",\n  22 => \"91nov\", 21 => \"91jul\", 20 => \"91mar\",\n  19 => \"90dec\" );",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my($wgpath) = \"/ftp/ietf\";\nmy($urn) = $ENV{'QUERY_STRING'};\nmy($host) = $ENV{'SERVER_NAME'}; #get my host name for ftp: URLs\nmy($accept) = $ENV{'HTTP_ACCEPT'}; #this is the \"Accept:\" HTTP header",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "(&resolveid($1), exit) if ($urn =~ /urn:ietf:id:(\\S+)/i);\n(&resolverfc($1, $2), exit) if ($urn =~ /urn:ietf:(\\w*):(\\d*)/i);\n(&resolvemtg($1, $2), exit) if ($urn =~ /urn:ietf:mtg:(\\d*)-(\\w*)/i);\n&urn_error(\"400 Bad Request\\n\");",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolvemtg {\n  my($ietfnum, $sesnam) = @_;\n  &urn_error(\"404 Not Found\\n\") if (!defined $number2date{$ietfnum});\n  my($date)=$number2date{$ietfnum};",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  my($link)=\"$wgpath/$sesnam/$sesnam-minutes-$date.txt\";\n  if (-f $link) {\n    print \"Status:  200 OK\\r\\n\";\n    print \"Content-type: text/html\\r\\n\\r\\n\";\n    print \"<HTML>\\n<TITLE>Citation for $urn</TITLE>\\n\";\n    print \"<BODY>\\n\";\n    print \"<H1><A HREF=\\\"$link\\\">$urn</A>:</H1>\\n\";\n    print \"Minutes of the $sesnam working group from the \"\n          . &end($ietfnum) . \" IETF\";\n    print \"</BODY>\\n</HTML>\\n\";\n    return;\n  }\n  my($link)=\"$wgpath/$date/$sesnam-minutes-$date.txt\";\n  if (-f $link) {\n    print \"Status:  200 OK\\r\\n\";\n    print \"Content-type: text/html\\r\\n\\r\\n\";\n    print \"<HTML>\\n<TITLE>Citation for $urn</TITLE>\\n\";\n    print \"<BODY>\\n\";\n    print \"<H1><A HREF=\\\"$link\\\">$urn</A>:</H1>\\n\";\n    print \"Minutes of the $sesnam working group from the \"\n           . &end($ietfnum) . \" IETF\";\n    print \"</BODY>\\n</HTML>\\n\";\n    return;\n  }\n  &urn_error(\"404 Not Found\\n\");\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub end {\n  my($inarg)=@_;\n  return $inarg . \"st\" if ($inarg =~ /1$/);\n  return $inarg . \"nd\" if ($inarg =~ /2$/);\n  return $inarg . \"rd\" if ($inarg =~ /3$/);\n  return $inarg . \"th\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolverfc {\n  my($flag,@bib,$i,$k,$j,$done,@ref);\n  my($l,$link);\n  my($scheme, $value) = @_;\n  $scheme =~ tr/A-Z/a-z/;\n  if (!defined $cite{$scheme}) {\n    &urn_error(\"404 Not Found\\n\");\n  }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "$flag = 0;\nopen(INPUT, \"$cite{$scheme}\");\nwhile (<INPUT>) {\n  $flag = 1 if (/^0*$value /);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "  if ($flag == 1) {\n    last if (/^$/);\n    chop;\n    push @bib,$_;\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "if ($scheme ne \"rfc\") {\n  print \"Status:  200 OK\\r\\n\";\n  print \"Content-type: text/html\\r\\n\\r\\n\";\n  $bib[0] =~ s/^[0-9]*\\s*/<B>/;\n  for ($i=0; $i<=$#bib; $i+=1) {\n    last if ($bib[$i] =~ s/\\./.<\\/B>/);\n  }\n  for ($i=0;$i<=$#bib;$i+=1) {\n    $k=$bib[$i];\n    while ($k =~ /(fyi|std|rfc|bcp)([0-9]+)(.*)/i) {\n      push @ref,\"$1$2\";\n      $k=$3;\n    }\n    $done=\"\";\n    foreach $j (@ref) {\n      next if ($done =~ $j);\n      $done .= \"$j \";\n      $l = $j;\n      $l =~ tr/A-Z/a-z/;\n      $link=&make_link(\"$l\");\n      $bib[$i] =~ s/$j/<A HREF=\"$link\">$j<\\/A>/g;\n    }\n  }\n  print \"<HTML>\\n<TITLE>Citation for $urn</TITLE>\\n\";\n  print \"<BODY>\\n\";\n  $link=&make_link(\"$scheme$value\");\n  print \"<H1><A HREF=\\\"$link\\\">$scheme$value</A>:</H1>\\n\";\n  foreach $i (@bib) {\n    print \"$i\\n\";\n  }\n  print \"</BODY>\\n</HTML>\\n\";\n} else {\n  print \"Status:  200 OK\\r\\n\";\n  print \"Content-type: text/html\\r\\n\\r\\n\";\n  $bib[0] =~ s/^[0-9]*\\s*//;\n  $j=0;\n  for ($i=0; $i<=$#bib; $i+=1) {\n    $j += ($bib[$i] =~ s/, \"/, <B>\"/);\n    $j += ($bib[$i] =~ s/\",/\"<\\/B>,/);\n  }\n  for ($i=0;$i<=$#bib;$i+=1) {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      $k=$bib[$i];\n      while ($k =~ /(fyi\\s|std\\s|rfc|bcp)([0-9]+)(.*)/i) {\n        push @ref,\"$1$2\";\n        $k=$3;\n      }\n      $done=\"\";\n      foreach $j (@ref) {\n        next if ($done =~ $j);\n        $done .= \"$j \";\n        $l = $j;\n        $l =~ s/\\s//g;\n        $l =~ tr/A-Z/a-z/;\n        $link=&make_link(\"$l\");\n        $bib[$i] =~ s/$j/<A HREF=\"$link\">$j<\\/A>/g;\n      }\n    }\n    print \"<HTML>\\n<TITLE>Citation for $urn</TITLE>\\n\";\n    print \"<BODY>\\n\";\n    $link=&make_link(\"$scheme$value\");\n    print \"<H1><A HREF=\\\"$link\\\">$scheme$value</A>:</H1>\\n\";\n    foreach $i (@bib) {\n      print \"$i\\n\";\n    }\n    print \"</BODY>\\n</HTML>\\n\";\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub make_link {\n  my($sc);\n  my($inarg)=@_;\n  ($sc=$1) if ($inarg =~ /([a-z]*)/);\n  return \"/$sc/$inarg.ps\" if (-e \"/ftp/$sc/$inarg.ps\");\n  return \"/$sc/$inarg.html\" if (-e \"/ftp/$sc/$inarg.html\");\n  return \"/$sc/$inarg.txt\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub urn_error {\n  my($code) = @_; #store failure code here...",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "print \"Status:  $code\";\nprint \"Content-type: text/html\\n\\n<HTML>\\n\";\nprint \"<head><title>URN Resolution: I2C $code</title></head>\\n\";\nprint \"<BODY>\\n\";\nprint \"<h1>URN to URC resolution failed for the URN:</h1>\\n\";\nprint \"<hr><h3>$urn</h3>\\n\";\nprint \"</body>\\n\";\nprint \"</html>\\n\";\nexit;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "};",
      "ja": "};"
    },
    {
      "indent": 0,
      "text": "sub resolveid {\n  my($flag,@bib,$i,$k,$j,$count,@ref);\n  my($l,$link, $hdr, $done);\n  my($value) = @_;\n  my($scheme) = \"id\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  open(INPUT, \"$cite{$scheme}\");\n  while (<INPUT>) {\n#\n# capture record\n#\n    if ($flag == 1 || /^\\s+\\\"/) {\n      push @bib,$_;\n      ($hdr = -1, $count = 0, $flag = 1) if (/^\\s+\\\"/);\n      $count++ if (/^\\s+$/);\n    }\n    if ($count == 1) {\n      $hdr = $#bib if ($hdr == -1);\n    }\n    if ($count == 2) {\n      for ($i=0; $i<=$hdr; $i+=1) {\n            if ($bib[$i] =~ /<(.*)>/) {\n              $l = $1;\n              if ($l eq \"draft-$value.txt\" || $l eq \"draft-$value.ps\") {\n                print \"Status:  200 OK\\r\\n\";\n                print \"Content-type: text/html\\r\\n\\r\\n\";\n                print \"<HTML>\\n<TITLE>Citation for $urn</TITLE>\\n\";\n                print \"<BODY>\\n\";\n                print \"<a\nhref=\\\"http://blackhole.vip.att.net/internet-drafts/$l\\\">$l</a>:\\n\";\n                print \"<pre>\\n\";\n                foreach $i (@bib) {\n                  print \"$i\";\n                }\n                print \"</pre>\\n\";\n                print \"</BODY>\\n</HTML>\\n\";\n                exit;\n              }\n            }\n      }\n      $flag = 0;\n      @bib = ();\n    }\n  }\n  &urn_error(\"404 Not Found\\n\");\n}\nA.2 I2L",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "#!/usr/local/bin/perl",
      "ja": "＃！/usr/local/bin/perl"
    },
    {
      "indent": 0,
      "text": "use strict;",
      "ja": "厳格を使用します。"
    },
    {
      "indent": 0,
      "text": "# # this is a URN 2 URL resolver for the ietf namespace #",
      "ja": "＃＃これはietf名空間用のURN 2 URLリゾルバーです＃"
    },
    {
      "indent": 0,
      "text": "my(%pathbase) = (\n  rfc => \"rfc/rfc\",\n  fyi => \"fyi/fyi\",\n  std => \"std/std\",\n  bcp => \"bcp/bcp\",\n  id => \"internet-drafts/draft-\"\n);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my(%number2date) = (\n  44 => \"99mar\",\n  43 => \"98dec\", 42 => \"98aug\", 41 => \"98apr\",\n  40 => \"97dec\", 39 => \"97aug\", 38 => \"97apr\",\n  37 => \"96dec\", 36 => \"96jun\", 35 => \"96mar\",\n  34 => \"95dec\", 33 => \"95jul\", 32 => \"95apr\",\n  31 => \"94dec\", 30 => \"94jul\", 29 => \"94mar\",\n  28 => \"93nov\", 27 => \"93jul\", 26 => \"93mar\",\n  25 => \"92nov\", 24 => \"92jul\", 23 => \"92mar\",\n  22 => \"91nov\", 21 => \"91jul\", 20 => \"91mar\",\n  19 => \"90dec\" );",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my($wgpath) = \"/ftp/ietf\";\nmy($urn) = $ENV{'QUERY_STRING'};\nmy($host) = $ENV{'SERVER_NAME'}; #get my host name for ftp: URLs\nmy($accept) = $ENV{'HTTP_ACCEPT'}; #this is the \"Accept:\" HTTP header",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "(&resolveid($1), exit) if ($urn =~ /urn:ietf:id:(\\S+)/i);\n(&resolverfc($1, $2), exit) if ($urn =~ /urn:ietf:(\\w*):(\\d*)/i);\n(&resolvemtg($1, $2), exit) if ($urn =~ /urn:ietf:mtg:(\\d*)-(\\w*)/i);\n&urn_error(\"400 Bad Request\\n\");",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolvemtg {\n  my($ietfnum, $sesnam) = @_;\n  &urn_error(\"404 Not Found\\n\") if (!defined $number2date{$ietfnum});\n  my($date)=$number2date{$ietfnum};\n  my($link)=\"$wgpath/$sesnam/$sesnam-minutes-$date.txt\";\n  if (-f $link) {\n    print \"Status:  302 Moved temporarily\\n\";\n    print \"Location: $link\\n\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "    return;\n  }\n  my($link)=\"$wgpath/$date/$sesnam-minutes-$date.txt\";\n  if (-f $link) {\n    print \"Status:  302 Moved temporarily\\n\";\n    print \"Location: $link\\n\";\n    return;\n  }\n  &urn_error(\"404 Not Found\\n\");\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub end {\n  my($inarg)=@_;\n  return $inarg . \"st\" if ($inarg =~ /1$/);\n  return $inarg . \"nd\" if ($inarg =~ /2$/);\n  return $inarg . \"rd\" if ($inarg =~ /3$/);\n  return $inarg . \"th\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolverfc {\n  my($flag,@bib,$i,$k,$j,$done,@ref);\n  my($l,$link);\n  my($scheme, $value) = @_;\n  $scheme =~ tr/A-Z/a-z/;\n  &urn_error(\"404 Not Found\\n\")if (!defined $pathbase{$scheme});\n  my($txttry)=\"/ftp/$pathbase{$scheme}$value.txt\";\n  my($pstry)=\"/ftp/$pathbase{$scheme}$value.ps\";\n  my($htmltry)=\"/ftp/$pathbase{$scheme}$value.html\";\nMIME_SWITCH: {\n    if ($accept =~ /application\\/postscript/ && -f $pstry) {\n      print \"Status:  302 Moved temporarily\\n\";\n      print \"Location: http://$host/$pathbase{$scheme}$value.ps\\n\\n\";\n      last MIME_SWITCH;\n    }\n    if ($accept =~ /text\\/html/ && -f $htmltry) {\n      print \"Status:  302 Moved temporarily0;\n      print \"Location: http://$host/$pathbase{$scheme}$value.html\\n\\n\";\n      last MIME_SWITCH;\n    }\n    if ($accept =~ /\\*\\/\\*|text\\/plain/ && -f $txttry) {\n      print \"Status:  302 Moved temporarily\\n\";\n      print \"Location: http://$host/$pathbase{$scheme}$value.txt\\n\\n\";\n      last MIME_SWITCH;\n    }\n    &urn_error(\"404 Not Found\\n\");\n  }\n}\nsub urn_error {\n  my($code) = @_; #store failure code here...",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  print \"Status:  $code\";\n  print \"Content-type: text/html\\n\\n<HTML>\\n\";\n  print \"<head><title>URN Resolution: I2L $code</title></head>\\n\";\n  print \"<BODY>\\n\";\n  print \"<h1>URN to URL resolution failed for the URN:</h1>\\n\";\n  print \"<hr><h3>$urn</h3>\\n\";\n  print \"</body>\\n\";\n  print \"</html>\\n\";\n  exit;\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolveid {\n  my($flag,@bib,$i,$k,$j,$done,@ref);\n  my($l,$link);\n  my($scheme) = \"id\";\n  my($value) = @_;\n  $scheme =~ tr/A-Z/a-z/;\n  &urn_error(\"404 Not Found\\n\")if (!defined $pathbase{$scheme});\n  my($txttry)=\"/ftp/$pathbase{$scheme}$value.txt\";\n  my($pstry)=\"/ftp/$pathbase{$scheme}$value.ps\";\n  my($htmltry)=\"/ftp/$pathbase{$scheme}$value.html\";\nMIME_SWITCH: {\n    if ($accept =~ /application\\/postscript/ && -f $pstry) {\n      print \"Status:  302 Moved temporarily\\n\";\n      print \"Location: http://$host/$pathbase{$scheme}$value.ps\\n\\n\";\n      last MIME_SWITCH;\n    }\n    if ($accept =~ /text\\/html/ && -f $htmltry) {\n      print \"Status:  302 Moved temporarily\\n\";\n      print \"Location: http://$host/$pathbase{$scheme}$value.html\\n\\n\";\n      last MIME_SWITCH;\n    }\n    if ($accept =~ /\\*\\/\\*|text\\/plain/ && -f $txttry) {\n      print \"Status:  302 Moved temporarily\\n\";\n      print \"Location: http://$host/$pathbase{$scheme}$value.txt\\n\\n\";\n      last MIME_SWITCH;\n    }\n    &urn_error(\"404 Not Found\\n\");\n  }\n}\nA.3 I2Ls",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "#!/usr/local/bin/perl",
      "ja": "＃！/usr/local/bin/perl"
    },
    {
      "indent": 0,
      "text": "use strict;",
      "ja": "厳格を使用します。"
    },
    {
      "indent": 0,
      "text": "# # this is a URN 2 URLs resolver for the ietf namespace #",
      "ja": "＃＃これはietfネームスペース用のURN 2 URLリゾルバーです＃"
    },
    {
      "indent": 0,
      "text": "my(@urls);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my(%pathbase) = (\n  rfc => \"rfc/rfc\",\n  fyi => \"fyi/fyi\",\n  std => \"std/std\",\n  bcp => \"bcp/bcp\",\n  id => \"internet-drafts/draft-\"\n);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my(%number2date) = (\n  44 => \"99mar\",\n  43 => \"98dec\", 42 => \"98aug\", 41 => \"98apr\",\n  40 => \"97dec\", 39 => \"97aug\", 38 => \"97apr\",\n  37 => \"96dec\", 36 => \"96jun\", 35 => \"96mar\",\n  34 => \"95dec\", 33 => \"95jul\", 32 => \"95apr\",\n  31 => \"94dec\", 30 => \"94jul\", 29 => \"94mar\",\n  28 => \"93nov\", 27 => \"93jul\", 26 => \"93mar\",\n  25 => \"92nov\", 24 => \"92jul\", 23 => \"92mar\",\n  22 => \"91nov\", 21 => \"91jul\", 20 => \"91mar\",\n  19 => \"90dec\" );",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my($wgpath) = \"/ftp/ietf\";\nmy($urn) = $ENV{'QUERY_STRING'};\nmy($host) = $ENV{'SERVER_NAME'}; #get my host name for ftp: URLs\nmy($accept) = $ENV{'HTTP_ACCEPT'}; #this is the \"Accept:\" HTTP header",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "(&resolveid($1), exit) if ($urn =~ /urn:ietf:id:(\\S+)/i);\n(&resolve1($1, $2), exit) if ($urn =~ /urn:ietf:(\\w*):(\\d*)/i);\n(&resolve2($1, $2), exit) if ($urn =~ /urn:ietf:mtg:(\\d*)-(\\w*)/i);\n&urn_error(\"400 Bad Request\\n\");",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolve2 {\n  my($ietfnum, $sesnam) = @_;\n  &urn_error(\"404 Not Found\\n\") if (!defined $number2date{$ietfnum});\n  my($date)=$number2date{$ietfnum};\n  my($link)=\"$wgpath/$sesnam/$sesnam-minutes-$date.txt\";\n  if (-f $link) {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "$link=~s/^\\/ftp\\///;\nmy($ftplink)=\"ftp://$host/$link\";\nmy($httplink)=\"http://$host/$link\";\nmy($glink)=\"gopher://$host:70/0/$link\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "  if ($accept =~ /text\\/uri-list/) { #look for text/uri-list,\n      otherwise text/html\n    print \"Status: 200 OK\\n\";\n    print \"Content-type: text/uri-list\\n\\n\\n\";\n    print \"#$urn\\n\";\n    print \"$ftplink\\n\";\n    print \"$httplink\\n\";\n    print \"$glink\\n\";\n  }\n  if ($accept =~ /\\*\\/\\*|text\\/html/) {\n    print \"Status: 200 OK\\n\";\n    print \"Content-type: text/html\\n\\n<HTML>\\n\";\n    print \"<head><title>URN Resolution: I2Ls</title></head>\\n\";\n    print \"<BODY>\\n\";\n    print \"<h1>URN $urn resolves to the following URLs:</h1>\\n\";\n    print \"<hr><ul>\\n\";\n    print \"<a href=\\\"$ftplink\\\">$ftplink</a>\\n\";\n    print \"<a href=\\\"$httplink\\\">$httplink</a>\\n\";\n    print \"<a href=\\\"$glink\\\">$glink</a>\\n\";\n    print \"</UL>\\n</body>\\n</HTML>\\n\";\n  }\n  return;\n}\nmy($link)=\"$wgpath/$date/$sesnam-minutes-$date.txt\";\nif (-f $link) {\n  $link=~s/^\\/ftp\\///;\n  my($ftplink)=\"ftp://$host/$link\";\n  my($httplink)=\"http://$host/$link\";\n  my($glink)=\"gopher://$host:70/0/$link\";\n  if ($accept =~ /text\\/uri-list/) { #look for text/uri-list,\n      otherwise text/html\n    print \"Status: 200 OK\\n\";\n    print \"Content-type: text/uri-list\\n\\n\\n\";\n    print \"#$urn\\n\";\n    print \"$ftplink\\n\";\n    print \"$httplink\\n\";\n    print \"$glink\\n\";\n  }\n  if ($accept =~ /\\*\\/\\*|text\\/html/) {\n    print \"Status: 200 OK\\n\";\n    print \"Content-type: text/html\\n\\n<HTML>\\n\";\n    print \"<head><title>URN Resolution: I2Ls</title></head>\\n\";\n    print \"<BODY>\\n\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "  print \"<h1>URN $urn resolves to the following URLs:</h1>\\n\";\n  print \"<hr><ul>\\n\";\n  print \"<a href=\\\"$ftplink\\\">$ftplink</a>\\n\";\n  print \"<a href=\\\"$httplink\\\">$httplink</a>\\n\";\n  print \"<a href=\\\"$glink\\\">$glink</a>\\n\";\n  print \"</UL>\\n</body>\\n</HTML>\\n\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "    return;\n  }\n  &urn_error(\"404 Not Found\\n\");\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolve1 {\n  my($flag,@bib,$i,$k,$j,$done,@ref);\n  my($l,$link);\n  my($scheme, $value) = @_;\n  $scheme =~ tr/A-Z/a-z/;\n  &urn_error(\"404 Not Found\\n\")if (!defined $pathbase{$scheme});\n  my($try)=\"/ftp/$pathbase{$scheme}$value.txt\";\n  if (-f $try) {\n    push(@urls, \"http://$host/$pathbase{$scheme}$value.txt\");\n    push(@urls, \"ftp://$host/$pathbase{$scheme}$value.txt\");\n    push(@urls, \"gopher://$host:70/0/$pathbase{$scheme}$value.txt\");\n  }\n  $try=\"/ftp/$pathbase{$scheme}$value.ps\";\n  if (-f $try) {\n    push(@urls, \"http://$host/$pathbase{$scheme}$value.ps\");\n    push(@urls, \"ftp://$host/$pathbase{$scheme}$value.ps\");\n    push(@urls, \"gopher://$host:70/0/$pathbase{$scheme}$value.ps\");\n  }\n  $try=\"/ftp/$pathbase{$scheme}$value.html\";\n  if (-f $try) {\n    push(@urls, \"http://$host/$pathbase{$scheme}$value.html\");\n    push(@urls, \"ftp://$host/$pathbase{$scheme}$value.html\");\n  }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "&urn_error(\"404 Not Found\\n\") if ($#urls == -1);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "MIME_SWITCH: {\n    if ($accept =~ /text\\/uri-list/) { #look for text/uri-list,\n        otherwise text/html\n      print \"Status: 200 OK\\n\";\n      print \"Content-type: text/uri-list\\n\\n\\n\";\n      print \"#$urn\\n\";\n      foreach $i (@urls) {\n        print \"$i\\n\";\n      }\n      last MIME_SWITCH;\n    }\n    if ($accept =~ /\\*\\/\\*|text\\/html/) {\n      print \"Status: 200 OK\\n\";\n      print \"Content-type: text/html\\n\\n<HTML>\\n\";\n      print \"<head><title>URN Resolution: I2Ls</title></head>\\n\";\n      print \"<BODY>\\n\";\n      print \"<h1>URN $urn resolves to the following URLs:</h1>\\n\";\n      print \"<hr><ul>\\n\";\n      foreach $i (@urls) {\n        print \"<LI><A HREF=\\\"$i\\\">$i</A>\\n\";\n      }\n      print \"</UL>\\n</body>\\n</HTML>\\n\";\n      last MIME_SWITCH;\n    }\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub urn_error {\n  my($code) = @_; #store failure code here...",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  print \"Status: $code\";\n  print \"Content-type: text/html\\n\\n<HTML>\\n\";\n  print \"<head><title>URN Resolution: I2L $code</title></head>\\n\";\n  print \"<BODY>\\n\";\n  print \"<h1>URN to URL resolution failed for the URN:</h1>\\n\";\n  print \"<hr><h3>$urn</h3>\\n\";\n  print \"</body>\\n\";\n  print \"</html>\\n\";\n  exit;\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolveid {\n  my($flag,@bib,$i,$k,$j,$done,@ref);\n  my($l,$link);\n  my($value) = @_;\n  my($scheme) = \"id\";\n  $scheme =~ tr/A-Z/a-z/;\n  &urn_error(\"404 Not Found\\n\")if (!defined $pathbase{$scheme});\n  my($try)=\"/ftp/$pathbase{$scheme}$value.txt\";\n  if (-f $try) {\n    push(@urls, \"http://$host/$pathbase{$scheme}$value.txt\");\n    push(@urls, \"ftp://$host/$pathbase{$scheme}$value.txt\");\n    push(@urls, \"gopher://$host:70/0/$pathbase{$scheme}$value.txt\");\n  }\n  $try=\"/ftp/$pathbase{$scheme}$value.ps\";\n  if (-f $try) {\n    push(@urls, \"http://$host/$pathbase{$scheme}$value.ps\");",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "  push(@urls, \"ftp://$host/$pathbase{$scheme}$value.ps\");\n  push(@urls, \"gopher://$host:70/0/$pathbase{$scheme}$value.ps\");\n}\n$try=\"/ftp/$pathbase{$scheme}$value.html\";\nif (-f $try) {\n  push(@urls, \"http://$host/$pathbase{$scheme}$value.html\");\n  push(@urls, \"ftp://$host/$pathbase{$scheme}$value.html\");\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "&urn_error(\"404 Not Found\\n\") if ($#urls == -1);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "MIME_SWITCH: {\n    if ($accept =~ /text\\/uri-list/) { #look for text/uri-list,\n        otherwise text/html\n      print \"Status: 200 OK\\n\";\n      print \"Content-type: text/uri-list\\n\\n\\n\";\n      print \"#$urn\\n\";\n      foreach $i (@urls) {\n        print \"$i\\n\";\n      }\n      last MIME_SWITCH;\n    }\n    if ($accept =~ /\\*\\/\\*|text\\/html/) {\n      print \"Status: 200 OK\\n\";\n      print \"Content-type: text/html\\n\\n<HTML>\\n\";\n      print \"<head><title>URN Resolution: I2Ls</title></head>\\n\";\n      print \"<BODY>\\n\";\n      print \"<h1>URN $urn resolves to the following URLs:</h1>\\n\";\n      print \"<hr><ul>\\n\";\n      foreach $i (@urls) {\n        print \"<LI><A HREF=\\\"$i\\\">$i</A>\\n\";\n      }\n      print \"</UL>\\n</body>\\n</HTML>\\n\";\n      last MIME_SWITCH;\n    }\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.4 I2Ns",
      "section_title": true,
      "ja": "A.4 I2NS"
    },
    {
      "indent": 0,
      "text": "#!/usr/local/bin/perl",
      "ja": "＃！/usr/local/bin/perl"
    },
    {
      "indent": 0,
      "text": "use strict;",
      "ja": "厳格を使用します。"
    },
    {
      "indent": 0,
      "text": "#\n# this is a URN 2 URNs resolver for the ietf namespace\n#\nmy(%cite) = (\n  rfc => \"/ftp/rfc/rfc-index.txt\",\n  fyi => \"/ftp/fyi/fyi-index.txt\",\n  std => \"/ftp/std/std-index.txt\",\n  bcp => \"/ftp/rfc/bcp-index.txt\"\n);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my(%number2date) = (\n  44 => \"99mar\",\n  43 => \"98dec\", 42 => \"98aug\", 41 => \"98apr\",\n  40 => \"97dec\", 39 => \"97aug\", 38 => \"97apr\",\n  37 => \"96dec\", 36 => \"96jun\", 35 => \"96mar\",\n  34 => \"95dec\", 33 => \"95jul\", 32 => \"95apr\",\n  31 => \"94dec\", 30 => \"94jul\", 29 => \"94mar\",\n  28 => \"93nov\", 27 => \"93jul\", 26 => \"93mar\",\n  25 => \"92nov\", 24 => \"92jul\", 23 => \"92mar\",\n  22 => \"91nov\", 21 => \"91jul\", 20 => \"91mar\",\n  19 => \"90dec\" );",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my($wgpath) = \"/ftp/ietf\";\nmy($urn) = $ENV{'QUERY_STRING'};\nmy($host) = $ENV{'SERVER_NAME'}; #get my host name for ftp: URLs\nmy($port) = $ENV={'SERVER_PORT'};\nmy($accept) = $ENV{'HTTP_ACCEPT'}; #this is the \"Accept:\" HTTP header",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "(&resolve1($1, $2), exit) if ($urn =~ /urn:ietf:(\\w*):(\\d*)/i);\n(&resolve2($1, $2), exit) if ($urn =~ /urn:ietf:mtg:(\\d*)-(\\w*)/i);\n&urn_error(\"400 Bad Request\\n\");",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolve2 {\n  my($ietfnum, $sesnam) = @_;\n  &urn_error(\"404 Not Found\\n\") if (!defined $number2date{$ietfnum});\n  my($date)=$number2date{$ietfnum};\n  my($link)=\"$wgpath/$sesnam/$sesnam-minutes-$date.txt\";\n  if (-f $link) {\n    if ($accept =~ /text\\/uri-list/) {\n        print \"Status: 200 OK\\n\";\n        print \"Content-type: text/uri-list\\n\\n\\n\";\n        print \"#$urn\\n\";\n        return;\n    }\n    if ($accept =~ /\\*\\/\\*|text]\\/html/) {\n      print \"Status: 200 OK\\n\";\n      print \"Content-type: text/html\\n\\n<HTML>\\n\";\n      print \"<head><title>URN Resolution: I2Ns</title></head>\\n\";\n      print \"<BODY>\\n\";\n      print \"<h1>URN $urn resolves to the following URNs:</h1>\\n\";\n      print \"<hr><ul>\\n\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      print \"</UL>\\n</body>\\n</HTML>\\n\";\n      return;\n    }\n  }\n  my($link)=\"$wgpath/$date/$sesnam-minutes-$date.txt\";\n  if (-f $link) {\n    if ($accept =~ /text\\/uri-list/) {\n        print \"Status: 200 OK\\n\";\n        print \"Content-type: text/uri-list\\n\\n\\n\";\n        print \"#$urn\\n\";\n        return;\n    }\n    if ($accept =~ /\\*\\/\\*|text\\/html/) {\n        print \"Status: 200 OK\\n\";\n        print \"Content-type: text/html\\n\\n<HTML>\\n\";\n        print \"<head><title>URN Resolution: I2Ns</title></head>\\n\";\n        print \"<BODY>\\n\";\n        print \"<h1>URN $urn resolves to the following URNs:</h1>\\n\";\n        print \"<hr><ul>\\n\";\n        print \"</UL>\\n</body>\\n</HTML>\\n\";\n        return;\n    }\n  }\n  &urn_error(\"404 Not Found\\n\");\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub end {\n  my($inarg)=@_;\n  return $inarg . \"st\" if ($inarg =~ /1$/);\n  return $inarg . \"nd\" if ($inarg =~ /2$/);\n  return $inarg . \"rd\" if ($inarg =~ /3$/);\n  return $inarg . \"th\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolve1 {\n  my($flag,@bib,$i,$k,$j,$done,@ref);\n  my($l,$link);\n  my($scheme, $value) = @_;\n  $scheme =~ tr/A-Z/a-z/;\n  if (!defined $cite{$scheme}) {\n    &urn_error(\"404 Not Found\\n\");\n  }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "$flag = 0;\nopen(INPUT, \"$cite{$scheme}\");\nwhile (<INPUT>) {\n  $flag = 1 if (/^0*$value /);\n  if ($flag == 1) {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "    last if (/^$/);\n    chop;\n    push @bib,$_;\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "$k=join \" \",@bib;\nwhile ($k =~ /(\\S*)\\s*(fyi|std|rfc|bcp)\\s*([0-9]+)(.*)/i) {\n  $k=$4;\n  $a=$2; $b=$3;\n  if (($a ne $scheme || $b ne $value) && ($1 !~ /obso/i)){\n    $a =~ tr/A-Z/a-z/;\n    $b =~ s/^0*//;\n    push @ref,\"urn:ietf:$a:$b\";\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "MIME_SWITCH: {\n    if ($accept =~ /text\\/uri-list/) {\n        print \"Status: 200 OK\\n\";\n        print \"Content-type: text/uri-list\\n\\n\\n\";\n        print \"#$urn\\n\";\n        foreach $i (@ref) {\n            print \"$i\\n\";\n        }\n        last MIME_SWITCH;\n    }\n  if ($accept =~ /\\*\\/\\*|text\\/html/) {\n    print \"Status: 200 OK\\n\";\n    print \"Content-type: text/html\\n\\n<HTML>\\n\";\n    print \"<head><title>URN Resolution: I2Ns</title></head>\\n\";\n    print \"<BODY>\\n\";\n    print \"<h1>URN $urn resolves to the following URNs:</h1>\\n\";\n    print \"<hr><ul>\\n\";\n        foreach $i (@ref) {\n            print \"<li>$i: Click to resolve using\\n\";\n            print \"<a\nhref=\\\"http://$host:$port/uri-res/I2C?$i\\\">I2C</a>,\\n\";\n            print \"<a\nhref=\\\"http://$host:$port/uri-res/I2L?$i\\\">I2L</a>,\\n\";\n            print \"<a\nhref=\\\"http://$host:$port/uri-res/I2Ls?$i\\\">I2Ls</a>,\\n\";\n            print \"<a\nhref=\\\"http://$host:$port/uri-res/I2R?$i\\\">I2R</a>,\\n\";\n            print \"<a\nhref=\\\"http://$host:$port/uri-res/I2Rs?$i\\\">I2Rs</a>\\n\";\n        }\n    print \"</UL>\\n</body>\\n</HTML>\\n\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  }\n}\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub make_link {\n  my($sc);\n  my($inarg)=@_;\n  ($sc=$1) if ($inarg =~ /([a-z]*)/);\n  return \"/$sc/$inarg.ps\" if (-e \"/ftp/$sc/$inarg.ps\");\n  return \"/$sc/$inarg.html\" if (-e \"/ftp/$sc/$inarg.html\");\n  return \"/$sc/$inarg.txt\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub urn_error {\n  my($code) = @_; #store failure code here...",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  print \"Status: $code\";\n  print \"Content-type: text/html\\n\\n<HTML>\\n\";\n  print \"<head><title>URN Resolution: I2Ns $code</title></head>\\n\";\n  print \"<BODY>\\n\";\n  print \"<h1>URN to URN resolution failed for the URN:</h1>\\n\";\n  print \"<hr><h3>$urn</h3>\\n\";\n  print \"</body>\\n\";\n  print \"</html>\\n\";\n  exit;\n};",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.5 I2R",
      "section_title": true,
      "ja": "A.5 I2R"
    },
    {
      "indent": 0,
      "text": "#!/usr/local/bin/perl",
      "ja": "＃！/usr/local/bin/perl"
    },
    {
      "indent": 0,
      "text": "use strict;",
      "ja": "厳格を使用します。"
    },
    {
      "indent": 0,
      "text": "# # this is a URN 2 resource resolver for the ietf namespace #",
      "ja": "＃＃これはietf名空間用のURN 2リソースリゾルバーです＃"
    },
    {
      "indent": 0,
      "text": "my(%pathbase) = (\n  rfc => \"rfc/rfc\",\n  fyi => \"fyi/fyi\",\n  std => \"std/std\",\n  bcp => \"bcp/bcp\",\n  id => \"internet-drafts/draft-\"\n);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my(%number2date) = (\n  44 => \"99mar\",\n  43 => \"98dec\", 42 => \"98aug\", 41 => \"98apr\",\n  40 => \"97dec\", 39 => \"97aug\", 38 => \"97apr\",\n  37 => \"96dec\", 36 => \"96jun\", 35 => \"96mar\",\n  34 => \"95dec\", 33 => \"95jul\", 32 => \"95apr\",\n  31 => \"94dec\", 30 => \"94jul\", 29 => \"94mar\",\n  28 => \"93nov\", 27 => \"93jul\", 26 => \"93mar\",\n  25 => \"92nov\", 24 => \"92jul\", 23 => \"92mar\",\n  22 => \"91nov\", 21 => \"91jul\", 20 => \"91mar\",\n  19 => \"90dec\" );",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my($wgpath) = \"/ftp/ietf\";\nmy($urn) = $ENV{'QUERY_STRING'};\nmy($host) = $ENV{'SERVER_NAME'}; #get my host name for ftp: URLs\nmy($accept) = $ENV{'HTTP_ACCEPT'}; #this is the \"Accept:\" HTTP header",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "print \"$urn\\n\";\n(&resolveid($1), exit) if ($urn =~ /urn:ietf:id:(\\S+)/i);\n(&resolve1($1, $2), exit) if ($urn =~ /urn:ietf:(\\w*):(\\d*)/i);\n(&resolve2($1, $2), exit) if ($urn =~ /urn:ietf:mtg:(\\d*)-(\\w*)/i);\n&urn_error(\"400 Bad Request\\n\");",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolve2 {\n  my($ietfnum, $sesnam) = @_;\n  &urn_error(\"404 Not Found\\n\") if (!defined $number2date{$ietfnum});\n  my($date)=$number2date{$ietfnum};\n  my($link)=\"$wgpath/$sesnam/$sesnam-minutes-$date.txt\";\n  if (-f $link) {\n      print \"Status:  200 OK\\n\";\n      print \"Content-type: text/plain\\n\\n\";\n      open(FILE, \"$link\");\n      while (<FILE>) {\n          print $_;\n      }\n      close FILE;\n    return;\n  }\n  my($link)=\"$wgpath/$date/$sesnam-minutes-$date.txt\";\n  if (-f $link) {\n      print \"Status:  200 OK\\n\";\n      print \"Content-type: text/plain\\n\\n\";\n      open(FILE, \"$link\");\n      while (<FILE>) {\n          print $_;\n      }\n      close FILE;\n    return;\n  }\n  &urn_error(\"404 Not Found\\n\");\n}\nsub end {\n  my($inarg)=@_;\n  return $inarg . \"st\" if ($inarg =~ /1$/);\n  return $inarg . \"nd\" if ($inarg =~ /2$/);\n  return $inarg . \"rd\" if ($inarg =~ /3$/);\n  return $inarg . \"th\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolve1 {\n  my($flag,@bib,$i,$k,$j,$done,@ref);\n  my($l,$link);\n  my($scheme, $value) = @_;\n  $scheme =~ tr/A-Z/a-z/;\n  &urn_error(\"404 Not Found\\n\")if (!defined $pathbase{$scheme});\n  my($txttry)=\"/ftp/$pathbase{$scheme}$value.txt\";\n  my($pstry)=\"/ftp/$pathbase{$scheme}$value.ps\";\n  my($htmltry)=\"/ftp/$pathbase{$scheme}$value.html\";\nMIME_SWITCH: {\n    if ($accept =~ /application\\/postscript/ && -f $pstry) {\n      print \"Status:  200 OK\\n\";\n      print \"Content-type: application/postscript\\n\\n\";\n      open(FILE, \"$pstry\");\n      while (<FILE>) {\n          print $_;\n      }\n      close FILE;\n      last MIME_SWITCH;\n    }\n    if ($accept =~ /text\\/html/ && -f $htmltry) {\n        print \"Status:  200 OK\\n\";\n        print \"Content-type: text/html\\n\\n\";\n        open(FILE, \"$htmltry\");\n        while (<FILE>) {\n            print $_;\n        }\n        close FILE;\n        last MIME_SWITCH;\n    }\n    if ($accept =~ /\\*\\/\\*|text\\/plain/ && -f $txttry) {\n        print \"Status:  200 OK\\n\";\n        print \"Content-type: text/plain\\n\\n\";\n        open(FILE, \"$txttry\");\n        while (<FILE>) {\n            print $_;\n        }\n        close FILE;\n        last MIME_SWITCH;\n    }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "    &urn_error(\"404 Not Found\\n\");\n  }\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolveid {\n  my($flag,@bib,$i,$k,$j,$done,@ref);\n  my($l,$link);\n  my($scheme) = \"id\";\n  my($value) = @_;\n  $scheme =~ tr/A-Z/a-z/;\n  &urn_error(\"404 Not Found\\n\")if (!defined $pathbase{$scheme});\n  my($txttry)=\"/ftp/$pathbase{$scheme}$value.txt\";\n  my($pstry)=\"/ftp/$pathbase{$scheme}$value.ps\";\n  my($htmltry)=\"/ftp/$pathbase{$scheme}$value.html\";\nMIME_SWITCH: {\n    if ($accept =~ /application\\/postscript/ && -f $pstry) {\n      print \"Status:  200 OK\\n\";\n      print \"Content-type: application/postscript\\n\\n\";\n      open(FILE, \"$pstry\");\n      while (<FILE>) {\n          print $_;\n      }\n      close FILE;\n      last MIME_SWITCH;\n    }\n    if ($accept =~ /text\\/html/ && -f $htmltry) {\n        print \"Status:  200 OK\\n\";\n        print \"Content-type: text/html\\n\\n\";\n        open(FILE, \"$htmltry\");\n        while (<FILE>) {\n            print $_;\n        }\n        close FILE;\n        last MIME_SWITCH;\n    }\n    if ($accept =~ /\\*\\/\\*|text\\/plain/ && -f $txttry) {\n        print \"Status:  200 OK\\n\";\n        print \"Content-type: text/plain\\n\\n\";\n        open(FILE, \"$txttry\");\n        while (<FILE>) {\n            print $_;\n        }\n        close FILE;\n        last MIME_SWITCH;\n    }\n    &urn_error(\"404 Not Found\\n\");\n  }\n}\nsub urn_error {\n  my($code) = @_; #store failure code here...",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  print \"Status:  $code\";\n  print \"Content-type: text/html\\n\\n<HTML>\\n\";\n  print \"<head><title>URN Resolution: I2R $code</title></head>\\n\";\n  print \"<BODY>\\n\";\n  print \"<h1>URN to URL resolution failed for the URN:</h1>\\n\";\n  print \"<hr><h3>$urn</h3>\\n\";\n  print \"</body>\\n\";\n  print \"</html>\\n\";\n  exit;\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "A.6 I2Rs",
      "section_title": true,
      "ja": "A.6 I2RS"
    },
    {
      "indent": 0,
      "text": "#!/usr/local/bin/perl",
      "ja": "＃！/usr/local/bin/perl"
    },
    {
      "indent": 0,
      "text": "use strict;",
      "ja": "厳格を使用します。"
    },
    {
      "indent": 0,
      "text": "# # this is a URN 2 resources resolver for the ietf namespace #",
      "ja": "＃＃これはietf名空間のためのURN 2リソースリゾルバーです＃"
    },
    {
      "indent": 0,
      "text": "my(@urls);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my(%pathbase) = (\n  rfc => \"rfc/rfc\",\n  fyi => \"fyi/fyi\",\n  std => \"std/std\",\n  bcp => \"bcp/bcp\",\n  id => \"internet-drafts/draft-\"\n);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my(%number2date) = (\n  44 => \"99mar\",\n  43 => \"98dec\", 42 => \"98aug\", 41 => \"98apr\",\n  40 => \"97dec\", 39 => \"97aug\", 38 => \"97apr\",\n  37 => \"96dec\", 36 => \"96jun\", 35 => \"96mar\",\n  34 => \"95dec\", 33 => \"95jul\", 32 => \"95apr\",\n  31 => \"94dec\", 30 => \"94jul\", 29 => \"94mar\",\n  28 => \"93nov\", 27 => \"93jul\", 26 => \"93mar\",\n  25 => \"92nov\", 24 => \"92jul\", 23 => \"92mar\",\n  22 => \"91nov\", 21 => \"91jul\", 20 => \"91mar\",\n  19 => \"90dec\" );",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my($wgpath) = \"/ftp/ietf\";\nmy($urn) = $ENV{'QUERY_STRING'};",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "my($host) = $ENV{'SERVER_NAME'}; #get my host name for ftp: URLs\nmy($accept) = $ENV{'HTTP_ACCEPT'}; #this is the \"Accept:\" HTTP header",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "(&resolveid($1), exit) if ($urn =~ /urn:ietf:id:(\\s*)/i);\n(&resolve1($1, $2), exit) if ($urn =~ /urn:ietf:(\\w*):(\\d*)/i);\n(&resolve2($1, $2), exit) if ($urn =~ /urn:ietf:mtg:(\\d*)-(\\w*)/i);\n&urn_error(\"400 Bad Request\\n\");",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolve2 {\n  my($ietfnum, $sesnam) = @_;\n  my(@vers,$i);\n  &urn_error(\"404 Not Found\\n\") if (!defined $number2date{$ietfnum});\n  my($date)=$number2date{$ietfnum};\n  my($link)=\"$wgpath/$sesnam/$sesnam-minutes-$date.txt\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "if (-f $link) {\n    push(@vers,$link);\n}\n$link=\"$wgpath/$date/$sesnam-minutes-$date.txt\";\nif (-f $link) {\n    push(@vers,$link);\n}\n&urn_error(\"404 Not Found\\n\") if ($#vers==-1);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  print \"Status: 200 OK\\n\";\n  print \"Content-type: multipart/alternative; boundary=endpart\\n\\n\";\n  foreach $i (@vers) {\n      print \"--endpart\\n\";\n      if ($i =~ /html$/) {\n          print \"Content-Type: text/html\\n\\n\";\n      }\n      if ($i =~ /txt$/) {\n          print \"Content-Type: text/plain\\n\\n\";\n      }\n      if ($i =~ /ps$/) {\n          print \"Content-Type: application/postscript\\n\\n\";\n      }\n      open(FILE, \"$i\");\n      while (<FILE>) {\n          print \"$_\";\n      }\n      close FILE;\n  }\n  print \"--endpart\\n\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolve1 {\n  my($flag,@bib,$i,$k,$j,$done,@ref);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "my($l,$link,@vers);\nmy($scheme, $value) = @_;\n$scheme =~ tr/A-Z/a-z/;\n&urn_error(\"404 Not Found\\n\")if (!defined $pathbase{$scheme});\nmy($try)=\"/ftp/$pathbase{$scheme}$value.txt\";\nif (-f $try) {\n    push(@vers, $try);\n}\n$try=\"/ftp/$pathbase{$scheme}$value.ps\";\nif (-f $try) {\n    push(@vers, $try);\n}\n$try=\"/ftp/$pathbase{$scheme}$value.html\";\nif (-f $try) {\n    push(@vers, $try);",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  }\n  print \"Status: 200 OK\\n\";\n  print \"Content-type: multipart/alternative; boundary=endpart\\n\\n\";\n  foreach $i (@vers) {\n      print \"--endpart\\n\";\n      if ($i =~ /html$/) {\n          print \"Content-Type: text/html\\n\\n\";\n      }\n      if ($i =~ /txt$/) {\n          print \"Content-Type: text/plain\\n\\n\";\n      }\n      if ($i =~ /ps$/) {\n          print \"Content-Type: application/postscript\\n\\n\";\n      }\n      open(FILE, \"$i\");\n      while (<FILE>) {\n          print \"$_\";\n      }\n      close FILE;\n  }\n  print \"--endpart\\n\";\n}",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "sub resolveid {\n  my($flag,@bib,$i,$k,$j,$done,@ref);\n  my($l,$link,@vers);\n  my($scheme) = \"id\";\n  my($value) = @_;\n  $scheme =~ tr/A-Z/a-z/;\n  &urn_error(\"404 Not Found\\n\")if (!defined $pathbase{$scheme});\n  my($try)=\"/ftp/$pathbase{$scheme}$value.txt\";\n  if (-f $try) {",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 2,
      "text": "    push(@vers, $try);\n}\n$try=\"/ftp/$pathbase{$scheme}$value.ps\";\nif (-f $try) {\n    push(@vers, $try);\n}\n$try=\"/ftp/$pathbase{$scheme}$value.html\";\nif (-f $try) {\n    push(@vers, $try);\n}\nprint \"Status: 200 OK\\n\";\nprint \"Content-type: multipart/alternative; boundary=endpart\\n\\n\";\nforeach $i (@vers) {\n    print \"--endpart\\n\";\n    if ($i =~ /html$/) {\n        print \"Content-Type: text/html\\n\\n\";",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "      }\n      if ($i =~ /txt$/) {\n          print \"Content-Type: text/plain\\n\\n\";\n      }\n      if ($i =~ /ps$/) {\n          print \"Content-Type: application/postscript\\n\\n\";\n      }\n      open(FILE, \"$i\");\n      while (<FILE>) {\n          print \"$_\";\n      }\n      close FILE;\n  }\n  print \"--endpart\\n\";\n}\nsub urn_error {\n  my($code) = @_; #store failure code here...",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "  print \"Status: $code\";\n  print \"Content-type: text/html\\n\\n<HTML>\\n\";\n  print \"<head><title>URN Resolution: I2Rs $code</title></head>\\n\";\n  print \"<BODY>\\n\";\n  print \"<h1>URN to URL resolution failed for the URN:</h1>\\n\";\n  print \"<hr><h3>$urn</h3>\\n\";\n  print \"</body>\\n\";\n  print \"</html>\\n\";\n  exit;\n}\nFull Copyright Statement",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (1999). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（1999）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があります。また、それについてコメントまたは説明する派生作品、またはその実装を支援することは、いかなる種類の制限なしに、準備、コピー、公開、および部分的に配布される場合があります。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書と本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}