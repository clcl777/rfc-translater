{
  "title": {
    "text": "RFC 2959 - Real-Time Transport Protocol Management Information Base",
    "ja": "RFC 2959 - リアルタイムトランスポートプロトコル管理情報ベース"
  },
  "number": 2959,
  "created_at": "2024-01-07 11:17:43.150712+09:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                        M. Baugher\nRequest for Comments: 2959                                    B. Strahm\nCategory: Standards Track                                   Intel Corp.\n                                                            I. Suconick\n                                                      VideoServer Corp.\n                                                           October 2000",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 22,
      "text": "Real-Time Transport Protocol Management Information Base",
      "ja": "リアルタイムトランスポートプロトコル管理情報ベース"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "ja": "本文書の位置付け"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "ja": "このドキュメントは、インターネットコミュニティのインターネット標準トラックプロトコルを指定し、改善のための議論と提案を要求します。このプロトコルの標準化状態とステータスについては、「インターネット公式プロトコル標準」（STD 1）の現在のエディションを参照してください。このメモの配布は無制限です。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "ja": "著作権表示"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2000）。無断転載を禁じます。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "ja": "概要"
    },
    {
      "indent": 3,
      "text": "This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community. In particular, it defines objects for managing Real-Time Transport Protocol (RTP) systems (RFC1889).",
      "ja": "このメモは、インターネットコミュニティのネットワーク管理プロトコルで使用するための管理情報ベース（MIB）の一部を定義します。特に、リアルタイムトランスポートプロトコル（RTP）システム（RFC1889）を管理するためのオブジェクトを定義します。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "ja": "目次"
    },
    {
      "indent": 3,
      "text": "1. The Network Management Framework .............................  2\n2. Overview .....................................................  3\n2.1 Components ..................................................  3\n2.2 Applicability of the MIB to RTP System Implementations ......  4\n2.3 The Structure of the RTP MIB ................................  4\n3 Definitions ...................................................  5\n4. Security Considerations ...................................... 26\n5. Acknowledgements ............................................. 27\n6. Intellectual Property ........................................ 27\n7. References ................................................... 28\n8. Authors' Addresses ........................................... 30\n9. Full Copyright Statement ..................................... 31",
      "raw": true,
      "toc": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "1. The SNMP Management Framework",
      "section_title": true,
      "ja": "1. SNMP管理フレームワーク"
    },
    {
      "indent": 3,
      "text": "The SNMP Management Framework presently consists of five major components:",
      "ja": "SNMP管理フレームワークは現在、5つの主要なコンポーネントで構成されています。"
    },
    {
      "indent": 6,
      "text": "o An overall architecture, described in RFC 2571 [RFC2571].",
      "ja": "o RFC 2571 [RFC2571]に記載されている全体的なアーキテクチャ。"
    },
    {
      "indent": 6,
      "text": "o Mechanisms for describing and naming objects and events for the purpose of management. The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 16, RFC 1155 [RFC1155], STD 16, RFC 1212 [RFC1212] and RFC 1215 [RFC1215]. The second version, called SMIv2, is described in STD 58, RFC 2578 [RFC2578], RFC 2579 [RFC2579] and RFC 2580 [RFC2580].",
      "ja": "o 管理を目的としたオブジェクトとイベントを説明および名前を付けるためのメカニズム。この管理情報の最初のバージョン（SMI）はSMIV1と呼ばれ、STD 16、RFC 1155 [RFC1155]、STD 16、RFC 1212 [RFC1212]およびRFC 1215 [RFC1215]で説明されています。SMIV2と呼ばれる2番目のバージョンは、STD 58、RFC 2578 [RFC2578]、RFC 2579 [RFC2579]およびRFC 2580 [RFC2580]で説明されています。"
    },
    {
      "indent": 6,
      "text": "o Message protocols for transferring management information. The first version of the SNMP message protocol is called SNMPv1 and described in STD 15, RFC 1157 [RFC1157]. A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and described in RFC 1901 [RFC1901] and RFC 1906 [RFC1906]. The third version of the message protocol is called SNMPv3 and described in RFC 1906 [RFC1906], RFC 2572 [RFC2572] and RFC 2574 [RFC2574].",
      "ja": "o 管理情報を転送するためのメッセージプロトコル。SNMPメッセージプロトコルの最初のバージョンはSNMPV1と呼ばれ、STD 15、RFC 1157 [RFC1157]で説明されています。インターネット標準トラックプロトコルではないSNMPメッセージプロトコルの2番目のバージョンは、SNMPV2Cと呼ばれ、RFC 1901 [RFC1901]およびRFC 1906 [RFC1906]で説明されています。メッセージプロトコルの3番目のバージョンはSNMPV3と呼ばれ、RFC 1906 [RFC1906]、RFC 2572 [RFC2572]およびRFC 2574 [RFC2574]で説明されています。"
    },
    {
      "indent": 6,
      "text": "o Protocol operations for accessing management information. The first set of protocol operations and associated PDU formats is described in STD 15, RFC 1157 [RFC1157]. A second set of protocol operations and associated PDU formats is described in RFC 1905 [RFC1905].",
      "ja": "o 管理情報にアクセスするためのプロトコル操作。プロトコル操作の最初のセットと関連するPDU形式は、STD 15、RFC 1157 [RFC1157]で説明されています。プロトコル操作の2番目のセットと関連するPDU形式は、RFC 1905 [RFC1905]で説明されています。"
    },
    {
      "indent": 6,
      "text": "o A set of fundamental applications described in RFC 2573 [RFC2573] and the view-based access control mechanism described in RFC 2575 [RFC2575].",
      "ja": "o RFC 2573 [RFC2573]に記載されている一連の基本的なアプリケーションと、RFC 2575 [RFC2575]で説明されているビューベースのアクセス制御メカニズム。"
    },
    {
      "indent": 3,
      "text": "A more detailed introduction to the current SNMP Management Framework can be found in RFC 2570 [RFC2570].",
      "ja": "現在のSNMP管理フレームワークのより詳細な紹介は、RFC 2570 [RFC2570]にあります。"
    },
    {
      "indent": 3,
      "text": "Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB. Objects in the MIB are defined using the mechanisms defined in the SMI.",
      "ja": "管理されたオブジェクトは、管理情報ベースまたはMIBと呼ばれる仮想情報ストアからアクセスされます。MIBのオブジェクトは、SMIで定義されたメカニズムを使用して定義されます。"
    },
    {
      "indent": 3,
      "text": "This memo specifies a MIB module that is compliant to the SMIv2. A MIB conforming to the SMIv1 can be produced through the appropriate translations. The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64). Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process. However, this loss of machine readable information is not considered to change the semantics of the MIB.",
      "ja": "このメモは、SMIV2に準拠したMIBモジュールを指定します。SMIV1に準拠するMIBは、適切な翻訳を通じて生成できます。結果として生じる翻訳されたMIBは、翻訳が不可能であるためオブジェクトまたはイベントが省略されている場合を除き、意味的に同等でなければなりません（Counter64の使用）。SMIV2の一部の機械読み取り可能な情報は、翻訳プロセス中にSMIV1のテキスト説明に変換されます。ただし、この機械の読み取り可能な情報の損失は、MIBのセマンティクスを変更するとは見なされません。"
    },
    {
      "indent": 0,
      "text": "2. Overview",
      "section_title": true,
      "ja": "2. 概要"
    },
    {
      "indent": 3,
      "text": "An \"RTP System\" may be a host end-system that runs an application program that sends or receives RTP data packets, or it may be an intermediate-system that forwards RTP packets. RTP Control Protocol (RTCP) packets are sent by senders and receivers to convey information about RTP packet transmission and reception [RFC1889]. RTP monitors may collect RTCP information on senders and receivers to and from an RTP host or intermediate-system.",
      "ja": "「RTPシステム」は、RTPデータパケットを送信または受信するアプリケーションプログラムを実行するホスト最終システムである場合があります。または、RTPパケットを転送する中間システムである場合があります。RTPコントロールプロトコル（RTCP）パケットは、送信者と受信機によって送信され、RTPパケット送信と受信に関する情報を伝えます[RFC1889]。RTPモニターは、RTPホストまたは中間システムとの間で送信者とレシーバーに関するRTCP情報を収集する場合があります。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.",
      "ja": "「必須」、「そうしない」、「必須」、「shall」、「shall \"、\" ingle \"、\" should \"、\" not \"、\" becommended \"、\" bay \"、および「optional」は、RFC 2119に記載されているとおりに解釈されます。"
    },
    {
      "indent": 0,
      "text": "2.1 Components",
      "section_title": true,
      "ja": "2.1 コンポーネント"
    },
    {
      "indent": 3,
      "text": "The RTP MIB is structured around \"Session,\" \"Receiver\" and \"Sender\" conceptual abstractions.",
      "ja": "RTP MIBは、「セッション」、「受信機」、および「送信者」の概念的抽象化を中心に構成されています。"
    },
    {
      "indent": 3,
      "text": "2.1.1 An \"RTP Session\" is the \"...association of participants communicating with RTP. For each participant, the session is defined by a particular pair of destination transport addresses (one network address plus a port pair for RTP and RTCP). The destination transport addresses may be common for all participants, as in the case of IP multicast, or may be different for each, as in the case of individual unicast addresses plus a common port pair,\" as defined in section 3 of [RFC1889].",
      "ja": "2.1.1 「RTPセッション」は、「...各参加者と通信する参加者の関連」です。セッションは、特定の宛先輸送アドレス（1つのネットワークアドレスとRTPおよびRTCP用のポートペア）によって定義されます。宛先は宛先です。[RFC1889]のセクション3で定義されているように、個々のユニキャストアドレスと共通のポートペアの場合のように、IPマルチキャストの場合のように、すべての参加者に輸送アドレスが一般的であるか、それぞれが異なる場合があります。"
    },
    {
      "indent": 3,
      "text": "2.1.2 A \"Sender\" is identified within an RTP session by a 32-bit numeric \"Synchronization Source,\" or \"SSRC\", value and is \"...the source of a stream of RTP packets\" as defined in section 3 of [RFC1889]. The sender is also a source of RTCP Sender Report packets as specified in section 6 of [RFC1889].",
      "ja": "2.1.2 「送信者」は、32ビットの数値「同期ソース」または「SSRC」、値、およびIS「... RTPパケットのストリームのソース」によってRTPセッション内で識別されます[RFC1889で定義されています。]。送信者は、[RFC1889]のセクション6で指定されているRTCP送信者レポートパケットのソースでもあります。"
    },
    {
      "indent": 3,
      "text": "2.1.3 A \"Receiver\" of a \"stream of RTP packets\" can be a unicast or multicast Receiver as described in 2.1.1, above. An RTP Receiver has an SSRC value that is unique to the session. An RTP Receiver is a source of RTCP Receiver Reports as specified in section 6 of [RFC1889].",
      "ja": "2.1.3 上記の2.1.1で説明されているように、「RTPパケットのストリーム」の「レシーバー」はユニキャストまたはマルチキャストレシーバーになります。RTPレシーバーには、セッションに固有のSSRC値があります。RTPレシーバーは、[RFC1889]のセクション6で指定されているRTCPレシーバーレポートのソースです。"
    },
    {
      "indent": 0,
      "text": "2.2 Applicability of the MIB to RTP System Implementations",
      "section_title": true,
      "ja": "2.2 MIBのRTPシステムの実装への適用性"
    },
    {
      "indent": 3,
      "text": "The RTP MIB may be used in two types of RTP implementations, RTP Host Systems (end systems) and RTP Monitors, see section 3 of [RFC1889]. Use of the RTP MIB for RTP Translators and Mixers, as defined in section 7 of [RFC1889], is for further study.",
      "ja": "RTP MIBは、RTPホストシステム（ENDシステム）とRTPモニターの2種類のRTP実装で使用できます。[RFC1889]のセクション3を参照してください。[RFC1889]のセクション7で定義されているRTP翻訳者とミキサーにRTP MIBを使用することは、さらなる研究のためです。"
    },
    {
      "indent": 3,
      "text": "2.2.1 RTP host Systems are end-systems that may use the RTP MIB to collect RTP session and stream data that the host is sending or receiving; these data may be used by a network manager to detect and diagnose faults that occur over the lifetime of an RTP session as in a \"help-desk\" scenario.",
      "ja": "2.2.1 RTPホストシステムは、RTP MIBを使用してRTPセッションを収集し、ホストが送信または受信しているデータをストリーミングできるエンドシステムです。これらのデータは、「ヘルプデスク」シナリオのように、RTPセッションの寿命にわたって発生する障害を検出および診断するために、ネットワークマネージャーによって使用される場合があります。"
    },
    {
      "indent": 3,
      "text": "2.2.2 RTP Monitors of multicast RTP sessions may be third-party or may be located in the RTP host. RTP Monitors may use the RTP MIB to collect RTP session and stream statistical data; these data may be used by a network manager for capacity planning and other network-management purposes. An RTP Monitor may use the RTP MIB to collect data to permit a network manager to detect and diagnose faults in RTP sessions or to permit a network manger to configure its operation.",
      "ja": "2.2.2 マルチキャストRTPセッションのRTPモニターは、サードパーティであるか、RTPホストに配置される場合があります。RTPモニターは、RTP MIBを使用してRTPセッションを収集し、統計データをストリーミングする場合があります。これらのデータは、容量計画およびその他のネットワーク管理目的でネットワークマネージャーが使用する場合があります。RTPモニターは、RTP MIBを使用してデータを収集して、ネットワークマネージャーがRTPセッションで障害を検出および診断したり、ネットワークマネージャーがその動作を構成できるようにすることができます。"
    },
    {
      "indent": 3,
      "text": "2.2.3 Many host systems will want to keep track of streams beyond what they are sending and receiving. In a host monitor system, a host agent would use RTP data from the host to maintain data about streams it is sending and receiving, and RTCP data to collect data about other hosts in the session. For example, an agent for an RTP host that is sending a stream would use data from its RTP system to maintain the rtpSenderTable, but it may want to maintain a rtpRcvrTable for endpoints that are receiving its stream. To do this the RTP agent will collect RTCP data from the receivers of its stream to build the rtpRcvrTable. A host monitor system MUST set the rtpSessionMonitor object to 'true(1)', but it does not have to accept management operations that create and destroy rows in its rtpSessionTable.",
      "ja": "2.2.3 多くのホストシステムは、送信および受け取っているものを超えてストリームを追跡したいと考えています。ホストモニターシステムでは、ホストエージェントがホストのRTPデータを使用して、送信および受信しているストリームに関するデータを維持し、RTCPデータをセッションで他のホストに関するデータを収集します。たとえば、ストリームを送信しているRTPホストのエージェントは、RTPシステムのデータを使用してRTPSENDENTABLEを維持しますが、ストリームを受信しているエンドポイントに対してRTPRCVRtableを維持することをお勧めします。これを行うために、RTPエージェントは、そのストリームの受信機からRTCPデータを収集して、RTPRCVRtableを構築します。ホストモニターシステムは、rtpsesssionmonitorオブジェクトを「true（1）」に設定する必要がありますが、rtpsessionテーブルの行を作成および破壊する管理操作を受け入れる必要はありません。"
    },
    {
      "indent": 0,
      "text": "2.3 The Structure of the RTP MIB",
      "section_title": true,
      "ja": "2.3 RTP MIBの構造"
    },
    {
      "indent": 3,
      "text": "There are six tables in the RTP MIB. The rtpSessionTable contains objects that describe active sessions at the host, or monitor. The rtpSenderTable contains information about senders to the RTP session. The rtpRcvrTable contains information about receivers of RTP session data. The rtpSessionInverseTable, rtpSenderInverseTable, and rtpRcvrInverseTable contain information to efficiently find indexes into the rtpSessionTable, rtpSenderTable, and rtpRcvrTable, respectively.",
      "ja": "RTP MIBには6つのテーブルがあります。RTPSESSIONテーブルには、ホストまたはモニターでのアクティブセッションを記述するオブジェクトが含まれています。RTPSEndertableには、RTPセッションへの送信者に関する情報が含まれています。RTPRCVRTABLEには、RTPセッションデータの受信機に関する情報が含まれています。rtps inversetable、rtpsenderninversetable、およびrtprcvrinversetableには、それぞれrtpsessiontable、rtpsendertable、およびrtprcvrtableにインデックスを効率的に見つけるための情報が含まれています。"
    },
    {
      "indent": 3,
      "text": "The reverse lookup tables (rtpSessionInverseTable, rtpSenderInverseTable, and rtpRcvrInverseTable) are optional tables to help management applications efficiently access conceptual rows in other tables. Implementors of this MIB SHOULD implement these tables for multicast RTP sessions when table indexes (rtpSessionIndex of rtpSessionTable, rtpSenderSSRC of rtpSenderTable, and the SSRC pair in the rtpRcvrTable) are not available from other MIBs. Otherwise, the management application may be forced to perform expensive tree walks through large numbers of sessions, senders, or receivers.",
      "ja": "リバースルックアップテーブル（RTPSESSIONINVERSETABLE、RTPSENDENDENDERINVERSETABLE、およびRTPRCVRINVERSETABLE）は、管理アプリケーションが他のテーブルの概念行に効率的にアクセスできるようにオプションのテーブルです。このMIBの実装者は、テーブルインデックス（RTPSESSIONTABLEのRTPSESSIONINDEX、RTPSENDENSSRCのRTPSENDERSSRC、およびRTPRCVRTABLEのSSRCペア）の場合、マルチキャストRTPセッションにこれらのテーブルを実装する必要があります。それ以外の場合、管理アプリケーションは、多数のセッション、送信者、または受信機を通じて高価なツリーウォークを実行することを余儀なくされる場合があります。"
    },
    {
      "indent": 3,
      "text": "For any particular RTP session, the rtpSessionMonitor object indicates whether remote senders or receivers to the RTP session are to be monitored. If rtpSessionMonitor is true(1) then senders and receivers to the session MUST be monitored with entries in the rtpSenderTable and rtpRcvrTable. RTP sessions are monitored by the RTP agent that updates rtpSenderTable and rtpRcvrTable objects with information from RTCP reports from remote senders or remote receivers respectively.",
      "ja": "特定のRTPセッションでは、RTPSESSIONMIRTORオブジェクトは、RTPセッションのリモート送信者または受信者を監視するかどうかを示します。RTPSESSIONMONTORがtrue（1）である場合、セッションの送信者と受信者は、RTPSENDERTABLEおよびRTPRCVRTABLEのエントリで監視する必要があります。RTPセッションは、RTPSENDERTABLEオブジェクトとRTPRCVRTableオブジェクトを、それぞれリモート送信者またはリモートレシーバーからのRTCPレポートからの情報で更新するRTPエージェントによって監視されます。"
    },
    {
      "indent": 3,
      "text": "rtpSessionNewIndex is a global object that permits a network-management application to obtain a unique index for conceptual row creation in the rtpSessionTable. In this way the SNMP Set operation MAY be used to configure a monitor.",
      "ja": "RTPSESSIONNEWINDEXは、ネットワーク管理アプリケーションがRTPSESSIONテーブルで概念的行作成のための一意のインデックスを取得できるようにするグローバルオブジェクトです。このようにして、SNMPセット操作を使用してモニターを構成できます。"
    },
    {
      "indent": 0,
      "text": "3. Definitions",
      "section_title": true,
      "ja": "3. 定義"
    },
    {
      "indent": 0,
      "text": "RTP-MIB DEFINITIONS ::= BEGIN\nIMPORTS\n       Counter32, Counter64, Gauge32, mib-2, Integer32,\n       MODULE-IDENTITY,\n       OBJECT-TYPE, Unsigned32                     FROM SNMPv2-SMI\n       RowStatus, TAddress,\n       TDomain, TestAndIncr,\n       TimeStamp, TruthValue                       FROM SNMPv2-TC\n       OBJECT-GROUP, MODULE-COMPLIANCE             FROM SNMPv2-CONF\n       Utf8String                                  FROM SYSAPPL-MIB\n       InterfaceIndex                              FROM IF-MIB;",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpMIB MODULE-IDENTITY LAST-UPDATED \"200010020000Z\" -- 2 October 2000 ORGANIZATION \"IETF AVT Working Group Email: rem-conf@es.net\" CONTACT-INFO \"Mark Baugher Postal: Intel Corporation 2111 NE 25th Avenue Hillsboro, OR 97124 United States Tel: +1 503 466 8406 Email: mbaugher@passedge.com",
      "ja": "rtpmibモジュールのアイデンティティ最後の「200010020000z」 -  2000年10月2日組織 \"IETF AVTワーキンググループメール：remconf@es.net\" contact-info \"mark-info\" baugher postal：intel Corporation 2111 Ne 25th Avenue Hillsboro、または97124 United州Tel：1 503 466 8406メール：mbaugher@passedge.com"
    },
    {
      "indent": 4,
      "text": " Bill Strahm Postal: Intel Corporation 2111 NE 25th Avenue Hillsboro, OR 97124 United States Tel: +1 503 264 4632 Email: bill.strahm@intel.com",
      "ja": "ビル・ストラーム郵便：Intel Corporation 2111 NE 25th Avenue Hillsboro、または97124米国電話：1 503 264 4632メール：bill.strahm@intel.com"
    },
    {
      "indent": 4,
      "text": " Irina Suconick Postal: Ennovate Networks 60 Codman Hill Rd., Boxboro, Ma 01719 Tel: +1 781-505-2155 Email: irina@ennovatenetworks.com\"",
      "ja": "Irina Susunick Postal：Ennovate Networks 60 Codman Hill Rd。、Boxboro、MA 01719 Tel：1 781-505-2155メール：irina@ennovatenetworks.com \""
    },
    {
      "indent": 3,
      "text": " DESCRIPTION \"The managed objects of RTP systems. The MIB is structured around three types of information. 1. General information about RTP sessions such as the session address. 2. Information about RTP streams being sent to an RTP session by a particular sender. 3. Information about RTP streams received on an RTP session by a particular receiver from a particular sender. There are two types of RTP Systems, RTP hosts and RTP monitors. As described below, certain objects are unique to a particular type of RTP System. An RTP host may also function as an RTP monitor. Refer to RFC 1889, 'RTP: A Transport Protocol for Real-Time Applications,' section 3.0, for definitions.\" REVISION \"200010020000Z\" -- 2 October 2000 DESCRIPTION \"Initial version of this MIB. Published as RFC 2959.\"",
      "ja": "説明 \"RTPシステムの管理オブジェクト。MIBは3種類の情報を中心に構成されています。1。セッションアドレスなどのRTPセッションに関する一般情報。2。特定の送信者によってRTPセッションに送信されるRTPストリームに関する情報。3。特定の送信者からの特定の受信機によってRTPセッションで受信されたRTPストリームに関する情報。RTPシステムには2種類のRTPホストとRTPモニターがあります。以下に説明するように、特定のオブジェクトは特定のタイプのRTPシステムに固有のものです。RTPホストは、RTPモニターとしても機能する場合があります。RFC1889、「RTP：リアルタイムアプリケーション用のトランスポートプロトコル」を参照してください。「セクション3.0、定義」。リビジョン「200010020000Z」 -  2000年10月2日説明「このMIBの初期バージョン。RFC2959として公開されています。」"
    },
    {
      "indent": 0,
      "text": "::= { mib-2 87 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--\n-- OBJECTS\n--\nrtpMIBObjects OBJECT IDENTIFIER ::= { rtpMIB 1 }\nrtpConformance OBJECT IDENTIFIER ::= { rtpMIB 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--",
      "ja": " - "
    },
    {
      "indent": 0,
      "text": "-- SESSION NEW INDEX\n--\nrtpSessionNewIndex OBJECT-TYPE\n    SYNTAX          TestAndIncr\n    MAX-ACCESS      read-write\n    STATUS          current\n    DESCRIPTION\n      \"This  object  is  used  to  assign  values  to rtpSessionIndex\n       as described in 'Textual Conventions  for  SMIv2'.  For an RTP\n       system that supports the creation of rows, the  network manager\n       would read the  object,  and  then write the value back in\n       the Set that creates a new instance  of rtpSessionEntry.   If\n       the  Set  fails with the code 'inconsistentValue,' then the\n       process must be repeated; If the Set succeeds, then the object\n       is incremented, and the  new  instance  is created according to\n       the manager's directions.  However, if the RTP agent is not\n       acting as a monitor, only the RTP agent may create conceptual\n       rows in the RTP session table.\"\n    ::= { rtpMIBObjects 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--\n-- SESSION INVERSE TABLE\n--\nrtpSessionInverseTable OBJECT-TYPE\n    SYNTAX          SEQUENCE OF RtpSessionInverseEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Maps rtpSessionDomain, rtpSessionRemAddr, and rtpSessionLocAddr\n       TAddress pairs to one or more rtpSessionIndex values, each\n       describing a row in the rtpSessionTable.  This makes it possible\n       to retrieve the row(s) in the rtpSessionTable corresponding to a\n       given session without having to walk the entire (potentially\n       large) table.\"\n    ::= { rtpMIBObjects 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionInverseEntry OBJECT-TYPE\n    SYNTAX          RtpSessionInverseEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Each entry corresponds to exactly one entry in the\n       rtpSessionTable - the entry containing the tuple,\n       rtpSessionDomain, rtpSessionRemAddr, rtpSessionLocAddr\n       and rtpSessionIndex.\"\n    INDEX { rtpSessionDomain, rtpSessionRemAddr, rtpSessionLocAddr,\n            rtpSessionIndex }\n    ::= { rtpSessionInverseTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "RtpSessionInverseEntry ::= SEQUENCE {\n        rtpSessionInverseStartTime     TimeStamp\n        }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionInverseStartTime OBJECT-TYPE\n    SYNTAX          TimeStamp\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The value of SysUpTime at the time that this row was\n       created.\"\n    ::= { rtpSessionInverseEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--\n--      SESSION TABLE\n--\nrtpSessionTable OBJECT-TYPE\n    SYNTAX          SEQUENCE OF RtpSessionEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n          \"There's one entry in rtpSessionTable for each RTP session\n          on which packets are being sent, received, and/or\n          monitored.\"\n    ::= { rtpMIBObjects 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionEntry OBJECT-TYPE\n    SYNTAX          RtpSessionEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Data in rtpSessionTable uniquely identify an RTP session.  A\n       host RTP agent MUST create a read-only row for each session to\n       which packets are being sent or received.  Rows MUST be created\n       by the RTP Agent at the start of a session when one or more\n       senders or receivers are observed.  Rows created by an RTP agent\n       MUST be deleted when the session is over and there are no\n       rtpRcvrEntry and no rtpSenderEntry for this session.  An RTP\n       session SHOULD be monitored to create management information on\n       all RTP streams being sent or received when the\n       rtpSessionMonitor has the TruthValue of 'true(1)'.  An RTP\n       monitor SHOULD permit row creation with the side effect of\n       causing the RTP System to join the multicast session for the\n       purposes of gathering management information  (additional\n       conceptual rows are created in the rtpRcvrTable and\n       rtpSenderTable).  Thus, rtpSessionTable rows SHOULD be created\n       for RTP session monitoring purposes.  Rows created by a\n       management application SHOULD be deleted via SNMP operations by\n       management applications.  Rows created by management operations\n       are deleted by management operations by setting\n       rtpSessionRowStatus to 'destroy(6)'.\"\n    INDEX { rtpSessionIndex }\n    ::= { rtpSessionTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "RtpSessionEntry ::= SEQUENCE {\n        rtpSessionIndex         Integer32,\n        rtpSessionDomain        TDomain,\n        rtpSessionRemAddr       TAddress,\n        rtpSessionLocAddr       TAddress,\n        rtpSessionIfIndex       InterfaceIndex,\n        rtpSessionSenderJoins   Counter32,\n        rtpSessionReceiverJoins Counter32,\n        rtpSessionByes          Counter32,\n        rtpSessionStartTime     TimeStamp,\n        rtpSessionMonitor       TruthValue,\n        rtpSessionRowStatus     RowStatus\n        }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionIndex OBJECT-TYPE\n    SYNTAX          Integer32 (1..2147483647)\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"The index of the conceptual row which is for SNMP purposes\n       only and has no relation to any protocol value.  There is\n       no requirement that these rows are created or maintained\n       sequentially.\"\n    ::= { rtpSessionEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionDomain OBJECT-TYPE\n    SYNTAX          TDomain\n    MAX-ACCESS      read-create\n    STATUS          current\n    DESCRIPTION\n      \"The transport-layer protocol used for sending or receiving\n       the stream of RTP data packets on this session.\n       Cannot be changed if rtpSessionRowStatus is 'active'.\"\n    ::= { rtpSessionEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionRemAddr OBJECT-TYPE\n    SYNTAX          TAddress\n    MAX-ACCESS      read-create\n    STATUS          current\n    DESCRIPTION\n      \"The address to which RTP packets are sent by the RTP system.\n      In an IP multicast RTP session, this is the single address used\n      by all senders and receivers of RTP session data.  In a unicast\n      RTP session this is the unicast address of the remote RTP system.\n      'The destination address pair may be common for all participants,\n      as in the case of IP multicast, or may be different for each, as\n      in the case of individual unicast network address pairs.'  See\n      RFC 1889, 'RTP: A Transport Protocol for Real-Time Applications,'\n      sec. 3.  The transport service is identified by rtpSessionDomain.\n      For snmpUDPDomain, this is an IP address and even-numbered UDP\n      Port with the RTCP being sent on the next higher odd-numbered\n      port, see RFC 1889, sec. 5.\"\n    ::= { rtpSessionEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionLocAddr OBJECT-TYPE\n    SYNTAX          TAddress\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The local address used by the RTP system.  In an IP multicast\n       RTP session, rtpSessionRemAddr will be the same IP multicast\n       address as rtpSessionLocAddr.  In a unicast RTP session,\n       rtpSessionRemAddr and rtpSessionLocAddr will have different\n       unicast addresses.  See RFC 1889, 'RTP: A Transport Protocol for\n       Real-Time Applications,' sec. 3.  The transport service is\n       identified by rtpSessionDomain.  For snmpUDPDomain, this is an IP\n       address and even-numbered UDP Port with the RTCP being sent on\n       the next higher odd-numbered port, see RFC 1889, sec. 5.\"\n    ::= { rtpSessionEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionIfIndex OBJECT-TYPE\n    SYNTAX          InterfaceIndex\n    MAX-ACCESS      read-create\n    STATUS          current\n    DESCRIPTION\n     \"The ifIndex value is set to the corresponding value\n      from IF-MIB (See RFC 2233, 'The Interfaces Group MIB using\n      SMIv2').  This is the interface that the RTP stream is being sent\n      to or received from, or in the case of an RTP Monitor the\n      interface that RTCP packets will be received on.  Cannot be\n      changed if rtpSessionRowStatus is 'active'.\"\n    ::= { rtpSessionEntry 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionSenderJoins OBJECT-TYPE\n    SYNTAX          Counter32\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The number of senders that have been observed to have\n       joined the session since this conceptual row was created\n       (rtpSessionStartTime).  A sender 'joins' an RTP\n       session by sending to it.  Senders that leave and then\n       re-join following an RTCP BYE (see RFC 1889, 'RTP: A\n       Transport Protocol for Real-Time Applications,' sec. 6.6)\n       or session timeout may be counted twice.  Every time a new\n       RTP sender is detected either using RTP or RTCP, this counter\n       is incremented.\"\n    ::= { rtpSessionEntry 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionReceiverJoins OBJECT-TYPE\n    SYNTAX          Counter32\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The number of receivers that have been been observed to\n       have joined this session since this conceptual row was\n       created (rtpSessionStartTime).  A receiver 'joins' an RTP\n       session by sending RTCP Receiver Reports to the session.\n       Receivers that leave and then re-join following an RTCP BYE\n       (see RFC 1889, 'RTP: A Transport Protocol for Real-Time\n       Applications,' sec. 6.6) or session timeout may be counted\n       twice.\"\n    ::= { rtpSessionEntry 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionByes OBJECT-TYPE\n    SYNTAX          Counter32\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"A count of RTCP BYE (see RFC 1889, 'RTP: A Transport\n       Protocol for Real-Time Applications,' sec. 6.6) messages\n       received by this entity.\"\n    ::= { rtpSessionEntry 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionStartTime OBJECT-TYPE\n    SYNTAX          TimeStamp\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The value of SysUpTime at the time that this row was\n       created.\"\n    ::= { rtpSessionEntry 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionMonitor OBJECT-TYPE\n    SYNTAX          TruthValue\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "  \"Boolean, Set to 'true(1)' if remote senders or receivers in\n   addition to the local RTP System are to be monitored using RTCP.\n   RTP Monitors MUST initialize to 'true(1)' and RTP Hosts SHOULD\n   initialize this 'false(2)'.  Note that because 'host monitor'\n   systems are receiving RTCP from their remote participants they\n   MUST set this value to 'true(1)'.\"\n::= { rtpSessionEntry 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSessionRowStatus OBJECT-TYPE\n    SYNTAX          RowStatus\n    MAX-ACCESS      read-create\n    STATUS          current\n    DESCRIPTION\n      \"Value of 'active' when RTP or RTCP messages are being\n       sent or received by an RTP System.  A newly-created\n       conceptual row must have the all read-create objects\n       initialized before becoming 'active'.\n       A conceptual row that is in the 'notReady' or 'notInService'\n       state MAY be removed after 5  minutes.\"\n    ::= { rtpSessionEntry 11 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--\n-- SENDER INVERSE TABLE\n--\nrtpSenderInverseTable OBJECT-TYPE\n    SYNTAX          SEQUENCE OF RtpSenderInverseEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Maps rtpSenderAddr, rtpSessionIndex, to the rtpSenderSSRC\n       index of the rtpSenderTable.  This table allows management\n       applications to find entries sorted by rtpSenderAddr rather than\n       sorted by rtpSessionIndex.  Given the rtpSessionDomain and\n       rtpSenderAddr, a set of rtpSessionIndex and rtpSenderSSRC values\n       can be returned from a tree walk.  When rtpSessionIndex is\n       specified in the SNMP Get-Next operations, one or more\n       rtpSenderSSRC values may be returned.\"\n    ::= { rtpMIBObjects 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderInverseEntry OBJECT-TYPE\n    SYNTAX          RtpSenderInverseEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Each entry corresponds to exactly one entry in the\n       rtpSenderTable - the entry containing the index pair,\n       rtpSessionIndex, rtpSenderSSRC.\"\n    INDEX { rtpSessionDomain, rtpSenderAddr, rtpSessionIndex,",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "        rtpSenderSSRC }\n::= { rtpSenderInverseTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "RtpSenderInverseEntry ::= SEQUENCE {\n        rtpSenderInverseStartTime     TimeStamp\n        }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderInverseStartTime OBJECT-TYPE\n    SYNTAX          TimeStamp\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The value of SysUpTime at the time that this row was\n       created.\"\n    ::= { rtpSenderInverseEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--\n--  SENDERS TABLE\n--\nrtpSenderTable OBJECT-TYPE\n    SYNTAX          SEQUENCE OF RtpSenderEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Table of information about a sender or senders to an RTP\n       Session. RTP sending hosts MUST have an entry in this table\n       for each stream being sent.  RTP receiving hosts MAY have an\n       entry in this table for each sending stream being received by\n       this host.  RTP monitors MUST create an entry for each observed\n       sender to a multicast RTP Session as a side-effect when a\n       conceptual row in the rtpSessionTable is made 'active' by a\n       manager.\"\n    ::= { rtpMIBObjects 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderEntry OBJECT-TYPE\n    SYNTAX          RtpSenderEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Each entry contains information from a single RTP Sender\n       Synchronization Source (SSRC, see RFC 1889 'RTP: A Transport\n       Protocol for Real-Time Applications' sec.6).  The session is\n       identified to the the SNMP entity by rtpSessionIndex.\n       Rows are removed by the RTP agent when a BYE is received\n       from the sender or when the sender times out (see RFC\n       1889, Sec. 6.2.1) or when the rtpSessionEntry is deleted.\"\n    INDEX { rtpSessionIndex, rtpSenderSSRC }\n    ::= { rtpSenderTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "RtpSenderEntry ::= SEQUENCE {\n        rtpSenderSSRC           Unsigned32,\n        rtpSenderCNAME          Utf8String,\n        rtpSenderAddr           TAddress,\n        rtpSenderPackets        Counter64,\n        rtpSenderOctets         Counter64,\n        rtpSenderTool           Utf8String,\n        rtpSenderSRs            Counter32,\n        rtpSenderSRTime         TimeStamp,\n        rtpSenderPT             INTEGER,\n        rtpSenderStartTime      TimeStamp\n        }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderSSRC OBJECT-TYPE\n    SYNTAX          Unsigned32\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"The RTP SSRC, or synchronization source identifier of the\n       sender.  The RTP session address plus an SSRC uniquely\n       identify a sender to an RTP session (see RFC 1889, 'RTP: A\n       Transport Protocol for Real-Time Applications' sec.3).\"\n    ::= { rtpSenderEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderCNAME OBJECT-TYPE\n    SYNTAX          Utf8String\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The RTP canonical name of the sender.\"\n    ::= { rtpSenderEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderAddr OBJECT-TYPE\n    SYNTAX          TAddress\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The unicast transport source address of the sender.  In the\n       case of an RTP Monitor this address is the address that the\n       sender is using to send its RTCP Sender Reports.\"\n    ::= { rtpSenderEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderPackets OBJECT-TYPE\n    SYNTAX          Counter64\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"Count of RTP packets sent by this sender, or observed by",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "   an RTP monitor, since rtpSenderStartTime.\"\n::= { rtpSenderEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderOctets OBJECT-TYPE\n    SYNTAX          Counter64\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"Count of non-header RTP octets sent by this sender, or observed\n       by an RTP monitor, since rtpSenderStartTime.\"\n    ::= { rtpSenderEntry 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderTool OBJECT-TYPE\n    SYNTAX          Utf8String (SIZE(0..127))\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"Name of the application program source of the stream.\"\n    ::= { rtpSenderEntry 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderSRs OBJECT-TYPE\n    SYNTAX          Counter32\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"A count of the number of RTCP Sender Reports that have\n       been sent from this sender, or observed if the RTP entity\n       is a monitor, since rtpSenderStartTime.\"\n    ::= { rtpSenderEntry 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderSRTime OBJECT-TYPE\n    SYNTAX          TimeStamp\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"rtpSenderSRTime is the value of SysUpTime at the time that\n       the last SR was received from this sender, in the case of a\n       monitor or receiving host.  Or sent by this sender, in the\n       case of a sending host.\"\n    ::= { rtpSenderEntry 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderPT OBJECT-TYPE\n    SYNTAX          INTEGER (0..127)\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"Payload type from the RTP header of the most recently received\n       RTP Packet (see RFC 1889, 'RTP: A Transport Protocol for\n       Real-Time Applications' sec. 5).\"\n    ::= { rtpSenderEntry 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpSenderStartTime OBJECT-TYPE\n    SYNTAX          TimeStamp\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The value of SysUpTime at the time that this row was\n       created.\"\n    ::= { rtpSenderEntry 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--\n-- RECEIVER INVERSE TABLE\n--\nrtpRcvrInverseTable OBJECT-TYPE\n    SYNTAX          SEQUENCE OF RtpRcvrInverseEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Maps rtpRcvrAddr and rtpSessionIndex to the rtpRcvrSRCSSRC and\n       rtpRcvrSSRC indexes of the rtpRcvrTable.  This table allows\n       management applications to find entries sorted by rtpRcvrAddr\n       rather than by rtpSessionIndex. Given rtpSessionDomain and\n       rtpRcvrAddr, a set of rtpSessionIndex, rtpRcvrSRCSSRC, and\n       rtpRcvrSSRC values can be returned from a tree walk.  When\n       rtpSessionIndex is specified in SNMP Get-Next operations, one or\n       more rtpRcvrSRCSSRC and rtpRcvrSSRC pairs may be returned.\"\n    ::= { rtpMIBObjects 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrInverseEntry OBJECT-TYPE\n    SYNTAX          RtpRcvrInverseEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Each entry corresponds to exactly one entry in the\n       rtpRcvrTable - the entry containing the index pair,\n       rtpSessionIndex, rtpRcvrSSRC.\"\n    INDEX { rtpSessionDomain, rtpRcvrAddr,  rtpSessionIndex,\n            rtpRcvrSRCSSRC, rtpRcvrSSRC }\n    ::= { rtpRcvrInverseTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "RtpRcvrInverseEntry ::= SEQUENCE {\n        rtpRcvrInverseStartTime     TimeStamp\n        }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrInverseStartTime OBJECT-TYPE\n    SYNTAX          TimeStamp\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The value of SysUpTime at the time that this row was\n       created.\"\n    ::= { rtpRcvrInverseEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--\n--  RECEIVERS TABLE\n--\nrtpRcvrTable OBJECT-TYPE\n    SYNTAX          SEQUENCE OF RtpRcvrEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Table of information about a receiver or receivers of RTP\n       session data. RTP hosts that receive RTP session packets\n       MUST create an entry in this table for that receiver/sender\n       pair.  RTP hosts that send RTP session packets MAY create\n       an entry in this table for each receiver to their stream\n       using RTCP feedback from the RTP group.  RTP monitors\n       create an entry for each observed RTP session receiver as\n       a side effect when a conceptual row in the rtpSessionTable\n       is made 'active' by a manager.\"\n    ::= { rtpMIBObjects 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrEntry OBJECT-TYPE\n    SYNTAX          RtpRcvrEntry\n    MAX-ACCESS      not-accessible\n    STATUS          current\n    DESCRIPTION\n      \"Each entry contains information from a single RTP\n       Synchronization Source that is receiving packets from the\n       sender identified by rtpRcvrSRCSSRC (SSRC, see RFC 1889,\n       'RTP: A Transport Protocol for Real-Time Applications'\n       sec.6).  The session is identified to the the RTP Agent entity\n       by rtpSessionIndex.  Rows are removed by the RTP agent when\n       a BYE is received from the sender or when the sender times\n       out (see RFC 1889, Sec. 6.2.1) or when the rtpSessionEntry is\n       deleted.\"\n    INDEX { rtpSessionIndex, rtpRcvrSRCSSRC, rtpRcvrSSRC }\n    ::= { rtpRcvrTable 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "RtpRcvrEntry ::= SEQUENCE {\n        rtpRcvrSRCSSRC        Unsigned32,\n        rtpRcvrSSRC           Unsigned32,\n        rtpRcvrCNAME          Utf8String,\n        rtpRcvrAddr           TAddress,\n        rtpRcvrRTT            Gauge32,\n        rtpRcvrLostPackets    Counter64,\n        rtpRcvrJitter         Gauge32,\n        rtpRcvrTool           Utf8String,\n        rtpRcvrRRs            Counter32,\n        rtpRcvrRRTime         TimeStamp,\n        rtpRcvrPT             INTEGER,\n        rtpRcvrPackets        Counter64,\n        rtpRcvrOctets         Counter64,\n        rtpRcvrStartTime      TimeStamp\n        }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrSRCSSRC OBJECT-TYPE\n    SYNTAX       Unsigned32\n    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n      \"The RTP SSRC, or synchronization source identifier of the\n       sender.  The RTP session address plus an SSRC uniquely\n       identify a sender or receiver of an RTP stream (see RFC\n       1889, 'RTP:  A Transport Protocol for Real-Time\n       Applications' sec.3).\"\n    ::= { rtpRcvrEntry 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrSSRC OBJECT-TYPE\n    SYNTAX       Unsigned32\n    MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n      \"The RTP SSRC, or synchronization source identifier of the\n       receiver.  The RTP session address plus an SSRC uniquely\n       identify a receiver of an RTP stream (see RFC 1889, 'RTP:\n       A Transport Protocol for Real-Time Applications' sec.3).\"\n    ::= { rtpRcvrEntry 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrCNAME OBJECT-TYPE\n    SYNTAX       Utf8String\n    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n      \"The RTP canonical name of the receiver.\"\n    ::= { rtpRcvrEntry 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrAddr OBJECT-TYPE SYNTAX TAddress MAX-ACCESS read-only STATUS current DESCRIPTION",
      "ja": "RTPRCVRADDRオブジェクトタイプの構文TADDRESS MAX-ACCESS読み取り専用ステータス現在の説明"
    },
    {
      "indent": 4,
      "text": "  \"The unicast transport address on which the receiver is\n   receiving RTP packets and/or RTCP Receiver Reports.\"\n::= { rtpRcvrEntry 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrRTT OBJECT-TYPE\n    SYNTAX       Gauge32\n    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n      \"The round trip time measurement taken by the source of the\n       RTP stream based on the algorithm described on sec. 6 of\n       RFC 1889, 'RTP: A Transport Protocol for Real-Time\n       Applications.'  This algorithm can produce meaningful\n       results when the RTP agent has the same clock as the stream\n       sender (when the RTP monitor is also the sending host for the\n       particular receiver).  Otherwise, the entity should return\n       'noSuchInstance' in response to queries against rtpRcvrRTT.\"\n    ::= { rtpRcvrEntry 5 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrLostPackets OBJECT-TYPE\n    SYNTAX          Counter64\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"A count of RTP  packets lost as observed by this receiver\n       since rtpRcvrStartTime.\"\n    ::= { rtpRcvrEntry 6 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrJitter OBJECT-TYPE\n    SYNTAX          Gauge32\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"An estimate of delay variation as observed by this\n       receiver.  (see RFC 1889, 'RTP: A Transport Protocol\n       for Real-Time Applications' sec.6.3.1 and A.8).\"\n    ::= { rtpRcvrEntry 7 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrTool OBJECT-TYPE\n    SYNTAX          Utf8String (SIZE(0..127))\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"Name of the application program source of the stream.\"\n    ::= { rtpRcvrEntry 8 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrRRs OBJECT-TYPE\n    SYNTAX          Counter32\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"A count of the number of RTCP Receiver Reports that have\n       been sent from this receiver, or observed if the RTP entity\n       is a monitor, since rtpRcvrStartTime.\"\n    ::= { rtpRcvrEntry 9 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrRRTime OBJECT-TYPE\n    SYNTAX         TimeStamp\n    MAX-ACCESS     read-only\n    STATUS         current\n    DESCRIPTION\n      \"rtpRcvrRRTime is the value of SysUpTime at the time that the\n       last RTCP Receiver Report was received from this receiver, in\n       the case of a monitor or RR receiver (the RTP Sender).  It is\n       the  value of SysUpTime at the time that the last RR was sent by\n       this receiver in the case of an RTP receiver sending the RR.\"\n    ::= { rtpRcvrEntry 10 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrPT OBJECT-TYPE\n    SYNTAX          INTEGER (0..127)\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"Static or dynamic payload type from the RTP header (see\n       RFC 1889, 'RTP: A Transport Protocol for Real-Time\n       Applications' sec. 5).\"\n    ::= { rtpRcvrEntry 11 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrPackets OBJECT-TYPE\n    SYNTAX          Counter64\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"Count of RTP packets received by this RTP host receiver\n       since rtpRcvrStartTime.\"\n    ::= { rtpRcvrEntry 12 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrOctets OBJECT-TYPE\n    SYNTAX          Counter64\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"Count of non-header RTP octets received by this receiving RTP\n       host since rtpRcvrStartTime.\"\n    ::= { rtpRcvrEntry 13 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpRcvrStartTime OBJECT-TYPE\n    SYNTAX          TimeStamp\n    MAX-ACCESS      read-only\n    STATUS          current\n    DESCRIPTION\n      \"The value of SysUpTime at the time that this row was\n       created.\"\n    ::= { rtpRcvrEntry 14 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--\n--  MODULE GROUPS\n--\n--\n-- There are two types of RTP Systems, RTP hosts and RTP Monitors.\n-- Thus there are three kinds of objects: 1) Objects common to both\n-- kinds of systems, 2) Objects unique to RTP Hosts and 3) Objects\n-- unique to RTP Monitors.  There is a fourth group, 4) Objects that\n-- SHOULD be implemented by Multicast hosts and RTP Monitors",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpGroups OBJECT IDENTIFIER ::= { rtpConformance 1 }\nrtpSystemGroup      OBJECT-GROUP\n    OBJECTS         {\n                    rtpSessionDomain,\n                    rtpSessionRemAddr,\n                    rtpSessionIfIndex,\n                    rtpSessionSenderJoins,\n                    rtpSessionReceiverJoins,\n                    rtpSessionStartTime,\n                    rtpSessionByes,\n                    rtpSessionMonitor,\n                    rtpSenderCNAME,\n                    rtpSenderAddr,\n                    rtpSenderPackets,\n                    rtpSenderOctets,\n                    rtpSenderTool,\n                    rtpSenderSRs,\n                    rtpSenderSRTime,\n                    rtpSenderStartTime,\n                    rtpRcvrCNAME,\n                    rtpRcvrAddr,\n                    rtpRcvrLostPackets,\n                    rtpRcvrJitter,\n                    rtpRcvrTool,\n                    rtpRcvrRRs,\n                    rtpRcvrRRTime,\n                    rtpRcvrStartTime\n                    }\n    STATUS          current\n    DESCRIPTION\n        \"Objects available to all RTP Systems.\"\n    ::= { rtpGroups 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpHostGroup    OBJECT-GROUP\n    OBJECTS     {\n                rtpSessionLocAddr,\n                rtpSenderPT,\n                rtpRcvrPT,\n                rtpRcvrRTT,\n                rtpRcvrOctets,\n                rtpRcvrPackets\n                }\n    STATUS      current\n    DESCRIPTION\n           \"Objects that are available to RTP Host systems, but may not\n            be available to RTP Monitor systems.\"\n    ::= { rtpGroups 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpMonitorGroup OBJECT-GROUP\n    OBJECTS     {\n                rtpSessionNewIndex,\n                rtpSessionRowStatus\n                }\n    STATUS      current\n    DESCRIPTION\n        \"Objects used to create rows in the RTP Session Table.  These\n        objects are not needed if the system does not create rows.\"\n    ::= { rtpGroups 3 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpInverseGroup OBJECT-GROUP\n    OBJECTS     {\n                rtpSessionInverseStartTime,\n                rtpSenderInverseStartTime,\n                rtpRcvrInverseStartTime\n                }\n    STATUS      current\n    DESCRIPTION\n            \"Objects used in the Inverse Lookup Tables.\"\n    ::= { rtpGroups 4 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "--\n--  Compliance\n--\nrtpCompliances OBJECT IDENTIFIER ::= { rtpConformance 2 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpHostCompliance MODULE-COMPLIANCE\n    STATUS          current\n    DESCRIPTION\n            \"Host implementations MUST comply.\"\n    MODULE           RTP-MIB\n    MANDATORY-GROUPS {\n                     rtpSystemGroup,\n                     rtpHostGroup\n                     }\n    GROUP            rtpMonitorGroup\n    DESCRIPTION\n        \"Host systems my optionally support row creation and deletion.\n         This would allow an RTP Host system to act as an RTP Monitor.\"\n    GROUP            rtpInverseGroup\n    DESCRIPTION\n        \"Multicast RTP Systems SHOULD implement the optional\n         tables.\"\n        OBJECT  rtpSessionNewIndex\n            MIN-ACCESS not-accessible\n                DESCRIPTION\n                 \"RTP system implementations support of\n                  row creation and deletion is OPTIONAL so\n                  implementation of this object is OPTIONAL.\"\n        OBJECT  rtpSessionDomain\n           MIN-ACCESS read-only\n                DESCRIPTION\n                 \"RTP system implementation support of\n                  row creation and deletion is OPTIONAL.  When\n                  it is not supported so write access is\n                  OPTIONAL.\"\n        OBJECT  rtpSessionRemAddr\n            MIN-ACCESS read-only\n              DESCRIPTION\n               \"Row creation and deletion is OPTIONAL so\n                read-create access to this object is OPTIONAL.\"\n        OBJECT  rtpSessionIfIndex\n            MIN-ACCESS read-only\n              DESCRIPTION\n               \"Row creation and deletion is OPTIONAL so\n                read-create access to this object is OPTIONAL.\"\n        OBJECT  rtpSessionRowStatus\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"Row creation and deletion is OPTIONAL so\n                read-create access to this object is OPTIONAL.\"\n        OBJECT  rtpSessionInverseStartTime\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"Multicast RTP Systems SHOULD implement the optional\n                tables.\"",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 4,
      "text": "    OBJECT  rtpSenderInverseStartTime\n        MIN-ACCESS not-accessible\n          DESCRIPTION\n           \"Multicast RTP Systems SHOULD implement the optional\n            tables.\"\n    OBJECT  rtpRcvrInverseStartTime\n        MIN-ACCESS not-accessible\n          DESCRIPTION\n           \"Multicast RTP Systems SHOULD implement the optional\n            tables.\"\n::= { rtpCompliances 1 }",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "rtpMonitorCompliance MODULE-COMPLIANCE\n    STATUS          current\n    DESCRIPTION\n          \"Monitor implementations must comply.  RTP Monitors are not\n          required to support creation or deletion.\"\n    MODULE           RTP-MIB\n    MANDATORY-GROUPS     {\n                         rtpSystemGroup,\n                         rtpMonitorGroup\n                         }\n    GROUP                rtpHostGroup\n    DESCRIPTION\n        \"Monitor implementations may not have access to values in the\n         rtpHostGroup.\"\n    GROUP                rtpInverseGroup\n    DESCRIPTION\n        \"Multicast RTP Systems SHOULD implement the optional\n         tables.\"\n        OBJECT  rtpSessionLocAddr\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"RTP monitor sourcing of RTP or RTCP data packets\n                is OPTIONAL and implementation of this object is\n                OPTIONAL.\"\n        OBJECT  rtpRcvrPT\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"RTP monitor systems may not support\n                retrieval of the RTP Payload Type from the RTP\n                header (and may receive RTCP messages only).  When\n                queried for the payload type information\"\n        OBJECT  rtpSenderPT\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"RTP monitor systems may not support\n                retrieval of the RTP Payload Type from the RTP\n                header (and may receive RTCP messages only).  When\n                queried for the payload type information.\"\n        OBJECT  rtpRcvrOctets\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"RTP monitor systems may receive only the RTCP messages\n                and not the RTP messages that contain the octet count\n                of the RTP message.  Thus implementation of this\n                object is OPTIONAL\"\n        OBJECT  rtpRcvrPackets\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"RTP monitor systems may receive only the RTCP messages\n                and not the RTP messages that contain the octet count\n                of the RTP message.  Thus implementation of this\n                object is OPTIONAL.\"\n        OBJECT  rtpSessionIfIndex\n            MIN-ACCESS read-only\n              DESCRIPTION\n               \"Row creation and deletion is OPTIONAL so\n                read-create access to this object is OPTIONAL.\"\n        OBJECT  rtpSessionInverseStartTime\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"Multicast RTP Systems SHOULD implement the optional\n                tables.\"\n        OBJECT  rtpSenderInverseStartTime\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"Multicast RTP Systems SHOULD implement the optional\n                tables.\"\n        OBJECT  rtpRcvrInverseStartTime\n            MIN-ACCESS not-accessible\n              DESCRIPTION\n               \"Multicast RTP Systems SHOULD implement the optional\n                tables.\"\n    ::= { rtpCompliances 2 }\nEND\n4.  Security Considerations",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "In most cases, MIBs are not themselves security risks; if SNMP security is operating as intended, the use of a MIB to view information about a system, or to change some parameter at the system, is a tool, not a threat. However, there are a number of management objects defined in this MIB that have a MAX-ACCESS clause of read-write and/or read-create. Such objects may be considered sensitive or vulnerable in some network environments. The support for SET operations in a non-secure environment without proper protection can have a negative effect on network operations.",
      "ja": "ほとんどの場合、MIBはそれ自体がセキュリティリスクではありません。SNMPセキュリティが意図したとおりに動作している場合、システムに関する情報を表示するためにMIBを使用したり、システムのパラメーターを変更したりすることは、脅威ではなくツールです。ただし、このMIBには、読み取りワイトおよび/またはread-Createの最大アクセス句がある管理オブジェクトが多数あります。このようなオブジェクトは、一部のネットワーク環境で敏感または脆弱と見なされる場合があります。適切な保護なしの非セキュア環境でのセット操作のサポートは、ネットワーク操作に悪影響を与える可能性があります。"
    },
    {
      "indent": 3,
      "text": "None of the read-only objects in this MIB reports a password, though some SDES [RFC1889] items such as the CNAME [RFC1889], the canonical name, may be deemed sensitive depending on the security policies of a particular enterprise. If access to these objects is not limited by an appropriate access control policy, these objects can provide an attacker with information about a system's configuration and the services that that system is providing. Some enterprises view their network and system configurations, as well as information about usage and performance, as corporate assets; such enterprises may wish to restrict SNMP access to most of the objects in the MIB. This MIB supports read-write operations against rtpSessionNewIndex which has the side effect of creating an entry in the rtpSessionTable when it is written to. Five objects in rtpSessionEntry have read-create access: rtpSessionDomain, rtpSessionRemAddr, rtpSessionIfIndex, rtpSessionRowStatus, and rtpSessionIfAddr identify an RTP session to be monitored on a particular interface. The values of these objects are not to be changed once created, and initialization of these objects affects only the monitoring of an RTP session and not the operation of an RTP session on any host end-system. Since write operations to rtpSessionNewIndex and the five objects in rtpSessionEntry affect the operation of the monitor, write access to these objects should be subject to the appropriate access control policy.",
      "ja": "このMIBの読み取り専用オブジェクトはいずれもパスワードを報告していませんが、CNAME [RFC1889]などの一部のSDE [RFC1889]、標準名は、特定の企業のセキュリティポリシーに応じて敏感であると見なされる場合があります。これらのオブジェクトへのアクセスが適切なアクセス制御ポリシーに限定されない場合、これらのオブジェクトは、システムの構成とそのシステムが提供しているサービスに関する情報を攻撃者に提供できます。一部の企業は、ネットワークとシステムの構成、および使用とパフォーマンスに関する情報を企業資産と見なしています。そのような企業は、MIBのほとんどのオブジェクトへのSNMPアクセスを制限したい場合があります。このMIBは、RTPSESTIONNEWINDEXに対する読み取りワイト操作をサポートしています。RTPSESTIONNEWINDEXは、rtpsSessionTableに書かれたときにエントリを作成する副作用があります。rtpsessionEntryの5つのオブジェクトには、読み取りアクセスがあります：rtpsessiondomain、rtpsessionremaddr、rtpsessionifindex、rtpsessionRowStatus、およびrtpsessionifaddrは、特定のインターフェイスで監視されるRTPセッションを識別します。これらのオブジェクトの値は作成されると変更されることはなく、これらのオブジェクトの初期化は、RTPセッションの監視のみに影響し、ホストのエンドシステムでのRTPセッションの操作には影響しません。rtpsessionnewindexへの操作の書き込みとrtpsessionEntryの5つのオブジェクトはモニターの動作に影響するため、これらのオブジェクトへの書き込みアクセスは適切なアクセス制御ポリシーの対象とする必要があります。"
    },
    {
      "indent": 3,
      "text": "Confidentiality of RTP and RTCP data packets is defined in section 9 of the RTP specification [RFC1889]. Encryption may be performed on RTP packets, RTCP packets, or both. Encryption of RTCP packets may pose a problem for third-party monitors though \"For RTCP, it is allowed to split a compound RTCP packet into two lower-layer packets, one to be encrypted and one to be sent in the clear. For example, SDES information might be encrypted while reception reports were sent in the clear to accommodate third-party monitors [RFC1889].\"",
      "ja": "RTPおよびRTCPデータパケットの機密性は、RTP仕様[RFC1889]のセクション9で定義されています。暗号化は、RTPパケット、RTCPパケット、またはその両方で実行できます。RTCPパケットの暗号化は、「RTCPの場合、複合RTCPパケットを2つの低層パケットに分割することが許可されていますが、1つは暗号化され、1つは明確に送信されます。SDES情報は、サードパーティモニター[RFC1889]に対応するために、受信レポートが明確に送信されている間に暗号化される可能性があります。」"
    },
    {
      "indent": 3,
      "text": "SNMPv1 by itself is not a secure environment. Even if the network itself is secure (for example by using IPSec), there is no control as to who on the secure network is allowed to access and GET/SET (read/change/create/delete) the objects in this MIB. It is recommended that the implementers consider the security features as provided by the SNMPv3 framework. Specifically, the use of the User-based Security Model RFC 2574 [RFC2574] and the View-based Access Control Model RFC 2575 [RFC2575] is recommended. It is then a customer/user responsibility to ensure that the SNMP entity giving access to an instance of this MIB, is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET (change/create/delete) them.",
      "ja": "SNMPV1自体は安全な環境ではありません。ネットワーク自体が（たとえば、IPSECを使用して）安全である場合でも、セキュアネットワーク上の誰がこのMIBのオブジェクトにアクセスして取得/設定（読み取り/変更/作成/削除）を許可するかについての制御はありません。実装者は、SNMPV3フレームワークで提供されるセキュリティ機能を考慮することをお勧めします。具体的には、ユーザーベースのセキュリティモデルRFC 2574 [RFC2574]およびビューベースのアクセス制御モデルRFC 2575 [RFC2575]の使用をお勧めします。その場合、このMIBのインスタンスへのアクセスを提供するSNMPエンティティが、実際に取得または設定する正当な権利を持つプリンシパル（ユーザー）にのみオブジェクトにアクセスできるように適切に構成されていることを保証するのは、顧客/ユーザーの責任です（変更を変更するプリンシパル（ユーザー）（変更）/作成/削除）それら。"
    },
    {
      "indent": 0,
      "text": "5. Acknowledgements",
      "section_title": true,
      "ja": "5. 謝辞"
    },
    {
      "indent": 3,
      "text": "The authors wish to thank Bert Wijnen and the participants from the ITU SG-16 management effort for their helpful comments. Alan Batie and Bill Lewis from Intel also contributed greatly to the RTP MIB through their review of various drafts of the MIB and their work on the implementation of an SNMP RTP Monitor. Stan Naudus from 3Com and John Du from Intel contributed to the original RTP MIB design and co-authored the original RTP MIB draft documents; much of their work remains in the current RTP MIB. Bill Fenner provided solid feedback that improved the quality of the final document.",
      "ja": "著者は、Bert WijnenとITU SG-16管理の取り組みの参加者に、有益なコメントについて感謝したいと考えています。IntelのAlan BatieとBill Lewisは、MIBのさまざまなドラフトのレビューとSNMP RTPモニターの実装に関する作業を通じてRTP MIBに大きく貢献しました。3COMのStan NaudusとIntelのJohn Duは、元のRTP MIBデザインに貢献し、元のRTP MIBドラフトドキュメントを共著しました。彼らの仕事の多くは現在のRTP MIBに残っています。ビル・フェナーは、最終文書の品質を改善する堅実なフィードバックを提供しました。"
    },
    {
      "indent": 0,
      "text": "6. Intellectual Property",
      "section_title": true,
      "ja": "6. 知的財産"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on the IETF's procedures with respect to rights in standards-track and standards-related documentation can be found in BCP-11. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification can be obtained from the IETF Secretariat.",
      "ja": "IETFは、知的財産またはその他の権利の有効性または範囲に関して、この文書に記載されているテクノロジーの実装または使用に関連すると主張される可能性のある他の権利、またはそのような権利に基づくライセンスがどの程度であるかについての程度に関連する可能性があるという立場はありません。利用可能;また、そのような権利を特定するために努力したことも表明していません。標準トラックおよび標準関連のドキュメントの権利に関するIETFの手順に関する情報は、BCP-11に記載されています。出版のために利用可能にされた権利の請求のコピーと、利用可能になるライセンスの保証、またはこの仕様の実装者またはユーザーによるそのような独自の権利の使用のための一般的なライセンスまたは許可を取得しようとする試みの結果を得ることができますIETF事務局から。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to practice this standard. Please address the information to the IETF Executive Director.",
      "ja": "IETFは、関心のある当事者に、著作権、特許、または特許出願、またはこの基準を実践するために必要な技術をカバーする可能性のあるその他の独自の権利を注意深く招待します。情報をIETFエグゼクティブディレクターに宛ててください。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "ja": "7. 参考文献"
    },
    {
      "indent": 3,
      "text": "[RFC1889] Shulzrinne, H., Casner, S., Frederick, R. and V. Jacobson, \"RTP: A Transport Protocol for real-time applications,\" RFC 1889, January 1996.",
      "ja": "[RFC1889] Shulzrinne、H.、Casner、S.、Frederick、R。、およびV. Jacobson、 \"RTP：リアルタイムアプリケーション用の輸送プロトコル\" RFC 1889、1996年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2571] Harrington, D., Presuhn, R. and B. Wijnen, \"An Architecture for Describing SNMP Management Frameworks\", RFC 2571, April 1999.",
      "ja": "[RFC2571] Harrington、D.、Presuhn、R。およびB. Wijnen、「SNMP管理フレームワークを説明するためのアーキテクチャ」、RFC 2571、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC1155] Rose, M. and K. McCloghrie, \"Structure and Identification of Management Information for TCP/IP-based Internets\", STD 16, RFC 1155, May 1990.",
      "ja": "[RFC1155] Rose、M。およびK. McCloghrie、「TCP/IPベースのインターネットの管理情報の構造と識別」、STD 16、RFC 1155、1990年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC1212] Rose, M. and K. McCloghrie, \"Concise MIB Definitions\", STD 16, RFC 1212, March 1991.",
      "ja": "[RFC1212] Rose、M。およびK. McCloghrie、「Concise MIB Definitions」、STD 16、RFC 1212、1991年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC1215] Rose, M., \"A Convention for Defining Traps for use with the SNMP\", RFC 1215, March 1991.",
      "ja": "[RFC1215] Rose、M。、「SNMPで使用するためのトラップを定義するための条約」、RFC 1215、1991年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2578] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, M. and S. Waldbusser, \"Structure of Management Information Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.",
      "ja": "[RFC2578] McCloghrie、K.、Perkins、D.、Schoenwaelder、J.、Case、J.、Rose、M。and S. Waldbusser、「管理情報の構造バージョン2（SMIV2）、STD 58、RFC 2578、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2579] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, M. and S. Waldbusser, \"Textual Conventions for SMIv2\", STD 58, RFC 2579, April 1999.",
      "ja": "[RFC2579] McCloghrie、K.、Perkins、D.、Schoenwaelder、J.、Case、J.、Rose、M。、およびS. Waldbusser、「SMIV2のテキストコンベンション」、STD 58、RFC 2579、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2580] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, M. and S. Waldbusser, \"Conformance Statements for SMIv2\", STD 58, RFC 2580, April 1999.",
      "ja": "[RFC2580] McCloghrie、K.、Perkins、D.、Schoenwaelder、J.、Case、J.、Rose、M。、およびS. Waldbusser、「Smiv2の適合ステートメント」、STD 58、RFC 2580、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC1157] Case, J., Fedor, M., Schoffstall, M. and J. Davin, \"Simple Network Management Protocol\", STD 15, RFC 1157, May 1990.",
      "ja": "[RFC1157] Case、J.、Fedor、M.、Schoffstall、M。、およびJ. Davin、「Simple Network Management Protocol」、STD 15、RFC 1157、1990年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC1901] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Introduction to Community-based SNMPv2\", RFC 1901, January 1996.",
      "ja": "[RFC1901] Case、J.、McCloghrie、K.、Rose、M。、およびS. Waldbusser、「コミュニティベースのSNMPV2の紹介」、RFC 1901、1996年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC1906] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Transport Mappings for Version 2 of the Simple Network Management Protocol (SNMPv2)\", RFC 1906, January 1996.",
      "ja": "[RFC1906] Case、J.、McCloghrie、K.、Rose、M。、およびS. Waldbusser、「Simple Network Management Protocol（SNMPV2）のバージョン2の輸送マッピング」、RFC 1906、1996年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2572] Case, J., Harrington D., Presuhn R. and B. Wijnen, \"Message Processing and Dispatching for the Simple Network Management Protocol (SNMP)\", RFC 2572, April 1999.",
      "ja": "[RFC2572] Case、J.、Harrington D.、Presuhn R.およびB. Wijnen、「Simple Network Management Protocol（SNMP）のメッセージ処理とディスパッチ」、RFC 2572、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2574] Blumenthal, U. and B. Wijnen, \"User-based Security Model (USM) for version 3 of the Simple Network Management Protocol (SNMPv3)\", RFC 2574, April 1999.",
      "ja": "[RFC2574] Blumenthal、U.およびB. Wijnen、「単純なネットワーク管理プロトコル（SNMPV3）のバージョン3のユーザーベースのセキュリティモデル（USM）」、RFC 2574、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC1905] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Protocol Operations for Version 2 of the Simple Network Management Protocol (SNMPv2)\", RFC 1905, January 1996.",
      "ja": "[RFC1905] Case、J.、McCloghrie、K.、Rose、M。、およびS. Waldbusser、「Simple Network Management Protocol（SNMPV2）のバージョン2のプロトコル操作」、RFC 1905、1996年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2573] Levi, D., Meyer, P. and B. Stewart, \"SNMPv3 Applications\", RFC 2573, April 1999.",
      "ja": "[RFC2573] Levi、D.、Meyer、P。and B. Stewart、「SNMPV3 Applications」、RFC 2573、1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2575] Wijnen, B., Presuhn, R. and K. McCloghrie, \"View-based Access Control Model (VACM) for the Simple Network Management Protocol (SNMP)\", RFC 2575, April 1999.",
      "ja": "[RFC2575] Wijnen、B.、Presuhn、R。、およびK. McCloghrie、「シンプルネットワーク管理プロトコル（SNMP）のビューベースのアクセス制御モデル（VACM）」、1999年4月、RFC 2575。"
    },
    {
      "indent": 3,
      "text": "[RFC2570] Case, J., Mundy, R., Partain, D. and B. Stewart, \"Introduction to Version 3 of the Internet-standard Network Management Framework\", RFC 2570, April 1999.",
      "ja": "[RFC2570] Case、J.、Mundy、R.、Partain、D。、およびB. Stewart、「インターネット標準ネットワーク管理フレームワークのバージョン3の紹介」、RFC 2570、1999年4月。"
    },
    {
      "indent": 0,
      "text": "8. Authors' Addresses",
      "section_title": true,
      "ja": "8. 著者のアドレス"
    },
    {
      "indent": 3,
      "text": "Mark Baugher Intel Corporation 2111 N.E.25th Avenue Hillsboro, Oregon 97124 U.S.A.",
      "ja": "Mark Baugher Intel Corporation 2111 N.E.25th Avenue Hillsboro、オレゴン97124 U.S.A."
    },
    {
      "indent": 3,
      "text": "EMail: mbaugher@passedge.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Bill Strahm Intel Corporation 2111 N.E.25th Avenue Hillsboro, Oregon 97124 U.S.A.",
      "ja": "ビルストラームインテルコーポレーション2111 N.E.25th Avenue Hillsboro、オレゴン97124 U.S.A."
    },
    {
      "indent": 3,
      "text": "EMail: Bill.Strahm@intel.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 3,
      "text": "Irina Suconick Ennovate Networks 60 Codman Hill Rd., Boxboro, Ma 01719 U.S.A.",
      "ja": "Irina Susunick Ennovate Networks 60 Codman Hill Rd。、Boxboro、MA 01719 U.S.A."
    },
    {
      "indent": 3,
      "text": "EMail: irina@ennovatenetworks.com",
      "raw": true,
      "ja": ""
    },
    {
      "indent": 0,
      "text": "9. Full Copyright Statement",
      "section_title": true,
      "ja": "9. 完全な著作権声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "ja": "Copyright（c）The Internet Society（2000）。無断転載を禁じます。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "ja": "このドキュメントと翻訳は他の人にコピーされて提供される場合があります。また、それについてコメントまたは説明する派生作品、またはその実装を支援することは、いかなる種類の制限なしに、準備、コピー、公開、および部分的に配布される場合があります。、上記の著作権通知とこの段落がそのようなすべてのコピーとデリバティブ作品に含まれている場合。ただし、このドキュメント自体は、インターネット協会や他のインターネット組織への著作権通知や参照を削除するなど、いかなる方法でも変更できない場合があります。インターネット標準プロセスに従うか、英語以外の言語に翻訳するために必要な場合に従う必要があります。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "ja": "上記の限られた許可は永続的であり、インターネット社会またはその後継者または譲受人によって取り消されることはありません。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "ja": "この文書と本書に含まれる情報は、「現状」に基づいて提供されており、インターネット社会とインターネットエンジニアリングタスクフォースは、ここにある情報の使用が行われないという保証を含むがこれらに限定されないすべての保証を否認します。特定の目的に対する商品性または適合性の権利または黙示的な保証を侵害します。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "ja": "謝辞"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "ja": "RFCエディター機能の資金は現在、インターネット協会によって提供されています。"
    }
  ]
}